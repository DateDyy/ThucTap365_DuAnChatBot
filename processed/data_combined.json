[
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 1,
    "text": "Ph/uni1EA7n 1: \nPh/uni1EA7n 1: \nPh/uni1EA7n 1: \nNGÔN NGỮ\nLẬP TRÌNH WEB \nCHUYÊN SÂU"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 2,
    "text": "Ngôn ngữ lập trình web chuyên sâu1. Mục tiêu và định hướng học lập trình web\n  ▶\n \n \nHeader\nLogo:\n Thường được đặt ở góc trên bên trái, là biểu tượng hoặc chữ viết tắt của \ntên trang web hoặc công ty.\nMenu Điều Hướng:\n Các liên kết đến các trang quan trọng của trang web, \nthường được đặt ở trên cùng hoặc góc trên bên phải.\nNút Đăng Nhập/Đăng Ký:\n Cho phép người dùng đăng nhập vào tài khoản hoặc \ntạo tài khoản mới.\nTìm Kiếm:\n Hộp tìm kiếm cho phép người dùng nhập từ khóa và tìm kiếm thông \ntin trên trang web.\n  ▶\n \n \nNội Dung Chính (Content Area)\nVăn Bản, Hình Ảnh, Video:\n Thông tin chính của trang web, bao gồm văn bản, \nhình ảnh, video, hoặc các yếu tố multimedia khác.\nBiểu Đồ, Đồ Thị:\n Nếu trang web hiển thị dữ liệu thống kê hoặc số liệu, chúng \nthường được hiển thị qua các biểu đồ hoặc đồ thị.\n  ▶\n \n \nSidebar\nWidget:\n Các hộp nhỏ thường chứa các liên kết liên quan, tin tức, hoặc các yếu \ntố tương tác như bài viết phổ biến hoặc tag cloud.\nQuảng Cáo:\n Nếu trang web hiển thị quảng cáo, chúng thường xuất hiện ở sidebar \nhoặc ở vị trí khác trên trang.\n  ▶\n \n \nFooter\nLiên Hệ:\n Thông tin liên hệ với trang web hoặc công ty, bao gồm địa chỉ email \nhoặc số điện thoại.\nLiên Kết Quan Trọng:\n Các liên kết đến trang chính sách, điều khoản sử dụng, \nchính sách bảo mật, và các trang liên quan khác.\nLiên Kết Mạng Xã Hội:\n Các biểu tượng hoặc liên kết đến trang mạng xã hội của \ntrang web.\n  ▶\n  \nPhân tích cấu trúc của 1 trang website\n2"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 3,
    "text": "▶\n \n \nModal/Pop-up (nếu có):\nQuảng Cáo, Thông Báo:\n Thông điệp hoặc quảng cáo quan trọng có thể xuất \nhiện trong các cửa sổ modal hoặc pop-up.\n  ▶\n \n \nTrang Đăng Nhập và Đăng Ký (nếu có):\nForm Đăng Nhập:\n Cho phép người dùng nhập thông tin tài khoản để đăng nhập.\nForm Đăng Ký:\n Cho phép người dùng nhập thông tin tài khoản mới để tạo tài \nkhoản trên trang web.\n  ▶\n \n \nThành Phần Tương Tác (nếu có):\nBiểu Mẫu Liên Hệ: \nCho phép người dùng nhập thông tin và gửi liên hệ đến trang \nweb hoặc công ty.\nNút Thao Tác:\n Các nút hoặc nút bấm giúp người dùng thực hiện các hành động \nnhư gửi biểu mẫu, đăng xuất, hoặc thêm sản phẩm vào giỏ hàng (đối với trang \nweb thương mại điện tử).\n  ▶\n \n \nTổ Chức Cấu Trúc Trang (Layout Structure):\nResponsive Design: \nĐảm bảo trang web được thiết kế sao cho nó có thể phản \nứng với các thiết bị khác nhau và kích thước màn hình.\nGrid System:\n Sử dụng lưới để tổ chức các phần tử trên trang web một cách cân \nđối và hợp lý.\nNhớ rằng, cấu trúc của một trang web có thể thay đổi tùy thuộc vào mục tiêu \nvà nhu cầu cụ thể của trang web đó. Web 3.0, còn được gọi là \"Semantic \nWeb\" hoặc \"Decentralized Web,\" là một khái niệm tiến bộ của Internet mà \nnhắm đến việc tối ưu hóa trải nghiệm người dùng, tăng tính tương tác, và tạo \nra một môi trường trực tuyến phi tập trung. Web 3.0 không chỉ là một bản \nnâng cấp về công nghệ mà còn mang đến sự đổi mới về cách chúng ta tương \ntác với dữ liệu, ứng dụng và các nguồn thông tin trên Internet.\n3"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 4,
    "text": "Ngôn ngữ lập trình web chuyên sâu2. Đặc điểm và Tiện Ích của Web 3.0\n3. Ví Dụ Thực Tế Của Web 3.0\n  ▶\n  \nSemantic Web (Web Ngữ Nghĩa)\n∙\n \nWeb 3.0 giúp máy tính hiểu được ý nghĩa của dữ liệu trên Internet, tăng cường \nkhả năng tìm kiếm thông tin chính xác và liên kết thông tin một cách thông \nminh.\n∙\n \nDữ liệu được liên kết với ý nghĩa semantical, giúp cả người dùng và máy tính \nhiểu và xử lý dữ liệu một cách có ý nghĩa hơn.\n  ▶\n  \nTăng Cường Trí Tuệ Nhân Tạo (AI) và Học Máy (Machine Learning)\n∙\n \nSử dụng AI để cải thiện trải nghiệm người dùng, dự đoán nhu cầu và tối ưu hóa \nquy trình làm việc trên Internet.\n  ▶\n  \nTrí Tuệ Phi Tập Trung (Decentralized Intelligence)\n∙\n \nWeb 3.0 hướng tới việc tận dụng trí tuệ phi tập trung, giúp máy tính tương tác \nvới các nguồn dữ liệu và tài nguyên trên mạng một cách phi tập trung, không \nphụ thuộc vào các tổ chức trung ương.\n  ▶\n  \nCông Nghệ Blockchain và Hợp Đồng Thông Minh (Smart Contracts)\n∙\n \nSử dụng công nghệ blockchain để tăng tính minh bạch, bảo mật và quản lý \nquyền lợi của người dùng.\n∙\n \nHợp đồng thông minh (smart contracts) cho phép tự động hóa các giao dịch \nmà không cần trung gian, tăng tính tự chủ và minh bạch.\n  ▶\n  \nTạo Ra Nội Dung Sẵn Sàng Kết Hợp (Interoperable Content)\n∙\n \nWeb 3.0 tạo điều kiện cho việc tạo ra nội dung mà các ứng dụng và dịch vụ \nkhác có thể dễ dàng kết hợp và tương tác.\n∙\n \nDữ liệu được thiết kế sao cho có thể chia sẻ và tương tác một cách linh hoạt \ngiữa các ứng dụng và trang web.\n  ▶\n  \nNền Tảng Đã Tích Hợp Blockchain\n∙\n \nCác ứng dụng tài chính phi tập trung như DeFi (Decentralized Finance) và các \ndịch vụ thanh toán có thể sử dụng blockchain để tăng tính bảo mật và minh bạch.\n4"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 5,
    "text": "▶\n  \nNền Tảng Xã Hội Phi Tập Trung\n∙\n \nCác nền tảng mạng xã hội phi tập trung sử dụng công nghệ blockchain để tạo \nra các mô hình kinh doanh dựa trên nội dung người dùng và cấu trúc phi tập \ntrung.\n  ▶\n  \nMáy Tính Lượng Tử (Quantum Computing)\n∙\n \nWeb 3.0 có thể tận dụng sức mạnh của máy tính lượng tử để giải quyết các vấn \nđề phức tạp và tăng cường tính toán một cách đột phá.\n  ▶\n  \nNền Tảng Trí Tuệ Nhân Tạo Phi Tập Trung (Decentralized AI Platforms)\n∙\n \nCác dịch vụ AI phi tập trung cho phép người dùng sử dụng các mô hình AI và \ndữ liệu mà không cần chia sẻ thông tin cá nhân của họ với các tổ chức trung \nương.\n  ▶\n  \nHệ Thống Quản Lý Dữ Liệu Người Dùng Phi Tập Trung\n∙\n \nDịch vụ quản lý dữ liệu người dùng giúp người dùng kiểm soát thông tin cá \nnhân của mình và quyết định cách thông tin đó được sử dụng trên Internet.\n  ▶\n  \nPhát Triển Ứng Dụng Phi Tập Trung (Decentralized Applications - DApps)\n∙\n \nSử dụng blockchain và smart contracts để xây dựng các ứng dụng phi tập \ntrung. Các ứng dụng này không phụ thuộc vào một máy chủ trung tâm, mà sử \ndụng một mạng lưới ngang hàng (peer-to-peer network) để lưu trữ và xử lý dữ \nliệu.\n∙\n \nSử dụng các nền tảng như Ethereum, Binance Smart Chain, hoặc Polkadot để \nphát triển DApps.\nNhững ví dụ trên chỉ là một số hình thức của Web 3.0. Chúng đều nhấn \nmạnh vào tính phi tập trung, minh bạch, bảo mật và tích hợp thông tin \nngười dùng một cách linh hoạt, đồng thời tối ưu hóa trải nghiệm người dùng \ntrên Internet. Web 3.0 mở ra nhiều cơ hội cho việc phát triển các ứng dụng \nweb đầy đủ sức mạnh và tính năng. Dưới đây là một số cách bạn có thể tích \nhợp các khái niệm và công nghệ của Web 3.0 vào lập trình web:\n5"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 6,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nIntegrate Blockchain và Hợp Đồng Thông Minh (Smart Contracts)\n∙\n \nSử dụng hợp đồng thông minh để xây dựng các hệ thống thanh toán, quản lý \nphát hành token, hoặc thực hiện các giao dịch một cách tự động và minh bạch.\n∙\n \nTích hợp ví điện tử hoặc các cổng thanh toán dựa trên blockchain để chấp \nnhận thanh toán bằng cryptocurrency.\n  ▶\n  \nXây Dựng Nền Tảng Xã Hội Phi Tập Trung\n∙\n \nPhát triển các mạng xã hội phi tập trung dựa trên blockchain để bảo vệ quyền \nriêng tư của người dùng và cung cấp khả năng kiểm soát dữ liệu của họ.\n∙\n \nSử dụng blockchain để xác minh danh tính người dùng và tạo ra hệ thống đánh \ngiá phi tập trung.\n  ▶\n  \nPhát Triển Dịch Vụ Tài Chính Phi Tập Trung (DeFi)\n∙\n \nXây dựng các ứng dụng tài chính phi tập trung sử dụng các giao thức DeFi như \nUniswap, Compound, hoặc MakerDAO để tạo ra các dịch vụ vay/mượn và giao \ndịch không cần trung gian.\n∙\n \nPhát triển các ứng dụng ví lưu trữ cryptocurrency và các tài sản kỹ thuật số \nkhác dựa trên blockchain.\n  ▶\n  \nIntegrate Trí Tuệ Nhân Tạo (AI) và Machine Learning\n∙\n \nSử dụng AI và machine learning để cải thiện trải nghiệm người dùng, dự đoán \nhành vi người dùng, và tối ưu hóa nội dung trên trang web.\n∙\n \nPhát triển các hệ thống gợi ý dựa trên AI để cung cấp nội dung cá nhân hóa và \ntăng cường tương tác người dùng.\n  ▶\n  \nQuản Lý Dữ Liệu Người Dùng Phi Tập Trung\n∙\n \nPhát triển các hệ thống quản lý dữ liệu người dùng mà không yêu cầu trung \ntâm, giúp người dùng kiểm soát thông tin cá nhân của họ.\n∙\n \nSử dụng các công nghệ mã hóa và blockchain để bảo vệ dữ liệu người dùng.\n  ▶\n  \nPhát Triển Ứng Dụng Trò Chơi Phi Tập Trung\n∙\n \nSử dụng blockchain để lưu trữ thông tin về tài sản trong trò chơi và tạo ra các \nthị trường phi tập trung cho việc mua bán tài sản trong trò chơi.\n∙\n \nIntegrate các token phi tập trung để tạo ra các hệ thống kinh tế trong trò chơi, \ncho phép người chơi kiếm được giá trị thực từ việc chơi game.\n6"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 7,
    "text": "Lập trình web 3.0 đòi hỏi hiểu biết sâu rộng về các công nghệ như block\n-\nchain, hợp đồng thông minh, trí tuệ nhân tạo và machine learning. Bằng \ncách sử dụng các công nghệ này một cách sáng tạo và linh hoạt, bạn có \nthể phát triển các ứng dụng web 3.0 đầy đủ tính năng và hiệu suất.\n7"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 8,
    "text": "Ngôn ngữ lập trình web chuyên sâuKHÁI NIỆM\nĐẶC ĐIỂM CHÍNH\nPHP là một ngôn ngữ lập trình phổ biến được sử dụng chủ yếu để phát triển các ứng \ndụng web động. Dưới đây là một số thông tin chi tiết về PHP\nNgôn ngữ \nlập trình PHP\nChương 1\nChương 1\n  ▶\n  \nNgôn Ngữ Lập Trình PHP\n \n∙\n \nLà viết tắt của \"PHP: Hypertext Preprocessor\". \nNó là một ngôn ngữ lập trình máy chủ mã nguồn \nmở được thiết kế đặc biệt cho việc phát triển \ncác ứng dụng web động và có thể nhúng vào \nmã HTML.\n  ▶\n  \nMã Nguồn Mở\n∙\n \nPHP là mã nguồn mở, có nghĩa là bạn có thể tùy chỉnh mã nguồn theo nhu cầu \ncủa mình.\n  ▶\n  \nTương Thích Nhiều Hệ Thống\n∙\n \nPHP có thể chạy trên nhiều hệ thống điều hành như Windows, Linux, macOS, \nvà hỗ trợ nhiều loại máy chủ web như Apache, Nginx, IIS.\n  ▶\n  \nDễ Học và Sử Dụng\n∙\n \nPHP có cú pháp dễ đọc và dễ học, đặc biệt phù hợp cho người mới học lập trình.\nH\nT\nM\nL\nJ\nS\nCS\nS\nPH\nP\n8"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 9,
    "text": "▶\n  \nPHP Roadmap dạng bảng cú pháp câu lệnh và các thẻ\nKhái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ\nBiến và Kiểu \nDữ Liệu\nLưu trữ thông tin và giá trị\n$variable_name = value;\nCâu Lệnh \nĐiều Kiện\nThực hiện các hành động dựa trên \nđiều kiện\nif (condition) { ... } else \n{ ... }\nVòng Lặp\nLặp lại các hành động một số lần\nfor ($i = 0; $i < 5; $i++) { \n... }\nMảng\nLưu trữ nhiều giá trị trong một \nbiến\n$array = array(value1, \nvalue2, ...);\nHàm\nĐoạn mã có thể được gọi lại\nfunction function\n-\nName($param) { ... }\nLớp và Đối \nTượng\nĐóng gói dữ liệu và hành vi vào \nđối tượng\nclass ClassName { ... }\nKế Thừa và \nGiao Tiếp\nMở rộng chức năng của lớp khác\nclass SubClass extends \nParentClass { ... }\nNamespace\nTạo không gian tên cho lớp và \nhàm\nnamespace MyName\n-\nspace;\nAutoloading\nTự động tải các lớp khi cần\nspl_autoload_register(\n-\nfunction($class) { ... });\nLưu Trữ Dữ Liệu\nLưu trữ và truy xuất dữ liệu từ cơ \nsở dữ liệu\nMySQL, PostgreSQL, \nMongoDB, ...\nXử Lý Biểu Mẫu\nGửi và nhận dữ liệu từ biểu mẫu \nweb\n$_GET, $_POST, $_RE\n-\nQUEST\nCookies và \nSessions\nTheo dõi thông tin trạng thái của \nngười dùng\nsetcookie(), $_SESSION\nXử Lý Chuỗi\nXử lý và định dạng chuỗi\nstrlen(), strpos(), str_re\n-\nplace()\nXử Lý Thời Gian\nLàm việc với ngày, giờ và múi giờ\ndate(), strtotime(), time\n-\nzone_set()\nLàm Việc với \nTệp Tin\nĐọc, ghi và xử lý tệp tin\nfopen(), fwrite(), fclose()\n9"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 10,
    "text": "Ngôn ngữ lập trình web chuyên sâuKhái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ\nXử Lý Lỗi và \nNgoại Lệ\nXử lý các lỗi và trạng thái ngoại lệ\ntry { ... } catch(Exception \n$e) { ... }\nJSON và XML\nĐọc và ghi dữ liệu trong định dạng \nJSON và XML\njson_encode(), json_de\n-\ncode(), simplexml_load_\nstring()\nHTTP Requests\nGửi và nhận dữ liệu qua HTTP\nfile_get_contents(), curl_\ninit(), curl_exec()\nUnit Testing\nKiểm thử hàm và lớp\nPHPUnit, SimpleTest\nCÚ PHÁP\n1. Khai Báo Biến\n2. Câu Lệnh Điều Kiện\n10"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 11,
    "text": "VÍ DỤ THỰC TẾ\n3. Vòng Lặp\n4. Hàm\n  ▶\n  \nXây Dựng Trang Web Động:\n  \n∙\n \nPHP thường được sử dụng để xử lý dữ liệu từ biểu mẫu web và tương tác với \ncơ sở dữ liệu. \nDưới đây là một ví dụ đơn giản về việc hiển thị tên người dùng từ một biểu mẫu \nđăng nhập\n11"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 12,
    "text": "Ngôn ngữ lập trình web chuyên sâu\nKẾT NỐI CƠ SỞ DỮ LIỆU\nPHP cũng được sử dụng để kết nối với cơ sở dữ liệu, thực hiện truy vấn và hiển thị dữ \nliệu. Dưới đây là một ví dụ về việc kết nối với cơ sở dữ liệu MySQL và truy vấn dữ liệu:\n12"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 13,
    "text": "Có nhiều framework được phát triển để hỗ trợ việc phát triển ứng dụng PHP \nnhanh chóng, hiệu quả và dễ bảo trì. Dưới đây là một số framework phổ biến \ntrong lập trình PHP\nNhững ví dụ trên chỉ là một số ứng dụng cơ bản của PHP . PHP có thể được \nsử dụng trong nhiều tình huống khác nhau trong phát triển web.\n1. Laravel\n2. Symfony\n  \n▶\n  \nLaravel\n là một trong những framework PHP phổ biến và mạnh mẽ nhất hiện \nnay. Nó cung cấp các tính năng như routing mạnh mẽ, Eloquent ORM, Blade \ntemplating engine và nhiều tính năng khác giúp việc phát triển ứng dụng web \nPHP trở nên dễ dàng.\nWebsite:\n \nhttps://laravel.com/\n  \n▶\n  \nSymfony\n là một framework PHP mạnh mẽ và linh hoạt, được thiết kế để xây \ndựng các ứng dụng web và API phức tạp. Nó cung cấp các thành phần và thư \nviện có thể tái sử dụng, giúp giảm thời gian và công sức trong việc phát triển \nứng dụng.\nWebsite:\n \nhttps://sym\nf\nony.com/\n13"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 14,
    "text": "Ngôn ngữ lập trình web chuyên sâu3. CodeIgniter\n4. Yii\n4. Phalcon\n  \n▶\n  \nCodeIgniter\n là một framework PHP nhẹ nhàng, nhanh và đơn giản, được \nthiết kế để tối ưu hóa hiệu suất. Nó có một cộng đồng lớn và tài liệu phong phú, \ngiúp người phát triển nhanh chóng bắt đầu và xây dựng các ứng dụng web.\nWebsite:\n \nhttps://codeigniter.com/\n  \n▶\n  \nYii\n là một framework PHP mạnh mẽ, linh hoạt và hiệu quả. Nó được thiết \nkế để tăng cường hiệu suất và giảm độ phức tạp trong việc phát triển ứng dụng \nweb. Yii hỗ trợ các công cụ tạo mẫu, tạo giao diện người dùng và các tính năng \nbảo mật mạnh mẽ.\nWebsite:\n \nhttps://www.yiiframework.com/\n  \n▶\n  \nPhalcon\n Phalcon là một framework PHP được viết bằng C và C++, điều \nnày giúp nó cực kỳ nhanh và hiệu quả. Phalcon cung cấp các tính năng như mã \nnguồn mở, chế độ xem, viết tắt ORM và nhiều tính năng khác.\nWebsite:\n \nhttps://phalcon.io/\nKhi lựa chọn framework cho dự án của bạn, hãy xem xét yêu cầu cụ thể của \ndự án, cũng như sở thích và kinh nghiệm của bạn trong việc sử dụng các \ncông cụ cụ thể. Mỗi framework có những ưu điểm riêng và thích hợp cho \ncác tình huống khác nhau.\n14"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 15,
    "text": "TÌM HIỂU VỀ FRAMEWORK LARAVEL\nTRONG LẬP TRÌNH PHP\n1. Phân Tích\n2. Cú Pháp Câu Lệnh\n3. Ví Dụ Thực Tế\nLaravel\n là một framework PHP mạnh mẽ và phổ biến được thiết kế để giúp người \nphát triển xây dựng các ứng dụng web đa nhiệm và chất lượng cao một cách \nnhanh chóng và dễ dàng. Laravel cung cấp nhiều tính năng như routing mạnh \nmẽ, ORM (Eloquent), Blade templating engine, middleware, và nhiều công cụ \nhỗ trợ khác giúp việc phát triển ứng dụng web trở nên thuận tiện và hiệu quả.\nSửa File Migration\n \nvới các trường cần thiết\n (ví dụ: name, email, password).\nCài Đặt Laravel:\n composer global require laravel/installer\nTạo Một Dự Án Laravel Mới:\n laravel new project-name\nTạo Controller:\n php artisan make:controller MyController\nTạo Migration:\n php artisan make:migration create_table_name\nTạo Model:\n php artisan make:model MyModel\nTạo Migration và Model Cùng Lúc:\n php artisan make:model MyModel -m\nChạy Migration:\n php artisan migrate\n3.1. Ví Dụ 1: Hiển Thị Danh Sách Người Dùng\n  ▶\n  \nTạo Migration cho Bảng Người Dùng\n15"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 16,
    "text": "Ngôn ngữ lập trình web chuyên sâuChạy Migration:\n \nphp artisan migrate\n  ▶\n  \nTạo Model\n  ▶\n  \nTạo Controller để Quản Lý Người Dùng\n  ▶\n  \nTrong UserController, viết hàm để lấy và \nHiển Thị Danh Sách Người Dùng\n  ▶\n  \nTạo View (users/index.blade.php) để Hiển Thị Danh Sách Người Dùng\nMã: HTML\n16"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 17,
    "text": "▶\n  \nĐịnh tuyến (Routes) để gọi hàm trong UserController\nMã: PHP\nSửa File Migration\n \nvới các trường cần thiết \n(ví dụ: title, content).\nChạy Migration:\n php artisan migrate\n3.2. Ví Dụ 2: Tạo và Hiển Thị Bài Viết\n  ▶\n  \nTạo Migration cho Bảng Bài Viết\n  ▶\n  \nTạo Model\n  ▶\n  \nTạo Controller để Quản Lý Bài Viết\n17"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 18,
    "text": "Ngôn ngữ lập trình web chuyên sâu\nMã: PHP\nMã: HTML\nMã: PHP\n  ▶\n  \nTrong PostController, viết hàm để lấy và hiển thị danh sách bài viết\n  ▶\n  \nTạo View (posts/index.blade.php) để Hiển Thị Danh Sách Bài Viết\n  ▶\n  \nĐịnh tuyến (Routes) để gọi hàm trong PostController\n18"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 19,
    "text": "4. Bài Tập Thực Hành\n4.1. Bài Tập 1: Tạo Trang Blog\n4.2. Bài Tập 2: Tạo Hệ Thống Đăng Nhập và Đăng Ký Người Dùng\n4.3. Bài Tập 3: Quản Lý Ảnh\n  ▶\n  \nTạo Bảng posts với các trường:\n \nid, title, content, created_at, updated_at.\n  ▶\n  \nTạo Controller và Routes:\n để hiển thị danh sách bài viết.\n  ▶\n  \nTạo View:\n để hiển thị danh sách bài viết và chi tiết từng bài viết.\n  ▶\n  \nTạo Bảng users với các trường:\n \nid, name, email, password, created_at, \nupdated_at.\n  ▶\n  \nTạo Controller và Routes:\n để đăng nhập và đăng ký người dùng.\n  ▶\n  \nSử dụng Laravel Passport hoặc Sanctum:\n để xây dựng API cho việc xác \nthực người dùng.\n  ▶\n  \nTạo Bảng photos với các trường:\n \nid, user_id, image_path, created_at, \nupdated_at.\n  ▶\n  \nCho phép người dùng\n tải lên ảnh và hiển thị danh sách ảnh tải lên gần đây.\n5. Tạo API cho việc tải ảnh lên và lấy danh sách\n     ảnh tải lên gần đây\nLưu ý: Bạn có thể tìm kiếm tài liệu và hướng dẫn chi tiết trên trang chính thức \ncủa Laravel (\nhttps://laravel.com/docs\n) để được hỗ trợ chi tiết trong việc thực hiện \ncác bài tập này.\n19"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 20,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nTạo Bảng posts\n  ▶\n  \nĐịnh tuyến (Routes)\n  ▶\n  \nTạo Controller và Routes\nMã: PHP\nMã: PHP\nMã: PHP\n5.1. Lời Giải Bài Tập 1: Tạo Trang Blog\n∙\n \nTạo controller:\n \nphp artisan make:controller PostController\n∙\n \nTrong PostController:\n20"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 21,
    "text": "▶\n  \nTạo Bảng users\n  ▶\n  \nTạo View\n  ▶\n  \nTạo Controller và Routes cho Đăng Nhập và Đăng Ký\nMã: PHP\nMã: PHP\nMã: HTML\n5.2. Lời Giải Bài Tập 2: Tạo Hệ Thống Đăng Nhập\n        và Đăng Ký Người Dùng\n∙\n \nTạo file \nindex.blade.php\n trong thư mục \nresources/views/posts\n:\n∙\n \nTạo controller: \nphp artisan make:controller AuthController\n∙\n \nTrong AuthController: \nviết các hàm cho đăng nhập và đăng ký.\n∙\n \nĐịnh tuyến (Routes): \ncho đăng nhập và đăng ký\n21"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 22,
    "text": "Ngôn ngữ lập trình web chuyên sâu\n∙\n \nSử Dụng \nLaravel Passport\n hoặc \nSanctum\n cho Xác Thực:\n∙\n \nCài đặt \nLaravel Passport\n hoặc \nSanctum\n và cấu hình chúng.\n∙\n \nTrong \nAuthController\n, sử dụng \nPassport\n hoặc \nSanctum\n để xác thực người dùng.\n  ▶\n  \nTạo Bảng photos\nMã: PHP\n5.3. Lời Giải Bài Tập 3: Quản Lý Ảnh\n  ▶\n  \nTạo Controller và Routes cho Tải Ảnh Lên và Hiển Thị Danh Sách Ảnh\nMã: PHP\n∙\n \nTạo controller: \nphp artisan make:controller PhotoController\n∙\n \nTrong PhotoController: \nviết hàm cho tải ảnh lên và hiển thị danh sách ảnh.\n22"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 23,
    "text": "▶\n  \nĐịnh tuyến (Routes) cho tải ảnh lên và hiển thị danh sách ảnh\nMã: PHP\nLưu ý: Trong lời giải trên, bạn cần thay thế các phần như path_to_upload\n-\ned_image bằng logic xử lý thực tế để lưu ảnh vào máy chủ và trả về đường \ndẫn đến ảnh đã tải lên. Đồng thời, bạn cũng cần cấu hình middleware và \nxác thực người dùng khi cần thiết để bảo mật các tác vụ như tải ảnh lên và \nhiển thị danh sách ảnh.\n23"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 24,
    "text": "Ngôn ngữ lập trình web chuyên sâuLIST BÀI TẬP CHUYÊN SÂU VỀ SỬ DỤNG\nFRAMWORK TRONG LẬP TRÌNH PHP TỪ\nCƠ BẢN ĐẾN CHUYÊN SÂU VÀ THỰC TẾ\nDanh sách các bài tập chuyên sâu về việc sử dụng framework trong lập trình \nPHP , bao gồm cả các bài tập từ cơ bản đến nâng cao và thực tế. Việc làm các \nbài tập này sẽ giúp bạn hiểu rõ cách sử dụng các framework phổ biến như Lar\n-\navel, Symfony, hoặc Yii để xây dựng ứng dụng web PHP một cách hiệu quả và \nchuyên nghiệp.\n1. Các Bài Tập Cơ Bản\n1.1. Cài Đặt Framework \n  ▶\n  \nCài đặt một framework PHP\n như Laravel hoặc Symfony trên máy local của bạn.\n  ▶\n  \nT\nạo một ứng dụng \"Hello World\"\n đơn giản sử dụng framework này.\n1.2. Routing và Controllers\n  ▶\n  \nĐịnh nghĩa các route\n \ncho các trang web đơn giản.\n  ▶\n  \nTạo controllers\n \nđể xử lý các yêu cầu từ các routes.\n1.3. Views và Templates\n  ▶\n  \nSử dụng views\n \nđể hiển thị dữ liệu trên trình duyệt.\n  ▶\n  \nTạo và sử dụng các templates\n \nđể tái sử dụng giao diện.\n1.4. Forms và Validation\n  ▶\n  \nTạo các biểu mẫu (forms)\n \nđể nhận dữ liệu từ người dùng.\n  ▶\n  \nÁp dụng các quy tắc kiểm tra (validation rules)\n \nđể xác nhận dữ liệu nhập vào.\n24"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 25,
    "text": "2. Các Bài Tập Trung Bình\n3. Các Bài Tập Nâng Cao và Thực Tế\n2.1. Database Integration\n  ▶\n  \nKết nối ứng dụng với cơ sở dữ liệu (MySQL, PostgreSQL, hoặc SQLite).\n  ▶\n  \nThực hiện các truy vấn SQL cơ bản \nđể lấy, thêm, sửa và xóa dữ liệu.\n2.2. Authentication và Authorization\n  ▶\n  \nThiết lập hệ thống xác thực người dùng (authentication).\n  ▶\n  \nXác định quyền truy cập và xử lý xác thực người dùng.\n2.3. RESTful APIs\n  ▶\n  \nXây dựng một RESTful API đơn giản \ncho ứng dụng của bạn.\n  ▶\n  \nSử dụng HTTP methods (GET, POST, PUT, DELETE) \nđể thực hiện các thao \ntác trên tài nguyên.\n3.1. ORM (Object-Relational Mapping)\n  ▶\n  \nSử dụng ORM \nđể tương tác với cơ sở dữ liệu thay vì viết truy vấn SQL trực tiếp.\n  ▶\n  \nĐịnh nghĩa các mối quan hệ (relationships) \ngiữa các bảng dữ liệu.\n3.2. Middleware và Custom Middleware\n  ▶\n  \nSử dụng middleware \nđể thực hiện các xử lý trung gian trước khi yêu cầu đến \ncác controllers.\n  ▶\n  \nViết và tích hợp các middleware tùy chỉnh (custom middleware) \nvào ứng dụng.\n3.3. Caching và Performance Optimization\n  ▶\n  \nSử dụng caching \nđể lưu trữ dữ liệu tạm thời và tối ưu hóa hiệu suất ứng dụng.\n  ▶\n  \nÁp dụng các kỹ thuật tối ưu hóa \nđể giảm thời gian tải trang và tăng trải \nnghiệm người dùng.\n25"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 26,
    "text": "Ngôn ngữ lập trình web chuyên sâu    (Sử dụng Laravel):\n        Cài đặt Laravel bằng Composer: composer create-project --prefer-dist \nlaravel/laravel myapp\n        Tạo một route và controller cho \"Hello World\":\n    (Sử dụng Laravel):\n        Định nghĩa route và controller:\n3.4. Đa Ngôn Ngữ và Đa Khu Vực\n  ▶\n  \nThực hiện hỗ trợ đa ngôn ngữ (multi-language) \ncho ứng dụng của bạn.\n  ▶\n  \nXây dựng hỗ trợ đa khu vực (multi-region) \nđể xử lý các yêu cầu từ các khu \nvực khác nhau.\n3.5. Tích Hợp Dịch Vụ Bên Ngoài\n  ▶\n  \nKết nối ứng dụng với các dịch vụ bên ngoài \nbằng cách sử dụng API (ví dụ: \nGoogle Maps API, Facebook API).\n  ▶\n  \nXử lý dữ liệu \nđược trả về từ các dịch vụ bên ngoài.\nLỜI GIẢI CHI TIẾT\n1. Các Bài Tập Cơ Bản\n1.1. Cài Đặt Framework\n1.2. Routing và Controllers\nMã: PHP\n26"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 27,
    "text": "(Sử dụng Laravel):\n        Sử dụng view và gửi dữ liệu đến template:\n    \n(Sử dụng Laravel):\n        Tạo một biểu mẫu và xử lý dữ liệu đơn giản:\n1.3. Views và Templates\n1.4. Forms và Validation\nMã: PHP\nMã: PHP\nMã: HTML\n27"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 28,
    "text": "Ngôn ngữ lập trình web chuyên sâuMã: PHP\nMã: PHP\nMã: PHP\n2. Các Bài Tập Trung Bình\n2.1. Database Integration\n2.2. Authentication và Authorization\n    (Sử dụng Laravel):\n        Kết nối với cơ sở dữ liệu và thực hiện truy vấn:\n    (Sử dụng Laravel):\n        \nXác thực người dùng trong Laravel:\n        \nXác định quyền truy cập:\n28"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 29,
    "text": "Mã: PHP\nMã: PHP\nMã: PHP\nMã: PHP\n3. Các Bài Tập Nâng Cao và Thực Tế\n3.1. ORM (Object-Relational Mapping)\n2.3. RESTful APIs:\n    \nLời Giải (Sử dụng Laravel):\n        Định nghĩa các route API và trả về dữ liệu JSON:\n    (Sử dụng Laravel Eloquent):\n        Định nghĩa mối quan hệ giữa các bảng và sử dụng Eloquent để tương tác \nvới cơ sở dữ liệu.\n29"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 30,
    "text": "Ngôn ngữ lập trình web chuyên sâu\n3.2. Middleware và Custom Middleware\n    (Sử dụng Laravel):\n        Định nghĩa middleware tùy chỉnh và áp dụng nó cho các route cụ thể.\nMã: PHP\n30"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 31,
    "text": "3.3. Caching và Performance Optimization\n3.4. Đa Ngôn Ngữ và Đa Khu Vực\n3.5. Tích Hợp Dịch Vụ Bên Ngoài\n    (Sử dụng Laravel):\n        Sử dụng cache để lưu trữ dữ liệu tạm thời và tối ưu hóa các truy vấn dữ \nliệu lớn.\n    (Sử dụng Laravel):\n        Sử dụng localization để dịch các chuỗi văn bản sang nhiều ngôn ngữ.\n        Sử dụng multiple database connections để kết nối với các cơ sở dữ liệu \nkhác nhau tùy thuộc vào khu vực.\n    (Sử dụng Laravel HTTP Client):\n        Sử dụng HTTP Client hoặc các thư viện API để kết nối và gửi yêu cầu đến \ndịch vụ bên ngoài.\nMã: PHP\nMã: PHP\n31"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 32,
    "text": "Ngôn ngữ lập trình web chuyên sâu1. Bài tập\n1.1. Bài Tập 1: Quản lý Người Dùng\n  ▶\n  \nĐề Bài: \nXây dựng một trang web quản lý người dùng với các chức năng sau:\n∙\n \nHiển thị danh sách người dùng từ cơ sở dữ liệu.\n∙\n \nThêm mới người dùng.\n∙\n \nChỉnh sửa thông tin người dùng.\n∙\n \nXóa người dùng.\n ▶\n  \nHướng dẫn:\n    Tạo Cơ Sở Dữ Liệu:\n∙\n \nSử dụng MySQL hoặc SQLite\n để lưu trữ thông tin người dùng.\n∙\n \nTạo các truy vấn SQL\n để lấy, thêm, cập nhật và xóa người dùng.\n    Giao Diện Người Dùng:\n∙\n \nSử dụng HTML và CSS\n để tạo giao diện cho trang web.\n∙\n \nSử dụng PHP\n để kết nối với cơ sở dữ liệu và hiển thị dữ liệu người dùng.\nMã: PHP\nLIST BÀI TẬP CHUYÊN SÂU VỀ \nNGÔN NGỮ LẬP TRÌNH PHP\n1.2. Bài Tập 2: Quản lý Sản Phẩm\n  ▶\n  \nĐề Bài: \nXây dựng một trang web quản lý sản phẩm với các chức năng sau:\n32"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 33,
    "text": "2. Lời giải chi tiết các bài tập chuyên sâu về PHP\n  ▶\n  \nĐề Bài: \nXây dựng một hệ thống quản lý đơn hàng với các chức năng sau:\n∙\n \nHiển thị danh sách đơn hàng từ cơ sở dữ liệu.\n∙\n \nXem chi tiết đơn hàng bao gồm thông tin sản phẩm và khách hàng.\n∙\n \nXác nhận đơn hàng khi đã giao hàng.\n ▶\n  \nHướng dẫn:\n    Cơ Sở Dữ Liệu:\n∙\n \nLưu trữ\n thông tin đơn hàng, thông tin sản phẩm và thông tin khách hàng trong \ncác bảng riêng biệt.\n∙\n \nKết nối\n các bảng thông qua các khóa ngoại để liên kết thông tin đơn hàng với \nsản phẩm và khách hàng.\n    Truy Vấn Dữ Liệu: \nSử dụng các truy vấn SQL\n để lấy thông tin đơn hàng, sản \nphẩm và khách hàng từ cơ sở dữ liệu.\n    Giao Diện Người Dùng: \n∙\n \nTạo giao diện cho trang quản lý đơn hàng với các chức năng xem danh sách \nđơn hàng và xem chi tiết đơn hàng.\n∙\n \nHiển thị thông tin sản phẩm và khách hàng liên quan đến mỗi đơn hàng.\n∙\n \nHiển thị danh sách sản phẩm từ cơ sở dữ liệu.\n∙\n \nThêm mới sản phẩm với hình ảnh đính kèm.\n∙\n \nChỉnh sửa thông tin sản phẩm.\n∙\n \nXóa sản phẩm.\n ▶\n  \nHướng dẫn:\n    Cơ Sở Dữ Liệu và Tệp Ảnh:\n∙\n \nSử dụng cơ sở dữ liệu để lưu trữ thông tin sản phẩm.\n∙\n \nLưu trữ hình ảnh sản phẩm trong thư mục trên máy chủ và lưu đường dẫn đến \nhình ảnh trong cơ sở dữ liệu.\n    Tải Lên Ảnh: \nSử dụng PHP\n để xử lý tệp ảnh được tải lên từ người dùng và lưu \ntrữ nó trong thư mục đích.\n    Giao Diện Người Dùng: \nTạo giao diện cho trang quản lý sản phẩm với các \nbiểu mẫu để thêm, chỉnh sửa và xóa sản phẩm.\n1.3. Bài Tập 3: Quản lý Đơn Hàng\n2.1. Bài Tập 1: Quản lý Người Dùng\n33"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 34,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nGiao Diện Người Dùng (HTML, CSS, JavaScript):\nindex.html (Hiển Thị Danh Sách Người Dùng):\nform.html (Form Thêm Mới/Chỉnh Sửa Người Dùng):\n34"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 35,
    "text": "▶\n  \nXử Lý Dữ Liệu (PHP và MySQL):\nstyles.css (CSS để Thiết Kế Giao Diện):\ndb.php (Kết Nối Cơ Sở Dữ Liệu):\n35"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 36,
    "text": "Ngôn ngữ lập trình web chuyên sâu\nusers.php (Xử Lý Dữ Liệu Người Dùng):\n36"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 37,
    "text": "▶\n  \nJavaScript (script.js - Xử Lý Giao Diện và Gửi Yêu Cầu):\n37"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 38,
    "text": "Ngôn ngữ lập trình web chuyên sâu\n38"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 39,
    "text": "Trong ví dụ trên, bạn cần tạo một cơ sở dữ liệu MySQL với bảng users có \ncác trường id, name, và email. Đảm bảo rằng bạn đã cấu hình thông tin kết \nnối đúng trong file db.php. Giao diện người dùng được thiết kế bằng HTML \nvà CSS, và JavaScript được sử dụng để tương tác với người dùng và gửi yêu \ncầu đến máy chủ thông qua API.\n2.2. Bài Tập 2: Quản lý Sản Phẩm\n    Để xây dựng trang web quản lý sản phẩm với các chức năng hiển thị, thêm \nmới, chỉnh sửa và xóa sản phẩm, bạn có thể sử dụng PHP và MySQL cho xử \nlý dữ liệu trên máy chủ. Dưới đây là lời giải để bạn có thể bắt đầu thực hiện:\n  ▶\n  \nKết Nối Cơ Sở Dữ Liệu:\n39"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 40,
    "text": "Ngôn ngữ lập trình web chuyên sâu\n  ▶\n  \nHiển Thị Danh Sách Sản Phẩm:\n  ▶\n  \nThêm Mới Sản Phẩm:\n  ▶\n  \nChỉnh Sửa Thông Tin Sản Phẩm:\n40"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 41,
    "text": "▶\n  \nXóa Sản Phẩm:\n  ▶\n  \nGiao Diện Người Dùng (HTML, CSS):\nindex.html (Hiển Thị Danh Sách Sản Phẩm):\n41"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 42,
    "text": "Ngôn ngữ lập trình web chuyên sâu\nform.html (Form Thêm Mới/Chỉnh Sửa Sản Phẩm):\n42"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 43,
    "text": "styles.css (CSS để Thiết Kế Giao Diện):\n  ▶\n  \nJavaScript (script.js - Xử Lý Giao Diện và Gửi Yêu Cầu):\n43"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 44,
    "text": "Ngôn ngữ lập trình web chuyên sâu\n44"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 45,
    "text": "Trong ví dụ trên, bạn cần tạo một cơ sở dữ liệu MySQL với bảng products \ncó các trường id và product_name. Đảm bảo rằng bạn đã cấu hình thông \ntin kết nối đúng trong file db.php. Giao diện người dùng được thiết kế bằng \nHTML và CSS, và JavaScript được sử dụng để tương tác với người dùng và \ngửi yêu cầu đến máy chủ thông qua API.\n2.3. Bài Tập 3: Quản lý Đơn Hàng\n    Để xây dựng hệ thống quản lý đơn \nhàng với các chức năng hiển thị danh \nsách đơn hàng, xem chi tiết đơn hàng, \nvà xác nhận đơn hàng, bạn cần thiết \nkế cơ sở dữ liệu và tạo giao diện tương \ntác với người dùng. Dưới đây là một \nhướng dẫn về cách thực hiện dự án \nbạn có thể bắt đầu:\n  ▶\n  \nThiết Kế Cơ Sở Dữ Liệu:\n    Bảng orders:\n∙\n \norder_id (PRIMARY KEY): Khóa chính của đơn hàng.\n∙\n \ncustomer_name: Tên khách hàng đặt hàng.\n∙\n \nproduct_name: Tên sản phẩm trong đơn hàng.\n∙\n \norder_status: Trạng thái của đơn hàng (ví dụ: \"Đã xác nhận\", \"Đang giao \nhàng\", \"Đã giao hàng\").\n    Bảng products:\n∙\n \nproduct_id (PRIMARY KEY): Khóa chính của sản phẩm.\n∙\n \nproduct_name: Tên sản phẩm.\n∙\n \nproduct_description: Mô tả sản phẩm.\n∙\n \nproduct_price: Giá sản phẩm.\n    Bảng customers:\n∙\n \ncustomer_id (PRIMARY KEY): Khóa chính của khách hàng.\n∙\n \ncustomer_name: Tên khách hàng.\n∙\n \ncustomer_email: Địa chỉ email của khách hàng.\n  ▶\n  \nGiao Diện Người Dùng (HTML, CSS, JavaScript):\nindex.html (Hiển Thị Danh Sách Đơn Hàng và Chi Tiết Đơn Hàng):\n45"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 46,
    "text": "Ngôn ngữ lập trình web chuyên sâu\nstyles.css (CSS để Thiết Kế Giao Diện):\n46"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 47,
    "text": "orders.php (Truy vấn và Trả về Dữ Liệu Đơn Hàng):\n  ▶\n  \nXử Lý Dữ Liệu (PHP và MySQL):\n47"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 48,
    "text": "Ngôn ngữ lập trình web chuyên sâuorder-details.php (Truy vấn và Trả về Chi Tiết Đơn Hàng):\nconfirm-order.php (Xác Nhận Đơn Hàng):\n48"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 49,
    "text": "▶\n  \nJavaScript (script.js - Xử Lý Giao Diện và Gửi Yêu Cầu):\n49"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 50,
    "text": "Ngôn ngữ lập trình web chuyên sâuTrong ví dụ trên, bạn cần tạo một cơ sở dữ liệu MySQL với bảng products \ncó các trường id và product_name. Đảm bảo rằng bạn đã cấu hình thông \ntin kết nối đúng trong file db.php. Giao diện người dùng được thiết kế bằng \nHTML và CSS, và JavaScript được sử dụng để tương tác với người dùng và \ngửi yêu cầu đến máy chủ thông qua API.\n50"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 51,
    "text": "Chương 2Ngôn ngữ \nlập trình\nASP.NET\nChương 1i\nChương i1\nNGÔN NGỮ LẬP TRÌNH ASP:\nKHÁI NIỆM, CÚ PHÁP VÀ VÍ DỤ THỰC TẾ\n1. Khái niệm\nASP \n(Active Server Pages) là một công nghệ phát triển ứng dụng web được phát \ntriển bởi Microsoft. Nó cho phép người phát triển tạo ra các trang web động \nbằng cách sử dụng mã server-side để tạo nội dung được hiển thị cho người \ndùng. ASP sử dụng các mã server-side để tạo nội dung trang web, giúp tương \ntác với cơ sở dữ liệu, đọc và ghi tệp tin, và thực hiện các tác vụ máy chủ khác.\n2. Cú Pháp\n2.1. Mã Server-Side\nMã: ASP\n51"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 52,
    "text": "Ngôn ngữ lập trình web chuyên sâu2.2. Biến\n2.3. Câu Lệnh Điều Kiện\n2.4. Vòng Lặp\nMã: ASP\nMã: ASP\nMã: ASP\n52"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 53,
    "text": "Chương 23. Ví Dụ Thực Tế\n3.1. Hiển Thị Thông Tin Từ Form\n3.2. Kết Nối Cơ Sở Dữ Liệu và Hiển Thị Dữ Liệu\nMã: ASP\nMã: ASP\n53"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 54,
    "text": "Ngôn ngữ lập trình web chuyên sâu1. Phân Tích\nTrong ví dụ trên, mã ASP được sử dụng để nhận dữ liệu từ một biểu mẫu và \nhiển thị thông tin hoặc truy vấn cơ sở dữ liệu và hiển thị kết quả lên trang \nweb. ASP cung cấp các chức năng mạnh mẽ để xử lý dữ liệu và tương tác với \nngười dùng trên các trang web.\nASP.NET: PHÂN TÍCH, CÚ PHÁP\nVÀ VÍ DỤ THỰC TẾ\n  ▶\n  \nASP.NET :\n  \n∙\n \nASP.NET\n là một framework phát triển ứng dụng web được phát triển bởi\nMicrosoft. Nó sử dụng ngôn ngữ lập trình C# hoặc VB.NET để phát triển các \nứng dụng web động, trang web tương tác và dịch vụ web. ASP .NET hỗ trợ mô \nhình lập trình Web Forms và Model-View-Controller (MVC), cho phép phát triển \nứng dụng web linh hoạt và dễ dàng bảo trì.\n∙\n \nVisual Studio:\n Visual Studio là một IDE (Integrated Development\nEnvironment) chính thức từ Microsoft dành cho phát triển ứng dụng .NET, bao \ngồm ASP .NET. Nó cung cấp nhiều công cụ hỗ trợ phát triển và thiết kế ứng dụng \nASP .NET, đi kèm với trình biên dịch tích hợp.\n∙\n \nVisual Studio Code:\n Visual Studio Code (VS Code) là một trình soạn thảo \nmã nguồn mở và miễn phí được phát triển bởi Microsoft. Nó hỗ trợ nhiều ngôn \nngữ lập trình, bao gồm ASP .NET. Bạn có thể sử dụng các extension như “C# for \nVisual Studio Code” để phát triển ứng dụng ASP .NET.\n∙\n \nRider:\n Rider là một IDE phát triển bởi JetBrains, nổi tiếng với IntelliJ IDEA cho \nJava. Rider hỗ trợ phát triển ứng dụng .NET bằng C# và ASP .NET. Nó cung cấp \ncác tính năng mạnh mẽ cho việc phát triển ASP .NET.\n  ▶\n  \nPHP Roadmap dạng bảng cú pháp câu lệnh và các thẻ\n54"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 55,
    "text": "Chương 2  ▶\n  \nRoadmap học ASP.NET dưới dạng bảng, bao gồm các cú pháp câu lệnh \nvà cách sử dụng các thẻ cơ bản\nThứ \nTự\nChủ Đề\nNội Dung\n1\nC# Cơ Bản\n∙ \nBiến, kiểu dữ liệu, hàm.\n∙ \nCâu lệnh điều kiện và vòng lặp.\n∙ \nMảng và List.\n2\nASP .NET\nWeb Forms\n∙ \nCú pháp cơ bản của ASP .NET Web Forms.\n∙ \nXử lý sự kiện và truy cập cơ sở dữ liệu.\n3\nASP .NET MVC\n∙ \nMô hình MVC (Model-View-Controller).\n∙ \nRouting và Razor syntax.\n∙ \nXử lý dữ liệu với Entity Framework.\n4\nASP .NET Core\n∙ \nCài đặt và cấu hình ASP .NET Core.\n∙ \nMiddleware và Dependency Injection.\n∙ \nRazor Pages và MVC trong ASP .NET Core.\n5\nASP .NET MVC\n∙ \nCode-First và Database-First approaches.\n∙ \nTạo, đọc, cập nhật và xóa dữ liệu.\n6\nEntity\nFramework\nCore\n∙ \nThiết kế và xây dựng RESTful APIs.\n∙ \nSử dụng HTTP methods (GET, POST, PUT, \nDELETE).\n7\nFront-end\nTechnologies\n∙ \nHTML, CSS, JavaScript cơ bản.\n∙ \nAJAX và JSON.\n∙ \nData binding và DOM manipulation.\n8\nUnit Testing\n∙ \nXây dựng và chạy unit tests với NUnit hoặc \nxUnit.\n∙ \nTự động hóa việc kiểm thử.\n55"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 56,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nMột số khái niệm/chủ đề trong ASP.NET, cùng với mô tả và \ncú pháp/\nthẻ liên quan\nThứ \nTự\nChủ Đề\nNội Dung\n9\nSource Control (Git)\n∙ \nCơ bản về Git: commit, push, pull, branch, \nmerge.\n∙ \nGitHub hoặc GitLab.\n10\nBảo Mật và\nXác Thực\n∙ \nHTTPS và SSL\n∙ \nXác thực người dùng với ASP .NET Identity \nhoặc OAuth.\n11\nPerformance\nOptimization\n∙ \nCaching, bundling và minification.\n∙ \nTối ưu hóa truy vấn và tải dữ liệu.\n12\nDevOps và\nProduction\nDeployment\n∙ \nCấu hình và triển khai ứng dụng lên môi \ntrường production.\n∙ \nMonitoring và log analysis.\nKhái \nNiệm/Chủ \nĐề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nASP .NET \nWeb Forms\nMô hình lập trình \nweb dựa trên các \ntrang form-like.\n<asp:Control>\nASP .NET \nMVC\nMô hình lập trình \nweb dựa trên \nMoel-View-Con\n-\ntroller.\n@Html.TextBoxFor(m => m.Property)\nASP .NET \nCore\nFramework lập \ntrình web dựa trên \n.NET Core.\n@model, @inject, @foreach, @if (Razor \nsyntax)\n56"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 57,
    "text": "Chương 2Khái \nNiệm/Chủ \nĐề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nServer\nControls\nCác điều khiển \n(controls) được xử \nlý ở phía máy chủ.\n<asp:TextBox>, <asp:Button>,\n<asp:GridView>\nRazor Syntax\nCú pháp cho việc \nviết mã C# trong \nfile .cshtml.\n@{ var variable = \"value\"; }, @if, @\nforeach, @model\nASP .NET \nIdentity\nHệ thống quản lý \nxác thực và quyền \ntruy cập người \ndùng.\nSignInManager, UserManager, Roles, \nAuthorizeAttribute\nEntity\nFramework\nORM (Object-Re\n-\nlational Mapping) \ncho truy cập cơ sở \ndữ liệu.\nLINQ to Entities, Code-First,\nDatabase-First\nMiddleware\nCác thành phần \nxử lý yêu cầu trước \nkhi đến Controller.\napp.UseMiddleware\n<CustomMiddleware>()\nLayouts\nTemplate chung \ncho các trang \nweb.\nLayout.cshtml, @RenderBody(),\n@section\nRouting\nĐịnh tuyến yêu \ncầu từ URL đến \nController và \nAction.\napp.UseMvc(routes => { routes.\nMapRoute(...) })\nAJAX in ASP .\nNET\nSử dụng AJAX để \ntương tác với máy \nchủ mà không làm \ntải lại trang.\n$.ajax(), UpdatePanel, <asp:\nScriptManager>\n57"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 58,
    "text": "Ngôn ngữ lập trình web chuyên sâuKhái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nWeb API\nXây dựng API dựa \ntrên HTTP cho ứng \ndụng web hoặc di \nđộng.\nApiController, RouteAttribute,\nHttpGet, HttpPost\nDependency \nInjection\nCách tiêm các đối \ntượng vào trong \ncác lớp khác.\nservices.AddSingleton<IService,\nServiceImplementation>()\n2. Cú Pháp Câu Lệnh ASP.NET\nMã: csharp\nMã: HTML\nMã: csharp\n  ▶\n  \nLập Trình Trong ASP.NET View\n  ▶\n  \nKhối Code-behind (C#)\n58"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 59,
    "text": "Chương 2  ▶\n  \nCode-behind (products.aspx.cs)\n3. Ví Dụ Thực Tế: Hiển Thị Danh Sách Sản Phẩm\nMã: HTML\n  ▶\n  \nASP.NET View (products.aspx)\n59"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 60,
    "text": "Ngôn ngữ lập trình web chuyên sâuBÀI TẬP THỰC HÀNH\n1. Bài Tập 1: Tạo Trang Đăng Nhập\n2. Bài Tập 2: Quản Lý Sản Phẩm\n3. Bài Tập 3: Xây Dựng Ứng Dụng Blog Đơn Giản\n∙\n \nTạo trang đăng nhập với hai trường nhập: tên đăng nhập và mật khẩu.\n∙\n \nKiểm tra thông tin đăng nhập và hiển thị thông báo lỗi nếu không hợp lệ.\n∙\n \nTạo trang quản lý sản phẩm với các chức năng: hiển thị danh sách sản phẩm, \nthêm sản phẩm mới và xóa sản phẩm.\n∙\n \nSử dụng GridView hoặc Repeater để hiển thị danh sách sản phẩm.\n∙\n \nTạo trang chính hiển thị các bài viết blog.\n∙\n \nCho phép người dùng đăng bài mới, chỉnh sửa và xóa bài viết.\n60"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 61,
    "text": "Chương 24. Lời Giải Bài Tập 1\nLỜI GIẢI CHI TIẾT\nMã: Csharp\n5. Lời Giải Bài Tập 2\nMã: Csharp\n61"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 62,
    "text": "Ngôn ngữ lập trình web chuyên sâu6. Lời Giải Bài Tập 3\nMã: Csharp\n62"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 63,
    "text": "Chương 2Lưu ý: Trong các ví dụ trên, bạn cần thay thế logic truy vấn CSDL và xử lý dữ \nliệu thực tế tương ứng với ứng dụng của mình.\n63"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 64,
    "text": "Ngôn ngữ lập trình web chuyên sâuNgôn ngữ\nlập trình web với \nPython sử dụng \nFramework\nDjango\nChương 1ii\nChương ii1\nLẬP TRÌNH WEB VỚI PYTHON VÀ\nFRAMEWORK DJANGO: KHÁI NIỆM, CÚ PHÁP\nVÀ VÍ DỤ THỰC TẾ\n1. Khái niệm\n∙\n \nDjango:\n là một framework phát triển ứng dụng web mã nguồn mở được viết \nbằng Python, hỗ trợ các nhà phát triển xây dựng các ứng dụng web mạnh mẽ và \nlinh hoạt dễ dàng. Django tuân theo mô hình MTV (Model-Template-View) để \ntạo các trang web.\n∙\n \nDưới đây là một roadmap cho học Django dưới dạng bảng, bao gồm các cú \npháp câu lệnh và các thẻ cơ bản:\nKhái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nModels\nĐịnh nghĩa cấu \ntrúc dữ liệu trong \ncơ sở dữ liệu\nclass MyModel(models.Model):\nFields\nĐịnh nghĩa các \nloại trường dữ \nliệu (CharField, \nIntegerField, ...)\nname = models.CharField\n(max_length=100)\n64"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 65,
    "text": "Chương 3Khái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nMigrations\nTạo và quản lý các \nphiên bản cơ sở dữ \nliệu\npython manage.py makemigrations\nAdmin Panel\nTạo giao diện \nquản trị dữ liệu \ncho các model\nadmin.site.register(MyModel)\nViews\nXử lý logic\nvà tương tác với\ndữ liệu\ndef my_view(request):\nTemplates\nHiển thị dữ liệu và \ngiao diện người \ndùng\n{{ variable_name }}\nURL Patterns\nLiên kết các URL \nvới views và\nfunctions\npath('my-url/', my_view, name='my-url')\nForms\nĐịnh nghĩa và xử \nlý các biểu mẫu \nnhập liệu\nclass MyForm(forms.Form):\nStatic Files\nQuản lý các tệp tin \ntĩnh như CSS,\nJavaScript\n{% load static %}<br><link rel=\"\n-\nstylesheet\" href=\"{% static 'style.css' \n%}\">\nDjango ORM\nSử dụng ORM \n(Object-Relation\n-\nal Mapping) để \ntương tác với cơ \nsở dữ liệu\nMyModel.objects.filter(...)\n65"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 66,
    "text": "Ngôn ngữ lập trình web chuyên sâuKhái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nQuerysets\nTạo truy vấn\nLINQ-like để\ntruy vấn dữ liệu\nMyModel.objects.filter(...).exclude(...).\norder_by(...)\nMiddlwares\nXử lý các yêu cầu \ntrước khi đến \nviews hoặc sau \nkhi rời views\ndef my_middleware(get_response):\nUser\nAuthentication\nĐảm bảo và quản \nlý xác thực\nngười dùng\n@login_required (Decorator)\nTesting\nViết các bài kiểm \ntra để đảm bảo \nchất lượng ứng \ndụng\nclass MyTestCase(TestCase):\nREST APIs\nXây dựng API cho \nứng dụng web\nDjango REST Framework\nCaching\nSử dụng cache \nđể tối ưu hóa hiệu \nsuất\nfrom django.core.cache import cache\ncache.set(‘my_key’, ‘my_value’)\nError\nHandling\nXử lý và bắt lỗi \ntrong ứng dụng\ntry:\nexcept SomeException as e:\nCustom Mid\n-\ndleware\nTạo middleware \ntùy chỉnh cho \nứng dụng\nclass MyMiddleware:\ndef __init__(self, get_response):\n66"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 67,
    "text": "Chương 3Khái Niệm/\nChủ Đề\nMô Tả\nCú Pháp/Thẻ ASP.NET\nSignals\nĐịnh nghĩa và xử \nlý các sự kiện ứng \ndụng\nfrom django.db.models.signals import \npost_save\n@receiver(post_save, sender=MyModel)\nAsync Views\nXử lý yêu cầu bất \nđồng bộ trong \nviews\nasync def my_view(request):\nNhớ rằng, để học Django hiệu quả, bạn cần áp dụng kiến thức này thông qua \nviệc thực hành và xây dựng các dự án thực tế. Đồng thời, nắm vững việc đọc \ntài liệu chính thống và hiểu rõ về các chức năng, phương thức và thuộc tính \ncủa các lớp và thẻ Django.\n2. Cú Pháp\n  ▶\n  \nKhai Báo Một Model\nMã: Python\n67"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 68,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nTạo Một URL và Hàm Xử Lý Liên Quan\n  ▶\n  \nTạo Một View\n  ▶\n  \nTạo Một Template\nMã: Python\nMã: Python\nMã: HTML\n68"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 69,
    "text": "Chương 3  ▶\n  \nCấu Hình Cơ Sở Dữ Liệu (settings.py)\n  ▶\n  \nTạo Ứng Dụng Quản Lý Sản Phẩm\nMã: Python\nMã: Python\n3. Ví Dụ Thực Tế\n  \nKhai Báo Một Model:\nMã: Python\n69"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 70,
    "text": "Ngôn ngữ lập trình web chuyên sâu  \nKết Nối URL với View\n:\n  \nCách Chạy Ứng Dụng Django\n:\nMã: Python\nMã: Python\nMã: HTML\n Cài Đặt Django: Trước hết, bạn cần cài đặt Django bằng pip:\n70"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 71,
    "text": "Chương 3  \nTạo Ứng Dụng Django Mới\n:\n Tạo Dự Án Django Mới: Chạy lệnh dưới đây để tạo một dự án Django mới:\nCấu Hình URL: Trong tệp myproject/urls.py, cấu hình các URL cho ứng dụng \ncủa bạn.\nChạy Máy Chủ Phát Triển: Chạy lệnh dưới đây để khởi động máy chủ phát triển \nDjango:\nTruy Cập Ứng Dụng: Mở trình duyệt và truy cập http://localhost:8000/products/ \nđể xem danh sách sản phẩm.\nBÀI TẬP THỰC HÀNH\n1. Bài Tập 1: Tạo Form Đăng Nhập và Xử Lý Đăng Nhập\n  ▶\n  \nTạo một trang đăng nhập với hai trường nhập:\n tên người dùng và mật \nkhẩu.\n  ▶\n  \nViết view\n \nđể xác thực thông tin đăng nhập và hiển thị thông báo lỗi nếu \nkhông hợp lệ.\n71"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 72,
    "text": "Ngôn ngữ lập trình web chuyên sâuLỜI GIẢI CHI TIẾT\n4. Lời Giải Bài Tập 1\nMã: Python\n3. Bài Tập 3: Thêm Tính Năng Biểu Đồ Động\n  ▶\n  \nSử dụng thư viện JavaScript như Chart.js\n để tạo biểu đồ động.\n  ▶\n  \nTạo một view để cung cấp dữ liệu biểu đồ dưới dạng\n JSON từ Django và \nhiển \nthị biểu đồ động trên trình duyệt.\n2. Bài Tập 2: Tạo Trang Quản Lý Sản Phẩm\n  ▶\n  \nTạo trang quản lý sản phẩm với chức năng:\n \nhiển thị danh sách sản \nphẩm, thêm sản phẩm mới, và xóa sản phẩm.\n  ▶\n  \nSử dụng\n template và form để hiển thị và xử lý dữ liệu sản phẩm.\n72"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 73,
    "text": "Chương 35. Lời Giải Bài Tập 2\n6. Lời Giải Bài Tập 3\nMã: Python\nMã: Python\n73"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 74,
    "text": "Ngôn ngữ lập trình web chuyên sâuTrong ví dụ trên, chart_data là một view trả về dữ liệu biểu đồ dướng dạng \nJSON. Bằng cách sử dụng JavaScript và AJAX, bạn có thể lấy dữ liệu này và \nvẽ biểu đồ động trên trình duyệt của người dùng.\nTrong ví dụ trên, chart_data là một view trả về dữ liệu biểu đồ dướng dạng \nJSON. Bằng cách sử dụng JavaScript và AJAX, \nbạn\n có thể lấy dữ liệu này và \nvẽ biểu đồ động trên trình duyệt của người dùng.\nBÀI TẬP CHUYÊN SÂU VỀ\nFRAMEWORK VỚI DJANGO\n1. Quản Lý Bài Viết\n1. Lời giải bài tập: Quản Lý Bài Viết\n  ▶\n  \nCơ Sở Dữ Liệu\n  ▶\n  \nGiao Diện Người Dùng\nTạo một model Post chứa các trường như \ntitle\n, \ncontent\n, \ncreated_at\n, và \nauthor\n \nđể lưu trữ thông tin của các bài viết.\nĐể xây dựng ứng dụng Quản Lý Bài Viết sử dụng \nDjango\n và kết nối với cơ sở dữ \nliệu \nMySQL\n (tên cơ sở dữ liệu là QuanLyBaiViet), bạn cần thực hiện các bước \nsau:\n∙\n Thiết kế trang chính hiển thị danh sách các bài viết.\n∙\n Tạo trang chi tiết cho mỗi bài viết để hiển thị nội dung đầy đủ của bài viết.\nLỜI GIẢI CHI TIẾT\n74"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 75,
    "text": "Chương 3  ▶\n  \nCài Đặt Django và MySQL Client\n  ▶\n  \nThiết Lập Cơ Sở Dữ Liệu\n  ▶\n  \nThiết Lập Django Project và App\n  ▶\n  \nCấu Hình Cơ Sở Dữ Liệu trong settings.py\nTrước tiên, hãy chắc chắn rằng bạn đã cài đặt \nDjango\n và \nMySQL Client\n cho \nDjango\n. Bạn có thể cài đặt chúng bằng các lệnh sau:\nTạo một cơ sở dữ liệu với tên là \nQuanLyBaiViet\n trong \nMySQL\n thông qua \nXAMPP\n \nhoặc bất kỳ công cụ quản lý cơ sở dữ liệu nào khác.\n75"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 76,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nĐịnh Nghĩa Model Bài Viết\n  ▶\n  \nTạo Migration và Áp Dụng\nTrong \nfile models.py\n của ứng dụng \nQuanLyBaiVietApp\n, định nghĩa \nmodel\n cho \nbài viết:\nChạy các lệnh sau để tạo \nmigration\n và áp dụng nó vào cơ sở dữ liệu:\nMã: Python\n76"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 77,
    "text": "Chương 3  ▶\n  \nTạo Giao Diện Đăng Nhập\n  ▶\n  \nCấu Hình Đường Dẫn URL\nTạo template cho trang đăng nhập \n(templates/login.html)\n:\nTrong file urls.py của ứng dụng \nQuanLyBaiVietApp\n, cấu hình đường dẫn \nMã: HTML\nMã: Python\n77"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 78,
    "text": "Ngôn ngữ lập trình web chuyên sâu  ▶\n  \nĐịnh Nghĩa View Đăng Nhập\nTrong file views.py của ứng dụng QuanLyBaiVietApp, định nghĩa view cho \ntrang đăng nhập:\nMã: Python\nTrong hàm login_view, người dùng sẽ được chuyển hướng đến trang chính \n(home) sau khi đăng nhập thành công.\nNhớ thêm các đường dẫn và views cho các chức năng khác của ứng dụng \ntheo yêu cầu của bạn.\nHy vọng rằng hướng dẫn này giúp bạn xây dựng ứng dụng Quản Lý Bài Viết \nvới Django kết nối cơ sở dữ liệu MySQL.\n78"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 79,
    "text": "Ph/uni1EA7n 2: \nPh/uni1EA7n 2: \nPh/uni1EA7n 2: \nNGÔN NGỮ\nLẬP TRÌNH\nASP.NET"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 80,
    "text": "1. Bài tập 1 HTML/CSS\nLời giải bài tập số 1\nXây Dựng Trang Web Cá nhân Hoặc Trang Thương Mại. \n( phục vụ Dự án cuối \nsách).\nTạo Giao Diện Người Dùng Cho Ứng Dụng Web Cụ Thể. \n( phục vụ dự án cuối \nsách) Ngôn ngữ sử dụng Lập trình web với \nPHP\n và \nMySQL\n  ▶\n  \nXác định Mục Tiêu\n  ▶\n  \nWireframing và Thiết Kế Giao Diện\n  ▶\n  \nPhát Triển Giao Diện Người Dùng\n  ▶\n  \nChọn Công Nghệ\n  ▶\n \n \nBước 1: Xác định Yêu Cầu\n  ▶\n \n \nBước 2: Thiết Kế Giao Diện Người Dùng (UI/UX)\n∙\n Loại sản phẩm: Điện tử, thời trang, đồ gia dụng, v.v.\n∙\n Chức năng chính: Hiển thị sản phẩm, giỏ hàng, thanh toán, đánh giá, tìm \nkiếm, v.v.\n∙\n Vẽ wireframes để hiểu cấu trúc trang web và ứng dụng.\n∙\n Thiết kế giao diện người dùng sáng sủa, dễ sử dụng và hấp dẫn.\n∙\n Sử dụng HTML và CSS để tạo cấu trúc và thiết kế giao diện.\n∙\n Sử dụng JavaScript hoặc framework để thêm chức năng tương tác.\n∙\n Front-end: \nHTML, CSS, JavaScript, framework như React, Angular\n hoặc \nVue.js\n.\n∙\n Back-end: \nNode.js, Python (Django, Flask), PHP (Laravel), Ruby (Ruby on \nRails)\n.\n∙\n Cơ sở dữ liệu: \nMySQL, PostgreSQL, MongoDB\n.\n80"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 81,
    "text": "▶\n  \nQuản Lý Sản Phẩm và Dữ Liệu\n  ▶\n  \nKiểm Thử\n  ▶\n  \nTriển Khai Trang Web\n  ▶\n  \nXây Dựng Giỏ Hàng và Thanh Toán\n  ▶\n  \nTối Ưu Hóa\n  ▶\n  \nChức Năng Tìm Kiếm và Lọc\n  ▶\n \n \nBước 3: Phát Triển Trang Thương Mại\n  ▶\n \n \nBước 4: Kiểm Thử và Tối Ưu Hóa\n  ▶\n \n \nBước 5: Triển Khai và Duy Trì\n∙\n Tạo cơ sở dữ liệu cho sản phẩm, người dùng, đơn hàng, v.v.\n∙\n Phát triển chức năng thêm, sửa, xóa sản phẩm và quản lý danh mục.\n∙\n Kiểm tra trang web trên các trình duyệt và thiết bị khác nhau để đảm bảo \ntính tương thích.\n∙\n Thử nghiệm các chức năng để đảm bảo không có lỗi và người dùng có trải \nnghiệm tốt.\n∙\n Đăng ký tên miền và chọn dịch vụ hosting.\n∙\n Tải lên mã nguồn và cấu hình máy chủ.\n∙\n Tích hợp chức năng giỏ hàng.\n∙\n Tích hợp các cổng thanh toán như \nPayPal, Stripe\n, hoặc tùy chọn thanh toán \nkhi nhận hàng.\n∙\n Tối ưu hóa mã nguồn, hình ảnh và tài nguyên để giảm thời gian tải trang.\n∙\n Bảo mật trang web bằng cách sử dụng \nHTTPS\n và xác thực dữ liệu người \ndùng.\n∙\n Tạo chức năng tìm kiếm sản phẩm theo tên, danh mục, giá, v.v.\n∙\n Tích hợp các bộ lọc để giúp người dùng tìm kiếm dễ dàng hơn.\n81"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 82,
    "text": "▶\n  \nDuy Trì và Cập Nhật\n  ▶\n  \nFile: index.html\n∙\n Sao lưu dữ liệu định kỳ để tránh mất mát thông tin.\n∙\n Cập nhật nội dung và chức năng theo yêu cầu của người dùng hoặc chủ sở \nhữu trang web.\nNhớ rằng, trang web trang thương mại cần phải tối ưu hóa trải nghiệm người \ndùng để tăng cơ hội chuyển đổi và duy trì lượng khách hàng trung thành. \nĐồng thời, bảo mật thông tin người dùng và giao dịch là rất quan trọng.\n82"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 83,
    "text": "83"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 84,
    "text": "▶\n  \nFile CSS( Style.css)\n84"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 85,
    "text": "85"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 86,
    "text": "▶\n  \nKết quả chạy chương trình\n86"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 87,
    "text": "2. Bài tập 2: Bài Tập JavaScript và DOM\n∙\n Xây Dựng Trò Chơi Đơn Giản Sử Dụng \nJavaScript\n.\n∙\n Tạo Các Ứng Dụng Web Tương Tác Với Người Dùng.\n  ▶\n  \nIndex.html\n  ▶\n \n \nLời giải\n87"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 88,
    "text": "▶\n  \nScript.js\n<\\>\n<\\>\nC+\n+\nC++\nH\nH\nTM\nL\nTML\nPHP\nPHP\n88"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 89,
    "text": "▶\n  \nStyle.css\n89"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 90,
    "text": "▶\n  \nKết quả chạy chương trình\nLà một cách tuyệt vời để lấy dữ liệu thực tế từ internet và tích hợp vào ứng \ndụng của bạn. Dưới đây là hướng dẫn về cách sử dụng một API thời tiết công \ncộng để lấy thông tin thời tiết cho một địa điểm cụ thể. Trong ví dụ này, chúng \nta sẽ sử dụng \nOpenWeatherMap API\n.\n3. Bài tập 3: Bài Tập Ajax và API\n∙\n Tìm Hiểu Và Sử Dụng Các \nAPI\n Công Cộng (Ví Dụ: API Thời Tiết).\n∙\n Xây Dựng Ứng Dụng Web Hiển Thị Dữ Liệu Từ \nAPI\n Bằng \nAjax\n.\n  ▶\n  \nTìm Hiểu Và Sử Dụng Các API Công Cộng (Ví Dụ: API Thời tiết)\n  ▶\n \n \nLời giải\nTrong ví dụ này, một số ngẫu nhiên từ 1 đến 100 được tạo ra và người chơi \ncần nhập số vào ô input và nhấn nút “Đoán”. Họ sẽ nhận được thông báo nếu \nsố họ đoán là quá lớn, quá nhỏ hoặc chính xác. Khi họ đoán đúng, input sẽ bị \nvô hiệu hóa và họ sẽ biết được số lần họ đã đoán.\n90"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 91,
    "text": "Là một cách tuyệt vời để lấy dữ liệu thực tế từ internet và tích hợp vào ứng \ndụng của bạn. Dưới đây là hướng dẫn về cách sử dụng một API thời tiết công \ncộng để lấy thông tin thời tiết cho một địa điểm cụ thể. Trong ví dụ này, chúng \nta sẽ sử dụng \nOpenWeatherMap API\n.\nTruy cập trang web OpenWeatherMap và đăng ký tài khoản (nếu bạn chưa có). \nSau khi đăng ký, bạn sẽ nhận được một API Key. API Key này sẽ được sử dụng \nđể xác thực yêu cầu của bạn khi truy cập API OpenWeatherMap.\nGửi Yêu Cầu Đến API OpenWeatherMap. Để lấy thông tin thời tiết từ API Open\n-\nWeatherMap, bạn cần gửi yêu cầu GET đến URL của API với các tham số nhất \nđịnh bao gồm tên thành phố và API Key. Dưới đây là một ví dụ yêu cầu API sử \ndụng JavaScript và Fetch API:\n  ▶\n  \nTìm Hiểu Và Sử Dụng Các API Công Cộng (Ví Dụ: API Thời tiết)\n  ▶\n  \nMã code: javascript\nBước 1: Đăng ký và Nhận API Key\nBước 2: Sử Dụng API Thời Tiết\n91"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 92,
    "text": "▶\n  \nXử Lý Dữ Liệu Thời Tiết\nSau khi nhận được dữ liệu từ API, bạn có thể xử lý thông tin th\nời tiết theo cách \nbạn muốn. Dưới đây là ví dụ cách hiển thị nhiệt độ và mô tả tình trạng thời tiết:\n  ▶\n \n \nXử Lý Dữ Liệu Thời Tiết\nTrong ví dụ trên, data.main.temp chứa nhiệt độ (tính theo Kelvin) và data.\nweather[0].description chứa mô tả tình trạng thời tiết.\nLưu ý rằng việc sử dụng API cụ thể có thể yêu cầu bạn tuân thủ các hướng \ndẫn và điều kiện sử dụng từ nhà cung cấp API. Hãy đọc tài liệu của API để \nbiết thêm chi tiết về cách sử dụng và giới hạn của nó.\n92"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 93,
    "text": "▶\n  \nMã code File: index.html\n  ▶\n  \nMã code File: script.js\n  ▶\n \n \nLời giải\nXây Dựng Ứng Dụng Web Hiển Thị Dữ Liệu Từ API Bằng Ajax\n93"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 94,
    "text": "94"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 95,
    "text": "▶\n  \nMã code File: script.js\n95"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 96,
    "text": "▶\n  \nKết quả sau khi chạy chương trình\n  ▶\n  \nPhân Tích Thực Thể\n4. Bài tập 4: Bài Tập Cơ Sở Dữ Liệu và SQL\n∙\n Thiết Kế Cơ Sở Dữ Liệu Cho Một Ứng Dụng Web Cụ Thể.\n∙\n Viết Các Truy Vấn SQL Để Truy Cập Và Cập Nhật Dữ Liệu.\n  ▶\n \n \nLời giải\n  ▶\n  \nThiết kế cơ sở dữ liệu cho website: Trang Thương Mại điện tử:\n \nĐể thiết kế cơ sở dữ liệu cho một trang web Thương Mại Điện Tử \n(e-commerce \nwebsite)\n, chúng ta cần bắt đầu bằng việc phân tích các thực thể \n(entities)\n mà \nhệ thống của chúng ta cần để lưu trữ thông tin. Dưới đây là phân tích thực thể, \nlược đồ diagram và thiết kế chi tiết cho cơ sở dữ liệu \ne-commerce\n.\nNgười Dùng (Users)\nID (Khóa chính)\nTên đăng nhập\nMật khẩu\nHọ và tên\nĐịa chỉ email\n96"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 97,
    "text": "▶\n  \nThiết Kế Các Bảng Cơ Sở Dữ Liệu\nBảng Người Dùng (Users)\nID (INT, PRIMARY KEY)\nUsername (VARCHAR)\nPassword (VARCHAR)\nFullName (VARCHAR)\nEmail (VARCHAR)\nĐịa chỉ giao hàng\nSố điện thoại\nVai trò (người dùng thường, quản trị viên, v.v.)\nID (Khóa chính)\nTên sản phẩm\nMô tả sản phẩm\nGiá sản phẩm\nSố lượng trong kho\nHình ảnh sản phẩm\nDanh mục sản phẩm (liên kết với Danh Mục)\nID (Khóa chính)\nNgày đặt hàng\nTổng giá trị đơn hàng\nTrạng thái đơn hàng (đang xử lý, đã giao hàng, hủy bỏ, ...)\nID Người Dùng (liên kết với Người Dùng)\nID (Khóa chính)\nID Đơn hàng (liên kết với Đơn Hàng)\nID Sản phẩm (liên kết với Sản Phẩm)\nSố lượng\nGiá sản phẩm khi đặt hàng\nID (Khóa chính)\nTên danh mục\nSản Phẩm (Products)\nĐơn Hàng (Orders)\nChi Tiết Đơn Hàng (Order Details)\nDanh Mục Sản Phẩm (Categories)\n97"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 98,
    "text": "ShippingAddress (VARCHAR)\nPhoneNumber (VARCHAR)\nRole (VARCHAR)\nID (INT, PRIMARY KEY)\nProductName (VARCHAR)\nDescription (TEXT)\nPrice (DECIMAL)\nQuantityInStock (INT)\nImageURL (VARCHAR)\nCategoryID (INT, FOREIGN KEY)\nID (INT, PRIMARY KEY)\nCategoryName (VARCHAR)\nID (INT, PRIMARY KEY)\nOrderDate (DATETIME)\nTotalAmount (DECIMAL)\nStatus (VARCHAR)\nUserID (INT, FOREIGN KEY)\nID (INT, PRIMARY KEY)\nOrderID (INT, FOREIGN KEY)\nProductID (INT, FOREIGN KEY)\nQuantity (INT)\nPricePerUnit (DECIMAL)\nBảng Sản Phẩm (Products)\nBảng Danh Mục Sản Phẩm (Categories)\nBảng Đơn Hàng (Orders)\nBảng Chi Tiết Đơn Hàng (OrderDetails)\nTrong thiết kế này, các cột đánh dấu là FOREIGN KEY liên kết với khóa chính \ncủa các bảng khác để thiết lập mối quan hệ giữa các bảng. Hãy đảm bảo \nrằng bạn đã xem xét các yêu cầu cụ thể của ứng dụng của bạn và điều chỉnh \nthiết kế cơ sở dữ liệu tùy thuộc vào các yêu cầu và quy định cụ thể.\n98"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 99,
    "text": "ID: Trường kiểu INT và là khóa chính của bảng.\nUsername, Password, FullName, Email, ShippingAddress, PhoneNumber,\n và \nRole:\nBảng user\n  ▶\n  \nTạo lược đồ ERD sử dụng Phpmyadmin\n  ▶\n  \nTrong câu lệnh trên\n  ▶\n  \nBảng Products\n∙\n Các trường kiểu \nVARCHAR\n với độ dài tối đa là 255 ký tự.\n99"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 100,
    "text": "▶\n  \nBảng Products\n  ▶\n  \nTrong câu lệnh trên\nID: Trường kiểu INT và là khóa chính của bảng.\nProductName: Trường kiểu VARCHAR với độ dài tối đa là 255 ký tự.\nDescription: Trường kiểu TEXT, cho phép lưu trữ văn bản dài hơn.\nPrice: Trường kiểu DECIMAL(10, 2) để lưu giá sản phẩm với 2 chữ số thập \nphân.\nQuantityInStock: Trường kiểu INT để lưu số lượng sản phẩm trong kho.\nImageURL: Trường kiểu VARCHAR với độ dài tối đa là 255 ký tự, lưu đường dẫn \nURL đến hình ảnh sản phẩm.\nCategoryID: Trường kiểu INT, là khóa ngoại (FOREIGN KEY) liên kết với trường \nID trong bảng “Categories” (nếu bạn đã tạo bảng Categories).\nID: Trường kiểu INT và là khóa chính của bảng.\nCategoryName: Trường kiểu \nVARCHAR\n với độ dài tối đa là 255 ký tự, để lưu trữ \ntên của danh mục sản phẩm.\nTạo bảng Categories:\n Để tạo bảng “\nCategories\n” trong MySQL với các \ntrường đã mô tả, bạn có thể sử dụng câu lệnh \nSQL CREATE TABLE\n như sau:\nLưu ý Trong trường hợp bạn đã tạo bảng “Categories”, bạn có thể liên kết \ntrường CategoryID với trường ID trong bảng “Categories” bằng khóa ngoại \nnhư ở ví dụ trên. Điều này giúp thiết lập mối quan hệ giữa hai bảng dữ liệu.\n∙\n Bảng \n“Categories”\n này sẽ lưu trữ các danh mục sản phẩm với thông tin về \nID và tên danh mục.\n100"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 101,
    "text": "▶\n  \nTrong câu lệnh trên\nID: Trường kiểu INT và là khóa chính của bảng.\nOrderDate: Trường kiểu DATETIME để lưu trữ ngày đặt hàng.\nTotalAmount: Trường kiểu DECIMAL để lưu trữ tổng số tiền của đơn hàng.\nStatus: Trường kiểu VARCHAR với độ dài tối đa là 255 ký tự, để lưu trữ trạng \nthái của đơn hàng.\nTạo bảng Orders:\n Để tạo bảng \n“Orders”\n trong \nMySQL\n với các trường đã mô \ntả, bạn có thể sử dụng câu lệnh \nSQL CREATE TABLE\n như sau:\n∙\n \nUserID:\n Trường kiểu INT và là khóa ngoại liên kết với trường ID trong bảng \nUsers.\nBảng “Orders” này sẽ lưu trữ thông tin về các đơn hàng, bao gồm ngày đặt hàng, \ntổng số tiền, trạng thái và ID của người dùng đặt hàng.\n101"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 102,
    "text": "Tạo bảng OrderDetails:\n Để tạo bảng \n“OrderDetails”\n trong \nMySQL\n với các \ntrường đã mô tả, bạn có thể sử dụng câu lệnh \nSQL CREATE TABLE\n như sau:\nMối Quan Hệ:\nMối quan hệ Một-nhiều giữa Users và Orders (Mỗi người dùng có thể có nhiều \nđơn hàng, nhưng mỗi đơn hàng chỉ thuộc về một người dùng).\nMối quan hệ Một-nhiều giữa Products và OrderDetails (Mỗi sản phẩm có thể \nxuất hiện trong nhiều chi tiết đơn hàng, nhưng mỗi chi tiết đơn hàng chỉ liên \nkết với một sản phẩm).\nMối quan hệ Một-nhiều giữa Categories và Products (Mỗi danh mục có thể \nchứa nhiều sản phẩm, nhưng mỗi sản phẩm chỉ thuộc về một danh mục).\nMối quan hệ Một-nhiều giữa Orders và OrderDetails (Mỗi đơn hàng có thể có \nnhiều chi tiết đơn hàng, nhưng mỗi chi tiết đơn hàng chỉ thuộc \nvề một đơn \nhàng).\n  ▶\n  \nTrong câu lệnh trên\nID: Trường kiểu INT và là khóa chính của bảng.\nOrderID: Trường kiểu INT và là khóa ngoại liên kết với trường ID trong bảng \nOrders, để chỉ định đơn hàng liên quan.\nProductID: Trường kiểu INT và là khóa ngoại liên kết với trường ID trong bảng \nProducts, để chỉ định sản phẩm liên quan.\nQuantity: Trường kiểu INT để lưu trữ số lượng sản phẩm trong đơn hàng.\nPricePerUnit: Trường kiểu DECIMAL để lưu trữ giá của mỗi sản phẩm.\n∙\n Bảng “OrderDetails” này sẽ lưu trữ thông tin chi tiết về các sản phẩm trong \ncác đơn hàng, bao gồm số lượng sản phẩm và giá của mỗi sản phẩm.\n102"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 103,
    "text": "Truy Vấn SQL Để Truy Cập Dữ Liệu\n  ▶\n  \nViết Các Truy Vấn SQL Để Truy Cập Và Cập Nhật Dữ Liệu.\nDưới đây là một số truy vấn SQL thường được sử dụng để truy cập và cập nhật \ndữ liệu trong cơ sở dữ liệu e-commerce đã thiết kế:\nNhớ rằng, việc thiết kế cơ sở dữ liệu là một quá trình linh hoạt và phụ thuộc \nvào yêu cầu cụ thể của dự án của bạn. Lược đồ quan hệ có thể thay đổi dựa \ntrên yêu cầu và quyết định của bạn trong quá trình phát triển dự án.\nLấy Danh Sách Sản Phẩm\nLấy Danh Sách Sản Phẩm trong Một Danh Mục Cụ Thể\nLấy Chi Tiết Đơn Hàng Dựa Trên ID Đơn Hàng\nLấy Danh Sách Đơn Hàng Cho Một Người Dùng Cụ Thể\nMã SQL\nMã SQL\nMã SQL\nMã SQL\n103"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 104,
    "text": "Tìm Sản Phẩm theo Tên hoặc Mô Tả (Sử Dụng Phép Toán LIKE)\nTruy Vấn SQL Để Cập Nhật Dữ Liệu: Cập Nhật Thông Tin Sản Phẩm\nCập Nhật Trạng Thái Đơn Hàng\nThêm Sản Phẩm Mới\nXóa Sản Phẩm hoặc Đơn Hàng\nMã SQL\nMã SQL\nMã SQL\nMã SQL\nMã SQL\n104"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 105,
    "text": "Lưu ý rằng các truy vấn trên đều là ví dụ và phải được điều chỉnh tùy thuộc \nvào cấu trúc cụ thể của cơ sở dữ liệu và yêu cầu của ứng dụng của bạn. Đảm \nbảo rằng bạn kiểm tra dữ liệu đầu vào và xử lý lỗi để ngăn chặn các tấn công \nnhư SQL injection và bảo vệ dữ liệu của bạn khỏi thay đổi không mong muốn.\nXây Dựng Ứng Dụng Web Quản Lý Sản Phẩm:\nSử Dụng Một Framework Angular kết hợp với ngôn ngữ lập trình PHP và \nMySQL sử dụng Xampp, tên cơ sở dữ liệu DB_QuanLySP , Web tích hợp được \nTích Hợp Các Tính Năng Như Định Tuyến, Xử Lý Biểu Mẫu, và Xác Thực Người \nDùng. Ứng dụng có thiết kế cơ sở dữ liệu và đưa ra được giao diện hiện form \nlogin tương tác với người dùng và người dùng đăng nhập xác thực được vào \ntrang web với thông báo: Thành công hoặc Không thành công theo các tiêu \nchí xác thực trên: Tích hợp các tính năng định tuyến, xử lý biểu mẫu, xác thực \nngười dùng.\n5. Bài Tập 5:  Sử Dụng Framework và Thư Viện\n∙\n Xây Dựng Ứng Dụng Web Sử Dụng Một Framework Như React Hoặc Angular \nkết hợp với ngôn ngữ lập trình PHP và MySQL.\n∙\n Tích Hợp Các Tính Năng Như Định Tuyến, Xử Lý Biểu Mẫu, và Xác Thực \nNgười Dùng.\nDưới đây là một ví dụ về cách xây dựng ứng dụng quản lý sản phẩm với\nAngular (frontend), PHP (backend) và MySQL (cơ sở dữ liệu) sử dụng XAMPP , \nvới các chức năng định tuyến, xử lý biểu mẫu và xác thực người dùng. Để bắt \nđầu, bạn cần cài đặt Angular CLI để tạo và quản lý dự án Angular của bạn.\n  ▶\n \n \nPhân tích\n  ▶\n \n \nLời giải\n105"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 106,
    "text": "▶\n  \nBước 1: Thiết Lập Cơ Sở Dữ Liệu\n  \n▶\n  \nBước 2: Thiết Lập Backend với PHP\nDưới đây là một số truy vấn SQL thường được sử dụng để truy cập và cập nhật \ndữ liệu trong cơ sở dữ liệu \ne-commerce\n đã thiết kế:\nTạo một tệp \ndb_config.php\n để kết nối đến cơ sở dữ liệu MySQL.\n  ▶\n  \nKết Nối đến Cơ Sở Dữ Liệu\n106"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 107,
    "text": "Tạo một tệp login.php để xử lý yêu cầu đăng nhập.\nXử Lý Đăng Nhập và Xác Thực Người Dùng\n  ▶\n  \nXử Lý Đăng Nhập và Xác Thực Người Dùng\n107"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 108,
    "text": "▶\n  \nBước 3: Xây Dựng Frontend với Angular\nSử dụng \nAngular CLI\n để tạo một \nservice\n để xử lý xác thực người dùng.\nTrong auth.service.ts, thêm phương thức login để gửi yêu cầu đăng nhập đến \nbackend.\nTrong \nlogin.component.ts\n, sử dụng \nAuthService\n để xử lý đăng nhập và hiển thị \nthông báo tương ứng.\n  ▶\n  \nTạo Một Service cho Xác Thực Người Dùng\n  ▶\n  \nTạo Một Component Cho Đăng Nhập\n108"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 109,
    "text": "Sử dụng \nAngular Router\n để định tuyến giữa các trang của ứng dụng.\n  ▶\n  \nXác Định Định Tuyến\n109"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 110,
    "text": "Trong \nlogin.component.html\n, tạo giao diện cho trang đăng nhập và hiển thị \nthông báo.\nSau khi viết mã nguồn cho các phần chức năng trên, bạn cần chạy ứng dụng \nAngular và PHP . Để chạy ứng dụng Angular, sử dụng lệnh:\nĐiều này sẽ mở trình duyệt và hiển thị ứng dụng trên \nhttp://localhost:4200.\nĐảm bảo rằng \nApache\n và \nMySQL\n đang chạy trên \nXAMPP\n. Bạn có thể truy cập \nứng dụng trên trình duyệt tại \nhttp://localhost\n6. Bài Tập 6: Bảo Mật và Xác Thự\n∙\n Thực Hiện Xác Thực Người Dùng Sử Dụng JSON Web Tokens (JWT).\n∙\n Bảo Vệ Ứng Dụng Web Khỏi Các Tấn Công Thông Qua Việc Kiểm Tra Đầu \nVào Và Sử Dụng Công Nghệ Bảo Mật.\n  ▶\n  \nTạo Giao Diện Đăng Nhập\n  \n▶\n  \nBước 4: Chạy Ứng Dụng\n110"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 111,
    "text": "Để thực hiện xác thực người dùng sử dụng \nJSON Web Tokens (JWT)\n trong ứng \ndụng web của bạn, bạn cần tuân thủ các bước sau:\nTrong phần xử lý đăng nhập của bạn (ví dụ, \nlogin.php\n), sau khi xác thực thành \ncông, bạn sẽ tạo JWT token và trả về cho người dùng\nKhi bạn nhận được token từ phía \nbackend\n, bạn cần lưu trữ nó ở phía \nfrontend\n, \nthường là trong \nlocalStorage\n hoặc \nsessionStorage\n.\nTrong đoạn mã trên, \n$user_id, $username\n, và \n$user_role\n là thông tin của người \ndùng đã đăng nhập. Hãy đảm bảo rằng bạn lưu trữ những thông tin này sau khi \nxác thực.\n  ▶\n  \nTạo JWT Token ở Phía Backend (PHP)\n  ▶\n  \nLưu Trữ JWT Token ở Phía Frontend (JavaScript)\n  \n▶\n  \nTrình Tự Thực Hiện\n111"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 112,
    "text": "Mỗi khi bạn gửi một yêu cầu API từ phía \nfrontend\n, bạn cần đính kèm \ntoken\n \ntrong \nheader\n của yêu cầu.\nTrong mỗi yêu cầu API, phía backend cần xác thực token để đảm bảo rằng yêu \ncầu được thực hiện bởi một người dùng hợp lệ.\n  ▶\n  \nGửi JWT Token với Mỗi Yêu Cầu API\n  ▶\n  \nPhía Backend Xác Thực Token\n112"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 113,
    "text": "Trong đoạn mã trên, \ngetAuthorizationToken\n() là hàm bạn tự định nghĩa để lấy \ngiá trị \ntoken\n từ \nheader\n của yêu cầu. Hãy đảm bảo rằng bạn kiểm tra và xử lý\ntoken\n một cách an toàn để ngăn chặn các tấn công như \nCSRF\n. Bạn cũng cần \nxác định các loại lỗi mà bạn muốn trả về khi \ntoken\n không hợp lệ hoặc đã hết \nhạn.\n  ▶\n  \nBảo Vệ Ứng Dụng Web Khỏi Các Tấn Công Thông Qua Việc Kiểm Tra \nĐầu Vào Và Sử Dụng Công Nghệ Bảo Mật.\nLưu ý: Trong một ứng dụng thực tế, bạn nên sử dụng HTTPS để bảo mật dữ \nliệu được truyền tải giữa frontend và backend, đồng thời cân nhắc về các \nbiện pháp bảo mật bổ sung như CSP (Content Security Policy) và CORS \n(Cross-Origin Resource Sharing).\nKiểm Tra Đầu Vào (Input Validation)\nPHP - Kiểm Tra Định Dạng Email\nJavaScript - Kiểm Tra Số Nguyên Dương\n113"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 114,
    "text": "Bảo Vệ Đối Với SQL Injection\nNgăn Chặn Cross-Site Scripting (XSS) Attacks\nBảo Vệ Đối Với Cross-Site Request Forgery (CSRF) Attacks\nPHP - Sử Dụng Prepared Statements\nPHP - Sử Dụng htmlentities\nPHP - Sử Dụng Tokens\nJavaScript - Sử Dụng innerText hoặc textContent\n114"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 115,
    "text": "Sử Dụng HTTPS\nBảo Vệ Đối Với JSON Injection Attacks\nBảo Vệ Đối Với XML Injection Attacks\nĐảm bảo rằng trang web của bạn sử dụng HTTPS để mã hóa dữ liệu truyền tải \ngiữa trình duyệt và máy chủ.\nNhớ rằng, cách tốt nhất để bảo vệ ứng dụng web của bạn là hiểu rõ về các \nloại tấn công và áp dụng các biện pháp bảo mật phù hợp. Hãy xem xét việc \nsử dụng các thư viện và framework bảo mật, cũng như tham khảo các hướng \ndẫn bảo mật từ các nguồn đáng tin cậy như OWASP .\n115"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 116,
    "text": "Ngôn ngữ sử dụng: PHP & MySQL\nXAMPP\n7. Dự Án Thực Tế: Xây Dựng Ứng Dụng Web\n∙\n Phát Triển Một Ứng Dụng Web Hoàn Chỉnh Từ Ý Tưởng Đến Triển Khai.\n∙\n Tuân Thủ Các Quy Tắc và Thực Hành Tốt Nhất Khi Phát Triển Ứng Dụng Web.\n  ▶\n \n \n7.1. Sử dụng ngôn ngữ lập trình PHP & MySQL\n  ▶\n  \nTên Dự án: Xây dựng website Hệ thống quản lý hàng tồn kho\nPhân tích:\n \nDự án này là Hệ thống quản lý hàng tồn kho. Đây là một dự án ứng \ndụng dựa trên web được phát triển trong Cơ sở dữ liệu \nPHP\n và \nMySQL\n. Mục \ntiêu chính của dự án này là cung cấp cho một số cửa hàng, cửa hàng hoặc bất \nkỳ doanh nghiệp nào một nền tảng trực tuyến để quản lý Hàng tồn kho hoặc \nKho sản phẩm của họ. Ứng dụng giúp doanh nghiệp dễ dàng lưu trữ, truy xuất \nvà theo dõi kho sản phẩm của mình. Nó có giao diện người dùng đơn giản và \ndễ chịu với sự trợ giúp của \nBootstrap 5 Framework\n và \njQuery\n, đồng thời mang \nlại cho người quản lý hoặc người dùng cuối trải nghiệm tốt hơn khi sử dụng \nứng dụng. Dự án này bao gồm các tính năng và chức năng thân thiện với người \ndùng.\nGiới thiệu về Hệ thống quản lý hàng tồn kho. Dự án này được phát triển bằng \ncách sử dụng:\nPHP version >= 7.2 \nMySQL Database \nHTML \nCSS \nJavaScript \njQuery \nAjax \nFont Awesome \nBootstrap 5 Framework\nScore: 12,\n09\n8\nTime 3:0\n0\n116"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 117,
    "text": "Home/Inventory List\nCustomer Management\nCategory Management\nBrand Management\n  ▶\n \n \n7.2. Bảng dữ liệu\n  ▶\n \n \n7.3. Phân tích các thực thể\nAdd New Customer\nList All Customers\nEdit/Update Customer Details\nDelete Customer\nAdd New Category\nList All Categories\nEdit/Update Category Details\nDelete Category\nAdd New Brand\nList All Brands\nEdit/Update Brand Details\nDelete Brand\nDự án Hệ thống quản lý hàng tồn kho đơn giản này chỉ có quản trị viên cửa \nhàng mới có thể truy cập được. Nó yêu cầu thông tin xác thực của người dùng \nhệ thống quản trị viên để có quyền truy cập vào các tính năng và chức năng. \nNgười quản trị có thể quản lý danh sách.\nCustomers, Categories, Brands, Suppliers, Products, Purchases\n, and \nOrders\n \nMỗi đặc điểm này chứa \nCRUD\n (Create, Read, Update, and Delete) hoạt \nđộng hoặc chức năng. Hệ thống tự động tính toán lượng tồn kho sẵn có của \ntừng sản phẩm.\n \nDanh sách dự án được phát triển bằng cách sử dụng \nPHP\n and \nMySQL\n \nDatabase\n. Mỗi Danh sách trên ứng dụng này được hiển thị bằng cách sử dụng \nBootstrap DataTables\n. Dữ liệu đang được tải bằng cách sử dụng\nAjax Requests\n. Mỗi chức năng xóa đều có một tính năng xác nhận nhằm ngăn \nngười dùng vô tình xóa dữ liệu. Các mẫu đơn đăng ký cho từng quy trình được \nhiển thị bằng cách sử dụng \nBootstrap Modal\n.\n117"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 118,
    "text": "Supplier Management\nProduct Management\nPurchase Management\nOrder Management\nPurchase Management\nAdd New Supplier\nList All Suppliers\nEdit/Update Supplier Details\nDelete Supplier\nAdd New Product\nList All Products\nEdit/Update Product Details\nView Product Details\nDelete Product\nAdd New Purchase\nList All Purchases\nEdit/Update Purchase Details\nDelete Purchase\nAdd New Order\nList All Orders\nEdit/Update Order Details\nDelete Order\nAdd New Purchase\nList All Purchases\nEdit/Update Purchase Details\nDelete Purchase\nLogin and Logout\nBảng Customer\nThiết kế bảng cơ sở dữ liệu\n118"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 119,
    "text": "Bảng user\nBảng Purchase\nBảng Brand\n119"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 120,
    "text": "Bảng Category\nBảng Order\nBảng Supplier\nBảng Supplier\n120"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 121,
    "text": "Bảng Cơ sở dữ liệu\n121"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 122,
    "text": "File: Style.CSS\n  ▶\n \n \n7.4. Phân tích code trong chương trình\n  ▶\n  \nGiải thích, phân tích code chi tiết\nhtml, body\n \n{ height: 100% !important; width: 100% !important; }:\nfooter { ... }\n∙\n Đoạn mã này áp dụng cho phần tử html và body trong tài liệu HTML.\n∙\n Nó đặt chiều cao và chiều rộng của html và body lên 100%. !important là\n  một trình tự ưu tiên trong CSS, nó có ý nghĩa rằng quy tắc này sẽ ghi đè lên\n  bất kỳ quy tắc nào khác được định nghĩa trước đó. Trong trường hợp này, nó\n  đảm bảo rằng chiều cao và chiều rộng của html và body đều sẽ bằng 100%\n  của chiều cao và chiều rộng của khung trình duyệt.\n∙\n Đoạn mã này áp dụng cho phần tử có lớp (class) là “footer”.\n∙\n Nó định dạng phần footer của trang web.\n∙\n position: absolute; đặt phần footer ở vị trí tương đối với phần tử gốc (thường \nlà body hoặc một phần tử cha). Nó sẽ được đặt ở cuối trang.\n∙\n bottom: 0; đặt phần footer ở phía dưới của phần tử gốc (thường là body). Nó \nsẽ được dán vào phía dưới của trang.\n∙\n width: 100%; đảm bảo rằng phần footer sẽ chiếm toàn bộ chiều rộng\ncủa trang.\n122"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 123,
    "text": "File: Member.CSS\n∙\n height: 60px; đặt chiều cao của phần footer là 60px. \n∙\n background-color: #C6E2FF; đặt màu nền cho phần footer là #C6E2FF \n(màu xanh nhạt).\n∙\n padding-top: 15px; đặt khoảng cách đệm phía trên của phần footer là 15px.\n123"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 124,
    "text": "124"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 125,
    "text": "125"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 126,
    "text": "126"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 127,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\nfooter { ... }\n<!DOCTYPE html>:\n Định nghĩa phiên bản HTML được sử dụng trong tài liệu.\n<html lang=”en”>:\n Bắt đầu của tài liệu HTML, với thuộc tính lang xác định ngôn \nngữ của trang web là tiếng Anh (English).\n<head>:\n Phần chứa các meta tags, tiêu đề trang, và các liên kết CSS và các tập \ntin khác.\n<meta charset=”UTF-8”>:\n Xác định encoding (bộ ký tự) cho tài liệu là UTF-8.\n<meta name=”viewport” content=”width=device-width, initial-scale=1.0”>:\n \nThiết lập thuộc tính viewport để tự động điều chỉnh kích thước trang web cho \ncác thiết bị di động.\n<title>Đăng ký người dùng</title>:\n Đặt tiêu đề của trang web.\n<link rel=”icon” href=”../dp.png”>:\n Liên kết đến biểu tượng (favicon) của trang \nweb.\n<link href=”https://fonts.googleapis.com/css2?family=Mitr&display=swap” \nrel=”stylesheet”>:\n Liên kết đến một font chữ từ Google Fonts.\n<body>:\n Phần chứa nội dung hiển thị trên trang web.\n.container\n: Một div với lớp container chứa toàn bộ nội dung trang web.\n<form action=”register.php” method=”post”>:\n Một biểu mẫu HTML với các \ntrường nhập liệu và nút đăng ký.\n127"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 128,
    "text": "Link “Bạn đã có tài khoản? Vùi lòng tiếp tục đăng nhập” dẫn đến trang đăng \nnhập.\n.footer:\n Một phần chứa thông tin chân trang, được đặt ở cuối trang.\nPhần CSS:\nbody:\n Thiết lập font chữ và màu nền cho toàn bộ trang.\n.container:\n Thiết lập kích thước, màu nền, góc bo và lề của phần container.\nh1:\n Thiết lập căn giữa cho tiêu đề h1.\n.form-group:\n Thiết lập lề và đệm cho các trường nhập liệu.\ninput[type=”text”] và input[type=”password”]:\n Thiết lập giao diện của các \ntrường nhập liệu với viền, góc bo và đệm.\nbutton[type=”submit”] và .returnlogin:\n Thiết lập giao diện của nút Đăng ký và \nnút Đăng nhập, kèm hiệu ứng hover khi di chuột qua.\n.footer:\n Thiết lập giao diện cho phần chân trang với vị trí tuyệt đối ở dưới cùng, \nmàu nền, màu chữ và căn chỉnh văn bản sang phải.\nFile: Brand.PHP\n128"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 129,
    "text": "129"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 130,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n <?php ob_start(); session_start(); ?>: Đây là các mã PHP để bắt đầu một \nphiên làm việc và bật bộ đệm (output buffering) để tránh in ra nội dung ngẫu \nnhiên trước khi trang được hiển thị.\n∙\n include(‘inc/header.php’);: Đoạn mã này nạp file header.php, có thể chứa \nmã HTML và CSS chung cho trang web.\n∙\n include ‘Inventory.php’;: Nạp file Inventory.php, mà có thể chứa các lớp và \nchức năng liên quan đến quản lý dữ liệu.\n∙\n $inventory = new Inventory();: Tạo một thể hiện của lớp Inventory.\n∙\n $inventory->checkLogin();: Gọi phương thức checkLogin() từ đối tượng\n$inventory, có thể dùng để kiểm tra xem người dùng đã đăng nhập hay chưa.\n∙\n include(‘inc/footer.php’);: Nạp file footer.php, có thể chứa phần cuối cùng \ncủa trang web, chẳng hạn như chân trang.\n∙\n Các đoạn mã JavaScript và CSS được nạp bằng cách sử dụng các thẻ \n<script> và <link>.\n∙\n <?php include(‘inc/container.php’); ?>: Nạp một phần container chung của \ntrang web. Thường là một phần dành cho nội dung chính của trang.\n130"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 131,
    "text": "▶\n  \nFile: Category.php\n∙\n Đoạn mã HTML bên dưới này xây dựng giao diện danh sách thể loại:\n   + Có một tiêu đề “Danh sách thể loại”.\n   +\n \nCó một nút “Thêm mới” để thêm thể loại mới.\n   + Sử dụng một bảng (<table>) để hiển thị danh sách thể loại với các cột như \nID, Loại, Tên thể loại, Trạng thái và Hành động.\n∙\n Sử dụng một bảng (<table>) để hiển thị danh sách thể loại với các cột như \nID, Loại, Tên thể loại, Trạng thái và Hành động.\n∙\n <?php include(“menus.php”); ?>: Nạp file menus.php, có thể chứa menu \nhoặc liên kết đến các trang khác.\nCuối cùng, có một modal (cửa sổ pop-up) để thêm hoặc sửa thông tin thể \nloại. Modal này có các trường nhập liệu như ID, Loại, Tên thể loại và một nút \n“Thêm” để thêm thể loại mới.\n131"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 132,
    "text": "132"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 133,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\nFile: Brand.PHP\n133"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 134,
    "text": "134"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 135,
    "text": "135"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 136,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n <?php ob_start(); session_start(); ?>: Đoạn mã này bắt đầu một phiên làm \nviệc và bật bộ đệm (output buffering) để tránh in ra nội dung ngẫu nhiên trước \nkhi trang được hiển thị.\n∙\n include(‘inc/header.php’);: Nạp file header.php, có thể chứa mã HTML và \nCSS chung cho trang web.\n∙\n include ‘Inventory.php’;: Nạp file Inventory.php, có thể chứa các lớp và chức \nnăng liên quan đến quản lý dữ liệu.\n∙\n $inventory = new Inventory();: Tạo một thể hiện của lớp Inventory.\n∙\n $inventory->checkLogin();: Gọi phương thức checkLogin() từ đối tượng\n$inventory, có thể được sử dụng để kiểm tra xem người dùng đã đăng nhập hay \nchưa.\n∙\n include(‘inc/footer.php’);: Nạp file footer.php, có thể chứa phần cuối cùng \ncủa trang web, chẳng hạn như chân trang.\n∙\n Các đoạn mã JavaScript và CSS được nạp bằng cách sử dụng các thẻ \n<script> và <link>.\n∙\n <?php include(‘inc/container.php’); ?>: Nạp một phần container chung của \ntrang web. Thường là một phần dành cho nội dung chính của trang.\nĐoạn mã PHP và HTML trên tạo ra một trang quản lý danh sách khách hàng. \nDưới đây là giải thích từng phần của mã:\n∙\n Đoạn mã HTML dưới đây xây dựng giao diện danh sách khách hàng:\n   + Có một tiêu đề “Danh sách khách hàng”.\n   +\n \nCó một nút “Thêm mới” để thêm thông tin khách hàng mới. Nút này kích \nhoạt modal (cửa sổ pop-up) để nhập thông tin khách hàng mới.\n   + Sử dụng một bảng (<table>) để hiển thị danh sách khách hàng với các cột \nnhư ID, Họ và tên, Địa chỉ, Số điện thoại, Số tiền và Hành động.\n∙\n Modal (<div id=”customerModal” class=”modal”>) được sử dụng để thêm \nhoặc sửa thông tin khách hàng:\n∙\n Có các trường nhập liệu để nhập Họ và tên, Số điện thoại, Số tiền và Địa chỉ.\n∙\n Nút “Lưu lại” để thực hiện thêm mới hoặc cập nhật thông tin khách hàng,\nvà nút “Đóng” để đóng cửa sổ modal.\n136"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 137,
    "text": "File Index.PHP\n137"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 138,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \n<?php ob_start(); session_start(); ?>:\n Đoạn mã này bắt đầu một phiên làm \nviệc và bật bộ đệm (output buffering) để tránh in ra nội dung ngẫu nhiên trước \nkhi trang được hiển thị.\n∙\n \ninclude(‘inc/header.php’);:\n Nạp file header.php, có thể chứa mã HTML và \nCSS chung cho trang web.\n∙\n \ninclude ‘Inventory.php’;:\n Nạp file Inventory.php, có thể chứa các lớp và chức \nnăng liên quan đến quản lý dữ liệu.\n∙\n \n$inventory = new Inventory();:\n Tạo một thể hiện của lớp Inventory.\n∙\n \n$inventory->checkLogin();:\n Gọi phương thức checkLogin() từ đối tượng\n$inventory, có thể được sử dụng để kiểm tra xem người dùng đã đăng nhập hay \nchưa.\n∙\n \ninclude(‘inc/footer.php’);:\n Nạp file footer.php, có thể chứa phần cuối cùng \ncủa trang web, chẳng hạn như chân trang.\n∙\n Các đoạn mã JavaScript và CSS được nạp bằng cách sử dụng các thẻ \n<script> và <link>.\n∙\n \n<?php include(‘inc/container.php’); ?>:\n Nạp một phần container chung của \ntrang web. Thường là một phần dành cho nội dung chính của trang.\n∙\n Đoạn mã HTML dưới đây xây dựng giao diện danh \nsách hàng tồn kho:\n   + Có một tiêu đề “Hàng tồn kho”.\n   +\n \nCó một nút “Thêm mới” để thêm thông tin khách \nhàng mới. Nút này kích \nhoạt modal (cửa sổ pop-up) để \nnhập thông tin khách hàng mới.\n   + Sử dụng một bảng (<table>) để hiển thị danh sách \nhàng tồn kho với các cột \nnhư STT, Mã sản phẩm, Bắt \nđầu tồn kho, Hàng tồn kho nhận, Hàng tồn kho đã vận \nchuyển, Tổng số hàng.\n∙\n Không có modal hay nút thêm mới hoặc sửa thông \ntin ở đây, vì trang này chỉ \nhiển thị thông tin hàng tồn kho.\n138"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 139,
    "text": "File login.PHP\n139"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 140,
    "text": "140"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 141,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \n<?php ob_start(); session_start(); ?>:\n Đoạn mã này bắt đầu một phiên làm \nviệc và bật bộ đệm (output buffering) để tránh in ra nội dung ngẫu nhiên trước \nkhi trang được hiển thị.\n∙\n \ninclude(‘inc/header.php’);:\n Nạp file header.php, có thể chứa mã HTML và \nCSS chung cho trang web.\n∙\n \nif (!empty($_POST[‘email’]) && !empty($_POST[‘pwd’])) { ... }:\n Kiểm tra xem \nngười dùng đã gửi thông tin đăng nhập chưa. Nếu đã gửi, mã trong khối này sẽ \nđược thực thi.\n∙\n \ninclude ‘Inventory.php’;:\n Nạp file Inventory.php, có thể chứa các lớp và chức \nnăng liên quan đến quản lý dữ liệu.\n∙\n \n$inventory = new Inventory();:\n Tạo một thể hiện của lớp Inventory.\n∙\n \n$login = $inventory->login($_POST[‘email’], $_POST[‘pwd’]);:\n Gọi phương \nthức login() từ đối tượng $inventory để kiểm tra thông tin đăng nhập người dùng \nnhập vào.\n∙\n \nif(!empty($login)) { ... } else { ... }:\n Kiểm tra xem thông tin đăng nhập hợp lệ \nhay không. Nếu hợp lệ, lưu thông tin người dùng vào phiên làm việc và chuyển \nhướng người dùng đến trang chính (index.php). Nếu không hợp lệ, hiển thị \nthông báo lỗi.\n∙\n \ninclude(‘inc/footer.php’);:\n Nạp file footer.php, có thể chứa phần cuối cùng \ncủa trang web, chẳng hạn như chân trang.\n∙\n \n<?php include(‘inc/container.php’); ?>:\n Nạp một phần container chung của \ntrang web. Thường là một phần dành cho nội dung chính của trang.\n∙\n Phần HTML dưới đây xây dựng giao diện đăng nhập:\n    + Tiêu đề “HỆ THỐNG QUẢN LÝ HÀNG TỒN KHO”.\n   +\n \nMột biểu mẫu (<form>) cho việc nhập thông tin đăng nhập, bao gồm ô \nnhập email và mật khẩu.\n   + Khi người dùng nhấn nút “Đăng nhập”, thông tin đăng nhập sẽ được gửi \nđến chính trang này (action=””), và kết quả đăng nhập sẽ được xử lý bởi các mã \nPHP ở trên.\n141"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 142,
    "text": "+ Nếu có lỗi đăng nhập, thông báo lỗi sẽ được hiển thị. Người dùng có thể \nnhấn vào liên kết “Đăng ký” để chuyển hướng đến trang đăng ký thành viên \n(member.html).\nFile login.PHP\n142"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 143,
    "text": "143"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 144,
    "text": "144"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 145,
    "text": "File menus.php\n145"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 146,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n <nav class=”navbar navbar-dark bg-dark bg-gradient navbar-expand-lg \nnavbar-expand-md my-3”>: Đây là phần bắt đầu của thanh điều hướng. Nó sử \ndụng các lớp CSS để thiết lập màu nền đậm (dark) và hiệu ứng gradient màu \nnền (bg-gradient). Navbar này sẽ mở rộng khi kích thước màn hình lớn hơn hoặc \nbằng medium (md) và chứa một khoảng cách lề (my-3).\n∙\n <div class=”container-fluid”>: Đây là một container linh hoạt, điều chỉnh kích \nthước của nội dung navbar để phản ánh với kích thước của màn hình.\n146"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 147,
    "text": "∙\n \nNút Toggle Navbar (navbar-toggler):\n    + <button class=”navbar-toggler” type=”button” data-bs-toggle=”collapse” \ndata-bs-target=”#navbarNav” aria-controls=”navbarNav” aria-expanded=”\n-\nfalse” aria-label=”Toggle navigation”>: Đây là nút toggle (nút mở rộng) được sử \ndụng để mở và đóng các mục menu khi trang web được xem trên các thiết bị có \nmàn hình nhỏ hoặc điện thoại di động.\n∙\n \nNút Toggle Navbar (navbar-toggler):\n    + <button class=”navbar-toggler” type=”button” data-bs-toggle=”collapse” \ndata-bs-target=”#navbarNav” aria-controls=”navbarNav” aria-expanded=\n”false” aria-label=”Toggle navigation”>: Đây là nút toggle (nút mở rộng) được sử \ndụng để mở và đóng các mục menu khi trang web được xem trên các thiết bị có \nmàn hình nhỏ hoặc điện thoại di động.\n∙\n \nDropdown Menu (dropdown-menu):\n    + <li class=”dropdown position-relative”>: Đây là một mục menu dropdown \nchứa các tùy chọn liên quan đến người dùng hiện đang đăng nhập.\n   + <button type=”button” class=”badge bg-light border px-3 text-dark\nround\ned-pill dropdown-toggle” id=”dropdownMenuButton1” data-bs-toggle=”\ndropdown” aria-expanded=”false”>...: Nút dropdown hiển thị tên người dùng và \nmột số thông báo (được thể hiện bằng số lượng item trong giỏ hàng hoặc thông \nbáo khác).\n   + <ul class=”dropdown-menu” aria-labelledby=”dropdownMenuButton1”>: \nDanh sách các tùy chọn trong menu dropdown, trong trường hợp này chỉ có tùy \nchọn “Logout”.\n∙\n \nMục Menu (nav-items):\n    + <div class=”collapse navbar-collapse” id=”navbarNav”>: Phần này chứa \ndanh sách các mục menu navbar.\n+ Các mục menu được liệt kê dưới dạng danh sách không sắp xếp (<ul>) với \ncác mục (<li>) chứa các liên kết (<a>) đến các trang khác của trang web.\n147"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 148,
    "text": "File order.php\n148"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 149,
    "text": "149"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 150,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nBắt đầu phiên làm việc PHP và include các file cần thiết:\n     + ob_start(); và session_start();: Bắt đầu một buffer đầu ra và một phiên \nlàm việc session.\n    + include(‘inc/header.php’);: Include file header.php, chứa nội dung của \nphần đầu của trang web.\n       + include ‘Inventory.php’;: Include file chứa class Inventory, định nghĩa các \nphương thức để tương tác với cơ sở dữ liệu và xử lý logic của hệ thống.\n∙\n \nBắt đầu phiên làm việc PHP và include các file cần thiết:\n     + include(‘inc/footer.php’);: Include file footer.php, chứa nội dung phần cuối \ntrang web.\n    + Các dòng script và link CSS được sử dụng để include các thư viện và tệp \ntin cần thiết để làm việc với DataTables và xử lý logic của trang.\n∙\n \nDiv container chính:\n  Đây là container chính của trang web, bao gồm toàn \nbộ nội dung trang.\n∙\n \nInclude file menus.php:\n Include file menus.php, chứa thanh điều hướng \n(navbar) của trang web.\n∙\n \nDiv row và card cho quản lý đơn hàng:\n Trong div này, hiển thị danh sách đơn \nhàng trong một card có nút thêm mới.\n∙\n \nModal cho thêm mới đơn hàng:\n Modal này sẽ xuất hiện khi người dùng \nmuốn thêm mới một đơn hàng. Nó chứa một form để nhập thông tin cho đơn \nhàng mới, bao gồm sản phẩm, tổng số mặt hàng và khách hàng.\n150"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 151,
    "text": "∙\n \nFile Product.php:\n151"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 152,
    "text": "152"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 153,
    "text": "153"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 154,
    "text": "154"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 155,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nBắt đầu phiên làm việc PHP và include các file cần thiết:\n     + ob_start(); và session_start();: Bắt đầu một buffer đầu ra và một phiên \nlàm việc session.\n    + include(‘inc/header.php’);: Include file header.php, chứa nội dung của \nphần đầu của trang web.\n       + include ‘Inventory.php’;: Include file chứa class Inventory, định nghĩa các \nphương thức để tương tác với cơ sở dữ liệu và xử lý logic của hệ thống.\n∙\n \nInclude các file và script cần thiết:\n     + include(‘inc/footer.php’);: Include file footer.php, chứa nội dung phần cuối \ntrang web.\n    + Các dòng script và link CSS được sử dụng để include các thư viện và tệp \ntin cần thiết để làm việc với DataTables và xử lý logic của trang.\n∙\n \nDiv container chính:\n  Đây là container chính của trang web, bao gồm toàn \nbộ nội dung trang.\n∙\n \nInclude file menus.php:\n Include file menus.php, chứa thanh điều hướng \n(navbar) của trang web.\n∙\n \nDiv row và card cho quản lý sản phẩm:\n  Trong div này, hiển thị danh sách sản \nphẩm trong một card có nút thêm mới.\n∙\n \nModal cho thêm mới sản phẩm:\n Modal này sẽ xuất hiện khi người dùng \nmuốn thêm mới một sản phẩm. Nó chứa một form để nhập thông tin cho sản \nphẩm mới.\n∙\n \nModal để xem chi tiết sản phẩm:\n Modal này sẽ xuất hiện khi người dùng \nmuốn xem chi tiết về một sản phẩm. Nó chứa một nơi để hiển thị thông tin chi \ntiết của sản phẩm.\n155"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 156,
    "text": "∙\n \nFile Purchase.php:\n156"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 157,
    "text": "157"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 158,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nBắt đầu phiên làm việc PHP và include các file cần thiết:\n     + ob_start(); và session_start();: Bắt đầu một buffer đầu ra và một phiên \nlàm việc session.\n    + include(‘inc/header.php’);: Include file header.php, chứa nội dung của \nphần đầu của trang web.\n       + include ‘Inventory.php’;: Include file chứa class Inventory, định nghĩa các \nphương thức để tương tác với cơ sở dữ liệu và xử lý logic của hệ thống.\n∙\n \nInclude các file và script cần thiết:\n     + include(‘inc/footer.php’);: Include file footer.php, chứa nội dung phần cuối \ntrang web.\n    + Các dòng script và link CSS được sử dụng để include các thư viện và tệp \ntin cần thiết để làm việc với DataTables và xử lý logic của trang.\n∙\n \nDiv container chính:\n  Đây là container chính của trang web, bao gồm toàn \nbộ nội dung trang.\n∙\n \nInclude file menus.php:\n Include file menus.php, chứa thanh điều hướng \n(navbar) của trang web.\n∙\n \nDiv row và card cho quản lý mua hàng:\n  Trong div này, hiển thị danh sách đơn \nmua hàng trong một card có nút thêm mới.\n158"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 159,
    "text": "∙\n \nModal cho thêm mới đơn mua hàng:\n  Modal này sẽ xuất hiện khi người dùng \nmuốn thêm mới một đơn mua hàng. Nó chứa một form để nhập thông tin cho \nđơn mua hàng mới.\n∙\n \nFile Register.php:\n159"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 160,
    "text": "160"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 161,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nBắt đầu phiên làm việc PHP và include file header:\n     + ob_start(); và session_start();: Bắt đầu một buffer đầu ra và một phiên \nlàm việc session.\n    + include(‘inc/header.php’);: Include file header.php, chứa nội dung của \nphần đầu của trang web.\n∙\n \nThực hiện truy vấn SQL để thêm dữ liệu mới:\n     + Chuẩn bị truy vấn SQL để thêm dữ liệu vào bảng ims_user.\n    + Nếu truy vấn thực hiện thành công, hiển thị thông báo “Đăng ký thành \ncông!” và kết thúc chương trình.\n+Nếu có lỗi, hiển thị thông báo lỗi.\n∙\n \nInclude file footer và đóng thẻ HTML:\n     + include(‘inc/footer.php’);: Include file footer.php, chứa nội dung phần cuối \ntrang web.\n    + Đóng thẻ HTML\n.\n∙\n \nForm đăng ký trong phần body của trang:\n \nForm này có các trường input \ncho email, password, name và một select để chọn loại người dùng (user hoặc \nadmin).\n∙\n \nKiểm tra nếu có dữ liệu được submit từ form đăng ký:\n \nDùng $_SERVER\n[“REQUEST_METHOD”] để kiểm tra xem form đã được submit chưa.\n∙\n \nLấy thông tin từ form và kết nối đến cơ sở dữ liệu:\n \nLấy thông tin từ các trường \ninput trong form và kết nối đến cơ sở dữ liệu MySQL.\n161"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 162,
    "text": "∙\n \nFile  Supplier.php:\n162"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 163,
    "text": "163"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 164,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nBắt đầu phiên làm việc PHP và include file header:\n     + ob_start(); và session_start();: Bắt đầu một buffer đầu ra và một phiên \nlàm việc session.\n    + include(‘inc/header.php’);: Include file header.php, chứa nội dung của \nphần đầu của trang web.\n∙\n \nKiểm tra đăng nhập và include file Inventory:\n     + include ‘Inventory.php’;: Include file Inventory.php, chứa các chức năng và \nlớp cần thiết cho quản lý kho.\n    + $inventory = new Inventory();: Tạo một đối tượng từ lớp Inventory để sử \ndụng các chức năng của nó.\n + $inventory->checkLogin();: Kiểm tra đăng nhập, chuyển hướng người dùng \nnếu họ chưa đăng nhập.\n∙\n \nInclude file footer và khai báo script và stylesheet:\n     + include(‘inc/footer.php’);: Include file footer.php, chứa nội dung phần cuối \ntrang web.\n    + Đường link và script để sử dụng DataTables (thư viện JavaScript cho bảng \ndữ liệu) và các script khác liên quan đến quản lý nhà cung cấp.\n∙\n \nInclude menu và tạo khối danh sách nhà cung cấp:\n     + <?php include(“menus.php”); ?>: Include menu từ file menus.php.\n     + Tạo một block div với class row và một col-lg-12 để chứa nội dung danh \nsách nhà cung cấp.\n∙\n \nCard danh sách nhà cung cấp:\n     + card card-default rounded-0 shadow: Định dạng card với các hiệu ứng bo \ntròn và đổ bóng.\n     + Phần header chứa tiêu đề và nút thêm mới\n.\n     \n+ Phần body chứa bảng danh sách nhà cung cấp\n.\n∙\n \nContainer chứa nội dung trang web:\n \nBắt đầu một container để chứa nội \ndung trang web.\n164"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 165,
    "text": "∙\n \nBảng danh sách nhà cung cấp:\n  Bảng sử dụng DataTables và có các cột như \nID, Họ tên, Số điện thoại, Địa chỉ, Trạng thái và Hành động.\n∙\n \nInclude file menus.php:\n Bảng sử dụng DataTables và có các cột như ID, Họ \ntên, Số điện thoại, Địa chỉ, Trạng thái và Hành động.\n∙\n \nModal thêm mới nhà cung cấp:\n  Modal sử dụng để thêm mới nhà cung cấp \nvới các trường như Tên nhà cung cấp, Số điện thoại, Địa chỉ.\n∙\n \nKết thúc container và include file footer:\n  Đóng container và include file\nfooter.php.\n∙\n \nPhân tích các file . js:\n∙\n \nFile Brand.js:\n165"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 166,
    "text": "166"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 167,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nXử lý sự kiện khi nút “Add Brand” được click :\n     + ob_start(); và session_start();: Bắt đầu một buffer đầu ra và một phiên \nlàm việc session.\n    + include(‘inc/header.php’);: Include file header.php, chứa nội dung của \nphần đầu của trang web.\n∙\n \nKhởi tạo DataTable cho danh sách thương hiệu:\n     + DataTable được khởi tạo trên bảng có id là “brandList” để hiển thị danh \nsách thương hiệu.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v.\n∙\n \nXử lý sự kiện khi form “brandForm” được submit:\n     + Khi form có id “brandForm” được submit, sự kiện submit được ngăn chặn \nđể tránh chuyển hướng trang.\n    + Nút action được tạm thời vô hiệu hóa để tránh gửi nhiều yêu cầu cùng một \nlúc.\n    \n+ Dữ liệu từ form được gửi đến server qua Ajax để thêm/sửa thương hiệu.\n∙\n \nXử lý sự kiện khi nút “update” được click:\n     + Khi nút có class “update” được click, một yêu cầu Ajax được gửi đến\nserver để lấy thông tin về thương hiệu cần chỉnh sửa.\n    + Modal hiển thị thông tin thương hiệu cho phép người dùng \nchỉnh sửa\n.\n∙\n \nXử lý sự kiện khi nút “update” được click:\n     + Khi nút có class “update” được click, một yêu cầu Ajax được gửi đến\nserver để lấy thông tin về thương hiệu cần chỉnh sửa.\n    + Modal hiển thị thông tin thương hiệu cho phép người dùng \nchỉnh sửa\n.\n∙\n \nXử lý sự kiện khi nút “Add Brand” được click:\n  Khi nút có id “addBrand” được \nclick, modal hiển thị, các trường trong form được reset, tiêu đề modal được cập \nnhật, giá trị của các input và nút action được đặt cho việc thêm mới thương hiệu.\n167"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 168,
    "text": "∙\n \nInclude menu và tạo khối danh sách nhà cung cấp:\n     + <?php include(“menus.php”); ?>: Include menu từ file menus.php.\n     + Tạo một block div với class row và một col-lg-12 để chứa nội dung danh \nsách nhà cung cấp.\n∙\n \nXử lý sự kiện khi nút “delete” được click:\n     + Khi nút có class “delete” được click, xác nhận xóa thương hiệu và sau đó \ngửi yêu cầu Ajax đến server để xóa thương hiệu.\n     + DataTable được làm mới sau khi thương hiệu được xóa\n.\n∙\n \nFile: Category.js:\n168"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 169,
    "text": "169"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 170,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nKhởi tạo DataTable cho danh sách danh mục sản phẩm:\n     + DataTable được khởi tạo trên bảng có id là “categoryList” để hiển thị danh \nsách danh mục sản phẩm.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v..\n∙\n \nKhởi tạo DataTable cho danh sách thương hiệu:\n     + DataTable được khởi tạo trên bảng có id là “brandList” để hiển thị danh \nsách thương hiệu.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v.\n∙\n \nXử lý sự kiện khi form “categoryForm” được submit:\n     + Khi form có id “categoryForm” được submit, sự kiện submit được ngăn \nchặn để tránh chuyển hướng trang.\n    + Nút action được tạm thời vô hiệu hóa để tránh gửi nhiều yêu cầu cùng một \nlúc.\n    \n+ Dữ liệu từ form được gửi đến server qua Ajax để thêm/sửa danh mục sản \nphẩm.\n∙\n \nXử lý sự kiện khi form “categoryForm” được submit:\n     + Khi nút có class “update” được click, một yêu cầu Ajax được gửi đến\nserver để lấy thông tin về danh mục cần chỉnh sửa.\n    + Modal hiển thị thông tin danh mục cho phép người dùng chỉ\nnh sửa\n.\n∙\n \nXử lý sự kiện khi nút “Add Category” được click:\n  Khi nút có id “categoryAdd” \nđược click, modal được reset và hiển thị để thêm mới một danh mục sản phẩm. \nCác giá trị của form và nút action được cập nhật để phản ánh hành động thêm \nmới danh mục.\n170"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 171,
    "text": "∙\n \nXử lý sự kiện khi nút “delete” được click:\n     + Khi nút có class “delete” được click, xác nhận xóa danh mục và sau đó gửi \nyêu cầu Ajax đến server để xóa danh mục.\n    + DataTable được làm mới sau khi danh mục được xóa\n.\n∙\n \nFile common.js:\n171"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 172,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nXác định trang hiện tại và thay đổi màu của liên kết trên thanh điều hướng\n:\n     + Đoạn này lấy đường dẫn của trang hiện tại và xác định tên trang bằng cách \nloại bỏ phần mở rộng và các dấu gạch chéo.\n    + Tìm thẻ a có id tương ứng với trang hiện tại và thay đổi màu chữ của nó \nthành trắng (#FFF).\n∙\n \nKhởi tạo DataTable cho chi tiết kho hàng (#inventoryDetails):\n     + DataTable được khởi tạo trên bảng có id là “inventoryDetails” để hiển thị \nchi tiết kho hàng.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v.  \n+ Sử dụng rowCallback để thực hiện một số xử lý đặc biệt cho từng dòng\ncủa DataTable. Đoạn mã này thêm class và xác định màu chữ cho các ô dữ \nliệu dựa trên giá trị của chúng.\n+ rowCallback được sử dụng để thực hiện một số thay đổi cho mỗi dòng của \nDataTable.\n+ Các ô dữ liệu được thêm class để \ncăn giữa và thêm class text-end cho \nviệc căn phải.\n+ Ô dữ liệu ở cột đầu tiên (td:eq(0)) \nđược chuyển từ căn phải sang căn giữa.\n+ Màu chữ của ô dữ liệu ở cột thứ 6 \n(td:eq(5)) được xác định dựa trên giá trị \ncủa nó. Nếu giá trị là âm, màu chữ là đỏ, \nngược lại là màu xanh lá cây. Thêm chữ \nin đậm để làm nổi bật.\n+ Số lượng hàng được hiển thị trên \nmỗi trang của DataTable là 10.\n172"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 173,
    "text": "∙\n \nFile Customer.js:\n173"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 174,
    "text": "174"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 175,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nThêm khách hàng mới khi nút “Add Customer” được click\n:\n     + Khi nút có id là “addCustomer” được click, modal chứa form thông tin \nkhách hàng (“customerModal”) sẽ hiển thị.\n    + Nội dung của form sẽ được đặt lại (reset) và tiêu đề modal sẽ được thiết \nlập là “Add Customer”.\n∙\n \nKhởi tạo DataTable cho danh sách khách hàng (“customerList”):\n     + DataTable được khởi tạo trên bảng có id là “customerList” để hiển thị danh \nsách khách hàng.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v.  \n+ Sử dụng columnDefs để thiết lập các thuộc tính của cột, trong trường hợp \nnày là không cho phép sắp xếp cột có index là 0 và 5.\n+ Sử dụng rowCallback để thực hiện một số thay đổi cho từng dòng của DataT\n-\nable.\n+ Các ô dữ liệu được thêm class để căn giữa (align-middle), và một số class \ntext-center và text-end được thêm vào ô cụ thể.\n+ Dòng này thêm class và định dạng màu chữ dựa trên giá trị của cột thứ 5 \n(balance). Nếu balance âm, màu chữ là đỏ, ngược lại là màu xanh lá cây.\n∙\n \nXử lý sự kiện khi form khách hàng \nđược submit:\n     + Khi form có id là “customerForm” \nđược submit, sự kiện này sẽ được ngăn \nchặn (preventDefault).\n    + Dữ liệu của form sẽ được serialize \nvà gửi đi thông qua Ajax để xử lý bằng \ncách sử dụng “action.php”.\n175"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 176,
    "text": "Sự kiện này xảy ra khi nút “Edit” trên mỗi dòng của DataTable được click. Nó \nsử dụng Ajax để lấy thông tin chi tiết của khách hàng từ server và điền vào \nform để sửa đổi. Sự kiện này xảy ra khi nút “Delete” trên mỗi dòng của\nDataTable được click. Trước khi thực hiện xóa, hiển thị một hộp thoại xác \nnhận từ người dùng. Nếu người dùng đồng ý, thì thông tin khách hàng sẽ \nđược xóa thông qua Ajax và DataTable sẽ được làm mới.\n∙\n \nFile: order.js:\n176"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 177,
    "text": "177"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 178,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nKhởi tạo DataTable cho danh sách đơn hàng (“orderList”):\n     + DataTable được khởi tạo trên bảng có id là “orderList” để hiển thị danh \nsách đơn hàng.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v.  \n+ Sử dụng columnDefs để thiết lập các thuộc tính của cột, trong trường hợp \nnày là không cho phép sắp xếp cột có index là 0 và 4.\n+ Sử dụng rowCallback để thực hiện một số thay đổi cho từng dòng của\nDataTable.\n+ Các ô dữ liệu được thêm class để căn giữa (align-middle), và một số class \ntext-center được thêm vào ô cụ thể.\n∙\n \nXử lý sự kiện khi nút “Add Order” được click:\n     + Khi nút có id là “addOrder” được click, modal chứa form thông tin đơn \nhàng (“orderModal”) sẽ hiển thị.\n178"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 179,
    "text": "∙\n \nXử lý sự kiện khi form đơn hàng được submit:\n     + Khi form có id là “orderForm” được submit, sự kiện này sẽ được ngăn chặn \n(preventDefault).\n    + Dữ liệu của form sẽ được serialize và gửi đi thông qua Ajax để xử lý bằng \ncách sử dụng “action.php”.  \n    + Sự kiện này xảy ra khi nút “Edit” trên mỗi dòng của DataTable được click. \nNó sử dụng Ajax để lấy thông tin chi tiết của đơn hàng từ server và điền vào form \nđể sửa đổi.\n    + Sự kiện này xảy ra khi nút “Delete” trên mỗi dòng của DataTable được \nclick. Trước khi thực hiện xóa, hiển thị một hộp thoại xác nhận từ người dùng. \nNếu người dùng đồng ý, thông tin đơn hàng sẽ được xóa thông qua Ajax và\nDataTable sẽ được làm mới.\n∙\n \nFile Product.js:\n     + Nội dung của form sẽ được đặt lại (reset) và tiêu đề modal sẽ được thiết \nlập là “Add Order”.\n179"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 180,
    "text": "180"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 181,
    "text": "181"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 182,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \nKhởi tạo DataTable cho danh sách sản phẩm (“productList”):\n     + DataTable được khởi tạo trên bảng có id là “productList” để hiển thị danh \nsách sản phẩm.\n    + Sử dụng Ajax để lấy dữ liệu từ server thông qua tệp “action.php” và cung \ncấp các cấu hình khác nhau cho DataTable như số lượng trang, sắp xếp, không \ncho phép thay đổi độ dài, v.v.  \n+ Sử dụng columnDefs để thiết lập các thuộc tính của cột, trong trường hợp \nnày là không cho phép sắp xếp cột có index là 0 và 8.\n+ Sử dụng rowCallback để thực hiện một số thay đổi cho từng dòng của\nDataTable.\n+ Các ô dữ liệu được thêm class để căn giữa (align-middle), và một số class \ntext-center được thêm vào ô cụ thể.\n∙\n \nXử lý sự kiện khi nút “Add Product” được click:\n     + Khi nút có id là “addProduct” được click, modal chứa form thông tin sản \nphẩm (“productModal”) sẽ hiển thị.\n    + Nội dung của form sẽ được đặt lại (reset) và tiêu đề modal sẽ được thiết \nlập là “Add Product”.\n∙\n \nXử lý sự kiện khi form sản phẩm \nđược submit:\n     + Khi form có id là “productForm” \nđược submit, sự kiện này sẽ được ngăn \nchặn (preventDefault).\n    + Dữ liệu của form sẽ được serialize \nvà gửi đi thông qua Ajax để xử lý bằng \ncách sử dụng “action.php”.\n182"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 183,
    "text": "▶\n  \nGiải thích, phân tích code chi tiết\n  ▶\n  \nPhân tích code trong folde: INC (includes)\n∙\n \n<head> và <body>:\n+ </head>: Đóng thẻ head của trang HTML\n.\n+ <body class=”bg-gradient bg-dark bg-opacity-25”>: Mở thẻ body của \ntrang và áp dụng một số lớp CSS để định dạng nền của trang. Đây có vẻ như là \nmột hiệu ứng gradient với màu đen và ánh sáng mờ.\n∙\n \nFile container.php:\nSự kiện này xảy ra khi giá trị của dropdown có id là “categoryid” thay đổi. Nó \nsử dụng Ajax để lấy danh sách thương hiệu tương ứng với danh mục đã chọn.\nSự kiện này xảy ra khi nút “Edit” trên mỗi dòng của DataTable được click. Nó \nsử dụng Ajax để lấy thông tin chi tiết của sản phẩm từ server và điền vào form \nđể sửa đổi.\nSự kiện này xảy ra khi nút “Delete” trên mỗi dòng của DataTable được click. \nTrước khi thực hiện xóa, hiển thị một hộp thoại xác nhận từ người dùng. \nNếu người dùng đồng ý, thông tin sản phẩm sẽ được xóa thông qua Ajax và \nDataTable sẽ được làm mới.\n183"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 184,
    "text": "∙\n \nThanh điều hướng (Navbar):\n+ <nav role=”navigation” class=”navbar navbar-dark navbar-static-top \nbg-primary bg-gradient”>: Tạo một thanh điều hướng (navbar) với một số thuộc \ntính và lớp CSS. Có sử dụng Bootstrap để áp dụng các lớp liên quan đến màu \nsắc và kiểu dáng.\n  role=”navigation”: Đặt vai trò của thanh điều hướng.\n class=”navbar navbar-dark navbar-static-top bg-primary bg-gradient”: Các \nlớp CSS và Bootstrap classes để thiết lập kiểu dáng cho thanh điều hướng.\n+ <div class=”container”>: Một container chứa các phần tử của thanh điều \nhướng.\n+ <div class=”navbar-header”>: Container chứa các phần tử liên quan đến \nheader của thanh điều hướng.\n+ <a href=”” class=”navbar-brand”>Hệ thống website quản lý hàng tồn kho \ntập \ntrung</a>: Đường dẫn logo hoặc brand của trang web. Trong trường hợp này, \nchữ “Hệ thống website quản lý hàng tồn kho tập trung” là nội dung của brand.\n∙\n \nContainer chứa nội dung:\n \n<div class=”container”>: Mở một container khác \nchứa nội dung của trang.\n184"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 185,
    "text": "∙\n \nFile footer.php:\n  ▶\n  \nGiải thích, phân tích code chi tiết\n∙\n \n<footer>:\n     + Mở thẻ footer để đánh dấu phần chân trang\n.\n     + Có một container bao quanh phần nội dung của footer\n.\n∙\n \nNội dung footer:\n     + <div class=”container”>: Một container chứa nội dung của footer để căn \ngiữa và định dạng.\n     + <div class=”footer-content”>: Container chứa nội dung cụ thể của footer\n.\n     \n+ <p>&copy; <?php echo date(“Y”); ?> Sách lập trình Web chuyên sâu từ cơ \nbản đến nâng cao - nhà sách webupbook. All rights reserved. Designed by Đào \nXuân Hiệp</p>: Đoạn văn bản hiển thị trong footer.\n185"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 186,
    "text": "+ &copy; <?php echo date(“Y”); ?>: Hiển thị ký hiệu bản quyền © và năm \nhiện tại.\n     + Phần còn lại là một đoạn văn bản mô tả quyền sở hữu và thông tin về \nsách “Sách lập trình Web chuyên sâu từ cơ bản đến nâng cao” và người thiết kế \n“Designed by Đào Xuân Hiệp”\n∙\n \nCSS cho footer:\n+ CSS được đặt trong một thẻ <style> để thiết lập kiểu dáng cho footer\n.\n+ background-color: #007bff;: Màu nền của footer là màu xanh dương\n.\n+ color: #fff;: Chữ màu trắng\n.\n+ padding: 20px 0;: Khoảng trắng 20px ở trên và dưới nội dung của footer\n.\n+ text-align: center;: Căn giữa nội dung của footer\n.\n+ width: 100%;: Footer chiếm toàn bộ chiều rộng của trang\n.\n+ position: fixed; bottom: 0;: Đặt footer ở cuối trang và giữ nó ở vị trí cố định.\nfont-size: 16px;: Kích thước chữ tiêu chuẩn cho toàn bộ footer.\n+ .footer-content { font-size: 14px; }: Kích thước chữ cho phần nội dung cụ \nthể trong footer.\n  ▶\n \n \n7.5. Chạy chương trình thực tế\n  ▶\n  \nLogin page\n186"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 187,
    "text": "▶\n  \nTrang chủ\n  ▶\n  \nKhách Hàng\n187"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 188,
    "text": "▶\n  \nChức năng thêm mới Khách Hàng\n∙\n \nĐể thêm mới khách hàng người dùng click vào nút:\n∙\n \nSau khi thêm mới thông tin xong người dùng click vào nút:\n \nLưu Lại\n. Kết quả \nsau khi thêm mới Khách Hàng:\nThêm mới\n188"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 189,
    "text": "▶\n  \nChức năng sửa thông tin khác hàng\n  ▶\n  \nNgười dùng nhập thông tin danh sách khách cần sửa\n∙\n \nTại giao diện form Danh Sách Khách Hàng người dùng click vào nút Update \nđể sửa và cập nhật thông tin khách hàng:\n189"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 190,
    "text": "▶\n  \nSau đó ấn nút: Lưu Lại\n∙\n \nChức năng: Xoá danh sách khách hàng. Tại giao diện danh sách khách hàng \nngười dùng chọn mục Hành động và click vào nút Xoá (biểu tượng thùng rác) \nđể xoá.\n∙\n \nThông báo hiển thị thông tin xác nhận người dùng xoá thông tin danh sách \nkhách hàng.\nLoại\n190"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 191,
    "text": "▶\n  \nĐể thêm mới lại danh mục người dùng click vào nút: Thêm mới\n  ▶\n  \nSau đó ấn nút Add. Kết quả sau khi thêm mới danh mục\n191"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 192,
    "text": "∙\n \nĐể thêm mới Thể Loại: Người dùng click vào nút Thêm mới sau đó nhập \nthông tin trên From:\n192"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 193,
    "text": "∙\n \nNgười dùng chọn Danh mục trước sau đó nhập tên loại sản phẩm ch\no danh \nmục đó và ấn nút Add để thêm mới. Kết quả sau khi thêm thông tin trên giao \ndiện:\n  ▶\n  \nNhà Cung Cấp\n193"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 194,
    "text": "∙\n \nĐể thêm mới Nhà Cung Cấp người dùng click vào nút:\n∙\n \nSau khi người dùng ấn nút Add giao diện sẽ có dạng:\nAdd Supplier\n194"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 195,
    "text": "▶\n  \nSản Phẩm\n∙\n \nĐể thêm mới: Sản Phẩm người dùng click vào nút\n \nAdd Product\n giao diện \nhiển thị ra có dạng cho phép người dùng nhập thông tin:\n195"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 196,
    "text": "∙\n \nSau khi ấn nút Add để thêm mới giao diện hiện ra có dạng:\n  ▶\n  \nMua Hàng\n196"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 197,
    "text": "∙\n \nĐể thêm mới Danh sách mua hàng tại giao diện Mua Hàng người dùn\ng click \nvào nút Add Purchase giao diện hiện ra cho phép người dùng nhập thông tin:\n∙\n \nSau Khi người dùng ấn nút Add giao diện có dạng:\n197"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 198,
    "text": "▶\n  \nĐơn Đặt Hàng\n  ▶\n  \nĐể thêm mới Đơn đặt hàng\n∙\n \nTại giao diện: Quản lý đơn hàng người dùng click vào nút: New Order\n198"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 199,
    "text": "▶\n  \nNgười dùng Click nút Add để thêm mới đơn hàng giao diện hiện ra có \ndạng\n199"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 200,
    "text": "▶\n  \nChức năng đăng ký người sử dụng\n  ▶\n  \nTại giao diện đăng ký người dùng, người sử dụng nhập\n∙\n \nTại giao diện login người dùng click nút :\n∙\n \nTên đăng nhập: Địa chỉ email\nHọ và tên\nMật khẩu\nXác nhận lại mật khẩu\nVà ấn vào nút: Đăng ký ngay bây giờ để đăng ký thông tin user.\nĐăng ký\n200"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 201,
    "text": "▶\n  \nHướng dẫn chạy chương trình\nDownload\n và \nInstall\n chương trình \nlocal web server\n sử dụng \nXAMPP\n.\nLink tải chương trình:\nhttps://www.apachefriends.org/blog/new_xampp_20171220.html\n hoặc trong \nthư mục code của dự án\nTải source code cài chương trình(kèm theo sách).\nMở chương trình XAMPP Control và khởi chạy Apache \nvà\n MySQL.\nGiải nén source code zip file.\nCopy\n source code chương trình đã giải nén và copy vào thư mực \nXAMPP’s\n \n“htdocs” đường dẫn\n.\nKhởi chạy \nPHPMyAdmin\n trên trình duyệt và gõ địa chỉ\nhttp://localhost/phpmyadmin\n.\nTạo mới một database và đặt tên database với tên \nims_db\n.\nImport\n file \nSQL \ncủa chương trình tên file \nims_db.sql\n vào \ndatabase\n vừa tạo trên.\nThử chạy hệ thống:  Quản lý tồn kho tập trung trên trình duyệt có thể là Firefox; \nGoogleChorme;… \nhttp://localhost/ims\n.\nUser admin mặc định:\nEmail: \nadmin@mail.com\nPassword: \nadmin123\nFile footer.php\nHướng dẫn cài đặt chương trình\nChúc các bạn học tốt!\nNote: Các chức năng Sửa Thông tin, Xoá thông tin trên các Chức năng: Loại, \nThể Loại, Nhà Cung Cấp, Sản Phẩm, Mua Hàng, Đơn Đặt Hàng như trên giao \ndiện sử dụng tương tự như tại giao diện: Khách Hàng.\n201"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 202,
    "text": "▶\n  \nGiải thích từ khoá\nRESTful API\n (Representational State Transferful Application Programming \nInterface) là một kiến trúc thiết kế cho các ứng dụng web để truyền tải dữ liệu \ngiữa các máy chủ và máy khách. Nó dựa trên nguyên tắc cơ bản của REST, \nmột kiến trúc được mô tả trong quy ước HTTP (Hypertext Transfer Protocol)\nDecentralized web\n (web phi tập trung) là một mô hình phát triển web mà \nkhông phải tất cả các hoạt động và dữ liệu đều được tập trung vào một vị trí \nduy nhất hoặc một nhóm nhất định của các máy chủ. Thay vào đó, nó sử dụng \ncác nguyên tắc và công nghệ để phân phối dữ liệu, quản lý quyền lực, và giảm \nsự phụ thuộc vào các tổ chức tập trung.\nUniswap\n là một dự án và giao thức tài chính phi tập trung (DeFi) xây dựng \ntrên blockchain Ethereum. Được ra mắt vào tháng 11 năm 2018, Uniswap đặc \nbiệt nổi tiếng với việc cung cấp các dịch vụ trao đổi và cung cấp thanh khoản \n(liquidity) cho các token tiêu chuẩn của Ethereum.\nintegration\n (tích hợp) thường được hiểu là quá trình kết hợp các thành phần, \nhệ thống, hoặc dịch vụ khác nhau để chúng có thể hoạt động cùng\n nhau một \ncách hiệu quả.\nAuthentication\n (xác thực) là quá trình xác nhận xem một người dùng, ứng \ndụng, hoặc hệ thống có quyền truy cập hay thực hiện một hành động nào đó \nkhông. Quá trình này thường được thực hiện thông qua việc kiểm tra thông tin \nxác thực như tên người dùng và mật khẩu, mã thông báo (token), chứng chỉ số \ndấu, hay các phương tiện xác thực khác.\nAuthorization\n (Ủy quyền) là quá trình xác định xem một người dùng, ứng dụng \nhay hệ thống có quyền truy cập vào hay thực hiện một tài nguyên, chức năng \nhay hành động nào đó không. Quá trình này xảy ra sau khi quá trình\nauthentication (xác thực) đã xác nhận danh tính của người dùng.\n202"
  },
  {
    "file": "746782985-Lập-trinh-Web-2.pdf",
    "page": 203,
    "text": "sessionStorage\n là một đối tượng trong Web Storage API của HTML5, cung cấp \nmột cách để lưu trữ dữ liệu trong quá trình làm việc của một phiên làm việc \ncủa người dùng trên trình duyệt web. Dữ liệu được lưu trữ trong sessionStorage \nchỉ tồn tại trong suốt thời gian phiên làm việc của người dùng và sẽ bị xóa khi \ntrình duyệt được đóng.\nlocalhost\n là một thuật ngữ được sử dụng để đề cập đến máy chủ máy tính cục \nbộ, thường được sử dụng để phát triển và kiểm thử ứng dụng web trên máy \ntính cá nhân. Khi bạn thiết lập một máy chủ web trên máy tính của mình, bạn \nthường có thể truy cập nó thông qua địa chỉ \nlocalhost\n.\nUI và UX\n là hai khái niệm quan trọng trong thiết kế trải nghiệm người dùng \n(User Experience - UX) và thiết kế giao diện người dùng (User Interface - UI).\n203"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 1,
    "text": "Lời nói đầu\nNgày nay v ới sự phát triển mạnh của ng ành Công Ngh ệ Thông Tin, Internet v à\nWeb trở nên không th ể thiếu trong cuộc sống. V ì thế, xây dựng các ứng dụng Web l à\ncần thiết. Giáo tr ìnhThiết kế và lập trình Web hướng dẫn cách xây dựng một ứng\ndụng Web từ cơ bản đến nâng cao bằng công nghệ HTMLvàASP. Được biên soạn\nvới phương châm đ ảm bảo tính khoa học, thiết thực, dễ hiểu nhằm giúp sinh vi ên\nngành công ngh ệ thông tin có đ ược tài liệu hữu ích cho việc học tập.\nTuy có nhi ều cố gắng trong công tác  biên soạn, nhưng do lần đầu xuất bản n ên\nchắc chắn sẽ có nhiều khiếm khuyết. Chúng tôi rất mong nhận đ ược các ý kiến đóng\ngóp để hoàn thiện hơn trong các l ần tái bản kế tiếp.\nNhóm biên so ạn"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 2,
    "text": "1Chương 1 :Các khái ni ệm cơ bản\n1. Mạng máy tính  là gì?\nMạng máy tính l à một tập các máy tính đ ược nối với nhau bởi đường truyền\ntheo mộtcấu trúcnào đó và qua đó các máy tính có th ể trao đổi tin tức  thông qua các\ngiao thức truyền thông.\nĐường truyền l à một hệ thống các thiết bị truyền dẫn có dây hay không có dây\nnhư cáp xo ắn, cáp đồng trục , cáp quang, dây điện thoại, sóng vô tuyến...\nTập các đường truyền tạo n ên một cấu trúc mạng.\nMạng máy tính đ ược phân th ành 2 loại: mạng diện rộng v à mạng cục bộ, việc\nphân loại mạng máy tính dựa v ào khoảng cách địa  lý.\nMạng cục bộ (Local Area NetWorks) hay th ường gọi là mạng LAN:\nlà mạng được thiết kế để trao đổi thông tin giữa các máy tính trong\nmột toà nhà, một khu nh à, một phân xưởng nhỏ.\nMạng diện rộng (Wide Area NetWorks) hay c òn gọi là mạng WAN:\nLà mạng được thiết lập để kết nối các máy tính ở những khu vực lại\nvới nhau, ví dụ nh ư giữa các thành phố, giữa các khu vực...\n2. Internet là gì?\nInternet ra đ ời vào giữa năm 1960. Ng ười ta đã xây dựng Internet nh ư một giao\nthức để trao đổi v à chia sẻ thông tin giữa cá c viện nghiên cứu với nhau.\nNgày nay Internet cho phép h ằng trăm triệu ng ười trên khắp thế giới li ên lạc và\ntrao đổi thông tin với nhau thông qua tập các tập  các giao thức gọi chung l à TCP/IP\n(Transmission Control Protocol/Internet Protocol).\n3. Địa chỉIP là gì ?\nIPlà một địa chỉ d ùng để xác định đối t ượng gởi v à nhận thông tin tr ên\nInternet, đ ịa chỉ này có kích  thư ớc 32 bits (version 4), 64 bits (version 5 trở l ên). Khi\ngửi một nội dung, th ìđịa chỉIPcủa bạn sẽ đ ược gửi cùng các gói tin n ội dung đế n\nngười nhận. Khi ng ười nhận nhận đ ược yêu cầu từ bạn th ì họ căn cứ v ào địa chỉIPđể\nphản hồi thông tin lại cho bạn.\nĐịa  chỉIPgồm 2 phần: Phần địa chỉ mạng v à phần địa chỉ máy. 32bits địa chỉ\nIPđược chia th ành 4 vùng, m ỗi vùng có kích thư ớc 1 byte (8  bits) được biểu diễn d ưới\ndạng thập phân, thập lục phân hay nhị phân. Thông th ường người ta dùng cách vi ết\nthập có dấu chấm để tách các v ùng. Mục đích của địa chỉ IPlà để định danh duy nhất\ncho một máy tính bất kỳ tr ên liên mạng.\nCác máy tính trao đ ổi thông tin v ới nhau thông qua mô h ình Client/Server. Mô\nhình Client/Server là mô hình trao đổi thông tin giữa các máy tính trong đó Server\nthường là máy cung c ấp thông tin trong khi Client l à một công cụ hay ch ương trình\ntrên máy tính khác dùng đ ể lấy thông tin từ máy Server. Tuy nhi ên, máy Client c ũng\ncó thể đóng vai tr ò cung cấp dữ liệu cho máy Server.\nĐể trao đổi thông tin giữa các máy tính với nhau ng ười ta đặt ra một số giao\nthức (protocol) truyền thông tr ên mạng, các quy định về việc trao đổi thông tin  để các\nmáy tính có th ể nói chuyện với nhau thông qua mạng.\nVới mức độ phổ biến của Internet ng ày càng cao, s ố lượng người tham gia ng ày\ncàng lớn thì các giao th ức truyền thông trở n ên phổ biến và đa dạng. Sau đây l à một số"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 3,
    "text": "2giao thức thường gặp, cho phép người sử dụng Internet gửi/nhận th ư điện tử (E-mail),\ntập tin (File), đọc tin v à đưa tin.\n4. Giao th ức SMTP, POP3 (Simple Mail Transfer protocol)\nLà giao th ức dùng để gửi/nhận th ư điện tử (E-mail) từ người dùng (user) này\nđến người dùng (user) khác đư ợcgửi từ user n ày đến user khác thông qua protocol\nnày. Thông thư ờng người ta dùng một e-mail client đê g ửi thông điệp (message), c òn\nmail server trên internet qu ản lý, trả lời e -mail phúc đáp.\nE-mail (electronic mail) là d ịch vụ trao đổi th ư điện tử trên mạng viễn thông.\nNội dung th ư điện tử thường được mã hóa dưới dạng m ã ASCII khi g ửi, tuy nhi ên thư\nđiện tử còn hỗ trợ việc trao đổi thông tin h ìnhảnh và âm thanh.\nĐể trao đổi thông tin bằng E -mail bạn cần tạo một hộp mail cho chính bạn. Một\nhộp mail có 3 thành phần chính sau:\nĐịa chỉ hộp mail: L à định danh của hộp mail giúp xác định ng ười gửi và người\nnhận. Chúng ta gửi E -mail thông qua đ ịa chỉ này, địa chỉ mail th ường có dạng\ntên@tênmi ền,ví dụ:xuântt@yahoo.com ,xuanttđóng vai tr ò là tên,\nyahoo.com là t ên miền.\nĐịa chỉ mail đ ược quản lý bởi mail server thông qua các dịch vụ cung cấp mail\nnhư FPT, SaigonNet, vnEpress, Yahoo, Hotmail, vnn....tuy nhiên hi ện nay có\nrất nhiều dịch vụ cung cấp mail miễn phí. Nh ưng thông d ụng nhất vẫn l à 2 dịch\nvụ cung cấp mail  Yahoo và Hotmail.\nMột hộp mail có một t ên đăng nh ập và một mật khẩu để truy cập hộp mail của\nmình. Tên đăng nhập và mật khẩu đ ược tạo khi chúng ta đăng ký hộp mail.\nĐiều này bảo đảm tính bảo mật của hộp mail của bạn v à chỉ có bạn mới biết\nmật khẩu cùng tên đăng nh ập của bạn để v ào hộp mail m à thôi.\n5. Giao th ức FPT (File Transfer Protocol)\nĐây là m ột giao thức để trao đổi các tập tin tr ên Internet v ới nhau. Nguy ên tắc\nhoạt động của nó khá đ ơn giản. FTP d ùng để tải các tập tin (file) từ máy tính n ày sang\nmáy tính khác, các t ập tin (file) n ày có thể là các tập tin chứa văn bản, âm thanh, h ình\nảnh. Các máy gửi y êu cầu tập tin qua lại thông qua nhiều ch ương trình khác nhau. Tuy\nnhiên, chúng ta có th ể dùng một tập hợp lệnh nh ư “open” (đ ể kết nối với máy server)\nvà “get” (đ ể tải các tập tin n ày về máy client) hoặc có thể chọn tập tin mong muốn từ\nmột giao diện của ch ương trình có sẵn để trao đổi các tập tin giữa các máy với\nnhau.FTP c ũng có thể d ùng để tải các ch ương trình, tập tin giữa các máy server với\nnhau.\n6. Giao thức HTTP (HyperText Transfer Protocol)\nLà giao th ức dùng để hiển thị trang web d ưới dạng văn bản, h ìnhảnh, âm thanh,\nvideo, và các liên k ết (links) đến các trang web khác tr ên World Wide Web. Khi chúng\nta chọn các liên kết thì HTTP sẽ mở một nội dung mới thông qua tr ình duyệt Web cho\nchúng ta. Đây là giao th ức nền tảng trong tập các giao thức ICP/IP.\n7. Giao th ức NNTP (Network News Transfer Protocol)\nLà giao th ức phân phối thông điệp một cách rộng r ãi với nhiều chủ đề khác\nnhau. Thông qua m ột chương trình tin tức Client nh ư Collabra c ủa Netscape hay\nchương tr ình Internet News c ủa Microsoft bạn có thể đọc hay đ ưa các bài báo cáo\ntrong những nhóm mới.\n8. Giao th ức Chat"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 4,
    "text": "3Là giao th ức cho phép ng ười dùng trao đ ổi thông tin trực tiếp d ưới dạng văn\nbản, hìnhảnh và âm thanh.\nCác chương tr ình Chat thông d ụng nhất hiện nay l à YahooMessenger, ICQ,\nMIRC...\n9. URL\nURL (Uniform Resource Locator) là đ ịa chỉ của một trang Web hay bất kỳ một\ntập tin (file) n ào khác trên Internet. M ỗi URL tr ên Web là duy nh ất.\nURL có m ột cú pháp đặc biệt. Tất cả các URL phải chính xác, thậm chí có một\nký tự sai hay thiếu một dấu chấm cũng không đ ược chấp nhận. Một ký tự sai trong\nURL có th ể mang đến cho bạn một trang Web ho àn toàn khác bi ệt hoặc kết quả đ ược\ntrả về là một thôngbáo lỗi.\nMột URL đ ơn giản dùng cho Web bao g ồm tên của Web protocol, theo sau bởi\ndấu hai chấm (:)  v à hai dấu (//), tiếp đến l à tên của domain v à kết thúc bởi dấu (/).\nVí dụ:http://www.hotmail.com/\nCấu trúc của một URL có thể bao gồm các phần sau:\nPhần thứ nhất của URL l à tên giao th ức. Cho đến nay tất cả các URL\nđều bắt đầu l à http:// (Hypertext Transfer Protocol) b ởi vìđó là trang\nWeb và HTML. Nhưng URL có th ể chỉ đến các phần khác của\nInternet ch ứ không phải chỉ là Web.\nSau đây là m ột số giao thức đ ược dùng trong URL:\nftp:// tên giao th ức (File Transfer Protocol)\nhttp:// tên giao th ức (Hypertext Transfer Protocol)\nmailto: địa chỉ thư điện tử (Electronic mail address) không y êu cầu\nhai ký tự  ‘/’.\nnews: Giao thức cho phép mọi ng ười tham gia v ào nhóm tin n ếu\ntrang chủ của bạn có li ên quan đ ặc biệt đến nhóm. Hoặc\ncho phép nh ận các câu hỏi cần trả lời từ một nhóm tin n ào\nđó. Như v ậy bạn có thể hạn chế đ ược số lượng e-mail nhận\nđược (không y êu cầu hai ký tự ‘/’).\ntelnet: Giao thức cho phép trao đổi thông tin trực tiếp giữa các\nmáy tính v ới nhau bằng cách y êu cầu  người sử dụng nhập\ntên truy c ập và mật khẩu (không y êu cầu hai ký tự ‘/’).\nfile:// Tài liệu mà bạn đang truy xuất đ ược đặt trên máy tính c ủa\nbạn thay vì trên Web.\nPhần thứ hai của URL l à tên của domain. Domain đ ại diện cho t ên\ncủa server m à bạn đang kết nối.\nPhần thứ ba của URL l à đường dẫn đến tập tin cần truy cập, th ường\nbắt đầu bằng t ên tài kho ản (account name). Nếu bạn muốn truy xuất\nđến trang Web đ ượctạo bởi một ng ười dùng (user) xác đ ịnh thì phải\nthêm tên c ủa tài khoản vào URL. Tên của tài khoản luôn bắt đầu\nbằng ký tự (~).\nVí dụ:http://www.sonic.net/~japan\nPhần thứ tư của URL l à tên đường dẫn v à tên tập tin (pathname và\nfilename). URL thư ờng chỉ ra t ên đường dẫn v à tên tập tin cụ thể."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 5,
    "text": "4Đây là m ột miền xác định tr ên máy ch ủ đang chứa tập tin cần truy\nxuất.\nPhần thứ năm của URL l à tên của anchor (anchor name). Đây l à một\ncon trỏ chỉ đến một phần xác định của một file HTML. Nó luôn bắt\nđầu bằng ký tự (#). Anchor đặc biệt rất hữu dụng đối với các t ài liệu\nlớn.\nTuy nhiên tên account, tên đư ờng dẫn, t ên file và tên anchor không ph ải là\nthành phần bắt buộc đối với một URT.\nVí dụ một URL đầy đủ:\nhttp://www.zdnet.com/~zdi/software/wind95/utils.html#WINZIP\nTrong đó:\nhttp:// : Tên giao th ức (Protocol)\nwww.zdnet.com : Tên miền (domain)\n~zdi :Tên tài kho ản (account)\nsoftware/win95 : Đường dẫn th ư mục\nutils.html : Tên tập tin (file)\n#WINZIP : Tên neo (anchor)\n10. Hyperlink là gì ?\nHyperlinks (hay còn g ọi là links) rất cần thiết đối với World Wide Web. D ùng\nhyperlinks đ ể liên kết từ tài liệu này đến tài liệu khác l à một hoạt động rất phổ biến\ntrên web.\nBạn có thể tạo links đối với bất kỳ đối t ượng nào trên web. Links có th ể kết nối\ntrực tiếp với văn bản, h ìnhảnh, âm thanh hay một file HTML khác. Hyperlink th ường\nđược hiển thị với một m àu sắc mặc định. Tu y nhiên chúng ta có th ể thay đổi m àu sắc\nnếu cần. Chỉ cần nhấn chuột v ào hyperlinks, tài li ệu được link sẽ đ ược hiển thị. Thông\nthường, hình dạng con trỏ sẽ thay đổi th ành hình bàn tay khi rê chu ột qua vùng\nhyperlinks vì th ế chúng ta sẽ biết đ ược hyperlink s đangở đâu để có thể nhắp chuột.\nHyperlinks giúp chúng ta d ễ dàng tìm ki ếm các thông tin khác nhau về một chủ\nđề. Nếu bạn đang t ìm kiếm một chủ đề n ào đó, chỉ cần vào trang web có hyperlinks k ết\nnối với vấn đề n ày, và chúng ta s ẽ nhận được một danh sách  liệt kê hàng trăm ch ủ thể\ncó liên quan.\n11. Web Browser là gì?\nWeb browser là m ột công cụ hay ch ương trình cho phép b ạn truy xuất v à xem\nthông tin trên web. Có nhi ều web browser để truy xuất web. Mỗi web browser có\nnhững đặc điểm khác nhau v à chúng s ẽ hiển thị những trang web không ho àn toàn\ngiống nhau. Hai web browser đang phổ biến hiện nay l àNestcape’s Navigator của\ncông ty Netscape và Microsoft’s Internet Explorer  của công ty Microsoft. Chúng hiển\nthị được cả hìnhảnh, âm thanh v à rất dễ sử dụng. Ngo ài việc truy xuất web, Netcape\nvà IE (Internet Explorer ) còn cho phép chúng ta th ực hiện một số công việc khác nhau\nnhư gửi và nhận thư điện tử (e-mail), tải các tập tin (download file) từ máy chủ\n(server),....V ới hai web browser n ày web đ ã trở thành một hệ thống thông tin đa\nphương ti ện có mối li ên hệ với nhau.\n12. Web Server là gì?\nWeb server đơn gi ản là một máy tính nối v ào Internet và ch ạy các phần mềm\nđược thiết kế để truyền tải nội dung d ưới dạng trang HTML (Trang HTML có thể chứa"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 6,
    "text": "5âm thanh, hình ảnh, video, văn b ản) hay d ưới dạng tập tin (tập tin có thể l à tập tin hình\nảnh, âm thanh, văn bản, video...). Máy chủ (server) phải đủ mạnh để đáp ứng nhiều kết\nnối Internet đồng thời.\nThông qua trình duy ệt Web máy chủ sẽ cung cấp các dịch vụ đ ược yêu  cầu đến\nmáy client.\nThông thư ờng web server chạy tr ên các hệ điều hành khá m ạnh như Unix,\nLinux, Microsoft Windows NT Server, Windows 2000 server.\n13. Website là gì?\nLà tập các trang web li ên quan đ ến một công ty, một tập đo àn, một trung tâm\nhay một cá nhân n ào đó.Ví dụ:Website c ủa Trung Tâm Phát Triển Công Nghệ Thông\nTin Thành Ph ố Hồ Chí Minh gồm tập các trang web đ ược bắt đầu từ trang chủ có địa\nchỉ (URL) làwww.citd.edu.vn .\n14. World Wide Web (www) là gì?\nWorld Wide  Web là d ịch vụ thông dụng ra đời v ào năm 1990. D ịch vụ World\nWide Web s ử dụng giao thức HTTP (HyperText Transfer Protocol). Để sử dụng dịch\nvụ này chúng ta c ần một trình duyệt Web (gọi l à Web Browser).\nĐể truy cập một trang Web bạn cần phải biết địa chỉ (URL-Uniform Resource\nLocator) c ủa trang web đó. Ví dụ nếu bạn muốn truy cập v ào trang ch ủ của Yahoo th ì\nbạn đánh địa chỉ http://www.yahoo.com  cho trình duy ệt web. Khi đó tr ình duyệt web\nsẽ mở trang chủ Yahoo cho bạn. Từ trang chủ n ày bạn có thể đi đến các trang khác\nbằng cách nhấn chuột v ào đối tượng HyperLink trong trang web. H ình dạng con chuột\nthay đổi (thông th ường là hình bàn tay) khi đi qua các đ ối tượng Hyperlink n ày.\nTrang Web truy ền tải nhiều thông tin khác n hau với nhiều h ình thức khác nhau\nnhư văn b ản, âm thanh, h ìnhảnh... Sự ra đời của trang web giúp con ng ười trao đổi\nnhanh hơn, ti ện lợi hơn, phong phú hơn và đa d ạng về cả h ình thức và nội dung.\nWorld Wide Web (c ũng được gọi là ‘W3’, ‘WWW’ hay g ọi tắt là Web) là m ột\nhệ thống rộng lớn bao gồm nhiều HTTP server (máy chủ sử dụng giao thức HTTP -\nHypertext Transfer Protocol), chúng đang th ực hiện việc trao đổi file thông qua\nInternet.\n15. Sự khác biệt giữa Inernet v à World Wide Web?\nNhiều người nghĩ rằng Web v à Internet là m ột. Nhưng Web ch ỉ là một phần của\nInerner và nó đang phát tri ển với tốc độ nhanh h ơn các ph ần khác.\nTrên Interner chúng ta có th ể gửi và nhận nhiều loại thông tin khác nhau nh ư\nthư điện tử (e-mail), các bài báo, tán g ẫu và các tran g Web. Như v ậy Web chỉ l à một\ntrong những dịch vụ của Internet.\n16. Web page là gì?\nWeb page là trang web, là m ột loại tập tin đặc biệt đ ược viết bằng ngôn ngữ\nsiêu văn b ản HTML. Web page có thể hiển thị các thông tin văn bản, âm thanh, h ình\nảnh...TrangWeb này đư ợc đặt trên máy server sao cho máy client có th ể truy cập\nđược nó. Chúng ta cũng có thể đặt tập tin n ày trênổ cứng máy tính của m ình nhưng\nngười khác sẽ không đọc đ ược nó."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 7,
    "text": "6Chương 2  :lập trình web v ới ngôn ngữ si êu văn\nbản html\n1. Khái ni ệmngôn ngữ HTML\nHTML (Hypertext Markup Language) là ngôn ng ữ định dạng văn bản si êu liên\nkết, là ngôn ng ữ lập trình Web c ăn bản, cho phép định dạng văn bản, bổ sung h ình\nảnh, âm thanh v à video, c ũng như lưu tất cả vào một tập tin d ưới dạng văn bản hay\ndướidạng mã ASCII, binary mà b ất cứ máy tính n ào cũng có thể đọc đ ược thông qua\ntrình duyệt Web (Web browser). HTML có hai đặc tính c ơ bản sau:\nSiêu văn b ản:Tạo các li ên k ết trong trang Web, cho phép truy cập\nthông tin t ừ nhiều h ướng khác nhau thông qua các H yperlinks.\nTính tổng quát:  Hầu nh ư máy tính nào c ũng có thể đọc đ ược thiết kế\nbằng ngôn ngữ HTML. Điều đó l à do d ữ liệu trong tập tin HTML đ ược\nlưu dư ới dạng văn bản hay d ưới dạng m ã ASCII.\n2. lập trình web v ới ngôn ngữ HTml\n2.1 Các thành ph ần cơ bản của H TML\nTag là gì?\nTag là m ột tập các ký hiệu đ ược định nghĩa trong HTML có ý nghĩa đặc biệt. Tag\nđược bắt đầu bằng ký hiệu nhỏ h ơn (<) theo sau b ởi một từ khoá, v à kết thúc bằng ký\nhiệu lớn h ơn (>). Nó quy đ ịnh văn bản đ ược hiển thị tr ên màn hình nh ư thế nào.\nVí dụ:\n+ Tag<B> định phông chữ cho văn bản l à chữ đậm.\n+ Tag<I> định dạng phông chữ nghi êng.\n+ Tag<TITLE > đặt tiêu đề cho trang web.\n+ Tag<HTML > bắt đầu một trang web.\n+ Tag<P> bắt đầu cho một đoạn văn bản.\nMỗi tag trong HTMl có một ý nghĩa ri êng, nó  khá rõ ràng và d ễ hiểu. Tag\nkhông phân bi ệt chữ hoa chữ th ường v ì thế các tag < Title >, <title>, <TITLE > và\n<tItLe > đều có nghĩa nh ư nhau.\nCó hai lo ại tag: Tag bắt đầu v à tag k ết thúc. Dữ liệu bị tác động sẽ nằm giữa tag\nbắt đầu v à tag k ết thúc. Tag kết th úc giông tag b ắt đầu nh ưng có thêm d ấu xuyệt phải\n(/)ở phía tr ước.\nVí dụ: <TITLE> Lap trinh web voi HTML</ TITLE >\nTrong đó:\n<TITLE> : Tag b ắt đầu.\nLap trinh web voi HTML: chu ỗi dữ liệu bị tác động.\n</TITLE > : Tag k ết thúc.\nThuộc tính\nCó nhi ều tag c òn có  thuộc tính k èm theo. Thu ộc tính đ ược nhập v ào ngay trư ớc\ndấu ngoặc đóng (>) của tag. Có thể sử dụng nhiều thuộc tính trong một tag. Thuộc tính\nnày k ế tiếp thuộc tính khác, phân cách nhau bởi khoảng trắng.\nVí dụ: <TABLE BORDER>\nTrong đó: < TABLE> :  Tên tag\n<BORDER >:Thuộc tính\nGiá trị"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 8,
    "text": "7Ngoài các thu ộc tính không có giá trị c òn có các thu ộc tính của tag có giá trị\nnữa.Ví dụ:thuộc tínhCLEAR của tag <BR> có ba giá tr ị chọn lựa : left, right, all.\nVí dụ: <BR CLEAR = “left”>\nTrong đó: <BR> :tên tag\nCLEAR: thuộc tính\nleft: giá tr ị của thuộc tính CLEAR.\nGiá tr ị nên đặt giữa hai dấu nháy “”. Tuy nhi ên có th ể bỏ dấu nháy trong các\ntrường hợp giá trị chỉ chứa chữ (A - > Z, a - > z), s ố (0- > 9), d ấu nối ( -), dấu chấm (.).\nTag lồng nhau\nThẻ lồng nhau d ùng để chỉnh sửa cách tr ình bày n ội dung trong một trang web.\nVí dụ chúng ta muốn tr ình bày ch ữ nghi êng trong m ột vài ch ữ quan trọng trong ti êu\nđề.\nKhông ph ải tag n ào cũng chấp nhận dạng thẻ lồng nhau.\nTrật tư sắp xếp của những tag lồng nhau. Thẻ đ ược mở đầ u tiên s ẽ là thẻ được\nđóng sau  cùng.\nVí dụ: Dòng đầu tiên đúng, d òng th ứ hai sai\nĐúng: <H1> Phần <I> Nội Dung </ I></H1>\nSai: <H1> Phần <I> Nội Dung </ H1></I>\nKhoảng trắng\nTrình duy ệt bỏ qua các khoảng trắng giữa các tag trong tập tin HTML.\nTên tập tin\nNên sử dụng chữ th ường khi đặt t ên tập tin, điều n ày giúp ích cho b ạn lẫn ng ười\nduyệt. Với bạn, sẽ giúp ích khi tạo li ên kết giữa các trang Web. Với ng ười dùng, s ẽ dễ\ndàng khi truy c ập trang web.\nĐặt tên tập tin phải đúng phần mở rộng “.htm” hay “.html”. Gi úp trình duy ệt\nWeb đ ịnh ra loại t ài liệu khi duyệt.\n2.2 Tạo trang Web\nCó th ể tạo trang Web tr ên bất cứ ch ương tr ình x ử lý văn bản n ào như chương\ntrình so ạn thảo văn bản Nodepad, WordPad, Word... ở đây chúng ta sẽ thực hiện tạo\ntrang Web trên trình so ạn th ảo văn bản NotePad, ch ương tr ình so ạn thảo có sẵn tr ên\nWindows, b ằng cách v ào menuStart ->Programs ->Accessories ->Notepad.\n2.3. Cấu trúc của một tập tin HTML\nMột trang Web luôn bắt đầu bằng tag < HTML > và đư ợc kết thúc bởi tag\n</HTML >.\nHầu hết các tr ang Web đư ợc chia th ành 2 ph ần. Phần đầu v à phần thân. Phần\nđầu là phần được đặt giữa 2 tag < HEAD > và tag </ HEAD >. Ph ần thân l à phần được\nđặt giữa hai tag < BODY > và tag </ BODY >.\nPhần đầu l à nơi đ ịnh r õ tiêu đề, nội dung của ti êu đ ề được đặt giữa 2 tag\n<TITLE > và </TITLE >.\nCú pháp : <HEAD > <TITLE > tên tiêu đ ề của trang Web\n<TITLE > </HEAD >\nHầu hết các tr ình duy ệt Web, ti êu đề xuất hiện tr ên thân tiêu đ ề của cửa sổ tr ình\nduyệt.\nPhần thân chứa nội dung của trang Web l à phần chính của trang Web, phần\ncung c ấp thông tin c ần thiết đến ng ười duyệt Web."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 9,
    "text": "8Cú pháp : <BODY > Nội dung trang Web </ BODY >\nVí dụ:Tạo một trang web đầu ti ên, m ở chương tr ình so ạn thảo văn bản NodePad v à\ngõđoạn HTML nh ư trong h ình sau:\n2.4. Xem trang HTML b ằng trình duyệt Web\nSau khi thi ết kế trang Web xong bạn d ùng m ột trình duy ệt Web để xem kết quả\nthiết kế. V ì không bi ết ng ười dùng s ử dụng tr ình duy ệt Web n ào. Nên t ốt nhất n ên xem\nnó trong nhi ều trình duy ệt Web khác nhau theo các b ước sau.\nKhởi động tr ình duy ệt WebInternetExplorer ->NhấpFile ->Open->Trong\nhộp thoạiOpen bạn gõđịa chỉ tập tin rồi nhấp OKnhư h ình sau:\nHoặc nhấp v ào nútBrowser.. để chọn tập tin trong hộp thoại vừa mở ra, nhấp\ntiếp nútOpen trong h ộp thoại để hiển thị trang Web l ên cửa sổ tr ình duy ệt. Khi ấy nội\ndung  của trang Web trong ví dụ tr ên đư ợc hiển thị nh ư sau:\n2.5. Các tag cơ b ản trong HTML\n2.5.1. Tag chú gi ải\nTag này đư ợc th êm vào tài li ệu HTML nhằm nhắc nhở mục đích của các d òng\nlệnh. Tr ình duy ệt không tính nội dung nằm giữa tag ghi chú n ày.\nCú pháp: <!--nội dung chú giải -->\n2.5.2 Các tag đ ịnh dạng văn bản\nĐịnh phông chữ: Đặt tagFONT trước nội dung văn bản cần hiển thị.\nCú pháp:\n<FONT FACE =”fontname1,fontname2”></ FONT >\nTrong đó fontname1  là phông ch ữ được chọn, g õ tên đầy đủ của phông chữ cả\nchữ (đậm ( Bold), nghiêng (Italic), g ạch d ưới (Underline)). Ta có thể bổ sung th êm\nphông ch ữfontname2 phòng khi ng ười duyệt không c ài loại phông chữ fontname1, các\nphông ch ữ được viết cách nhau dấu phảy.\nVí dụ:Ta thêm 3 th ẻ lệnh sau v ào ví d ụ trên\n<FONT  FACE = “VNI -Litthos,VNI -Times”, bold></ FONT>\n<FONT FACE = “VNI -Times”, bold></ FONT>\n<FONT FACE = “VNI -Centur,VNI -Times”, bold></ FONT>\nNhư vậy đoạn lệnh đ ược viết lại nh ư sau:\nMã HTML\n<HTML>\n<HEAD><TITLE>To chuc</TITLE></HEAD>\n<BODY>\n<FONT FACE = “VNI -Litthos,VNI -Times”, bold>\n<H1>Giám đ ốc</H1></FONT>\n<FONT FACE = “VNI -Times”, bold>\n<H2>Phó giám đ ốc</H2></FONT>\n<FONT FACE = “VNI -Centur,VNI -Times”, bold>\n<H3>Nhân viên</H3>\n</FONT>\n</BODY>\n</HTML>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 10,
    "text": "9Kết quả hiển thị tr ên trình duy ệt\nGiám đốc\nPhó giám đ ốc\nNhân viên\nĐịnh kích th ước chữ\nCú pháp: <BASEFONT SIZE = “n”>\nVới n mang giá trị từ 1 đến 7, giá trị mặc định l à 3. TagBASEFONT dùng để\nđịnh kích th ước cho to àn bộ văn bản, nếu muốn thay đổi một đoạn hay một từ trong\nvăn bản thì dùng tag FONT, tagBIG, tagSMALL.\nĐịnh màu cho văn b ản\nCú pháp: <FONT COLOR = “color”></FONT>\nVớicolor là màu dùng cho ch ữ, các giá trị m àu có thể gõ bằng chữ hoặc g õ bằng chữ\nsố ở hệ hexa (hệ 16).\nNếu gõở hệ hexa th ì thành ph ầncolorlà sự kết hợp thứ tự giữa 3 giá trị m àu\ntươngứng là Red (đỏ), Green (xanh lục), Blue (xanh đậm), mỗi giá trị m àu được biểu\ndiễn bởi 2 chữ số thập phân.\nVí dụ:Ta muốn màu chữ là màu đỏ thì ta gõ “Red” ho ặc “FF0000”, nếu m àu vàng thì\nYellow ho ặc “FFFF00”, m àu xanh đ ậm thì “Green” ho ặc “0000FF”...\nNhư vậy tagFONTkhông nh ững dùng để định dạng kích th ước văn bản m à\ncònđịnh dạng m àu cho văn b ản.\nVí dụ:Ta muốn định m àu xanh đ ậm cho đoạn nội dung “Lop chuyen vien” n ên ta bỏ\nchúng vào 2 tag < COLOR> và </COLOR>\nMã HTML\n<HTML>\n<HEAD><TITLE>To chuc</TITLE></HEAD>\n<BODY>\n<H1>Dao tao tu xa qua mang</H1>\n<BASEFONT SIZE = “4”>\n<FONT  COLOR = “0000FF”>Lop chuyen vien</FONT>\ncong nghe thong tin\n</BODY>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\nDao tao tu xa qua mang\nLop chuyen vien cong nghe thong tin\nĐịnh dạng chữ\nCú pháp:\n<B>nội dung</ B> hoặc <STRONG >nội dung</ STRONG >\n<I>nội dung</ I> hoặc <EM></EM>\nTa định dạng chữ đậm chữ nghi êng cho văn b ản bằng cách sử dụng 2 tag:\nĐịnh dạng chữ đậm d ùng tag < B> hoặc tag<STRONG >\nĐịnh dạng chữ nghi êng dùng tag < I> hoặc tag <EM>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 11,
    "text": "10Ví dụ:Từ ví dụ trên muốn phần nội dung “lop chuyen vien” đ ược in đậm c òn phần nội\ndung “cong nghe thong tin” đư ợc in nghi êng thì 2 n ội dung tr ên được bỏ vào 2 tag như\nsau:\n<B>Lop chuyen vien</ B>\n<I>cong nghe thong tin</ I>\nGhi chú:\nTa có thể kết hợp các thuộc tính vào chung m ột tag\nVí dụ: Ta kết hợp cùng lúc 3 thu ộc tính định dạng phông chữ l àFACE (kiểu chữ hiển\nthị), SIZE ( kích thước văn bản ), COLOR ( màu của văn bản )vào tag < FONT> như\nđoạn tag sau:\n<FONT FACE =”VNI-Times”SIZE =”3”COLOR =”RED”>\n<B>nội dung văn b ản</B></FONT>\nVí dụ: Xét ví d ụ sau\nMã HTML\n<HTML>\n<HEAD><TITLE>Thong tin</TITLE></HEAD>\n<BODY>\n<H1>Lop chuyen vien</H1>\n<FONT FACE = “VNI -Times” SIZE =”3” COLOR=”red”>\n<B>chào các b ạn đến với ch ương trìnhđào tạo chuyên viên</B></FONT>\n</BODY>\n</HTML>\nKết quả hiển thị tr ên màn hình\nLop chuyen vien\nchào các b ạn đến với ch ương trìnhđào tạo chuyên viên\nSử dụng tag < BIG> và tag < SMALL> để thay đổi từng phần hoặc cá thể\ntrong nội dung văn bản. tag BIGdùng để thay đổi phần nội dung th ành chữ\nlớn, tagSMALL dùng để thay đổi phần nội dung th ành chữ thường.\nCú pháp: <BIG>...</BIG> và <SMALL>...</SMALL>\nĐịnh dạng chỉ số tr ên, chỉ số dưới\nChữ (hoặc số) nằm h ơi cao ho ặc hơi thấp hơn so với phần văn bản chính đ ược\ngọi là chỉ số trên và chỉ số dưới.\nĐểđịnh dạng chỉ số tr ên hay ch ỉ số dưới ta dùng hai tag SUP(định dạng chỉ số\ntrên),SUB (định dạng chỉ số d ưới).\nCú pháp: Chỉ số trên: <SUP></SUP>\nChỉ số dưới: <SUB></SUB>\nVí dụ:Ta muốn hiển thị ph ương trình bậc hai\nAX2+BX+C=0, C+O 2=CO2lên Webthì ta dùng đoạn lệnh sau:\nMã HTML\n<HTML>\n<HEAD><TITLE>dinh dang chi so</TITLE></HEAD>\n<FONT SIZE =”3”>\nAX<SUP>2</SUP>=BX+C=0\n<BR>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 12,
    "text": "11C+O<SUB>2</SUB>=CO<SUB>2</SUB>\n</FONT>\n</HTML>\nKết quả hiển thi tr ên trình duy ệt\nAX2+BX+C=O\nC+O2=CO2\nTrong đoạn lệnhtrên ta sử dụng tag < BR>, tag này dùng đ ể sang dòng mới mà\nta sẽ đề cập cụ thể trong các phần kế tiếp.\nPhân đoạn\nDùng tag < P> để phân đoạn văn bản. Muốn canh chỉnh đoạn tr ên trang Web ta\nsử dụng th êm thuộc tínhALIGN.\nCú pháp: <P ALIGN =”direction”>\nVới direction mang 1 trong 3 giá tr ị sau:\n- Left (nội dung trong đoạn đ ược canh trái)\n-Right (nội dung trong đoạn đ ược canh phải)\n- Center (n ội dung trong đoạn đ ược canh giữa)\nVí dụ:Muốn phân hai d òng AX2+BX+C=0 và C+O 2=CO2 thành hai đo ạn riêng biệt,\nnội dung đoạn thứ nhất nằm ở giữa m àn hình,đoạn thứ hai nằm b ên trái màn hình thì\nta viết lại đoạn lệnh nh ư sau:\n<HTML>\n<HEAD><TITLE>dinh dang chi so</TITLE></HEAD>\n<FONT SIZE =”3”>\n<P ALIGN =”center”>\nAX<SUP>2</SUP>=BX+C=0\n<P ALIGN =”left”>\nC+O<SUB>2</SUB>= CO<SUB>2</SUB>\n</FONT>\n</HTML>\nTag phân c ấp đề mục\nĐề mục trong trang Web giúp cho ng ười duyệt hiểu r õ hơn cấu trúc của trang.\nCú pháp: <Hn></Hn> với n mang giá trị từ 1 ->6\nTrong HTML cho phép s ử dụng 6 cấp đề mục trong trang Web, tuy nhi ên trong\nthực tế ta chỉ sử dụng 3 đến 4 cấp đề mục l à đủ.\nVí dụ: ta xem xét đo ạn lệnh sau:\nMã HTML\n<HTML>\n<HEAD><TITLE>To chuc</TITLE></HEAD>\n<BODY>\n<!--các cấp trong một công ty -->\n<H1>Giam doc</H1>\n<H2>Pho giam doc</H2>\n<H3>Nhan vien</H3>\n</BODY>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 13,
    "text": "12</HTML>\nKết quả hiển  thị trên trình duy ệt\nGiam doc\nPho giam doc\nNhan vien\n2.5.3. Các tag đ ịnh dạng h ìnhảnh\nCó nhiều loại hìnhảnh trên một trang Web: Logo (biểu t ượng), ảnh chụp, ảnh\nvẽ từ các ch ương trình xử lý ảnh nh ư: CorelDraw, Paint, Photoshop...\nHìnhảnh được đưa vào trang Web dư ới dạng tập tin h ìnhảnh.\nNhớ lưu hìnhảnh dưới dạng tập tin có phần mở rộng “ gif”, “jpg” hoặc “pmg”.\nHạn chế lưuảnh dưới dạng tập tin có phần mở rộng “ bmp” như thế, chỉ có ng ười dùng\ntrình duyệt Web Internet Explorer mới xem đ ược hìnhảnh này, mặt khác kích th ước\ncủa các tập tin h ình lưu dưới dạng “ bmp” lớn hơn nhiều lần so với tập tin l ưu dưới\ndạng “jpg”, “gif”, “pmg”.\nChèn hình ảnh vào trang Web\nĐể chèn hìnhảnh vào trang Web ta dùng tag < IMG>.\nCú pháp: <IMG SRC  =”tên tập tin chứa h ìnhảnh”>\nTên tập tin chứa h ìnhảnh có cả đường dẫn th ư mục, nếu tập tin h ìnhảnh được đặt\ncùng thư m ục với thư mục chứa trang Web th ì không cần đường dẫn th ư mục.\nTạo thư mục có tênimages trong thư m ục chứa trang Web, sau đó l ưu tập tin\nhìnhảnh vào thư mụcimages. Khi đóSRC=”images/tên t ập tin”\nThêm đư ờng viền chung quanh v ào hìnhảnh\nĐể thêm đường viền v ào xung quanh hình ảnh ta d ùng thêm thu ộc tính\nBORDER  vào tag < IMG>\nCú pháp; < IMG SRC =”tên file”BORDER =n>\nVới n là độ dày mảnh của đ ường biênảnh, tính bằ ng pixel.\nCanh chỉnh hìnhảnh\nĐể canh chỉnh h ìnhảnh ta dùng thuộc tínhALIGNtrong tag < IMG> với 3 giá\ntrị: left, center v à right.\nCú pháp:  <IMG ALIGN  =”direction”>nội dung\nTrong đó direction mang 1 trong 3 giá tr ị sau:\n-ALIGN = left  : Hìnhảnh nằm b ên trái màn hình.\n-ALIGN = center  : Hìnhảnh nằm giữa m àn hình.\n-ALIGN = right  : Hìnhảnh nằm b ên phải màn hình.\nThêm chữ xung quanh h ìnhảnh\nMuốn thêm chữ xung quanh h ìnhảnh ta th êm thuộc tínhALIGN vào tag\n<IMG>.\nCú pháp: <IMG SRC  =”tên file”ALIGN = “direction”> nội dung muốn ch èn\nTrong đó direction mang 1 trong 3 giá tr ị sau:\n-ALIGN = top  : Vị trí văn bản nằm ở phía tr ên màn hình.\n-ALIGN = middle  : Vị trí văn bản nằm ở giữa h ìnhảnh.\n-ALIGN = bottom : Vị trí văn bản nằm ở phía b ên dưới hìnhảnh.\nVí dụ:\nMã HTML"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 14,
    "text": "13<HTML>\n<HEAD><TITLE>hien thi hinh anh</TITLE></HEAD>\n<BODY>\n<H1>hien thi hinh anh qua 3 cach</H1>\n<H2>tren</H2>\n<IMG SRC=”.. \\\\002.jpg” BORDER=1 ALIGN =”top”>van ban o phia tren.\n<H3>giua</H3>\n<IMG SRC=”.. \\\\002.jpg” BORDER=2 ALIGN =”middle”>van ban o giua.\n<H4>giua</H4>\n<IMG SRC=”.. \\\\002.jpg” BORDER=3 ALIGN =”bottom”>van ban o phia duoi.\n</BODY>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\n2.5.4. Các tag đ ịnh dạng trang\nĐường kẻ ngang trang Web\nDùng tag < HR> để kẻ đường ngang tr ên trang Web, giúp trang Web rõ ràng\nhơn.\nCú pháp : <HR SIZE =”n”WIDTH=”w”\nALIGN=”direction”NOSHADE >\nTrong đó:\nSIZE : Độ dầy/ mỏng của đ ường kẻ tính bằng Pixel.\nWIDTH : Chi ều rộng của đ ường kẻ tính bằng Pixel.\nALIGN : Thu ộc tính n ày có ba giá tr ịleft, right, center dùng đ ể chỉnh vị trí\nđường ngang.\nĐịnh màu nền cho trang Web\nĐể định m àu n ền cho trang Web ta th êm thu ộc tínhBGCOLOR  trong tag\nBODY.\nCú pháp: <BODY BGCOLOR= ”color ”>\ncolor là màu c ần định cho trang Web\nVí dụ:Ta mu ốn tạo m àu nền của trang l à màu vàng (yellow) cho Web thì ta\ndùng đo ạn lệnh sau:\n<HTML>\n<HEAD><TITLE>mau nen</TITLE></HEAD>\n<BODY BGCOLOR=”yellow”>\n</BODY>\n</HTML>\nĐịnh ảnh nền cho trang Web\nDùng hình ảnh l àm n ền cho to àn trang Web thay vì chúng ta s ử dụng m àu nền.\nảnh nền giúp trang Web của chúng ta đẹp h ơn, h ấp dẫn h ơn, trang Web có s ức lôi cuốn\nngười dùng hơn."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 15,
    "text": "14Để định h ìnhảnh n ên cho trang Web ta s ử dụng thuộc tínhBACKGROUND\ntrong tag BODY  thay vì dùng thu ộc tínhBGCOLOR để định m àu nền.\nCú pháp : <BODY BACKGROUND =”tên file ”>\nTên file là tên t ập tin h ìnhảnh cần l àm n ền cho trang Web.\nVí dụ: Mu ốn định tập tin ảnh có t ên “b.jpg” trong thư m ục images l àmnền cho trang\nWeb ta dùng đo ạn lệnh sau:\n<HTML>\n<HEAD><TITLE>mau nen</TITLE></HEAD>\n<BODY BACKGROUND=”images/b.jpg”>\n</BODY>\n</HTML>\nXuống dòng trong trang Web\nKhi dùng tag < P> để phân đoạn th ì kho ảng cách giữa các đoạn khá lớn. Để\ntránh khuy ết điểm n àyta dùng tag < BR> để xuống d òng.\n2.5.5. Các tag t ạo danh sách (list)\nTạo danh sách theo thứ tự\nSử dụng tag <OL> để tạo danh sách theo thứ tự\nCú pháp : <OL TYPE=X >\n<LI> nội dung mục 1\n<LI> nội dung mục 2\n...\n<LI> nội dung mục n\n</OL>\nTrong đ óX định kiểu ký hiệu sẽ đ ược sử dụng trong danh sách.\nA là ch ữ hoa\na là danh sách đư ợc đánh theo thứ tự chữ th ường a,b,c...z\nI danh sách đư ợc đánh theo thứ tự số La M ã I, II, III...\ni danh sách đư ợc đánh theo thứ tự số La M ã i, ii, iii...\n1 danh sách đư ợc đánh d ấu theo thứ tự 1,2,3...\nNgoài ra còn có thu ộc tínhSTART =n, n là giá tr ị bắt đầu của danh sách.\nVí dụ:Xét đo ạn lệnh sau:\nMã HTML\n<HTML>\n<HEAD><TITLE>mau nen</TITLE></HEAD>\n<BODY>\n<OL TYPE=1 START=2>\n<LI>cong cha nhu nui thai son\n<LI>nghia me nhu n uoc trong nguon chay ra\n<LI>mot long tho me kinh cha\n<LI>cho tron chu hieu moi la dao con\n</BODY>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\n2.   cong cha nhu nui thai son"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 16,
    "text": "153.   nghia me nhu nuoc trong nguon chay ra\n4.   mot long tho me kinh cha\n5.   cho t ron chu hieu moi la dao con\nTạo chấm tr òn (Bullet) cho danh sách\nDùng tag < UL> để tạo chấm tr òn cho danh sách.\nCú pháp : <UL TYPE =”kiểu chấm tr òn”>\n<LI>nội dung mục thứ 1\n<LI>nội dung mục thứ 2\n...\n<LI>nội dung mục thứ n\n</UL>\n“kiểu chấm tr òn” mang m ột trong 3 giá trị sau:\ndisc: ki ểu dấu chấm tr ònđậm (mặc định đối với danh sách ở cấp thứ nhất).\ncircle: ki ểu dấu chấm tr òn rỗng (mặc định đối với danh sách ở cấp 2).\nsquare: ki ểu dấu chấm vuông đặc (mặc định đối với danh sách từ cấp thứ 3\ntrở đi)\nVí dụ: Đoạn lệnh sau tạo dấu chấm tr òn cho danh sách .\nMã HTML\n<HTML>\n<HEAD><TITLE>mau nen</TITLE></HEAD>\n<H1>Dau  cham tron cho danh sach</H1>\n<HR>\n<UL TYPE=”disc”>\n<LI>muc mot\n<LI>muc hai\n<LI>muc ba\n<LI>muc nam\n<LI>muc sau\n</BODY>\n</HTML>\nKết quả hiển t hị trên màn hình\nDau cham tron cho danh  sach\nmuc mot\nmuc hai\nmuc ba\nmuc nam\nmuc sau\nVới cách tạo Bullet n ày trông có v ẻ đơn đi ệu,xấu xí. Bạn h ãy tự vẽ những h ình ngh ộ\nnghĩnh , sau đó d ùng nh ững h ìnhảnh n ày để tạo Bullet bằng tag < IMG >.\nVí dụ: Ta v ẽ mộ t Bullet và lưu t ập tin h ìnhảnh n ày với phần mở rộng l à “gif’. Khi ấy\nta tạo danh sách bằng đoạn lệnh sau:\nMã HTML"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 17,
    "text": "16<HTML>\n<HEAD><TITLE>Bullet tu tao</TITLE></HEAD>\n<BODY>\n<H2><CENTER>Cac huong trong nganh CNTT</CENTER></H2>\n<IMG src=”images/b1.gif”>Cong nghe phan mem<br>\n<IMG src=”images/b1.gif”>Cong nghe tri thuc<br>\n<IMG src=”images/b1.gif”>He thong thong tin<br>\n<IMG src=”images/b1.gif”>Mang may tinh\n</BODY>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\nCac huong trong nganh CNTT\nCong nghe phan mem\nCong  nghe tri thuc\nHe thong thong tin\nMang may tinh\nTạo danh sách định nghĩa\nLà lo ại danh sách có dạng một từ hay một cụm từ k èm theo n ội dung d ài, rất thích\nhợp giải thích ý nghĩa của nội dung.\nĐể làm đư ợc điều n ày ta dùng các tag < DL>, <DT>,<DD>.\nTag <DL>: Để tạo danh sách định nghĩa\nTag <DT> : Đ ể đánh dấu thuật ngữ đ ược định nghĩa trong danh sách.\n<DD>: Gi ải thích thuật ngữ ở tr ên\nVí dụ: Ta xét đo ạn lệnh sau:\nMã HTML\n<HTML>\n<HEAD><TITLE>Danh sach dinh nghia</TITLE></HEAD>\n<BODY>\n<H2>Cac huong trong nga nh cong nghe thong tin</H2>\n<DL>\n<DT><B>Huong cong nghe phan mem</B>\n<DD>Dao tao ra nhung lap trinh vien, dap ung nhu cau can thiet cua xa hoi, sau khi\nra truong Sinh Vien duoc gioi thieu viec lam o  cac khu cong nghiep phan mem\n</BODY>\n</HTML>\nKết quả hi ển thị tr ên trình duy ệt\nCac huong trong nganh cong nghe thong tin\nHuong cong nghe phan mem\n        Dao tao ra nhung lap trinh vien, dap ung nhu cau can thiet cua xa hoi, sau\nkhi ra truong Sinh Vien duoc gioi thieu viec lam o  cac khu cong nghiep phan\nmem"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 18,
    "text": "172.5.6. Tạo liên kết (link)\nLiên k ết là đặc trưng c ủa Word Wide Web, chúng cho phép ng ười dùng chuy ển từ\nmục này sang m ục khác trong c ùng trang Web ho ặc chuyển từ trang Web n ày đến\ntrang Web khác.\nLiên kết trong c ùng trang Web\nCho phép l iên đ ến các mục b ên trong m ột trang Web. Để l àm đư ợc điều n ày trư ớc\ntiên ph ải tạo điểm neo (Bookmark) v à sau đó t ạo liên kết đến điểm neo n ày.\nCú pháp:\nTạo điểm neo: <A NAME =”tên đi ểm neo cần tạo”>nội dung</ A>\nTạo liên kết: <A HREE =”#tên đi ểm neo cần li ên kết đến”></ A>\nDấu “#” báo cho tr ình duy ệt biết li ên kết là nội bộ b ên trong trang Web.\nVí dụ: Xét đo ạn lệnh sau:\n<HTML>\n<HEAD><TITLE>Hyperlink</TITLE></HEAD>\n<BODY>\n<P><A HREE=”#Ch1”>Chuong 1</A></P>\n<P><A NAME=”Ch1”>Chuong 1:</A></P>\n<P>Bai 1: Mot so kh ai niem lien quan den mang may tinh</P>\n<P>Bai 2; Lap trinh voi ngon ngu sieu lien ket HTML</P>\n</BODY>\n</HTML>\nTạo liên kết đến các trang Web khác\nCú pháp: <A HREE =”URL”></ A>\nVí dụ:\n<A HREE =”http://www.yahoo.com ”>Yahoo</ A>: liên k ết đến trang chủ\nYahoo.\n<A HREE =”home.htm ”>Home</ A>: liên k ết đến trang có t ên home.htm\ntrong cùng thư m ục.\n<A HREE =”javascript:window.open() ”>Click</ A>: g ọi Open của\nJavaSript.\n<A HREE =”code.zip ”>Download</ A>: m ở cửa sổ tải tập tin nén\n“code.zip”.\n<A HREE =”mailto: xuanhung@yaho o.com ” > my mail</ A>: th ực hiện\nviệc gửi mail.\n<A HREE =”news.htm” TARGET =_blank>News</ A>: m ở trang Web có\ntên “news.htm ” trong c ửa sổ đ ược định nghĩa bởi thuộc tính TARGET,\ntrong đó TARGET mang m ột trong những giá trị sau:\nname: Nạp trang news.htm l ên cửa sổ hoặc Frame có t ên Name.\n_blank: Nạp trang news.htm v ào một cửa sổ trống mới, cửa sổ mới n ày\nkhông có tên.\n_parent: Nạp trang news.htm v ào cửa sổ cha gần nhất của trang Web\nhiện hành.\n_self: Nạp trang news.htm v ào cùng c ửa sổ với trang Web hiện h ành."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 19,
    "text": "18_top: Nạp trang news.htm v ào cửa sổ cao nhất.\n2.5.7. Một số ký tự đặc biệt trong HTML\nVì HTML dùng các ký t ự  ‘<’, ‘>’ để đánh dấu các tag, do đó để thể hiện các ký\ntự đặc biệt n ày ta phải dùng các nhóm ký t ự thay thế.\nKý tự cần hiển thị Nhóm ký t ự thay thế\n< &lt;\n> &gt;\n&  &amp;\n“ &quot\nKhoảng trắng &nbsp\n2.5.8. Các tag dùng thi ết kế bảng\nĐể thiết kế một bảng biểu d ùng các tag cơ b ản sau, với các thuộc tính đi k èm\nnhư sau:\n<TABLE></TABLE > :Bắt đầu một bảng mới với các thuộc tính đi k èm\nsau:\nBGCOLOR : Định màu nền cho bảng\nBORDER : Định độ dày/mảnh của đ ường viền.\nBORDERCOLOR : Định màu cho đư ờng viền.\nBORDERCOLORDARK:  Định màu sậm cho phần hắt bóng của\nđường viền.\nBORDERCOLORLIGHT : Định màu nhạt cho phần sáng h ơn của\nđường viền.\nCELLPADDING : Định khoảng  cách giữa nội dung v à đường viền.\nCELLSPACING : Khoảng cách giữa các ô.\nFRAME: Hiển thị đường viền ngo ài.\nHEIGHT : Định chiều cao bảng.\nWIDTH: Định chiều rộng bảng.\nRULES: Hiển thị đường viền trong.\n<TR> </TR> : Bắt đầu một h àng mới trong bảng với các thuộc  tính sau:\nALIGN/VALIGN : Canh ch ỉnh nội dung h àng theo phương ngang/d ọc\nBGCOLOR : thay đổi màu nền của bảng.\n<TH></TH>, <TD></TD >: Bắt đầu một đề mục mới cho bảng với các\nthuộc tính sau:\nALIGN/VLIGN : Canh ch ỉnh nội dung ô theo ph ương ngang/d ọc.\nBGCOLOR : thay đổi màu nền của ô.\nCOLSPAN : mở rộng ô qua nhiều cột.\nROWSPAN : kéo dài ô xu ống nhiều h àng.\nNOWRAP : Giữ nội dung ô nằm tr ên một dòng.\nWIDTH, HEIGHT : định chiều rộng, cao cho ô.\nTạo bảng\nVí dụ:Tạo một bảng đ ơn giản bằng đoạn HTML sau:\nMã HTML\n<HTML>\n<BODY>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 20,
    "text": "19<HEAD><TITLE>tao bang</TITLE></HEAD>\n<TABLE BORDER=”1”>\n<TR><TH>TEN</TH>\n           <TH>DIEM TB</TH>\n           <TH>LOAI</TH>\n<TR><TD>Nguyen Thi An</TD>\n          <TD>7</TD>\n            <TD>KHA</TD>\n<TR><TD>Nguyen Van Tuan</TD>\n           <TD>8</TD>\n         <TD>Gioi</TD>\n</TABLE></BODY></HTML>\nkết quả hiển thị tr ên màn hình\nTEN DIEM TB LOAI\nNguyen Thi An 7 KHA\nNguyen Van Tuan 8 GIOI\nDùng tag <ROWSPAN> và <COLSPAN> đ ể mở rộng một ô qua nhiều\ndòng, nhi ều cột.\nVí dụ:Xét đoạn HTML sau:\nMã HTML\n<HTML>\n<HEAD><TITLE>BANG DIEM</TITLE></HEAD>\n<BODY>\n<TABLE BORDER=”1”>\n<TR><TD ALIGN=”center” ROWSPAN=”3”>HOC KY I</TD>\n          <TD ALIGN=”center” COLSPAN=”3”>DIEM TB</TD>\n</TR>\n<TR><TD>NGUYEN THI AN</TD>\n          <TD>7</TD>\n            <TD>KHA</TD>\n<TR><TD>NGUYEN VAN TUAN</TD>\n           <TD>8</ TD>\n             <TD>GIOI</TD>\n</TABLE></BODY></HTML>\nKết quả hiển thị tr ên trình duy ệt\nDIEM TRUNG BINH\nNGUYEN THI AN 7KHA HOC KY I\nNGUYEN VAN TUAN 8GIOI"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 21,
    "text": "20Tạo khung viền cho bảng\nCú pháp; <TABLE BORDER= ”n”>\nVới “n” là độ dày của đường viền (tính bằng Pixel), nếu n=0 th ì bảng không có đ ường\nviền.\nThay đổi màu khung vi ền\nCú pháp: <TABLE BORDERCOLOR =”màu”>\nVí dụ:Ta muốn độ dày viền=2 và màu khung vi ền là đỏ thì\n<TABLE BORDER =”2”BORDERCOLOR =”red”>\nTạo màu nền bảng\nCú pháp: < TABLE BGCOLOR= ”màu”>\nMàu nền cho các ô\nCú pháp: <TH BGCOLOR= ”màu”>...</TH>hoặc\n<TD BGCOLOR =”màu”>...</ TD>\nĐịnh kích th ước bảng\nCú pháp: <TABLE WIDTH= ”x”HEIGHT =”y”>...\nVới “x”,”y” thứ tự l à chiều rộng v à chiều cao của bảng.\nĐịnh kích th ước cho ô\nCú pháp: <TH WIDTH= ”x”HEIGHT= ”y”>...</TH> hoặc\n<TD WIDTH= ”x” HEIGHT= ”y”>...</TD>\nCanh bảng ở giữa trang\nCú pháp: <TABLE ALIGN= ”direction”>...</TABLE>\nVới “direction” mang 3 giá tr ị “center”, “left”, “right ” tươngứng với bảng nằm giữa,\ntrái, phải trên màn hình.\n2.5.9. Các tag dùng t ạo Form\nFormlà thành ph ần giao tiếp c ơ bản giữa người duyệt Web với ng ười tạo Web. Dữ\nliệu được nhập v àoFormthông qua các h ộp điều khiển (control) nh ư Textbox,\nCheckbox, Radio button, push button, dropdown listbox...\nCú pháp; <FORM>...</FORM>\nTạo TextBox (hộp nhập liệu)\nTextBox dùng để chứa một d òng văn bản tuỳ ý do ng ười dùng nhập vào. Để tạo\nmộtTexboxta chỉ định thuộc tính TYPE=”text” theo cú pháp sau\nCú pháp: <INPUT TYPE= ”text” NAME= ”name” VALUE= ”value” SIZE=”n”\nMAXLENGTH= ”n”>\nTrong đó “name” là chu ỗi ký tự nhận diện dữ liệu nhập v ào, “value” là  dữ liệu đầu ti ên\nhiển thị trong Textbox và được gửi đến máy chủ khi ng ười duyệt không g õ thông tin\ngì khác,SIZEđịnh kích th ước củaTextBox, MAXLENGTH giới hạn số ký tự nhập\nvàoTextbox.\nKhi muốn chỉ định dữ liệu nhập v àoTextbox dưới dạng mật khẩu(Các ký tự nhập\nvào không đư ợc hiển thị m à thay vào đó là các d ấu ****) ta thay thuộc tính TYPE\n=”password.”\nVí dụ:Tạo mộtTextbox bằng đoạn HTML sau:\nMã HTML\n<HTML>\n<HEAD>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 22,
    "text": "21<TITLE>T ạo TextBox</TITLE>\n</HEAD>\n<BODY>\n<FORM>\n<B>Ten KH:</B>\n<INPUT TYPE=”Text” NAM E=”TenKH” SIZE=20 MAXLENGTH=”255”>\n<BR>\n<B>Mat ma:</B>\n<INPUT TYPE=”password” NAME=”matma” SIZE=8>\n</FORM>\n</BODY>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\nTạo Texbox với  v ùng văn b ản chứa nhiều d òng\nCú pháp: <TEXTTAREA NAME= ”name” ROWS= ”n” COLS= ”m”\nWRAP></TEXTAREA>\nTrong đó “name” là chu ỗi ký tự nhận diện dữ liệu nhập v à, “n” là chi ều cao của v ùng\nvăn bản tính bằng d òng (mặc định n=4), “m” l à chiều rộng của v ùng văn b ản tính bằng\nký tự (giá trị mặc định m=40). D ùng thuộc tínhWRAPđể xuống d òng khi đụng lề.\nTạo nút Radio button (nút chọn Radio)\nRadio là loại nút chỉ đ ược chọn một trong số đó, không thể chọn lựa hai nút c ùng\nlúc. Để tạo một nút chọn Radiota chỉ định thuộc tính TYPE=”radio” như cú pháp\nsau:\nCú pháp: <INPUT TYPE= ”radio” NAME =”name” VALUE= ”data” CHECKED>\nTrong đó “name” v ừa nhận diện dữ liệu vừa li ên kết các nút Radiotrong một nhóm lại\nvới nhau, các nút Radiotrong cùng m ột nhóm th ì có thuộc tínhNAMEgiống nhau,\nđảm bảo một thời điểm chỉ có một nút đ ược chọn. “Data” l à văn bản gửiđến máy chủ\nkhi một nútRadiođược chọn.CHECKED nút đó đư ợc chọn.\nTạo ô chọn (checkbox)\nKhác với nútRadio, Checkbox cho người chọn nhiều nút trong c ùng một nhóm.\nGiống như nútRadio, Checkbox liên kết với nhau thông qua thuộc tính NAME. Ta\nchỉ định thuộ c tínhTYPE=”checkbox” khi t ạo nút chọn Checkbox\nCú pháp: <INPUT TYPE= ”checkbox”  NAME= ”set” VALUE =”value”\nCHECKED>\nTrong đó ch ức năng của các thuộc tính giống nh ư chức năng của nút chọn Radio.\nVí dụ:\nMã HTML\n<HTML>\n<HEAD><TITLE>T ạo TextBox</TITLE></HEAD>\n<BODY>\n<FORM>Trinh do:\n<INPUT TYPE=”radio” NAME=”nn” VALUE=”R1” CHECKED>Dai hoc\n<INPUT TYPE=”radio” NAME=”nn” VALUE=”R2” >Cao dang"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 23,
    "text": "22<INPUT TYPE=”radio” NAME=”nn” VALUE=”R3”>Trung cap\n<INPUT TYPE=”checkbox” NAME=”cc” VALUE=”T1” CHECKED>18 -22<br>\n<INPUT TYPE= ”checkbox” NAME=”cc” VALUE=”T2”>23 -30<br>\n<INPUT TYPE=”checkbox” NAME=”cc” VALUE=”T3”>30 -40<br>\n</FORM>\n</BODY>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt Web\nTạo nút Push Button (nút nhấn)\nĐể tạo nút nhấn ta chỉ định thuộc tính TYPE=”button”\nCú pháp: <INPUT TYPE =”button” VALUE=”nhãn”>\nĐể tạo nút nhấn m à khi ngư ời dùng nhấn vào, dữ liệu của các điều khiển khác đều\nđược đặt về giá trị mặc định lúc khởi tạo, ta chỉ định thuộc tính TYPE=”reset” trong\ntag <INPUT>.\nTạo nút nhấn để kết thúc việc nhập liệu của một Form, ta chỉ định thuộc tính\nTYPE=”submit” trong tag < INPUT>.\nVí dụ:\nMã HTML\n<HTML>\n<HEAD><TITLE>T ạo TextBox</TI TLE></HEAD>\n<BODY>\n<FORM>\n<TEXTAREA NAME=”text” ROWS=”4” COLS=”20”>Lop chuyen vien cong nghe\nthong tin</TEXTAREA><BR>\n<INPUT TYPE=”submit” NAME=”btSubmit” VALUE=”Submit”>&nbsp&nbsp\n<INPUT TYPE=”reset” NAME=”btReset” VALUE=”Reset”>\n</FORM>\n</BODY>\n</HTML>\nKết quả hiển thị tr ên màn hình trình duy ệt Web\nTạo Dropdown Listbox (danh sách)\nDropdown Listbox là danh sách ch ứa nhiều mục.\nĐể tạo danh sách tr ên ta dùng tag < SELECT >, mỗi mục của Dropdown Listbox\nsẽ được định nghĩa bằng tag < OPTION >. Để đặt một mục  chọn trong Dropdown\nListbox là mặc định ta th êm vào thu ộc tínhSELECTED  trong tag < OPTION >\nVí dụ:\nMã HTML\n<HTML>\n<HEAD><TITLE>T ạo list</TITLE></HEAD>\n<FORM>\n<SELECT NAME=”MAU”>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 24,
    "text": "23<OPTION VALUE= “vang” SELECTED>Mau vang</OPTION>\n<OPTION VALUE= “xanh” SELEC TED>Mau do</OPTION>\n<OPTION VALUE= “do” SELECTED>Mau xanh</OPTION>\n</SELECT>\n</FORM>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt Web\nĐể tạo một ListBox cho phép hiển thị, chọn nhiều mục ta d ùng thêm thu ộc tính\nMULTIPLE  vớiSIZE=”n”, n là s ố mục <SELECT  NAME=”MAU” MULTIPLE\nSIZE=”2”>\nKhi đó kết quả trên trình duy ệt là:\n2.6. Các tag t ạo Frame (khung)\nFramelà thành ph ần cơ bản của trang Web, một trang Web có thể đ ược chia th ành\nnhiềuframe, mỗiframe sẽ chứa một trang Web ri êng.\n2.6.1. Tạo Frame có dạng h àng\nĐể chia một trang Web th ành nhiều Frame ta d ùng tag <FRAMESET> đ ặt ngay\nsau tag </HEAD>.\nCú pháp:\n<FRAMESET ROWS= ”a,*,b”>\n<FRAME NAME =”đặt tên frame”  SRC=”tên tập tin sẽ hiển thị ở Frame\nnày”>\n</FRAMESET>\nTrong đó:\na: Chiều cao của Frame đầu tiên\n*: Chiều cao của Frame thứ hai là khoảng trống c òn lại.\nb: Chiều  cao của Frame thứ 3\nNếu ta sử dụng nhiều dấu “*” th ì không gian còn l ại của cửa sổ sẽ đ ược chia đều cho\ncác Frame có d ấu “*”.\nVí dụ:\nMã HTML\n<HTML>\n<HEAD><TITLE>T ạo Frame</TITLE></HEAD>\n<FRAMESET ROWS=”100,*,*”>\n<FRAME  NAME=”tren” SRC=”khungtren.htm”>\n<FRAME  NAME=”tren” SRC=”khunggiua.htm”>\n<FRAME  NAME=”tren” SRC=”khungcuoi.htm”>\n</FRAMESET>\n</HTML>\nkết quả hiển thị tr ên màn hình"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 25,
    "text": "24Thêm thanh cu ộn cho Frame ta d ùng thuộc tínhSCROLL ING = yes/no  trong tag\nFRAME tươngứng đểẩn/hiện thanh cu ộn. Nếu không có thuộc tính SCROLLING\nthì thanh cu ộn sẽ xuất hiện khi cần thiết.\nThêm thu ộc tínhNORESIZE  vào tag FRAME cho Frame tương ứng để không\ncho người dùng thay đ ổi kích th ước của Frame đó.\nThêm thu ộc tínhFRAMEBORDER =”yes/no/0” vào tag < FRAME> để hiện/ẩn\nkhung viền cho Frame. Chọn “yes/0” cho tr ình duyệt Internet Explorer v à “yes/no”\ncho trình duy ệt Netscape.\nThêm thu ộc tínhBorder vào tag < FRAME> để định độ d ày mỏng viền của Frame.\nThêmFramespacing =”n” vào tag < FRAME> để định khoảng cách từ viền khung\ntới nội dung trong khung.\n2.6.2. Tạo Frame có dạng cột\nCú pháp: <FRAMESET COLS= ”a,*,b”>\n<FRAME NAME =”đặt tên frame” SRC=”tên tập tin sẽ đ ược hiển thị ở\nFrame này ” >\n</FRAMESET>\ný nghĩa của các thuộc tính t ương tự tạo Frame có dạng h àng.\n2.6.3. Kết hợp tạo Frame vừa dạng h àng vừa có dạng cột\nTrong một trang Web việc tạo Frame th ường được kết hợp giữa tạo Frame có dạng\nhàng và Frame có d ạng cột.\nVí dụ:Trong ví d ụ này ta chia trang Web thà nh 4 Frame:1 Frame trên, 1 Frame trái, 1\nphải và 1 Frame dư ới.\nMã HTML\n<HTML>\n<HEAD><TITLE>Danh sach cac mon hoc</TITLE></HEAD>\n<FRAMESET ROWS=”60,*,40”>\n<FRAME  NAME=”tren” SRC=”tren.htm”>\n<FRAMESET COLS=”150,*”>\n<FRAME  NAME=”trai” SRC=”trai.htm”>\n<FRAME  NAME=”phai” SRC=”phai.htm”>\n</FRAMESET>\n<FRAME  NAME=”duoi” SRC=”duoi.htm”>\n</FRAMESET>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\n2.7. Các hi ệu ứng Dynamic HTML (DHTML)\n2.7.1. Tạo chuỗi ký tự chuyển động\nCú pháp: <MARQUEE></MARQUEE>\nCác thuộc tính:\nBEHAVIOR =type, type có th ể là: scroll đ ể chuỗi ký tự bắt đầu từ một\nbên màn hình và bi ến mất ở b ên kia, slide đ ể chuỗi bắt đầu tại một b ên"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 26,
    "text": "25màn hình và d ừng lại ở b ên kia, alternate đ ể chuỗi bắt đầu b ên này màn\nhình và chuy ển động ng ược lại khi đến b ên kia.\nDIRECTION =”left/right”: đ ịnh hướng bắt đầu chạy.\nLOOP=n: số lần chuyển động ngang qua m àn hình, n ếuLOOP=infinite\nthì chuỗi sẽ xuất hiện li ên tục.\nVSCROLLAMOUNT= n : tốc độ chuyển động.\nSCROLLDELAY= n: thời gian ngừng sau một v òng chạy.\nNếu không có các t huộc tính trên thì chuy ển động lặp đi lặp lại từ lề phải sang lề trái\nvới tốc độ=6 (pixel) v à thời gian dừng=90 giây.\nVí dụ:Ta xét đo ạn chương trình sau:\nMã HTML\n<HTML>\n<HEAD>\n<TITLE>Chuoi ky tu chay\n</TITLE>\n</HEAD>\n<p><font color=”red” FACE=”VNi -times” SIZE=”6”></p>\n<MARQUEE BEHAVIOR=scroll DIRECTION=”left” LOOP=infinite\nSCROLLDELAY=”60” BGCOLOR=”turquoise”>L ớp chuyên viên công ngh ệ thông\ntin\n</MARQUEE>\n</HTML>\nKết quả hiển thị tr ên trình duy ệt\n2.7.2. Thay đ ổi hình dạng chuột khi đi qua một ô tron g bảng\nCú pháp: <TD STYLE= ”cursor: thu ộc tính của cursor” >\nCác thuộc tính và các dạng cursor t ươngứng.\nAuto Hand Move Text Wait Help Default Crosshair\nBeam_r.cur Harrow.cur Move_im.cur Beam_r.cur Busy_m.cur Help_l.cur Larrow.cur Lcross.cur\nVí dụ:Đoạn chương trình sau mô ph ỏng các dạng Cursor\n<HTML>\n<HEAD><TITLE>Cursor</TIT LE></HEAD>\n<TABLE BORDER=”1’>\n<TR>\n           <TD STYLE=”cursor:auto”>auto\n            <TD STYLE=”cursor:hand”>hand\n            <TD STYLE=”cursor:move”>move\n             <TD STYLE=”cursor:text”>text\n            <TD STYLE=”cursor:wait”>wait\n            <TD STYLE=”cursor:help”>help\n            <TD STYLE=”cursor:default”>default"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 27,
    "text": "26            <TD STYLE=”cursor:crosshair”>crosshair\n</TABLE>\n</HTML>\nBài tập chương 2\nBài 1: Thiết kế trang chủ ch ương trìnhđào tạo chuyên viên ( http://cv.citd.edu.vn ),\ntrang gồm 3 Frame nh ư hình sau, toàn b ộ trang sử dụng font chữ l à “Times New\nRoman”. Frame trên cùng g ồm có một h ình bêntrái, bên ph ải là các dòng ch ữ chạy.\nFrame bên trái là các m ục cần đưa tin. Frame gi ữa dùng để hiển thị nội dung tin.\nBài 2: Thiết kế trang Web Giáo dục\n(http://www.saigonnet.vn/giaod uc/thong_tin_tuyen_sinh.htm )\nBài 3:Thiết kế trang Web th ường truy cập có địa chỉ sau:\n-http://citd.vn.edu.vn  (trang ch ủ trung tâm tin học TP.HCM)\n-http://www.vnexpress.net\n-http://www.saigonnet.vn\n-http://www.vnn.vn\n-http://yahoo.com\n-http://www.hcmuns.edu.vn\n-http://www.google.com\nGhi chú:\n-Để xem mãHTMLcủa trang Web hiện h ành ta vào Menu sau đó\nchọn View->Source.\n-Để lưu trang Web hi ện hành ta vào menu sau đó ch ọn File->Save\nas\nChương 3 :GIớI THIệU NGÔN NGữ SCRIPT\nVBSCRIPT Và JAVASCRIPT\n1.Giới thiệu ngôn ngữ vbscript v à JavaScript\nVBscript vàJavaScript là ngôn ng ữ lập ra để chạy đ ược trên trình duy ệt, các đoạn\nchương tr ình viết bằng ngôn ngữ n ày được nhúng v ào các trang HTML. Các đo ạn\nchương tr ình này có kh ả năng:\nĐược thực thi khi một sự kiện n ào đó trên trang Web x ảy ra như:\nmouseclicked , mouseover,...\nXử lý các th ành phần trên trang Web như: thay đ ổi màu chữ, font\nchữ, thay đổi ảnh,...\nCú pháp c ủaVBScript  gần giống với cú pháp ngôn ngữ lập tr ìnhVisualBasic\nvà được Microsoft phát triển, trong khi cú pháp của JavaScript gần giống với cú  pháp\ncủa ngôn ngữ lập tr ình C vàđược NetsCape phát triển.\nVBScript không phân bi ệt chữ hoa v à chữ thường trong khi JavaScript th ì lại\nphân biệt chữ hoa v à chữ thường.\nJavaScript được hỗ trợ tr ên hầu hết các tr ình duyệt, cònVBScript chỉ được hỗ\ntrợ tốt nhất ở trình duyệt Internet Explorer.\nCũng giống nh ư các ngôn ng ữ lập trình khác các ki ểu dữ liệu thông dụng đ ược\ndùng VBScript và JavaScript là: ki ểu số, kiểu chuỗi, kiểu luận lý,...Tuy nhi ên cách"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 28,
    "text": "27định nghĩa các kiểu dữ liệu giữa VBScript  vàJavaScript có sự khác nhau. Cách khai\nbáo các hàm c ũng khác nhau. Cách sử dụng các h àm thư vi ện có sẵn cũng khác nhau.\n2. ngôn ng ữ vbscript\n2.1. Chú thích m ột dòng lệnh\nChú thích trong VBScript tương tự nhưVisual Basic bắt đầu bằng ký tự nháy\nđơn (‘). D ấu chú thíc h chỉ có tác dụng tr ên một dòng. Dấu chú thích l àm cho các dòng\nlệnh rõ ràng và d ễ hiểu đối với ng ười thiết kế ch ương trình. Khi th ực thi, trình biên\ndịch bỏ qua d òng ghi chú này.\n2.2. Cách khai báo bi ến, hằng, mảng\n2.2.1. Khai báo bi ến\nDùng từ khóaDimđể khai báo biến, biến trong ngôn ngữ VBScript không cần\nchỉ định kiểu nh ư trong ngôn ng ữ lập trình cấu trúc. Các biến không cấu trúc đ ược\nxem là biến vô hướng (variant) có thể chứa và tự chuyển đổi hầu hết các kiểu dữ liệu.\nCú pháp: Dim tên_biến1, tên_biến2,tên_biến3,...\nCác biến được cách nhau bởi dấu phẩy “,”.\nTuy nhiên trong VBScript không nh ất thiết phải khai báo biến tr ước khi sử\ndụng. Để y êu cầu các biến phải đ ược khai báo tr ước khi sử dụng ta d ùng lệnh “Option\nExplicit” đặt trước lệnh đầu ti ên củađoạn chương trình.\nVí dụ: Dima\na = 3\nGhi chú:\nBiến không phân biệt chữ hoa/th ường\nChiều dài tên biến không v ượt quá 255 ký tự.\nTên biến phải bắt đầu bằng 1 ký tự chữ cái v à biến không phép chứa dấu\nchấm “.”\n2.2.2. Khai báo h ằng\nHằng được định nghĩa bằ ng từ khoáConst.Chỉ có thể sử dụng giá trị của hằng\nchứ không thể thay đổi nội dung hằng.\nVí dụ: Const ten = “Nguyen Van Tuan”\n2.2.3. Khai báo m ảng\nMảng một chiều\nDimTen_mang  (kích thư ớc của mảng)\nSố phần tử tối đa của mảng tr ên= Kích thư ớc của mảng +1.\nChỉ số của phần tử đầu ti ên của mảng bằng 0, để truy xuất đến phần tử có chỉ số\n“i” ta dùng Ten_mang (i);.\nVí dụ: Dim A( 20);thì mảngAcó thể chứa tối đa 21 phần tử\nMảng 2 chiều\nDimTen_mang (dòng, cột)\nChỉ số của phần tử ở d òngđầu tiên và cột đầu tiên là (0,0).\nĐể truy xuất phần đến phần tử có chỉ số d òng i, chỉ số cột j ta d ùngB(i,j).\nVí dụ: Dim B (5,10); M ảngBcó thể chứa 6 d òng và 11 c ột.\nTrongVBScript ta muốn khai báo một mảng động th ì khi khai báo m ảng ta\nkhông định rõ kích thước cho mảng. Tức kí ch thước của mảng có thể thay đổi trong\nquá trình thao tác, dùng hàm ReDimđể thay đổi kích th ước của mảng động.\nTrongVBScript có thể khai báo một mảng có 60 chiều."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 29,
    "text": "282.3. Các ki ểu dữ liệu\nTrongVBScript  chỉ có một kiểu dữ liệu duy nhất l àVariant. Đây là kiểu dữ\nliệu có thể chứa các loại dữ liệu từ kiểu chuỗi, kiểu số cho đến các loại dữ liệu có cấu\ntrúc như ki ểu bản ghi (record). Kiểu dữ liệu n ày cũng là kiểu dữ liệu trả về của các\nhàm và các th ủ tục được viết bằng ngôn ngữ VBScript .\nTuỳ theo ngữ cảnh s ử dụng m à một biếnVariant mang giá tr ị là kiểu số, kiểu\nchuỗi (hay bất kỳ kiểu dữ liệu n ào khác).\nVí dụ:Trong biểu thức a=b+1997, th ì biến a và biến b mang kiểu dữ liệu l à kiểu số.\nTrong biểu thức a=b+”1997” th ì biến a và biến  b có kiểu dữ liệu l à kiểuchuỗi.\nCác kiểu dữ liệu m à một biếnVariant có thể lưu trữ.\nCác kiểu dữ liệu ý nghĩa\nBoolean kiểu luận lý True hoặc False\nByte Số nguyên có giá tr ị từ 0 đến 255\nInterger Số nguyên có giá tr ị từ-32768 đến 32768\nCurrency Từ -922,337,203,685,477,5808 đ ến\n922,337,203,685,477,5807\nLong Số nguyên từ-2,147,483,648 đ ến 2,147,483,647\nSingle Số thực, có giá trị từ 3.402823E38 đến 1.401298E -45 cho\ncác số âm, từ 1.401298E -45 đến 3.402823E38 cho số d ương\nDouble Số thực, có giá trị từ 1.79769313486232E308 đến\n4.94065645841247E -324 cho các s ố âm,\n4.94065645841247E -324 đến 1.79769313486232E308\nDate(time) chứa giá trị ng ày từ 01.01.100 đến 31.12.9999\nString Chuỗi ký tự có thể chứa 2 tỉ ký tự\nEmpty dữ liệu chưa được khởi tạo\nNull Null\nObject Chứa đối tượngtrênFormnhư hộp văn bản, nh ãn, nút\nnhấn,...\nError chứa mã lỗi\nĐể chuyển đổi dữ liệu n ày sang ki ểu dữ liệu khác ta d ùng các hàm thư vi ện\nCbyte (kiểu byte), Cdate (kiểu ngày),CInt (integer), CStr (string), SBool\n(bool),CDbl (double), CLng (long),CSng (Single)\nMuốn biết kiểu dữ liệu m à một biến có kiểu Variantđang lưu tr ữ ta dùng hàm\nthư việnVarType.\n2.4. Các toán t ử cơ sở\nToán tử gán (=)\nTên_biến = Biểu thức.\nVới các biến có kiểu dữ liệu tổng quát, để gán giá trị cho biến chúng ta d ùng, ta\nphải dùng lệnhSet như sau:\nSet tên_bi ến = Biểu thức\nToán tử tính toán\n+(cộng),-(trừ), *(nhân), \\(chia lấy phần nguy ên), /(chia làm tròn), ^(lu ỹ thừa), mod\n(chia lấy phần d ư)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 30,
    "text": "29Toán tử nối chuỗi\nDùng &: Ví dụ: S = “Dai” & “ ” & “hoc”\nDùng + : Ví dụ: S = “Dai” + “ ”  + “hoc”\nToán tử so sánh\n=(bằng), > (lớn h ơn), >= (l ớn hơn hay bằng), < (nhỏ h ơn), <= (nh ỏ hơn hay bằng),\n<> (khác).\nKết quả của một biểu thức so sánh sẽ thuộc về kiểu lý luận (True/false), khi cần nối\ncác biểu thức so sánh với nhau ta d ùng toán t ử luận lýAnd, Or\n2.5. Các l ệnh xử lý điều kiện rẽ nhánh\nBạn có thể sử dụng các lệnh rẽ nhánh if...then, if...then...else  hoặcSelect case\nđể ra điều kiện rẽ nhánh dựa tr ên các biểu thức so sánh.\n2.5.1. Cấu trúc If...Then\nDùng để xử lý lệnh khi biểu thức so sánh  củaIf trả về giá trị True\nVí dụ:\nDim myDate\nmyDate = #2/12/2000#\nif myDate < Now Then myDate = Now\nend if\n2.5.2. Cấu trúc If...Then...Else\nMở rộng hơn cấu trúcIf...Else, khi biểu thức so sánh của If trả về giá trị True\nthì khối lệnh sau mệnh đề Thensẽ được thực hiện. Ng ược lại biểu thức so sánh của If\ntrả về giá trị False thì khối lệnh sau Else sẽ được thực hiện.\nVí dụ:\nDim myValue\nmyValue = 13\nif myValue mod 2 = 0 Then\ndocument.Write(myValue)\n           document.Write(“la so chan”)\nelse\n        document.Write(myValue)\n           document.Write(“la so le”)\nend if\n2.5.3. Cấu trúc Select Case\nCấu trúcSelect Case  cho phép l ựa chọn nhiều tr ường hợp để ra quyết định thực\nthi. Theo cú pháp sau:\nSelect case  <tên biến>\nCase <giá trị 1>\nKhối lệnh 1\nCase <giá trị 2>\nKhối lệnh 2\n...\nCase Else\nKhối lệnh i"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 31,
    "text": "30End Select\nVí dụ:\n<HTML>\n<HEAD><TITLE>Select case</TITLE></HEAD>\n<BODY>\n<SCRIPT LANGUAGE=”VBScript”>\nDim Thang\nThang = 13\ndocument.Write(“Thang”)\ndocument.Write(Thang)\nSELECT C ASE Thang\nCASE 2: document.Write(“co 28 ngay”)\nCASE 1,3,5,7,8,10,12 : document.Write(“co 31 ngay”)\nCASE 2: document.Write(“co 28 ngay”)\nCASE 4,6,9,11 : document.Write(“co 30 ngay”)\nCASE ELSE document.Write(“khong hop le”)\nEND SELECT\n</SCRIPT></BODY></HTML>\nMệnh đề Case Else trong cú pháp Select case d ùng trong trư ờng hợp tất cả các\nphép so kh ớp của mệnh đề Case không xảy ra.\n2.6. Cấu trúc lặp\nTương tự các ngôn ngữ lập tr ình khác, VBScript  cung cấp các lệnh lặp dựa tr ên\nđiều kiện. D ùng cấu trúcExit for, Exit  do, Exit While để thoát khỏi cấu trúc lặp\ntươngứng.\n2.6.1. Cấu trúc Do...Loop\nCấu trúcDo...Loop  lặp trong khi điều kiện kiểm tra của Loop cònđúng. Có 4\ncấu trúc lặp theo cú pháp sau:\nDo While  <biểu thức điều kiện>\nKhối lệnh\nLoop\nDo\nKhối lệnh\nLoop While <biểu thức điều kiện>\nDo\nKhối lệnh\nLoop Until  <biểu thức điều kiện>\nVí dụ:Tính giá tr ị N!\nDim N, i, S\nN=3\nS=1\ni=1\nDO WHILE (i<=n)\nS=S*i\ni=i+1"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 32,
    "text": "31LOOP\n2.6.2. Cấu trúc While...Wend\nLặp trong khi điều kiện kiểm tra của While cònđúng. Theo cú pháp sau:\nWhile <biểu thức điều kiện>\nKhối lệnh\nWend\nVí dụ:Tính tổng S = 1+2+3+5+...+N\nDim i,S,N\nN=5\ni=1\nS=0\nWHILE (i<=N)\nS=S+i\ni=i+2\nWend\n2.6.3. Cấu trúc For...Next\nCấu trúcFor...Next lặp với số lần lặp xác định, cấu trúc n ày có 2 dạng sau:\nFor <biến chạy = chỉ số đầu> To <chỉ số cuối>\nKhối lệnh\nNext\nFor <biến = chỉ số đầu> To <chỉ số cuối> Step <b ước nhảy>\nKhối lệnh\nNext\nVí dụ:Tính tổng S = 1+2+3+4+...+N\nDim d\n‘Tao doi tuong  DictionarySet\nd = CreateOject(“Scripting.Dictionary”)\n‘ Luu cac phan tu vao tap hop\nd.Add “0”, ”Athens”\nd.Add “1”, “Belgrade”\nd.Add “2”, “Cairo”\n‘ Duyet va in cac phan tu trong tap hop\nFor Each I in d\n           document.Write(D.Item(I))\n        Next\n2.6.4. Cấu trúc For each...Next\nCấu trúcFor each...Next lặp với mỗi phầ n tử trong tập\nVí dụ:\nDim d\n‘Tạo doi tuong DictionarySet\nd=CreateObject(“Scripting.Dictionary”)\n‘Luu cac phan tu vao tap hop\nd.Add “0’,”Athens”"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 33,
    "text": "32d.Add ”1”, “Belgrade”\nd.Add “2”, “Cairo”\n‘ Duyet va in cac phan tu trong tap hop\nFor each i in d\ndocument.Write (D.Item(I))\n2.7. Khai báo hàm và th ủ tục\n2.7.1. Khai báo hàm\nFunction Tên_hàm (các tham s ố)\nKhối lệnh\nEnd Function\nVí dụ:Xây dựng hàm tính di ện tích hình tròn khi bi ết bán kính\nFunction DienTich(R)\n           Dim S\n            S = 3.14*R*R\n     DienTich=S\n             document.Write(S)\nEnd Function\n2.7.2. Khai báo th ủ tục\nSubTên_thủ_tục(các tham số)\nkhối lệnh\nEnd Sub\nVí dụ:Xây dựng thủ tục gọi sử dụng h àm DienTich đ ã viết trên\nSub SuDung()\n       DienTich(5)\nEnd Sub"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 34,
    "text": "33Chương3. Ngôn ngữ JAVASCRIPT\n3.1. Chú thích m ột hay nhiều d òng lệnh\nDòng lệnh được kết thúc bằng dấu chấm phẩy “;” ở cuối d òng. Tập hợp các\ndòng lệnh nằm trong hai dấu ngoặc đ ơn {} gọi là tập lệnh.\nMuốn chú thích một d òng lệnh ta dùng dấu “//” đặt tr ước dòng lệnh muốn chú\nthích. Mu ốn chú thích nhiều d òng lệnh thì tađặt các dòng lệnh cần chú thích giữa hai\ndấu “/*” và “*/”.\n3.2. Cách khai báo bi ến, mảng\n3.2.1 Cách khai báo bi ến\nDùng từ khoávarđể khai báo biến. Biến trong JavaScript không cần định r õ\nkiểu dữ liệu của biến lúc khai báo. Tuy nhi ên, khi gán giá tr ị cho biến, JavaScript\nphân biệt kiểu của các giá trị m à bạn gán. Trong JavaScript bắt buộc phải khai báo\nbiến trước khi sử dụng.\nvar tên_biến1= trị1,tên_biến2=trị2,...;\nChú ý:\n+ Biến có phân biệt chữ hoa/thường.\n+ Biến phải bắt đầu bằng ký tự chữ cái.\n+ Biến không cho phép có khoảng trắng, không cho phép có dấu ghạch ngang.\n3.2.2. Khai báo m ảng\nMảng một chiều\nvar A = new Array(10)\nMảngAnói trên có 10 ph ần tử, và chỉ số phần tử đầu ti ên của mảng bắ t đầu 0,\nmuốn truy xuất đến phần tử có chỉ số i, ta d ùngA[i].\nMảng 2 chiều\nKhai báo Alà mảng 2 chiều có 10 d òng, 20 cột.\nvar A =new Array(10),i = 0;\nfor (i = 0; i<10; i++)\nA[i] =newArray(20);\nĐể truy xuất đến phần tử có chỉ số d òng i, chỉ số cột j ta  dùng A[i][j].\n3.3. Các ki ểu dữ liệu trong JavaScript\nTrong JavaScript thư ờng sử dụng các kiểu dữ liệu sau:\n3.3.1. Dữ liệu kiểu số\nKiểu số có hai loại thông dụng l à kiểu số nguy ên và kiểu số thực.\nVí dụ: var a = 10, b = 100, ten = “Nguyen Van Ba”\nCác phép toán trên ki ểu số\n+ , += ,- ,- = , * , *= , / , /= , %(chia l ấy phần d ư) , ++ (phép tăng m ột đơn\nvị),-- (phép giảm một đ ơn vị).\nCác phép so sánh: < (nh ỏ), <= (nhỏ h ơn hay bằng), > (lớn), >= (lớn h ơn hay\nbằng), = = (bằng), != (khác).\n3.3.2. Kiểu ký tự\nCác ký tự được nằm giữa 2 nháy đ ơn. Ngoài ra c òn có các ký t ự đặc biệt sau\nđây:"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 35,
    "text": "34Ký tự ý nghĩa\n\\n Xuống dòng mới\n\\t Ký tự tab\n\\r Về đầu dòng\n\\b Ký tự khoảng trắng\nVí dụ:  var ch= “A”, c= “B”;\nCác phép toán trên ký t ự\n+, += (cộng 2 ký tự)\nPhép toán so  sánh : >, >=, <, <= ,= =, !=\n3.3.3. Kiểu chuỗi\nChuỗi là tập hợp các ký tự.\nMột hằng chuỗi đ ược nằm giữa hai dấu nháy đôi “\nVí dụ: var hoten= “Le Van Tam”;\nCác phép toán trên chu ỗi\nPhép nối chuỗi: +, +=\nPhép so sánh: <, <=, >, >=, = =, !=\n3.3.4. Kiểu luận lý\nMột biến có kiểu luận lý tồn tại 1 trong 2 trạng thái: true,false.\nVí dụ: var t = true, f = false;\nCác phép toán trên ki ểu luận lý\nPhép so sánh: <, <=, >, >=, = =, !=\nPhép logic: && (và), || (ho ặc), ! (phủ định).\n3.3.5. Kiểu ngày\nMô tả thông tin về: Ngày, Tháng, Năm, gi ờ, phút, giây của hệ thống.\nVí dụ: var now = new Date();\nCác hàm l ấy ngày giờ trong đối t ượng Date nh ư sau:\nTên hàm Mô tả\nGetDate() Ngày: 1..31\nGetDay() Ngày trong tu ần: 0 (chủ nhật), 1 (thứ 2)\nGetHours Giờ: 0..23\nGetMinutes Phút:0..59\nGetMonth Tháng: 0 (tháng 1)...11 (tháng 12)\nGetSeconds Giây:0..59\nGetTime Giờ theo mili giây\nGetYear Năm\nVí dụ:Ví dụ lấy ngày hệ thống và hiển thị lên trình duy ệt\nMã HTML\n<HTML>\n<HEAD>\n<TITLE>Outputting Text</TITLE>\n</HEAD>\n<BODY>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 36,
    "text": "35<SCRIPT LAN GUAGE=”javascript”>\n<!—\nvar now = new Date();\nvar ngay = “”;\nngay=”hom nay la ngay”+ now.getDate();\nngay+=”thang”+ now.getMonth();\nngay+=”nam”+ now.getYear();\ndocument.Write(ngay);\n-->\n</SCRIPT>\n</BODY>\n</HTML>\nNgoài các ki ểu dữ liệu thông dụng tr ên còn có các ki ểu dữ liệu object, null.\n3.4. Các l ệnh xử lý điều kiện rẽ nhánh\n3.4.1. Cấu trúc if\nDùng để xử lý lệnh khi biểu thức của if trả về giá trị true\nif (biểu thức điều kiện)\nKhối lệnh;\n3.4.2. Cấu trúc if...else\nif (biểu thức điều kiện )\nKhối lệnh 1;\nelse\nKhối lệnh 2;\nVí dụ:\nif(a%2==0)\ndocument.Write(a, “là s ố chẵn”);\nelse\ndocument.Write(a, “là s ố lẻ”);\n3.4.3. Cấu trúc switch...case\nCho phép th ực hiện nhiều lựa chọn để ra quyết định thực thi.\nswitch(bi ến)\n{\ncase giá trị 1:\nKhối lệnh 1;\nbreak;\ncase giá trị 2:\nKhối lệnh 2;\nbreak;\n...\ndefault:\nKhối lệnh n;\nbreak;\n}\n3.5. Cấu trúc lặp"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 37,
    "text": "36Dùng câu l ệnhbreak để thoát khỏi cấu trúc lặp khi cần.\n3.5.1. Cấu trúc for\nfor(biểu thức khởi tạo; biểu thức điều kiện; biểu thức  thay đổi)\nKhối lệnh;\nKhối lệnh được thực hiện khi biểu thức điều kiện  cònđúng.\nVí dụ:for(i=0;i<10;i++)\ns+=2*i;\n3.5.2. Cấu trúc While\nWhile(biểu thức điều kiện)\nKhối lệnh;\nKhối lệnh được thực hiện khi biểu thức trong While cònđúng.\nVí dụ:i=0;\nWhile(i<20)\n{\ns+=i;\ni++;\n}\n3.5.3. Cấu trúc do...While\ndo\nKhối lệnh;\nWhile(biểu thức điều kiện);\nKhối lệnh được thực hiện tr ước sau đó kiểm tra biểu thức điều kiện nếu cònđúng thì\nquay lên th ực hiện khối lệnh.\nVí dụ:\ni=0;\ndo\n{\ns+=i;\ni++;\n}While(i<20);\n3.6. Khai báo hàm\nDùng từ khoáfunction để khai báo h àm. Muốn trả về giá trị của h àm ta dùng t ừ\nkhoáreturn.\nfunction tên_hàm( danh sách các tham s ố)\n{\nKhối lệnh;\n}\nVí dụ:\nfunction Add(x,y)\n{\nreturn(x+y);\n}\nvar t;\ndocument. Write(t)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 38,
    "text": "37Chương4. sử dụng vbscript v à javascript trong\ntrang web\n4.1. Chèn đo ạn VBScript/JavaScript  v ào trang HTML\nCác đoạn Script nằm giữa tag < Script> và </Script>, trong đó ghi r õ ngôn ng ữ\nsử dụng để viết m ã chương trình.Các đoạnScript được đặt giữ a cặp tag<HEAD> và\n</HEAD> hay đặt giữa cặp tag <BODY>  Và</BODY>. Tuy nhiên, n ếu đặt giữa tag\n<HEAD> thì cácđoạn mã nàyđãđược đọc và thông d ịch trước các thành phần nằm\ntrong tag <BODY>.\nDùng tag <! -- và--> để báo cho tr ình duyệt không hiển thị các đoạn mã bên\ntrong nếu nó không hiểu tag <SCRIPT> .\nVí dụ:Trong ví d ụ sau ta viết một h àm tính di ện tích h ình vuông (vi ết bằng\nVBScript), m ột thủ tục tính diện tích h ình chữ nhật (viết bằng JavaSript).\nMã HTML\n<HTML>\n<HEAD><TITLE>Tinh dien tich </TITLE>\n<SCRIPT LANGUAGE=”VBSCRIPT”>\n<!--\nFunction DienTichHinhVuong(a)\n               dim tich\n               tich=a*a\n               DienTichHinhVuong=tich\nEnd Function\nDim dt\n          dt=DienTichHinhVuong(5)\n          document.Write(“Dien tich hinh vuong=”)\n       document.Write(dt)\n-->\n</SCRIPT>\n</HEAD>\n<BODY><BR>\n<SCRIPT LANGUAGE=”JAVASCRIPT”>\n<!—\n       Function DienTichTron(R)\n       {\n            var dt;\n            dt=3.14*R*R;\n             return dt;\n       }\nvar D;\nD=DienTichTron(5);\ndocument.Write(“ Dien tich hinh tron=”,D);\n-->"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 39,
    "text": "38</SCRIPT>\n</BODY></HTML>\nkết quả hiển thị tr ên trình duy ệt\nDien tich hinh vuong=25\nDien tich hinh tron=78.5\n4.2. Xuất/nhập dữ liệu trong VBScript v à JavaScript\n4.2.1. Xu ất dữ liệu\nĐối tượngdocument  là đối tượng đại diện  cho trang Web hi ện hành.Cònđối\ntượng window thìđại diện cho cửa sổ m à trong đó trang web hi ển thị.\nĐể xuất dữ liệu ra trang Web ta d ùng hàm writevà hàm writelncủa đối tượng\ndocument theo cú pháp.\ndocument.write (“chuỗi cần hiển thị”)\ndocument.write ln(“chuỗi cần hiển thị”);\nChúng ta có th ể dùng các tag HTML đ ể xuất dữ liệu trong các đoạn Script\nVí dụ: document.write (“<H2>Hello Script </H2>”)\nĐểwriteln (xuất dữ liệu v à về đầu dòng mới)có tác dụng ta phải d ùng kèm theo tag\n<PRE>và</PRE> đứng trước và sau đo ạnScript.\nVí dụ:\n<BODY>\n<PRE>\n<SCRIPT LANGUAGE=”vbscript” >\n<!—\ndocument.writeln(“<H2>Hello JavaScript</H2>”)\n           document.write(“<H3>Hello VBScript</H3>”)\n-->\n</SCRIPT>\n</PRE>\n</BODY>\nĐể hiển thị các hộp thông báo ta d ùng hàm confirm và hàmalert của đối tượng\nwindow. Theo cú pháp sau:\nwindow.alert (“chuỗi cần hiển thị”)\nwindow.confirm (“chuỗi cần hiển thị”)\nĐối vớiVBScript để hiển thị hộp thông báo ta d ùng hàm MsgBox(“chu ỗi cần thông\nbáo”);\n4.2.2. Nh ập dữ liệu\nDùng hàm promt của đối tượng window để nhập giá trị cho biến theo cấu trúc\nsau:\nBiến =window.promt (“chuỗi thông báo”,”trị mặc nhi ên”)\nBiến =InputBox (“chuỗi thông báo”)\n5. xử lý các sự kiện khi t ương tác v ới các thành phần trên trang web\nSự kiện đ ược phát sinh khi ta kích hoạ t (onClick, onMouseOver,\nonMouseOut ...) các thành ph ần trên trang web như các nút đi ều khiển Button,\nhyperlink, ListBox..."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 40,
    "text": "39Để xử lý các sự kiện n ày ta tạohàm xử lý sự kiện  và gánhàm xử lý sự kiện  đó\nchotên sự kiện\n<tên sự kiện>=<h àm xử lý sự kiện>\nVí dụ 1:Tạo 2 nút bấm (OK, Cancel), thủ tục xử lý sự kiện khi Click nút OK đ ược\nviết bằngVBScript , hàm xử lý sự kiện khi nhấn nút Cancel đ ược viết bằng ngôn ngữ\nJavaScript .\nMã HTML\n<HTML>\n<HEAD><TITLE>Click Button </TITLE>\n<SCRIPT LANGUAGE=”VBScript”>\n<!--\nSub SubOk()\nwindow.alert(“Ban da bam nut OK”)\nEnd Sub\n-->\n</SCRIPT>\n<SCRIPT LANGUAGE=”JAVAScript”>\n<!—\n       Function SubCancel()\n       {\n            window.alert(“Ban da bam nut Cancel”);\n       }\n-->\n</SCRIPT>\n</HEAD>\n<BODY>\n<INPUT TYPE=BUTTON  NAME = “Ok” VALUE=”OK”\nLANGUAGE=”VBScript” onclick=”SubOk()”>\n<INPUT TYPE=BUTTON NAME = “Cancel” VALUE=”Cancel”\nLANGUAGE=”JavaScript” onclick=”SubCancel();”>\n</BODY>\n</HTML>\nkết quả hiển thị tr ên trình duy ệt\nVí dụ 2:Kiểm tra tính hợp lệ của dữ liệu nhập từ Form. Nếu thiếu th ì thông báo cho\nngười dùng biết, ngược lại thông báo câu “dữ liệu đ ãđầy đủ”.\nMã HTML\n<HTML>\n<HEAD>\n<TITLE>KIEM TRA DU LIEU NHAP </TITLE>\n</HEAD>\n<BODY>\n<SCRIPT LANGUAGE=”JavaScript”>\nfunction KiemTraForm()"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 41,
    "text": "40{\n<!—lay doi tuong form, dienthongtin la ten Form\nFormObj = document.dienthongtin;\nif(FormObj.Ten.value==””)\n{\nalert(“Chua nhap Ten”);\n        FormObj.Ten.forcus();\nreturn false ;\n}\nelse if(FormObj.Tuoi.value==””)\n{\nalert(“Chua nhap Tuoi”);\n         FormObj.Tuoi.forcus();\nreturn false;\n}\nelse if(FormObj.NgaySinh.value==””)\n{\nalert(“Chua nhap Ngay sinh”);\n        FormObj.NgaySinh.forcus();\nreturn false ;\n}\n       alert(“Thong tin day du”);\n}\n</SCRIPT>\n<FORM NAME=”dienthongtin” method = POST>\nNhap ten\n<INPUT TYPE=TEXT  NAME = “Ten” SIZE=30><BR>\nNhap tuoi\n<INPUT TYPE=TEXT  NAME = “Tuoi” SIZE=30><BR>\nNhap ngay sinh nhat\n<INPUT TYPE=TEXT  NAME = “NgaySinh” S IZE=20 ><BR>\n<INPUT TYPE=BUTTON NAME=”btnSubmit” value=”Chap nhan”\nonClick=”KiemTraForm()”>&nbsp; &nbsp;\n<INPUT type=”RESET” NAME = “btnReset” value=”Tu choi”>\n</FORM>\n</BODY>\n</HTML>\nKết quả hiển thị tr ên màn hình\nBài tập chương 3\nBài 1: Thiết kếForm nhập liệu nh ư hình sau, khi nh ấn chọn nút chấp nhận thì phải\nkiểm tra tính đầy đủ v à hợp lệ của dữ liệu. Nếu thông tin n ào không có ho ặc bị sai th ì"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 42,
    "text": "41yêu cầu người dùng bổ xung. Nếu ng ười dùng nhấn chọn nút không ch ấp nhận thì\nlàm rỗng tất cả các thông tin tr ên Form đ ể chuẩn bị cho lần đăng ký kế tiếp.\nBài 2:Tương tự như bài 1, chúng ta thi ết kế Form đặt h àng mua áo thun qua m ạng\nnhư sau:\nKhi khách hàng nh ấn chọn nút chấp nhận thì phải kiểm tra tính đầy đủ v à hợp\nlệ của dữ liệu. Nếu dữ liệu đúng th ì thông báo câu “ Bạn đãđặt hàng thành công ”,\nnếu không hợp lệ th ì yêu cầu người mua h àng điền thông tin lại cho hợp lệ. Trong\ntrường hợp ng ười đặt hàng nhấn chọn nút bỏ quathì phải làm rỗngcác thông tin trên\nForm để chuẩn bị cho lần đặt mua h àng kế tiếp.\nBài 3: Chúng ta thi ết kế trang web đăng ký mail của Yahoo\n(http://www.mail.yahoo.com ) khi nhấn vào nút Submit this Form thì ph ải kiểm tra tính\nđầyđủ và hợp lệ của dữ liệu.  Nếu không đúng hay thiếu th ì yêu cầu người dùng nhập\nlại.\nChương 4: l ập trình webđộng với ngôn ngữ lập tr ình asp\n1.giới thiệu về asp\nASp(Active Server Page) ngôn ng ữ lập trìnhứng dụng đ ược chạy b ên phía\nServer.Một trangASP có các đặc điểm sau:\nMột trangASP được lưu với phần mở rộng “. asp”\nCácứng dụng ASPdễ viết, dễ sửa đổi.\nCung cấp chế độ bảo mật tốt v ì các mã code trong trang ASP ng ười duyệt\nweb không th ể thấy được.\nNgôn ngữ Script đ ược dùng thông d ụng nhất trong trang  ASP là VBScript.\nĐược hỗ trợ bởi tr ình chủ Web Server IIS (Internet information server) v à\nPersonal Web Server (PWS là trình ch ủ web được dùng trên win98 ).Tuy\nnhiên, IIS là thông d ụng nhất.\nNgoài ASP còn có m ột số ngôn ngữ lập tr ình webđộng như JSP, PHP ...\nNhư vậy để thực thi một trang ASP ta cần c ài trình ch ủ Web Server IIS.\nĐể cài IIS, sau khi đưa đ ĩa Win2K/WinXP v ào ta chọn menu Start-> Settings -\n> Control Panel -> Add/Remove Programs -> Add/Remove windows\ncomponents -> chọn Internet Information Server s-> Next\n2. nạp một ứng dụng web l ên trình ch ủ iis\nSau khi cài trình web ch ủ IIS, để xem một trang ASP tr ước tiên ta phải nạp ứng\ndụng chứa trang ASP l ên trình ch ủ Web IIS, các b ước thực hiện nh ư sau:\nBước 1: Mở trình chủ web IIS bằng cách v ào menu Start-> Settings ->\nControl Panel -> Administrative Tools -> Internet Services Manager.\nBước 2:Tạo thư mục ảo (Virtual Directory) cho ứng dụng. Thông th ường mỗi\nứng dụng web đ ược đặt trong một th ư mục và được tham chiếu đến thông qua\nđịa chỉ URL.\nCách tạo thư mục ảo: Trên màn hình Internet Information Services ta\nvàoDefault Web Site -> New-> Virtual Directory.\nTrong ô nh ập liệu Alias của hộp thoại Virtual Directory Creation\nWizard ta nhập tên bí danh cho thư m ục ảo, bấm next.\nChọn đường dẫn th ư mục vật lý ch ứa ứng dụng ta quan tâm. Thông\nthường thư mục chứa ứng dụng đ ược đặt trong C:\\Inetpub\\wwwroot,"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 43,
    "text": "42chọn thư mục vật lý chứa ứng dụng xong ta bấm Next để đến m àn hình\ncấu hình bảo vệ và đặt quyền cho th ư mục ảo.\nĐặt quyền cho th ư mục ảo như trong h ình 4.4. Có t ất cả 5 quyền gồm\nRead (cho phép đ ọc nội dung trang),  Runscript  (cho phép th ực thi trang\nkịch bản), Execute  (thực thi các ứng dụng CGI), Write (cho phép ghi\nvào thư m ục ảo),Browse (cho phép xem toàn b ộ nội dung th ư mục thay\ncho trang web m ặc định). Hai qu yềnRead và Run script  là cần thiết để\ntrang ASP có th ể truy xuất đ ược.\nChúng ta đ ặt lại các quyền bảo vệ th ư mục ảo và chế độ bảo mật bằng\ncách nhấn chuột phải l ên thư mục ảo mới tạo, rồi v ào Properties.\nBước 3: Thiết lập trang mặc định cho th ư mục ảo\nKhi máy client gõ m ột địa chỉ Web URL tham chiếu đến một ứng dụng m à\nkhông đưa ra tên trang c ụ thể, lúc n ày trình ch ủ sẽ sử dụng trang mặc định. Ta có thể\nthiết lập một danh sách các trang mặc định, khi ấy IIS sẽ t ìm theo th ứ tựưu tiên từ trên\nxuống dưới.\nĐể lập trang Web mặc định cho th ư mục ảo. Từ m àn hình 4.5 ta vào m ục\nDocument.  Bạn có thể xoá hoặc th êm một trang mặc định v ào danh sách b ằng cách\nchọnAdd hayRemove.\nBước 4:Để xem trang web ta mở tr ình duyệt webInternet Explorer -> gõđịa\nchỉ của URL củ a trang web vào m ụcAddress\nNếu chúng ta đ ã tạo trang mặc định cho th ư mục ảo là “index.asp” thì ta ch ỉ cần gõđịa\nchỉhttp://localhost/Example .\n3. các khái ni ệm cơ bản về asp\n3.1. Thành ph ần cơ bản của một trang A SP\nMột trang ASP thông th ường có 4 phần:\nDữ liệu văn bản\nCác tag HTML\nCác đoạn mã chạy phía Client nằm trong đoạn tag <SCRIPT></SCRIPT>\nCác đoạn mã ASPđược chạy phía Server nằm trong tag <% v à %>\nNhư vậy một trang ASP l à một trang HTML đ ược nhúng th êm phần xử lý viết\nbằng mã HTML.\nTa có thể sử dụng nhiều ngôn ngữ Script khác nhau để viết trang ASP, v ì thế ta\nphải chỉ định Script n ào được sử dụng trong trang, bằng khai báo\n<%LANGUAGE=ScriptLanguage%> ở đầu trang. Ví dụ: Khai báo <%LANGUAGE=\nVBScript%> ở đầu trang để sử dụng ngôn ngữ VBScript.\nVí dụ:Trang ASP sau là s ự kết hợp giữa các đoạn ASP, HTML v à JavaScript. Đo ạn\nchương tr ình sau xu ất hiện ra m àn hình câu thông báo “Good Morning” khi th ời gian\nhệ thống ở thời điểm buổi sáng, c òn thời gian buổi chiều t hì in ra câu “Hello”\n<%@language=VBScript%>\n<HTML>\n<BODY>\n<%\n       Dim dtmHour\n       dtmHour=Hour(Now())\n       if dtmHour<12 Then"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 44,
    "text": "43%>\n<B>Good Morning!</B>\n<%\nElse\n%>\n<B>Hello!</B>\n<%\nEnd if\n%>\n</BODY>\n</HTML>\n3.2. Nhập/Xuất dữ liệu\nĐể xuất dữ liệu của  đoạn chương trình chạy phía Client (đ ược đặt trong cặp tag\n<SCRIPT></SCRIPT>) dùng phương th ứcdocument.write. Tương tự, để xuất dữ liệu\ntrong đoạn chương trình ASP ( đoạn lệnh đ ược đặt trong tag <% v à %>) dùng phương\nthứcResponse.write.\nVí dụ:\nXuất chuỗi: Response.write”Learn ASP”\nXuất hằng kiểu số: Response.write 5\nXuất giá trị của biến a: Response.write a\nĐể nhập dữ liệu ta d ùng phương th ức Request\nCụ thể hai ph ương thức yêu cầu (Request), trả lời (Response ) sẽ được đề cập cụ\nthể ở mục 4.1 v à 4.2\n3.3.Hoạt động của ASP\nKhi một trang ASP đ ược trình duyệt Web y êu cầu, trước tiên Web Server s ẽ\nduyệt tuần tự trang ASP n ày và chỉ thực hiện những câu lệnh kịch bản ASP, kết quả l à\nmột trang thuần HTML sẽ đ ược đưa ra browser. Vi ệc đưa ra kết quả cho browser lầ n\nlượt hay sau khi dịch xong tất cả các kịch bản l à do người tạo lập trang Web qui định.\nNgười dùng sẽ không thấy đ ược các lệnh kịch bản của ASP bởi v ì nóđãđược server\nthực thi xong rồi gửi kết quả về cho browser d ưới dạng trang HTML.\n4. các đối tượng cơ bản trong ASP\nĐối tượng là khái niệm trừu t ượng nói về một “vật thể” (hay một structure) có\nkhả năng lưu trữ dữ liệu v à thao tác trên  các d ữ liệu để phục vụ cho một công việc n ào\nđó. Trong đ ối tượng người ta gọi các dữ liệu l à các thuộc tính còn các thao tác là các\nphương th ức. Các đối t ượng trong ASP cho phép ng ười lập trình giao ti ếp, tương tác\nvới cả server lẫn client. Trong ASP có hai loại đối t ượng là :\nCác đối tượng cơ  bản: Application, Session, Server, Request, Response,\nObjectContext.\nCác thành  phần (component) xây dựng sẵn: Dictionary, FileSystemObject,\nAdRotator, Browser Capabilities...\n4.1. Đối tượng Request\nKhi người dùng yêu c ầu một trang hay đệ tr ình (submit) m ột biểu mẫu (form),\nđối tượngRequest sẽ lưu trữ và cung cấp tất cả các thông t in từ browser (tr ình duyệt\nWeb) gửi đến server, đối t ượng này được xem nh ư là đối tượng nhận dữ liệu. Các tập"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 45,
    "text": "44hợp (collection), thuộc tính (properties) v à phương th ức (method) của đối t ượng này\nđược mô tả nh ư sau:\n4.1.1. Các t ập hợp (Collection) của đối t ượng Request\nĐối tượngRequest cung cấp 5 collection cho phép chúng ta truy xuất tất cả các\nloại thông tin về y êu cầu của browser đối với server. Các collection  của đối tượng\nRequest bao gồm:\nClient Certificate\nMột tập các giá trị của tất cả các tr ường (field) hay các m ục (entry) trong  Client\nCertificate  mà brows ẻ chuyển đi để tr ình cho server khi truy xu ất một trang\nhay tài nguyên. Các thành ph ần của tập đều l à giá trị chỉ đọc (read - only).\nCookies\nCookies là một file văn bản có kích th ước nhỏ được lưu trữ trên máy client.\nMỗi khi người dùng thăm m ột Website, ta có thể bí mật gắn một tập tin chứa các thông\ntin mà mình mu ốn lên đĩa cứng của họ, chẳng hạn nh ư thông tin v ề user, thông tin về\nsố lần truy cập website,...Tuy nhi ên cácCookies không ph ải được truy cập ngẫu nhi ên\nbởi các Website m à chúng đư ợc truy cập bởi các domain tạo ra chúng.\nCácCookies trong đối tượngRequest đều là thuộc tính chỉ đọc (read -only) do\nđó ta chỉ có thể xem các giá trị cookies m à không th ể sửa đổi giá trị của chúng. Để\nlấy giátrị của Cookies ta sử dụng cú pháp sau:\nRequest.Cookies(name)[(key)].attribute\nTrong đó:\nname: tên c ủa cookies (kiểu chuỗi).\nkey: khoá c ủa cookie cần lấy giá trị (kiểu chuỗi).\nattribute: thông tin c ủa cookie, l à một trong các thông số sau:\n+Domain: (chỉ đọc- read only) cookie ch ỉ được gửi cho đối t ượng Request của\ndomain này.\n+Expires: (chỉ ghi- write only) ch ỉ định ngày mà Cookies h ết hiệu lực (expires),\nnếu không chỉ định ng ày thì cookie s ẽ expires khi kết thúc phi ên làm việc.\n+HasKeys : (chỉ đọc– read only) xác đ ịnh khoá của cookie có tồn tại không.\n+Path: (chỉ ghi- write only) n ếu thuộc tính n ày được xác lập th ì chỉ cookie chỉ\nđược gửi cho những Request của đ ường dẫn n ày, nếu không th ì cookie ch ỉ được\ngửi cho những Request thuộc đ ường dẫn của ứn g dụng.\n+Secure: (chỉ ghi- write only) xác đ ịnh cookie có bảo mật hay không.\nMộtcookie có thể chứa đựng một tập hợp các giá trị. Ta nói cookie đó có nhiều\nkhoá.\nVí dụ:\n<HTML>\n<BODY>\n<%\n Dim x, y\n For each x in Request.Cookies\n Response.write(“<P>”)\n If Request.Cookies(x).HasKeys Then"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 46,
    "text": "45    For each y in Request.Cookies(x)\nResponse.write(x & “:” & y & “=” &\n            Request.Cookies(x)(y))\nResponse.write(“<br>”)\n Next\nElse\n     Response.Write(x & “=”& Request.Cookies(x) & “<BR>”)\nEnd If\n Response.write “</p>”\nNext\n%>\n</BODY>\n<HTML>\nForm\nCácFormcho phép ng ười dùng nhập  vào dữ liệu thông qua các control HTML\nnhư edit, radio button, check box,...Khi ngư ời dùng submit m ột biểu mẫu th ì tất cả các\ngiá trị của các control trong phân đoạn < FORM> sẽ được gửi lên Web Server khi đ ặt\ngiá trị của thuộc tính METHOD tro ng tag<FORM>  làPOST.\nCác thành ph ần của đối t ượng này đều là giá trị chỉ đọc (read only).\nĐể truy xuất các giá trị của các control HTMl m à người dùng submit b ằng\nphương th ứcPOST ta sử dụng cú pháp sau:\nRequest.Form( controlname )\nTrong đó controlname  là tên của control m à ta cần lấy giá trị.\nVí dụ:\n<HTML>\n<BODY>\n      Chao ban:\n<%\n     Response.Write(Request.Form(“Ho_Lot”))\n  Response.Write(“ ” & Request.Form(“Ten”))\n%>\n</BODY>\n</HTML>\nQueryString\nKhi người dùng yêu c ầu 1 trang đệ tr ình (submit) m ột biểu mẫu với ph ương\nthứcGET thì tất cả các control HTML trong phân đoạn <FORM>  của biểu mẫu sẽ\nđược Browser gắn v ào URL theo t ừng cặp tên/giá trị.\nQueryString  được dùng để lấy về các giá trị trong một biểu mẫu với ph ương\nthức làGET.Tất cả các thông tin đ ược gửi từ biểu mẫu với ph ương thứcGET sẽ\nđược gắn vào URL trên thanh address c ủa browser v à do đó m ọi người có thể thấy\nđược các thông tin n ày, tuy nhiên lư ợng thông tin đ ược gửi này có giới hạn. Các th ành\nphần của tập đều l à giá trị chỉ đọc (read -only)."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 47,
    "text": "46Để truy xuất các giá trị của các control HTML m à người dùng submit b ằng\nphương th ứcGET ta sử dụng cú pháp sau:\nRequest.QueryString( controlname )\nVí dụ:\n<HTML>\n      Chao ban:\n<BODY>\n     Response.Write(Request.QueryString(“Ho_Lot”))\n  Response.Write(“ ” & Request.QueryString(“Ten”))\n</BODY>\n</HTML>\nServerVariables\nKhi cần lấy giá trị các biến môi tr ường của Server ta d ùng tậpServerVariables\nCú pháp:\nRequest.ServerVariables( variable)\nvới variable chỉ định giá trị g ì ta cần lấy. Sau đây l à một số giá t rị tiêu biểu của\nvariable\nBiến Mô tả\nALL_HTTP Trả về tất cả các header m à client đ ã gửi, luôn luôn\ntheo sau HTTP và vi ết hoa\nAL_RAW Trả về tất cả các header ở dạng thô\nAPPL_MD_PATH Trả về đường dẫn cho ứng dụng d ùng cho\nDLL_ISAPI\nAPPL_PHYSICAL_PATH Trả về đường dẫn vật lý t ươngứng của đ ường dẫn.\nAUTH_PASSWORD Trả về giá trị đ ã nhập vào trên h ộp thoại xác nhận\ncủa client\nAUTH_TYPE Cách thức mà server dùng đ ể kiểm tra xác nhận\nngười dùng(username)\nAUTH_USER Trả về tên của người dùng (username)\nCERT COOKIE Trả về ID duy nhất của client\nCONTEXT_LENGTH Trả về kích th ước của dữ liệu m à client gửi\nCONTEXT_TYPE Trả về kiểu dữ liệu\nGATEWAY_INTERFACE\nHTTP_<headername > Trả về giá trị chứa trong header headername\nHTTP_USER_AGENT Trả về một chuỗi mô tả bro wser gửi yêu cầu\nLOCAL_ADDR Trả về địa chỉ của server m à browser g ửi yêu cầu tới.\nVí dụ:Bạn có thể d ùng vòng l ặp để xem tất cả các biến của server nh ư sau:\n<%\nFor each x in Request.ServerVariables\n      Response.Write(x & “<BR>”)\nNext"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 48,
    "text": "47%>\n4.1.2. Thu ộc tính (Property) c ủa đối tượng Request\nĐối tượngRequest chỉ có một thuộc tính duy nhất đó l àTotalBytes . Thuộc tính\nTotalBytes  là thuộc tính chỉ đọc (read - only), nó tr ả về số byte dữ liệu m à người dùng\nchuyển lên server...\n4.1.3. Phương th ức (method) của đ ối tượng Request\nĐối tượng Request cũng chỉ có một ph ương thức đó là BinaryRead. Phương\nthức BinaryRead đ ược dùng để lấy dữ liệu đ ãđược client POST lên Server. Phương\nthức này trả về một mảng các giá trị.\nCú pháp:\nRequest.BinaryRead(count)\ntrong đó coun t là một con số nguy ên chỉ rõ số byte cần đọc.\nPhương th ức này sẽ không nhận đ ược dữ liệu nếu tr ước đó ta đ ã truy xuất đến\ntạpRequest.Form . Ngược lại nếu ta đ ã gọi phương thức này thì ta s ẽ không nhận\nđược dữ liệu của các control HTML khi truy xuất tập Request.Form .\nVí dụ: Dùng phương th ứcBinaryRead  để đọc dữ liệu m à clientPOST lên và đưa vào\nmột mảng.\n<%\nDim a,b\na = Request.TotalBytes\nb = Request.BinaryRead(a)\n%>\n4.2. Đối tượng Response\nKhi client có yêu c ầu một trang từ server th ì server có nhi ệm vụ thực thi các\nđoạn VBScript trong trang ASP để tạo ra tập tin HTML rồi sau đó gửi cho client. Đối\ntượngResponse  sẽ đảm nhiệm việc chuyển kết quả từ server cho client.\n4.2.1. Các t ập hợp (Collection) của đối t ượng Response\nTập hợp của đối t ượngResponse  chỉ cócookies. Đối tượngResponse  có thể\nxác lập giá trị của bất kỳ cookies nào mà ta mu ốn đặt trên hệ thống của client. Nếu\ncookies không tồn tại trên client thì nó s ẽ được tạo ra.\n4.2.2. Thu ộc tính (property) của đối t ượng Response\nBuffer:Dùng để xác định xem k ết quả tạo ra bởi trang ASP có đ ược giữ lại\ntrong vùng đ ệm hay không. Thuộc tính Buffer nhận 1 trong 2 giá trị l à true hoặc\nfalse. Nếu nhận giá trị True th ì kết quả được tạo ra bởi trang ASP sẽ đ ược\nserver giữ trong v ùng đệm cho đến khi tất cả các script của trang đ ược xử lý\nxong, hay đ ến khi ph ương thứcFlush hoặc phương thức End được gọi. Giá trị\nnày  cần được xác lập tr ước tag <HTML> trong tập tin .asp. C òn nếu thuộc tính\nBuffer nh ận giá trị False th ì kết quả sẽ đ ược gửi đi ngay khi nó đ ược xử lý.\nCú pháp:\nResponse.Buffer [= true | false]\nTrong IIS phiên b ản từ 4.0 trở về tr ước false l à giá trị mặc định c òn từ phiên\nbản 5.0 trở về sau th ì true là giá tr ị mặc định.\nVí dụ 1:Kết quả sẽ không đ ược gửi tới browser cho đến khi kết thúc v òng lặp.\n<%Response.Buffer = true%>\n<HTML>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 49,
    "text": "48<BODY>\n<%\nFor i = 1 to 100 do\n     Response.write (i & “<br>”)\nNext\n%>\n</BODY>\n</HTML>\nVí dụ 2:Kết quả sẽ đ ược gửi tới browser mỗi lần lặp\n<%Response.Buffer = false%>\n<HTML>\n<BODY>\n<%\nFor i = 1 to 100 do\n     Response.wri te (i & “<br>”)\nNext\n%>\n</BODY>\n</HTML>\nCacheControl\nThuộc tính này dùng đ ể xác định xem proxy server có thể cất giữ kết quả đ ược\ntạo ra bởi ASP hay không. Mặc định th ì proxy sẽ không cất giữ. CacheControl  chỉ có\nthể nhận một trong hai giá trị đó l à “public” hoặc “private”. Nếu đặt thuộc tính n ày là\n“private” thì ch ỉ những v ùngcache riêng mới có thể giữ c òn proxy server s ẽ không lưu\ntrữ những trang n ày. Còn n ếu đặt thuộc tính n ày là “public” thì proxy s ẽ cất giữ những\ntrang này.\nVí dụ:\n<% Response.CacheCo ntrol = “Public”%>\nhoặc\n<% Response.CacheControl = “Private”%>\nCharset\nĐây là thu ộc tính kiểu chuỗi, thuộc tính n ày ghép tên c ủa tập ký tự v ào vùng\ncontext-type của đối tượngResponse . Thuộc tính này chấp nhận bất cứ chuỗi ký tự\nnào bất chấp chuỗi đó đún g hay sai. Giá tr ị mặc định l àISO- LATIN-1.\nCú pháp:\nResponse.Charset( charsetname )\nVí dụ:\n<%Response.Charset = “ISO -8859-1”%>\nContextType\nĐây là thu ộc tính kiểu chuỗi, thuộc tính n ày đặt kiểu hiển thị của nội dung\nHTTP cho đ ối tượngResponse . Nếu một tr ang ASP không ch ỉ định thuộc tính\nContextType  thìcontend-type mặc định sẽ l à:content-type:text/html.\nCú pháp:\nResponse.ContentType [= contenttype ]"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 50,
    "text": "49Sau đây là m ột vài giá trị contenttype thông dụng:\n<%Response.ContentType = “text/HTML”%>\n<%Response.C ontentType = “image/GIF”%>\n<%Response.ContentType = “text/JPEG”%>\n<%Response.ContentType = “text/plain”%>\nVí dụ:Đoạn chương trình sauđây sẽ mở một spreadsheet tr ên browser (n ếu bạn đã cài\nđặt Excel v ào máy )\n<%Response.ContextType = “application/vnd.ms -excel”%>\n<HTML>\n<BODY>\n<TABLE>\n     <TR>\n               <TD>1</TD>\n               <TD>2</TD>\n               <TD>3</TD>\n               <TD>4</TD>\n     </TR>\n       <TR>\n                 <TD>5</TD>\n                  <TD>6</TD>\n                    <TD>7</TD>\n                   <TD>8</TD>\n        </TR>\n</TABLE>\n</BODY>\n</HTML>\nExpires\nThuộc tínhExpiresđặt thời gian bao lâu (tính theo phút) một trang sẽ đ ược cất giữ ở\nbrowser trư ớc khi nó hết hạn (expire). Nếu ng ười dùng quay l ại trang đó tr ước khi nó\nhết hạn thì trangđã cất giữ trước đó sẽ đ ược hiển thị l ên. Nếu ta muốn một trang\nkhôngbao giờ hết hạn th ì tađặt thuộc tính Expire là-1.\nCú pháp:\nResponse.Expires [= number]\nVí dụ:Nếu ta muốn cho một trang sẽ hết hạn sau 24 giờ (=1400 phút) ta đặt nh ư sau:\n<%\nResponse.Expires = 1440\n%>\nExpiresAbsolute:\nTương tự như thuộc tínhExpires, thuộc tínhExpiresAbsolute đặt một ng ày và\ngiờ xác định m à một trang đ ược cất giữ tr ên browser s ẽ hết hạn.\nNếu ta chỉ định thời gian m à không ch ỉ định ngày cụ thể thì trang sẽ hết hạn tại\ngiờ chỉ định v ào ngày mà script đư ợc thực thi. C òn nếu ta chỉ định  ngày mà không ch ỉ\nđịnh thời gian th ì trangđược browser cất giữ sẽ bị hết hạn v ào lúc nửa đêm của ngày\nchỉ định."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 51,
    "text": "50Cú pháp:\nResponse.ExpiresAsolute [= [ date][time]]\nVí dụ:Đoạn mã sauđây chỉ định rằng trang sẽ hết hạn v ào lúc 4h00 chi ều ngày 11\ntháng 10 n ăm 2003:\n<%\nResponse. ExpiresAsolute = #October 11,2003 16:00:00#\n%>\nIsClientConnected: Thuộc tính n ày xác đ ịnh xem client có c òn nối kết\n(connect) v ới server hay không. Thuộc tính n ày mang 1 trong 2 giá tr ị đó là true\nhoặc false. Mang giá trị true nếu cl ient còn k ết nối tới server v à mang giá tr ị\nfalse trong trư ờng hợp ng ược lại.\nCú pháp:\nResponse.IsClientConnected\nVí dụ:Đoạn code sau đây kiểm tra ng ười dùng còn k ết nối hay không?\n<%\nIf Response.IsClientConnected = true then\n   Response.Write (“Nguoi du ng con connect!”)\nElse\n   Response.Write (“Nguoi dung khong con connect!”)\nEnd If\n%>\nPics\nThuộc tính nay th êm một giá trị v ào nhãn Picsở phầnheader của đối tượng\nResponse.\nVí dụ:\n<%\nResponse.PICS (“PICS -1.1<http://www.abc.com/file.html >\nby” & chr(34) & “ xyz@yahoo.com ”& chr(34) &\n“for” & chr(34) & “ http://www.XXX.com ” & chr(34) &\n“on” & chr(34) & “2002.10.05T02:15 -0800” & chr(34) &\n“r (n 2 s 0 v 1 1 2)” )\n%>\nStatus\nThuộc tính này chỉ định giá trị của d òng trạng thái m à server tr ả về cho client\nvà ta có th ể dùng thuộc tính n ày để chỉnh sửa d òng trạng thái đó. Giá trị của d òng\ntrạng thái bao gồm: ba con số đầu ti ên là mã tr ạng thái v à mô tả chi tiết của m ã trạng\nthái đó (chẳng hạn nh ư: 404Not Found ).\nCú pháp:\nResponse.Status = statusdescription\nvớistatusdescription là dòng mô t ả trạng thái.\nVí dụ:Đoạn code sau đây sẽ kiểm tra quyền của user dựa v ào địa chỉ của họ.\n<%\nDim IP\nIP = Request.ServerVariables(“REMOVE_ADDR”)\nIf IP <> “172.16.20.99: Then"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 52,
    "text": "51Response.Status = “401 Unauthorized”\nResponse.Write = (Response.Status)\nResponse.End\nEnd If\n%>\n4.2.3 Phương th ức (Method) của đối t ượng Response\nAddHeader\nPhương th ứcAddHeader thêm một header HTTP mới v à một giá trị cho HTTP\nresponse. Một khi một header đ ược thêm vào thì ta không th ể gỡ bỏ nó ra.\nTrong IIS 4.0, b ạn phải gọi ph ương thức này trước bất kỳ kết quả n ào gửi tới\nbrowser. Trong IIS 5.0 b ạn có thể gọi ph ương thứcAddHeader tại bất cứ n ơi nào\ntrong script nhưng ph ải đứng  trước bất cứ lời gọi h àmResponse.Flush  nào trong\ntrang.\nCú pháp:\nResponse. AddHeader  name, value\nTrong đó namelà tên của header c ònvaluelà giá trị của header\nVí dụ:\n<%\nResponse.AddHeader “c ảnh báo”,”Máy của bạn có Virus”\n%>\nChú ý:Tên của header không đư ợc chứa dấu gạch d ưới.\nAppendToLog\nPhương th ức này thêm m ột chuỗi v ào cuối mụclog của trình chủ. Bạn có thể\ngọi phương thức này nhiều lần trong một script, mỗi lần gọi sẽ gắn th êm một chuỗi\nvào mụclog của trình chủ.\nCú pháp:\nResponse.AppendToLog( string)\nVí dụ:\n<%\nResponse.AppendToLog”Client co virus!”\n%>\nChú ý:Chuỗi cần ghi v ào mục log không đ ược chứa bất kỳ dấu phẩy (,) n ào.\nBinaryWrite\nPhương th ức này ghi dữ liệu trực tiếp xuống Browser m à không ph ải chuyển\nđổi bất kỳ ký tự n ào. Phương th ứcnày thường được dùng để ghi dữ liệu ảnh (BLOB)\ntừ cơ sở dữ liệu xuống browser.\nCú pháp:\nResponse.BinaryWrite (data)\nClear\nPhương th ức này xoá tất cả các kết xuất HTML đ ược trình chủ đưa vào vùng\nđệm. Nhưng phương th ức này không xoá ph ầnheadercủa đối tượngResponse  mà chỉ\nxoá phần nội dung của đối t ượng Response . Nếu thuộc tính Buffer của đối tượng\nResponse  được đặt là false thì ph ương thức này sẽ gây ra lỗi lúc thi h ành (vì không có\nvùng buffer thì l ấy gì mà xoá!!!)\nCú pháp:"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 53,
    "text": "52Response.Clear\nVí dụ:\n<%\nResponse.Buffer = true\n%>\n<HTML>\n<HEAD>\n<TITLE>Ki ểm tra ph ương thức Clear</TITLE></HEAD>\n<BODY>\n<P>Đây là ph ần nội dung của trang Web. Nội dung n ày sẽ được gửi tới ng ười\ndùng</P>\n<P>Bắt đầu xoá Buffer</P>\n<%\nResponse.Clear\n%>\n</BODY>\n</HTML>\nKết quả khi d uyệt trang web n ày là ngư ời dùng không th ấy gì cả (vì trang\nHTML mà Server đưa vào trong vùng đ ệm chưa kịp gửi đã bị xoá bởi việc gọi ph ương\nthức clear tr ước khi gọi ph ương này).\nCú pháp:\nResponse.End\nVí dụ:\n<HTML>\n<BODY>\n<P>Đoạn văn bản n ày sẽ được gửitới browser v à người dùng có thể đọc được</P>\n<%\nResponse.End\n%>\n<P>Đoạn văn bản n ày sẽ không đ ược gửi và đã gọi phương thức End rồi</P>\n</BODY>\n</HTML>\nFlush\nGọi phương thức này để chuyển các kết xuất HTML m à Server lưu gi ữ lại trong v ùng\nđệm xuống brows er ngay lập tức. Nếu thuộc tính Buffer đ ược đặt là false thì thu ộc tính\nnày sẽ gây ra lỗi lúc thi h ành.\nCú pháp:\nResponse.End\nVí dụ:\n<%\nResponse.Buffer = true\n%>\n<HTML>\n<BODY>\n<P>Đoạn văn bản n ày sẽ được gửi tới ng ười dùng ngay khi g ọi phương thức"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 54,
    "text": "53Flush</P>\n<P>Một số đoạn văn bản khác sẽ đ ược gửi sau một lúc nữa!!!</P>\n<%\nResponse.Flush\nDim i\nFor i = 1 to 1000\n        Response.Write “ ”\n         Response.Write “ Đây là đo ạn văn bản tiếp theo!”\n       Response.Flush\n%>\n</BODY>\n</HTML>\nRedirect\nPhương th ức này dùng đ ể chuyển ng ười dùng đến một trang khác đ ược chỉ định trong\nđường dẫn URL.\nCú pháp:\nResponse.Redirect (URL)\nVí dụ sau đây minh hoạ việc đăng nhập của ng ười dùng.\nTạo tập tin login.asp với nội dung sau:\n<HTML>\n<HEAD>\n<TITLE>Login to...</TITLE>\n</HEAD>\n<BODY>\n<B>Login</B><BR>\n<form method = “post” action = “validate.asp”>\nUsername: <input type = “text” size = “15%” name = “UserName”><BR>\nPassword: <input type = “password” size = “15%” name = “Password”>\n<P>\n<input type = “submit” value = “Login” name = “login”>\n</P>\n</BODY>\n</HTML>\nTạo tập tin validate.asp với nội dung sau:\n<HTML>\n<BODY>\n<%\nDim User, Pass\nUser = Request.Form(“UserName”)\nPass = Request.Form(“Password”)\nIf (User = “sv”) and (Pass = “1234”) Then\n    Response.Redirect “success.asp”\nElse\nResponse.Redirect “login.asp”\nEnd If"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 55,
    "text": "54%>\n</BODY>\n</HTML>\nTạo tập tin success.asp với nội dung sau:\n<HTML>\n<BODY>\n<P>Bạn đãđăng nhập thành công!</P>\n</BODY>\n</HTML>\nWrite\nPhương th ức này dùng đ ể ghi dữ liệu ra tập tin kết xuất dạng HTML để gửi cho\nbrowser.Dữ liệu này có thể là số, chuỗi,ngày,...\nCú pháp:\nResponse.Write (text)\nVí dụ:\n<HTML>\n<BODY>\n<%\nResponse.Write (“Chào b ạn đến với ASP!” & “<BR>”)\nDim x\nx = 100\nResponse.Write x\n%>\n</BODY>\n</HTML>\n4.3. Đối tượng Session\nKhi bạn mở, đóng ứng dụng hoặc đang l àm việc với một ứng dụng n ào đó, máy tính s ẽ\nbiết bạn là ai. Nhưng khi làm vi ệc trên internet thì đó là một vấn đề khác: Web Server\nkhông biết bạn là ai và bạn làm gì bởi vì dòngđịa chỉ htttp:// cung cấp trạng thái của\nbạn.\nASP giải quyết vấn đề n ày bằng cách tạo ra một cookies duynhất cho mỗi\nngười dùng,cookies này được gửi cho client v à nó chứa đựng thông tin để nhận diện\nra bạn.Giao tiếp này được gọi là đối tượngSession.\nĐối tượngSession được dùng để lưu trữ thông tin về những thay đổi đối với\nmột người dùng. Các bi ến được chứa trong đối t ượng Session chứa thông tin về một\nngười dùng và đư ợc dùng chung cho t ất cả các trang trong một ứng dụng. Khi có một\nngười dùng mới, server tạo ra một đối t ượng Session mới v à sẽ huỷ session đó khi\nngười dùng không k ết nối nữa hoặc khi sessio n hết hạn.\n4.3.1. Tập hợp của đối t ượng Session\nContents\nTập hợpContents  chứa tất cả các phần tử đ ãđược gắn th êm vào đ ối tượngSession\ntrong quá trình th ực thi script.\nCú pháp:\nSession.Contents (key)\nTrong đó key là tên c ủa phần tử cần lấy."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 56,
    "text": "55Ví dụ sau đây liệt kê tất cả các session đ ãđược dùng trong ứng dụng.\n<HTML>\n<BODY>\n<CENTER>Các session trong t ập Contents\n</CENTER>\n<%\nDim x\nFor each x in Session.Contents\nResponse.Write (x & “=” & Session.Contents (x) & “<BR>”)\nNext\n%>\n</BODY>\n</HTML>\nStaticObjec ts\nTậpStaticObjects chứa tất cả các đối t ượng gắn v ào session v ới tag HTML <object>\nCú pháp:\nSession.StaticObject(key)\nVí dụ:Đoạn chương trình sauđây hiển thị tất cả các đối t ượng trong tập\nStaticObjects\n<HTML>\n<BODY>\n<CENTER>Các đ ối tượng trong tập St aticObject\n</CENTER>\n<%\nDim x\nFor each x in Session.Contents\nResponse.Write (x & “<br>”)\nNext\n%>\n</BODY>\n</HTML>\n4.3.2 Các thu ộc tính của đối t ượng Session\nCodePage\nThuộc tínhCodePage cho biết tập ký tự sẽ đ ược dùng để hiển thị nội dung của\ntrang.Sauđây là một vài giá trịCodePage và mô tả của chúng.\n1251– American English and most European languages\n932– Japanese Kanji\nCú pháp:\nSession.CodePage(= codepage)\nVí dụ:Đoạn chương trình sauđây hiển thị codepage của một trang.\n<HTML>\n<BODY>\n<CENTER>Code Page của trang n ày là:\n<%\nResponse.Write (Session.CodePage)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 57,
    "text": "56%>\n</CENTER>\n</BODY>\n</HTML>\nLCID\nTa dùng thu ộc tính LCID để thiết lập hay nhận về một con số nguy ên mà nó xác đ ịnh\nmột vùng nào đó. D ữ liệu ngày, giờ và tiền tệ sẽ đ ược hiển thị dựa theo v ùngđó.\nCú pháp:\nSession.LCID(= LCID)\nVí dụ:\n<HTML>\n<BODY>\n<%\nResponse.Write (“LCID m ặc định:” & Session.LCID & “<br>”)\nResponse.Write (“D ạng tiền tệ:” & FormatCurrency(540)& “<br>”)\nSession.LCID = 1036\nResponse.Write (“<p>”)\nResponse.Write (“LCID hi ện tại:” & Session.LCID & “<br>”)\nResponse.Write (“D ạng ngày:” & date() & “<br>”)\nResponse.Write (“D ạng tiền tệ:” & FormatCurrency(540) & “<br>”)\nResponse.Write (“</P>”)\nSession.LCID = 3079\nResponse.Write (“</P>”)\nResponse.Write (“LCID hi ện tại:” & Session.LCID & “<br>”)\nResponse.Write (“D ạng ngày:” & date() & “<br>”)\nResponse.Write (“D ạng tiền tệ:” & FormateCurrency(540) & “<br>”)\nResponse.Write (“</P>”)\n%>\n</BODY>\n</HTML>\nKhi đó kết quả của tr ình duyệt sẽ là:\nSessionID\nThuộc tínhSessionID trả về một con số i d duy nhất dùng để nhận diện cho mỗi ng ười\ndùng. Con s ố này được server tạo ra v à bạn không thể thay đổi giá trị n ày được.\nCú pháp:\nSession.SessionID\nVí dụ:Đoạn chương trình sauđây hiển thị ra m àn hình con s ố ID\n<HTML>\n<BODY>\n<CENTER>S ố ID của bạn l à:\n<%\nResponse.Write (Session.SessionID)\n%>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 58,
    "text": "57</CENTER>\n</BODY>\n</HTML>\nTimeout\nThuộc tính này dùng đ ể thiết lập hay nhận về khoảng thời gian hiệu lực d ành cho đ ối\ntượng Session trong ứng dụng (tính theo phút). Nếu ng ười dùng không refresh ho ặc\nyêu cầu một trang trong kho ảng thời gian hiệu lực đó th ì session s ẽ kết thúc. Mặc định\nthời gian còn hiệu lực cho một trang l à 20 phút.\nCú pháp:\nSession.TimeOut [=number]\nVí dụ:\n<HTML>\n<BODY>\n<P>\nThời gian hiệu lực mặc định l à:\nResponse.Write (Session.TimeOut)\n</P>\n<%Session.TimeOut = 30%>\n<P>\nThời gian hiệu lực bây giờ l à:\n<%Response.Write (Session.TimeOut)%>\n</P>\n</BODY>\n</HTML>\n4.3.3. Các phương th ức của đối t ượng Session\nAbandon\nPhương thcs Abandon dùng đ ể kết thúc session của ng ười dùng. Khi phương th ức\nnày được gọi, đối tượng Session hiện h ành chưa b ị xoá ngay m à sẽ tồn tại cho tới khi\ntất cả các Script của trang hiện h ành được xử lý xong. Điều n ày có ngh ĩa là bạn có thể\ntruy cập các biến session trong c ùng trang m ặc dù bạn đã gọi phương thức Abandon\ntrước đó,nhưng truy c ập các biến session từ những trang khác th ì khôngđược.\nCú pháp:\nSession.Abandon\nVí dụ:Tạo 2 tập tin file1.asp v à tập tin file2.asp trong c ùng một ứng dụng với nội\ndung sau:\nFile1.asp\n<HTML>\n<BODY>\n<%\nSession(“Ten”) = “Bill Gate”\nSession.Ab andon\nResponse.Write (Session (“Ten”))\n%>\n</BODY>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 59,
    "text": "58</HTML>\nFile2.asp\n<HTML>\n<BODY>\n<%\nResponse.Write (Session (“Ten”))\n%>\n</BODY>\n</HTML>\nKhi người dùng yêu c ầu trangfile1.asp thì kết quả in ra m àn hình là “Bill Gate”\nnhưng khi ngư ời dùng yêu c ầu tiếp trangfile2.asp thì kết quả không hiển thị Bill Gate\nnhư mong mu ốn  bởi vì Session(“Ten”) đã bị kết thúc ở file1.asp do gọi phương thức\nAbandon .\nContents.Remove\nPhương th ức này dùng đ ể xoá một phần tử ra khỏi tập Contents của đối t ượngSession.\nCú pháp:\nSession.Contents.Remove (name | index)\nKhi gọi phương thức này ta có th ể truyền v ào tên của phần tử cần xoá hoặc vị trí của\nphần tử trong tập Contents.\nVí dụ:\n<HTML>\n<BODY>\n<%\nSession(“ptu1”) = (“Phan tu 1”)\nSession(“ptu2”) = (“Phan tu 2”)\nSession(“ptu3”) = (“Phan tu 3”)\nSession(“ptu4”) = (“Phan tu 4”)\nResponse.Write (“T ập contents của Session lúc đầu:<br>”)\nDim x\nFor each x in Session.Contents\nResponse.Write (x & “=” & Session.Contents(x) & “<BR>”)\nSession.Contents.Remove(“ptu3”)\nResponse.Write (“<P>Sau khi xoá ptu3:</P>”)\nFor each x in Session.Contents\nResponse.Write (x & “=” & Session.Contents(x) & “<br>”)\nSession.Contents.Remove(2)\nResponse.Write(“<P>Sau khi xoá ph ần tử thứ 2:</P>”)\nFor each x in Session.Contents\nResponse.Write (x & “=” & Session.Contents( x) & “<BR>”)\n%>\n</BODY>\n</HTML>\nKết quả khi thực hiện trang n ày như sau:\nContents.RemoveAll()"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 60,
    "text": "59Thay vì ch ỉ xoá một phần tử ta d ùng phương th ứcRemove thì phương thức này chỉ\nxoá tất cả các phần tử ra khỏi tập Contents.\nCú pháp:\nSession.Contents.RemoveAll()\n4.3.4. Các s ự  kiện của đối t ượng Session\nSession_OnStart\nSự kiện này xuất hiện khi tr ình chủ tạo một session mới. C ài đặt của sự kiện n ày được\nđặt trong tập tin global.asa\nSession_OnEnd\nSự kiện này xuất hiện khi session kết thúc. C ài đặt của sự kiện n ày cũng được đặt\ntrong tập tinglobal.asa\nChú ý:Trong cài đ ặt của sự kiện Session_OnEnd  ta không s ử dụng đ ược phương\nthứcMapPath  vìở đây phương thức này không còn hi ệu lực.\n4.4. Đối tượng Application\nMột ứng dụng bao gồm một tập hợp các file kết hợp với nhau để xử lý hoặc\nphục vụ cho một mục đích n ào đó. ASP cung c ấp một đối t ượng dùng để kết hợp các\nfile đó lại với nhau, đó l à đối tượngApplication .\nĐối tượng Application đ ược dùng để lưu trữ các biến, qua đó các trang có thể\ntruy cập đến các biến n ày. Không giống như đối tượng Session chỉ d ùng cho m ột nối\nkết cho mỗi ng ười dùng. Do đó đ ối tượng Application n ên chứa các thông tin m à có\nthể được truy cập bởi nhiều trang trong ứng dụng (nh ư thông tin n ối kết cơ sở dữ liệu,\nthông tin v ề số người dùng truy c ập,...) nghĩa là bạn có thể truy cập các thông tin n ày\ntừ bất cứ trang n ào trongứng dụng, nh ưng chúý là khi thay đổi các thông tin n ày sẽ\nảnh hưởng đến tất cả các trang khác trong ứng dụng.\n4.4.1. Tập hợp của đối t ượng Application\nContents\nTập hợpContents  chứa tất cả các phần tử đ ãđược gắn th êm vào đ ối tượng\nApplication  trong quá trình th ực thi script.\nCú pháp:\nApplication.Contents(key)\nTrong đó key là tên c ủa phần tử cần lấy.\nVí dụ sau đây liệt k ê tất cả các Application đ ãđược dùng trong ứng dụng.\n<HTML>\n<BODY>\n<CENTER>Các bi ến Application trong tập Contents </CENTER>\n<%\nDim x\nFor each x in Application.Contents\nResponse.Write (x & “=” & Application.Contents(x) & “<br>”)\nNext\n%>\n</BODY>\n</HTML>\nStaticObjects"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 61,
    "text": "60Tập hợpStaticObject chứa tất cả các đối t ượng được gắn v àoứng dụng với tag\nHTML <object>.\nCú pháp:\nApplication.StaticObjects(key)\nVí dụ:Đoạn code sau đây liệt k ê tất cả cácobject\n<%\nDim x\nFor each x in Application.StaticObjects\nResponse.Write(x & “<br>”)\n%>\n4.4.2. Các phương th ức của đối t ượngApplication\nPhương th ức này dùng đ ể xoá một phần tử ra khỏi tập Contents của đối t ượng\nApplication\nCú pháp:\nApplication.Contents.Remove(name | index)\nKhi gọi phương thức này ta có th ể truyền v ào tên của phần tử cần xoá hoặc vị trí của\nphần tử trong tập Co ntents.\nVí dụ:\n<%\nApplication(“ptu1”) = (“Phan tu 1”)\nApplication(“ptu2”) = (“Phan tu 2”)\nApplication(“ptu3”) = (“Phan tu 3”)\nApplication.Contents.Remove = (“ptu3”)\n%>\nContents.RemoveAll\nThay vì ch ỉ xoá một phần tử ta d ùng phương th ứcRemove thì phương thức này xoá tất\ncả các phần tử ra khỏi tập Contents.\nCú pháp:\nApplication.Contents.RemoveAll()\nLock và Unlock\nBởi vì tất cả các ng ười dùng đều có thể truy cập đến các biến Application nên\ncó thể cùng lúc 2 hay nhi ều người dùng cùng thay đ ổi giá trị của biế n và điều này đối\ntượngApplication  cung cấp hai ph ương thứcLock vàUnlock. Phương th ứcLock\nngăn cản người dùng khác thay đ ổi biến trong đối t ượngApplication  (dùng để đảm\nbảo rằng tại một thời điểm chỉ có một ng ười dùng thay đ ổi các biến trong đối t ượng\nApplication). Phương th ứcUnlockcho phép ngư ời dùng thay đ ổi giá trị các biến trong\nđối tượngApplication.\nCú pháp:\nApplication.Lock\nApplication.Unlock\nLưuý:Khi gọi phương thứcLock thì ta phải nhớ gọi ph ương thứcUnlock ngay khi\nthực hiện xong.\nVí dụ:\n<%\nApplication.Lock"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 62,
    "text": "61Application(“visits”) = Application(“visits”) + 1\nApplication.Unlock\n%>\nTrang này đư ợc truy cập :\n<% = Appliction(“visits”)%>l ần!\n4.4.3. Các s ự kiện (Events) của đối t ượng Application\nApplication_OnStart\nSự kiện này xuất hiện trước khi một phiên nối kết mới đầu ti ên được hình thành. S ự\nkiện này được đặt trong file global.asa\nApplication_OnEnd\nSự kiện này xuất hiện khi ứng dụng kết thúc (khi web server dừng). Sự kiện n ày\nđược đặt trong file global.asa\n4.5. Đối tượng Server\nĐối tượng Servaer cung c ấp nhiều thuộc tính v à phương th ức dùng để truy cập\nserver. Đây là đ ối tượng dùng để quản lý những đặc tr ưng của trình chủ IIS và các\nhành động liên quan t ới dịch vụ HTTP. Ngo ài ra đối tượng Server c òn cung c ấp khả\nnăng tạo kế thừa các th ành phần COM tr ên Server.\n4.5.1. Các thu ộc tính của đối t ượng Server\nĐối tượng Server chỉ có duy nhất một thuộc tính đó ScriptTimeOut.  Thuộc\ntính này quy đ ịnh thời gian lớn nhất m à các lệnh kịch bản c ònđược thực hiện. Giá trị\nmặc định là 90 giây.\nLưuý là giá trị timeout sẽ không hiệu lực khi server thực hiện các lệnh kịch bản.\nCú pháp:\nServer.ScriptTimeOut = [number]\n4.5.2. Các phương th ức của đối t ượng Server\nCreateObject\nPhương th ứcCreateObject dùng để tạo một thực thể của một đối t ượng. Các\nđối tượng do ph ương thức này tạo ra chỉ có hiệu lực trong phạm vi một trang, do đó\nchúng sẽ bị huỷ khi server xử lý trang ASP hiện h ành.\nĐể tạo một đối t ượng mà phạm vi của nó nh ưSession hayApplication , bạn có thể\ndùng tag < object> trong file Global.asa  hoặc lưu trữ đối tượng trong biến Session hay\nApplicaion .\nCú pháp:\nServer.CreateObject(progID)\nTrong đó progID là ki ểu của đối t ượng cần tạo.\nVí dụ:\n<%\nDim adrot\nSet adrot = Server.CreateObjet(“MSWC.AdRotator”)\n........................................................\n.......................................................\nSet adrot = nothing\n%>\nExecute"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 63,
    "text": "62Thuộc tính Execute thực thi một trang ASP b ên trong m ột trang khác. Sau khi\nthực thi xong file ASP đ ược gọi thì quyền điều khiển đ ược trả về cho file ASP ban đầu\n(file gọi).\nCú pháp:\nServer.Execute(path)\nVới path là đường dẫn tới tập tin ASP cần thực thi.\nVí dụ:Tạo 2 tập tin file1.asp v à file2.asp và đ ặt trong c ùng thư m ục với nội dung sau:\nFile1.asp\n<HTML>\n<BODY>\n<%\nResponse.Write “Đang ở file 1”\nServer.Execute(“File2.a sp”)\nResponse.Write “Tr ở về file 1”\n%>\n</BODY>\n</HTML>\nFile2.asp\n<HTML>\n<BODY>\n<%\nResponse.Write “Đang ở file 2”\n%>\n</BODY>\n</HTML>\nGetLastError\nPhương th ức này trả về một đối t ượngASPError  mô tả lỗi xuất hiện. Mặc định\ntrang Web dùng t ập tin\\iishelp\\common\\500-100.asp để xử lý các lỗi trong ASP. Nếu\ncần thì bạn có thể tạo hoặc thay đổi tập tin để đ ưa ra những câu thông báo thân thiện\nhơn,...\nChú ý: Phương th ức này được dùng trước khi tập tin ASP gửi bất cứ nội dung g ì\nxuống browser.\nCú pháp:\nServer.GetLastError()\nVí dụ: Trong ví d ụ sau đây sẽ xuất hiện một lỗi chia cho 0\nHTML>\n<BODY>\n<%\nDim i, tong, j\ni = 0\nj = 0\ntong = 0\nfor i =1 to 10 do\ntong = tong+1\nnext"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 64,
    "text": "63tong = tong/j\n%>\n</BODY>\n</HTML>\nHTMLEncode\nPhương th ức này dùng đ ể mã hoá dạng HTML mộ t chuỗi\nCú pháp:\nServer.HTMLEncode(string)\nVí dụ: Đoạn chương trình sauđây cho phép ngư ời dùng nhập vàousername  và\npassword , sau đó nh ấn nút login. Nếu ng ười dùnglogin sai thì sẽ bắt người dùng nhập\nlạipassword .\nHTML>\n<BODY>\n<%\nDim uname,upass\nuname= Request.Form(“uname”)\nupass = Request.Form(“upass”)\nif(uname=”test”) and (upass=”test”) then\nResponse.Redirect(“main.asp”)\nelseif (uname<>””) or (upass<>””) then\nResponse.Write(“Account nay khong hop le<BR>”)\nend if\n%>\n<form name=”login” method=”POST” action=”login.asp”>\n<TABLE border=”2”>\n<TR>\n   <TD>Dang nhap</TD></TR>\n<TR>\n   <TD>\n    <TABLE border=”1”>\n<TR>\n         <TD>Username:</TD>\n          <TD><input type=”text” name=”uname”\nvalue=”<%=server.HTMLEncode(uname)%>”>\n            </TD></TR>\n <TR>\n        <TD>Password:</TD>\n           <TD><input type=”password” name=”upass”></TD></TR>\n</TABLE>\n</TD>\n</TR>\n<TR>\n<TD><input type=”submit” name=”submit” value=”Login”></TD>\n</TR>\n</TABLE>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 65,
    "text": "64</FORM>\n</BODY>\n</HTML>\nMapPath\nPhương th ức này ánh x ạ một đườngdẫn nào đó sang m ột đường dẫn vật\nlý.Phương thức này không đư ợc dùng trong s ự kiện Session_OnEnd  và\nApplication_OnEnd.\nCú pháp:\nServer.MapPath(path)\nChú ý:Nếu path bắt đầu bằng ký tự / hoặc \\ thì các ký t ự này đại diện cho đ ường dẫn\nvật lý của th ư mục ảo của tập tin ASP hiện tại.\nVí dụ:Giả sử bạn có tập tin test.asp đặt trong th ư mụcC:\\Inetpub\\wwwroot \\Script\nvới nội dung sau:\n<HTML>\n<HEAD>\n<TITLE>Ki ểm tra MapPath</TITLE>\n</HEAD>\n<BODY>\n<%\nResponse.Write(Server.MapPath(“test.asp”) & “<br>”)\nResponse.Wri te(Server.MapPath(“Script/test.asp”) & “<br>”)\nResponse.Write(Server.MapPath(“/Script/test.asp”) & “<br>”)\nResponse.Write(Server.MapPath(“/”) & “<br>”)\nResponse.Write(Server.MapPath(“ \\”) & “<br>”)\n%>\n</BODY>\n</HTML>\nKhi duyệt trang test.asp n ày ta đượckết quả như sau:\nTransfer\nPhương th ức này gửi (chuyển) tất cả các thông tin về trạng thái (các biến\nSession, các bi ến Application, các dữ liệu trong tập Request...) của tập tin ASP hiện tại\ncho một tập tin ASP thứ hai. Khi trang thứ hai thực hiện xong th ìquyền điều khiển\nkhông trả về cho trang tr ước đó (xem th êm phương th ức Execute).\nPhương th ứcTransfer  là một dạng khác của ph ương thứcResponse.Redirect\nnhưng lại hiệu quả h ơn bởi vì phương thứcResponse.Redirect  buộc Server phải giữ\nlại mộtRequest giả trong khi phương th ứcServer.Transfer  thì chuy ển quyền điều\nkhiển cho một trang ASP khác tr ên server. (xem thêm phương th ức\nResponse.Redirect ).\nCú pháp:\nServer.Transfer(path)\nVí dụ:Tạo 2 tập tin file1.asp vàfile2.asp và đặt trong c ùng thư m ục với nội dung  2\nfile như sau:\nFile1.asp\n<HTML>\n<BODY>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 66,
    "text": "65<%\nResponse.Write “Dòng 1 trên file1.asp”\nServer.Transfer(“File2.asp”)\nResponse.Write “Dòng 2 trên file1.asp”\n%>\n</BODY>\n</HTML>\nFile2.asp\n<HTML>\n<BODY>\n<%\nResponse.Write “Dòng 1 trên file2.asp”\nResponse.Writ e “Dòng 2 trên file2.asp”\n%>\n</BODY>\n</HTML>\nMở trình duyệt lên và thực thifile1.asp. So sánh k ết quả này với kết quả ở ví  dụ của\nphương th ức Server.Execute.\nURLEncode\nPhương th ức này dùng đ ể mã hoá một chuỗi URL.\nCú pháp:\nServer.URLEncode (stringURL)\n4.6. Đối tượng ASP Error\nĐối tượngASPError  được dùng để hiển thị thông tin chi tiết của bất cứ lỗi n ào\nxuất hiện trong các kịch bản của trang ASP. Đối t ượngASPError  được tạo ra khi\nphương th ứcServer.GetLastError  được gọi, v ì thế thông tin về các lỗi c hỉ có thể\nđược truy cập bằng việc gọi ph ương thứcServer.GetLastError.\nĐối tượngASPError  được bổ sung v ào ASP từ phiên bản 3.0 trở đi v à chỉ có\nsẵn trong IIS 5.\nĐối tượngASPError  không có phương th ức nào mà ch ỉ có các thuộc tính để\ncung cấp các thông tin  về lỗi xuất hiện. D ưới đây là các thu ộc tính của đối t ượng\nASPError :\nASPCode\nThuộc tính này cho biết mã lỗi được tạo ra bởi IIS\nCú pháp:\nASPError.ASPCode\nASPDescription\nThuộc tính này trả về một chuỗi mô tả chi tiết lỗi xuất hiện.\nCú pháp:\nASPError.ASPDe scription\nCategory\nThuộc tính này cho bi ết nơi nào đưa ra l ỗi (do IIS  hay do ngôn ngữ kịch bản hay do\nmột thành phần phụ thêm nào đó).\nCú pháp:\nASPError.Category"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 67,
    "text": "66Column\nThuộc tính này cho biết vị trí cột thứ mấy trong tập tin ASP đ ã gây ra lỗi.\nCú pháp:\nASPError.Column\nDescription\nThuộc tính này mô tả ngắn gọn lỗi.\nCú pháp:\nASPError.Description\nFile\nThuộc tính này trả về tên tập tin ASP đ ã gây ra lỗi.\nASPError.File\nLine\nThuộc tính này cho biết dòng thứ mấy trong tập tin ASP đ ã gây ra lỗi.\nCú pháp:\nASPError.Line\nNumber\nThuộc tính này trả về mã lỗi COM chuẩn của lỗi tạo ra.\nCú pháp:\nASPError.Number\nSource\nThuộc tính này trả về đoạn m ã của dòng gây ra l ỗi.\nCú pháp:\nASPError.Source\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim objErr\nSet objErr = Server.GetLastError()\nResponse.Write(“ASPCode = ” & objErr.ASPCode)\nResponse.Write(“<br>”)\nResponse.Write(ASPDescription=) &objErr.ASPDescription)\nResponse.Write(“<br>”)\nResponse.Write(“Category = ” & objErr.Category)\nResponse.Write(“<br>”)\nResponse.Write(“Column = ” & objErr.Co lumn)\nResponse.Write(“<br>”)\nResponse.Write(“Description = ” & objErr.Description)\nResponse.Write(“<br>”)\nResponse.Write(“File = ” & objErr.File)\nResponse.Write(“<br>”)\nResponse.Write(“Line = ” & objErr.Line)\nResponse.Write(“<br>”)\nResponse.Write(“Number =  ” & objErr.Number)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 68,
    "text": "67Response.Write(“<br>”)\nResponse.Write(“Source = ” & objErr.Source)\nResponse.Write(“<br>”)\n%>\n</BODY>\n</HTML>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 69,
    "text": "68Chương5. Chỉ thị #include ,\nKhi muốn chèn nội dung của một tập tin ASP v ào tập tin ASP khác tr ước khi\nserver thực thichúng ta dùng ch ỉ thị#include. Thông thư ờng các nội dung đó chứa\ncác hàm toàn c ục, các biến to àn cục, cácheader, cácfooter hoặc những g ì dùng chung\ncho nhiều trang.\nCú pháp:\n<!--#include file = filename -->\nhoặc\n<!--#include virtual = filename -->\nTrong đó filename là tên c ủa tập tin m à nội dung của tập tin đó cần include v ào.\nTừ khoáfile để chỉ chỉ rằng đ ường dẫn đến t ên tập tin cần include l à đường dẫn t ương\nđối, đường dẫn n ày bắt đầu bằng th ư mục chứa tập tin. C òn từ khoávirtual để chỉ ra\nrằng đường dẫn tới tập tin bắt đầu bằng th ư mục ảo.\nVí dụ: Giả sử ta có tập tin time.inc có chứa h àm dùng đ ể ghi ra m àn hình của browser\ngiờ hiện hành. Còn t ập tinDistime.asp  là tập tininclude tập tintime.inc. Hai tập tin\nnày được đặt trong c ùng thư m ục và với nội dung sau:\ntime.inc\n<%\nSub DisplayTime\n Response.Write (Time)\nEnd Sub\n%>\ndistime.asp\n<!--#include file =”time.inc” -->\n<HTML>\n<BODY>\n<%\nResponse.Write(“Bây gi ờ là:”)\nDisplayTime ‘ G ọi hàm trong t ập tintime.inc\n%>\n</BODY>\n</HTML>\nLưuý:Dòng chỉ thị #incl ude không đư ợc đặt trong đoạn chứa các lệnh kịch bản.\n6. tập tin global.asa\nASP cung c ấp cho bạn file cấu h ìnhglobal.asa , trong file này b ạn có thể đặt các\nscript xử lý các sự kiện hay các h àm, thủ tục, biến mang tính to àn cục. Fileglobal.asa\nphải được đặt trong th ư mục gốc của ứng dụng v à mỗi ứng dụng chỉ đ ược phép có duy\nnhất một file global.asa . Khi trang asp c ủa ứng dùng được triệu gọi lần đầu ti ên, trình\nchủ IIS sẽ tìm xem trong th ư mục hiện tại của ứng dụng có file global.asp  không. N ếu\ncó thì trình  chủ sẽ nạp v à xử lý các sự kiện đ ược cài đặt trong file n ày, sau đó chuy ển\ngiao quyền xử lý lại cho trang ASP. Trong file global.asa , bạn chỉ được phép c ài đặt\nvà xử lý các sự kiện sau:"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 70,
    "text": "69Application_OnStart: Sự kiện này được phát sinh khi ng ười dùng đầu tiên\ntriệu gọi bất kỳ trang n ào trongứng dụng. Khi tr ình chủIIS khởi động lại hoặc\nkhi nội dung file global.asa  bị hiệu chỉnh th ì sự kiện này được phát sinh trở lại.\nSau khi x ử lý xong sự kiện n ày, trình ch ủ bắt đầy xử lý sự kiện\nSession_OnStart  để chuẩn b ị cho phiên nối kết. Các biến Application  thường\nđược khởi tạo b ên trong s ự kiện này.\nSession_OnStart:  Sự kiện này được gọi mỗi khi có một ng ười dùng mới yêu\ncầu trang asp của ứng dụng Web trong lần đầu ti ên. Các bi ếnsessioncủa người\ndùng cũng thường được khởi tạo bên trong s ự kiện này.\nSession_OnEnd:  Sự kiện này được gọi khi phi ên làm vi ệc của ng ười dùng\nchấm dứt. Phi ên làm vi ệc được xem là chấm dứt khi nó hết hạn (timeout hay\nexpired), m ặc định cho thời gian l àm việc củasession là 20 phút, b ạn có thể\ntăng hay gi ảm thời gian n ày bằng cách thay đổi giá trị của thuộc tính Timeout\ncủa đối tượngsession.\nApplication_OnEnde: Sự kiện này được gọi khi không c òn người dùng nào\ntương tác v ới ứng dụng web của bạn nữa. Thông th ường thì sự kiện này được\ngọi khi trình chủ IIS ngừng hoạt động. Thông qua sự kiện n ày ban có th ể giải\nphống vùng nhớ đã cấp phát tr ước đó hoặc l ưu lại các thông tin, trạng thái cần\nthiết xuống đĩa cứng để phục vụ cho quá tr ình khởi động trở lại sau đó.\nBạn cài đặt thủ tục xử lý sự kiện trong fileglobal.asa  theo mẫu sau:\n<script language=”vbscript” runat=”server”>\nSub Application_OnStart\n.........................\nEnd Sub\nSub Session_OnStart\n.........................\nEnd Sub\nSub Session_OnEnd\n........................\nEnd Sub\nSub Application _OnEnd\n.........................\nEnd Sub\n</script>\nVí dụ:Dưới đây là ví dụ minh hoạ cách c ài đặt và xử lý các sự kiện trong file\nglobal.asa.\n<script language=”vbscript” runat=”server”>\nSub Application_OnStart\n Application(“Status”) = “Application_OnSta rt”"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 71,
    "text": "70End Sub\nSub Session_OnStart\nResponse.Write(Application(“Status”) + “<br>”)\nResponse.Write(“Session_OnStart” + “<br>”)\nEnd Sub\nSub Session_OnEnd\nEnd Sub\nSub Application_OnEnd\nEnd Sub\n</script>\nBạn lưu fileglobal.asa  vào thư m ục của ứng dụng (giả sử là LearnASP). K ế tiếp là\nbạn tạo một tập tin để kiểm tra file global.asa  với têntest.asp và đặt cùng thư m ục với\ntập tinglobal.asa  với nội dung sau:\n<HTML>\n<HEAD>\n<TITLE>Kiem tra file global.asa</TITLE>\n</HEAD>\n<BODY>\n<B>\n<%\nResponse.Write “Noi dung c ua trang ASP”\n%>\n</B>\n</BODY>\n</HTML>\nMở trình duyệt lên và bạn triệu gọi file test.asp. Kết quả sẽ đ ược thể hiện nh ư sau:\n Ngoài ra b ạn có thể đặt các h àm hay th ủ tục xử lý trong file global.asa để có thể các\ntrang trong ứng dụng có thể triệu gọi các h àm này.\n7. Đối tượng dictionary\nĐối tượngDictionary  được dùng để lưu trữ thông tin theo cặp t ên/giá trị. Đối\ntượngDictionary có thể xem tương tự như mảng, tuy nhi ên đối tượngDictionary\nđược tạo ra để thao tác với dữ liệu một cách hiệu quả h ơn.\nSo sánh đ ối tượngDictionary với các mảng ta thấy:\n+ Đối tượngDictionary dùng từ khoá (key) để nhận diện các phần tử (item) c òn\nmảng thì sử dụng chỉ số.\n+ Bạn không thể d ùng Redim đ ể thay đổi kích th ước của đối t ượng Dictionary\ncòn mảng thìđược.\n+ Khi xoá m ột phần tử khỏi đối t ượngDictionary thì các ph ần tử còn lại sẽ tự\nđộng thay thế, c òn các mảng thì không.\n+ Mảng có thể có nhiều chiều c ònđối tượngDictionary không."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 72,
    "text": "71+ Đối tượngDictionary được xây dựng với nhiều chức năng h ơn.\n+ Đối tượngDictionary  truy cập thường xuyên các ph ần tử một cách ngẫu nhi ên\nhiệu quả hơn mảng.\n+ Đối tượngDictionary định vị các phần tử dựa tr ên nội dung hiệu quả h ơn.\n7.1. Tạo đối tượng Dictionary\nĐối tượngDictionary được tạo ra bởi đối t ượng Server bằng việc gọi ph ương thức\nCreateOb ject như sau:\n<%\nDim Dic\nSet Dic = Server.CreateObjet(“Scripting.Dictionary”)\n%>\nBởi vì hàmCreateObject của đối tượng Server trả về một đối t ượng nên để gán đối\ntượng cho biến Dic ta dùng l ệnh Set.\nKhi sử dụng xong thực thể của đối t ượngDictionary ta phải huỷ bỏ thực thẻ đó bằng\ncách:\nSet Dic = nothing\n7.2. Các thu ộc tính của đối t ượng Dictionary\nComapareMode\nTa dùng thu ộc tínhComapareMode để thiết lập hoặc nhận về chế độ so sánh để\nso sánh các khoá trong đ ối tượngDictionary.\nCú pháp:\nDictionary.Compa reMode [=mode]\nTrong đó mode có th ể nhận một trong các giá trị sau:\n0 = vbBinaryCompare – So sánh nh ị phân\n1 = vbTextCompare – So sánh d ạng văn bản\n2 = vbDatabaseCompare – So sánh cơ s ở dữ liệu\nVí dụ\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject( “Scripting.Dictionary”)\nDic.CompareMode = 1\nDic.Add “HN”, “Hà N ội”\nDic.Add “HCM”,”H ồ Chí Minh”\n‘ Phương th ức Add sau đây sẽ sai bởi v ì khoá “hn”\n‘ đã có rồi!\nDic.Add “hn”, “Hà Nam”\n%>\n</BODY>\n</HTML>\nCount\nThuộc tính này trả về số cặp t ên/giá trị (số phần  tử) trong đối t ượngDictionary.\nCú pháp:\nDictionary.Count"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 73,
    "text": "72Ví dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.CompareMode = 1\nDic.Add “HN”, “Hà N ội”\nDic.Add “HCM”,”H ồ Chí Minh”\nDic.Add “HP”, “H ải Phòng”\nResponse.Writ e(“Số cặp tên/giá trị là:” & Dic.Count)\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nItem\nDùng thu ộc tính n ày để gán hoặc lấy về giá trị của một phần tử trong đối t ượng\nDictionary .\nCú pháp:\nDictionary.Item (key)[ = newitem]\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.Add “HN”, “Hà N ội”\nDic.Add “HCM”,”H ồ Chí Minh”\nDic.Add “HP”, “H ải Phòng”\nResponse.Write(“Giá tr ị của khoá HN l à:” & Dic.Item(“HN”))\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nKey\nĐể thay đổi t ên của một khóa đã có trong đối tượngDictionary ta dùng thu ộc tính key\ntheo cú pháp sau\nDictionary.Key(key)[= newkey]\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 74,
    "text": "73Dic.Add “HN”, “Hà N ội”\nDic.Add “HCM”,”H ồ Chí Minh”\nDic.Add “HP”, “ Hải Phòng”\nDic.Key(“HN”) = “HNOI”\nResponse.Write(“Giá tr ị của khoá HNOI l à:” & Dic.Item(“HNOI”))\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\n7.3. Các phương th ức của đối t ượng Dictionary\nAdd\nPhương th ứcAdd dùng để thêm một cặp khoá/giá trị mới v ào đối tượng\nDictionary . Nếu khoá n ày đã có trong Dictionary  thì phương thức này sẽ bị sai.\nCú pháp:\nDictionary.Add(key, value)\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.Add “Đ”, “Đ ỏ”\nDic.Add “X”,”Xanh”\nDic.Add “V”, “Vàng ”\nDic.Key(“T”) = “Tím”\nResponse.Write(“Giá tr ị của khoá T l à:” & Dic.Item(“T”))\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nExits\nĐể kiểm tra một khoá đ ã có trong đối tượngDictionary  hay chưa ta dùng\nphương th ứcExits. Phương th ức này trả về true nếu khoá đ ãcó trongDictionary  và\ntrả vềfalse nếu khoá tồn tại.\nCú pháp:\nDictionary.Exits (key, value)\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.Add “Đ”, “Đ ỏ”\nDic.Add “X”,”Xanh”\nDic.Add “V”, “Vàng”"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 75,
    "text": "74Dic.Key(“T”) = “Tím ”\nIf Dic.Exits(“V”) = true Then\nResponse.Write “Khóa V t ồn tại!”\nElse\nResponse.Write(“Khoá V không t ồn tại!”)\nEnd If\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nItems\nKhông ph ải lúc nào ta cũng thao tác tr ên các khoá c ủa đối tượngDictionary  mà\nđôi lúc ta c ũng phải thao tác tr ên dữ liệu của các khóa nh ư: tìm kiếm một giá trị n ào\nđó, sửa đổi giá trị,...Nếu ta duyệt lần l ượt trên các khoá và l ấy giá trị của chúng để so\nsánh thìắt hẳn sẽ mất nhiều thời gian. Đối t ượngDictionary  cung cấp cho ta ph ương\nthứcItemsđể lấy một mảng các giá trị của các khoá, v à nhờ vào mảng này ta sẽ thao\ntác trên dữ liệu dễ d àng hơn. Cú pháp c ủa phương thứcItems như sau:\nDictionary.Items\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.Add “Đ ”, “Đỏ”\nDic.Add “X”,”Xanh”\nDic.Add “V”, “Vàng”\nDic.Key(“T”) = “Tím”\nResponse.Write (“<p>” & “Các giá tr ị:” & “</p>”)\nDim Arr, i\nFor i = 0 to Dic.Count -1\nResponse.Write(Arr(i) & “<br>”)\nNext\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nKeys\nThay vì tr ả về một mả ng các giá tr ị như phương th ứcItems thì phương thức\nKeys lại trả về một mảng các khoá trong đối t ượngDictionary .\nCú pháp:\nDictionary.Keys\nVí dụ:\n<HTML>\n<BODY>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 76,
    "text": "75<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.Add “Đ”, “Đ ỏ”\nDic.Add “X” ,”Xanh”\nDic.Add “V”, “Vàng”\nDic.Key(“T”) = “Tím”\nResponse.Write (“<p>” & “Các khoá:” & “</p>”)\nDim Arr, i\nArr = Dic.Keys\nFor i = 0 to Dic.Count -1\nResponse.Write(Arr(i) & “<br>”)\nNext\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nRemove\nPhương th ức này xóa m ột phần tử (một cặp khoá/giá trị) ra khỏi đối t ượng\nDictionary. Cú pháp c ủa phương thức này như sau:\nDictionary.Remove(key)\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim Dic\nSet Dic = Server.CreateObject(“Scripting.Dictionary”)\nDic.Add “Đ”, “Đ ỏ”\nDic.Add “X”,”Xanh”\nDic.Add “V”, “Vàng”\nDic.Key(“T”) = “Tím”\nDic.Remove(“Đ”)\nSet Dic = nothing\n%>\n</BODY>\n</HTML>\nRemoveAll\nPhương th ức này dùng đ ể xoá tất cả các phần tử của đối t ượngDictionary.\nCú pháp:\nDictionary.RemoveAll\n8. Đối tượng filesystemobject\nĐối tượng FileSystemObject c ung cấp thông tin về hệ thống tập tin, th ư mục\ntrên trình ch ủ và ta có thể sử dụng đối t ượng này để thao tác với các tập tin, th ư mục,...\n8.1. Tạo đối tượng filesystemobject"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 77,
    "text": "76Bởi vìđối tượngFileSystemObject thao tác trên h ệ thống tập tin của tr ình chủ\n(server) nên đ ối tượng này được tạo ra bởi Server theo cú pháp sau:\n<%\nDim fso\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\n%>\nLưuý:Khi dùng xong th ực thể của đối t ượngFileSystemObject ta phải huỷ thực thể\nđó đi bằng cách:\nSet fso = nothi ng\n8.2. Các thu ộc tính của đối t ượng FileSystemObject\nĐối tượngFileSystemObject chỉ có một thuộc tính duy nhất đó l à:\nDrives: Thuộc tính này cho biết một tập tất cả các ổ đĩa tr ên máy tính.\nCú pháp:\n[drivecoll = ] FileSystemObject.Drives\n8.3. Các phương thức của đối t ượng FileSystemObject\nBuilPath\nPhương th ức này gắn một chuỗi v ào một đường dẫn đ ã cóđể tạo ra một đ ường\ndẫn mới.\nCú pháp:\n[newpath = ] FileSystemObject.BuildPath(path, name)\nTrong đó:\n+ path: là đư ờng dẫn đ ã tồn tại\n+ name: là tên c ần gắn thêm vào Path\n+ newpath: là đư ờng dẫn mới sau khi đ ã gắn tên vào\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim fso,NewPath\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nNewPath = fso.BuildPath(“C: \\My Documents”, “BT”)\nResponse.Write (NewPath)\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nTrong ví d ụ trên, sau khi g ọi phương thứcBuildPath  thì biếnNewPath  sẽ có giá trị l à\n“C:\\My Documents \\BT”\nCopyFile\nPhương th ức này sao chép m ột hoặc một số tập tin từ th ư mục này tới thư mục khác.\nCú pháp:\nFileSystemObject.Copy src, de s [,ovr]\nTrong đó:\nsrc: là đư ờng dẫn tới tập tin cần sao chép, t ên tập tin cần chép có thể chứa các ký tự\nthay thế như (*,?)."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 78,
    "text": "77des: là đư ờng dẫn của th ư mục cần chép tới, đ ường dẫn n ày không đư ợc chứa ký tự\nthay thế (*,?).\novr: nhận giá trị true hoặc false . Nếu ovr là true có ngh ĩa là cho phép chép đè lên các\ntập tin đã có trong des. N ếu false th ì không cho phép chép đè. Giá tr ị mặc định của ovr\nlà true.\nVí dụ:Đoạn chương trình sauđây sao chép t ất cả các tập tin có đuôi .asp trong th ư\nmụcC:\\Web sang thư mụcD:\\ASP\n<HTML>\n<BODY>\n<%\nDim fso\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nfso.Copy “C: \\Web\\*.asp”, “D: \\ASP”\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nCopyFolder\nPhương th ức này sao chép m ột hoặc nhiều th ư mục.\nCú pháp:\nFileSystemObject.Co pyFolder src, des [,ovr]\nVí dụ:Sao chép t ất cả các th ư mục con của th ư mụcC:\\Web vào thư m ụcD:\\ASP\n<HTML>\n<BODY>\n<%\nDim fso\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nfso.Copy “C: \\Web\\*”, “D:\\ASP”\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nCreateFolder\nPhương th ức này tạo một th ư mục mới.\nCú pháp:\nFileSystemObject.CreateFolder (Foldername)\nVí dụ:Tạo thư mụcC:\\ASP\n<HTML>\n<BODY>\n<%\nDim fso\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nfso.CreateFolder “C: \\ASP”\nSet fso = nothin g\n%>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 79,
    "text": "78</BODY>\n</HTML>\nCreateTextFile\nPhương th ức này xoá một hoặc nhiều tập tin. Nếu tập tin không tồn tại th ì sẽ xuất hiện\nlỗi.\nCú pháp:\nFileSystemObject.CreateTextFile(filename[,Ovr[,Uni]])\nDeleteFile\nPhương th ức này xoá một hoặc nhiều tập tin. Nếu tập tin không t ồn tại thì sẽ xuất hiện\nlỗi.\nCú pháp:\nFileSystemObject.DeleteFile(filename[,bReadOnly])\nTrong đó bReadOnly nh ận một trong hai giá trị. Nếu nhận giá trị true th ì các tập tin\nmang thu ộc tính chỉ đọc (read -ony) cũng sẽ bị xoá. Nếu nhận giá trị fal se thì các t ập\ntin mang thu ộc tính read -only sẽ không bị xoá.\nDeleteFolder\nPhương th ức này xoá m ột hoặc nhiều th ư mục. Nếu th ư mục không tồn tại th ì\nphương th ức này sẽ gây ra lỗi.\nCú pháp:\nFileSystemObject.DeleteFolder(foldername[,bReadOnly])\nDrivExits\nPhương th ứcDrivExits kiểm tra trên hệ thống tập tin của server có tồn tại một\nổ đĩa nào đó hay không? N ếu có thì phương thức này trả về true, c òn nếu không th ì sẽ\ntrả về false.\nCú pháp:\nFileSystemObject.DrivExits(drive)\nTrong đó drive là tên c ủa ổ đĩa cầ n kiểm tra.\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim fso\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nIf fso.DrivExits(“C:”) = true Then\n    Response.Write (“ ổ đĩa C tồn tại!”)\nelse\nResponse.Write(“ ổ đĩa C không tồn tại!”)\nend if\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nGetAbsolutePathname\nPhương th ức này trả về đường dẫn dạng đầy đủ của một đ ường dẫn t ương đối.\nCú pháp:"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 80,
    "text": "79FileSystemObject.GetAbsolutePathname(path)\nVí dụ:Giả sử đường dẫn hiện h ành làC:\\ASP. Đoạn chương trình sauđây sẽ in ra\nmàn hình browse r dòngC:\\ASP\\Data\\list.txt\n<HTML>\n<BODY>\n<%\nDim fso, path\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\npath = fso.GetAbsolutePathname(“Data \\list.txt”)\n    Response.Write (path)\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nGetBaseName\nPhương th ức này trả về phần t ên của một tập tin hoặc t ên của thư mục ở cuối một\nđường dẫn.\nCú pháp:\nFileSystemObject.GetBaseName(path)\nVí dụ:Nếu path = “C: \\ASP\\Data\\list.txt” thì hàm này s ẽ trả về “list”\nGetDrive\nPhương th ức này trả về một đối t ượngDrive mô tả mộtổ đĩa. Có đ ược đối\ntượngDrive ta có thể thao tác tr ênổ đĩa màDrivemô tả bằng cách sử dụng các\nphương th ức của đối t ượngDrive.\nCú pháp:\nFileSystemObject.GetDrive(Drive)\nVí dụ:Đoạn chương trình sauđây trả về đối tượng Drive mô tả ổ đĩa C.\n<HTML>\n<BODY>\n<%\nDim fso, drvC\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nSet drvC = fso.GetDrive(“C: \\”)\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nGetDriveName\nPhương th ức này trả về một chuỗi l à tên của mổ đĩa trong một đ ường dẫn.\nCú pháp:\nFileSystemO bject.GetDriveName(path)\nVí dụ:Nếu path = “C: \\ASP\\Data\\list.txt” khi g ọi hàm GetDriveName(path) ta s ẽ nhận\nđược chuỗi “C:”\nGetExtensionName"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 81,
    "text": "80Phương th ức này trả về phần mở rộng của một tập tin (không bao gồm dấu chấm phân\ncách giữa phần tên và phần mở rộn g).\nCú pháp:\nFileSystemObject.GetExtensionName(path)\nVí dụ:Nếu path = “C: \\ASP\\Data\\list.txt thì khi g ọi hàm GetExtensionName(path) ta\nsẽ nhận được chuỗi “txt”.\nGetFile\nPhương th ức GetFile trả về đối t ượng File mô tả một tập tin đ ãđược chỉ định trong\nđường dẫn truyền v ào.\nCú pháp:\nFileSystemObject.GetFile(path)\nGetFileName\nPhương th ức này chỉ trả về phần t ên của một tập tin hay một th ư mục.\nCú pháp:\nFileSystemObject.GetFileName(path)\nVí dụ:nếu path = “C: \\ASP\\Data” thì khi g ọi hàm GetFileName(path) ta s ẽ nhận được\nchuỗi “Data”. Nếu path = “C: \\ASP\\Data\\list.txt” thì khi g ọi hàm GetFileName(path) ta\nsẽ nhận được chuỗi “list”.\nGetFolder\nPhương th ức GetFolder trả về đối t ượng Folder của một th ư mục.\nCú pháp:\nFileSystemObject.GetFolder(path)\nGetParentFolderN ame\nPhương th ức này trả về thư mục cha của một th ư mục.\nCú pháp:\nFileSystemObject.GetParentFolderName(path)\nVí dụ:Nếu path = “C: \\ASP\\Data” thì khi g ọi hàm GetParentFolderName(path) ta s ẽ\nnhân được chuỗi ASP. Đây l à thư mục cha của th ư mục Data.\nGetSpecia lFolder\nPhương th ức này trả về đường dẫn tới một số th ư mục đặc biệt của hệ điều h ành.\nCú pháp:\nFileSystemObject.GetSpecialFolder(foldername)\nTrong đó foldername nh ận một trong các giá trị sau:\n+WindowsFolder  hay 0: N ếu muốn nhận về th ư mục của hệ điều h ành (mặc định\nwindows 98 đó là thư m ục windows,đối với windows 2000 th ìđó là thư m ục winnt).\n+SystemFolder  hay 1: N ếu muốn nhận về đ ường dẫn tới th ư mục System của hệ điều\nhành.\n+TemporaryFolder  hay 2: N ếu muốn nhận về đ ường dẫn tới th ư mục tạm thời\n(TEM) của hệ điều h ành.\nVí dụ: Đoạn chương trình sauđây lấy thư mục hệ thống của hệ điều h ành. Nếu dùng\nWindows 2000 thì trên màn hình browser s ẽ xuất hiện d òng“C:\\WINNT\\System32”\n<HTML>\n<BODY>\n<%\nDim fso, path"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 82,
    "text": "81Set fso = Server.CreateObject(“Scripting.FileS ystemObject”)\npath = fso.GetSpecialFolder(1)\nResponse.Write (path)\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nGetTempName\nPhương th ức này trả về một t ên tập tin hoặc th ư mục tạm thời đ ược phát sinh ngẫu\nnhiên.\nCú pháp:\nFileSystemObject.GetTempName\nVí dụ:\n<HTML>\n<BODY>\n<%\nDim fso, tfolder, tname, tfile\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\ntfolder = fso.GetSpecialFolder(2)\ntname = fso.GetTempName\nSet tfile = tfolder.CreateTextFile(tname)\nResponse.Write (tfile)\nSet fso = nothing\n%>\n</BODY>\n</HTML>\nMoveFile\nPhương th ức này di chuy ển một hoặc nhiều tập tin từ n ơi này sang nơi khác.\nCú pháp:\nFileSystemObject.MoveFile(src, des)\nTrong đó src là nơi ch ứa các tập tin cần di chuyển di, des l à nơi mà các t ập tin cần\nchép đến.\nMoveFolder\nPhương th ức này di chuy ển một hoặc nhiều th ư mục từ nơi này sang nơi khác.\nCú pháp:\nFileSystemObject.MoveFile(src, des)\nTrong đó src là nơi ch ứa các tập tin cần di chuyển đi, des l à nơi mà các t ập tin cần\nchép đến.\nOpenTextFile\nPhương th ức này mở một tập tin v à trảvề một đối t ượng TextStream đ ược dùng để\ntruy cập đối tượng này.\nCú pháp:\nFileSystemObject.OpenTextFile(fname, mode, creat, format)\nTrong đó:\n+ fname: là tên c ủa tập tin cần mở"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 83,
    "text": "82+ mode: dùng đ ẻ chỉ cách thức mở\n+ creat: dùng đ ể chỉ định rằng nếu tập tin kh ông tồn tại thì có tạo tập tin mới hay\nkhông\n+ format: dùng đ ể chỉ ra rằng mở tập tin d ùng chuẩn ASCII hay Unicode.\n8.4. Ví dụ minh hoạ\nSau đây là m ột ví dụ hiển thị một cửa sổ đăng nhập (login) cho phép ng ười\ndùng gõ vào tên truy c ập (username) v à mật khẩu (password). Ch ương trình sẽ kiểm\ntra cặp username v à password này có t ồn tại trong tập tin password.txt trong th ư mục\nhiện tại của ứng dụng không? Nếu có th ì chương trình sẽ đưa người dùng đến trang\nmain.asp. N ếu không th ì chương trình sẽ thông báo v àbắt người dùng đăng nh ập lại.\nTập tin common.asp chứa các h àm mà ngư ời dùng định nghĩa trong đó có h àm\nCheckAccount dùng đ ể kiểm tra xem username v à password truy ền vào có tồn tại\ntrong tập tin password.txt không? Nếu có th ì hàm này tr ả về true. Nếu không  thì hàm\nnày sẽ trả về false. Nội dung của common.asp nh ư sau:\n<%\nFunction CheckAccount(uname,upass)\nDim fso    ‘ Bien chua doi tuong FileSystem\nDim ftxt    ‘ Bien chua doi tuong File\nDim sLine\nDim path\nDim uname_pass\nuname = CStr(uname)\nupass = CStr(upass )\nuname_pass = uname & “:” & upass\nCheckAccount = false ‘Mac dinh ban dau\npath = Server.MapPath(“.”) & “ \\Password.txt”\nSet fso = Server.CreateObject(“Scripting.FileSystemObject”)\nSet ftxt = fso.OpenTextFile(path)\nWhile (ftxt.AtEndOfStream<>true) and (Ch eckAccount = false)\n      stLine = ftxt.ReadLine\n       if (uname_pass = stLine) then\n        CheckAccount = true\nend if\nwend\nftxt.Close\nSet ftxt = nothing\nSet fso = nothing\nEnd Function\n%>\nTập tin login.asp l à tập tin mô tả giao diện với ng ười dùng. Nộidung của login.asp\nnhư sau:\n <!--#include file = “common.asp”>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 84,
    "text": "83<html>\n<head>\n<title>Login to...</title>\n</head>\n<body>\n<b><font size=”6”>Login</font></b></p>\n<%\nDim uname, upass\nuname = Request.Form(“Uname”)\nupass = Request.Form(“Upass”)\nif (uname<>””) and  (upass<>””) then\n  if CheckAccount(uname, upass) = true then\n           Response.Redirect (“main.asp”)\n else\nResponse.Write (“<font color = red> Please check username and password!\n</font>”)\nend if\nelseif uname<>”” then\nResponse.Write(“<font color = red>P lease enter passwor!</font>”)\nelseif upass<>”” then\nResponse.Write (“<font color = red> Please enter username!</font>”)\nend if\n%>\n<form method =”POST” action=”login.asp”>\n<table border=”1” cellpadding=”0” cellspacing=”0” width=”27%”>\n<tr>\n  <td width=”10%” >Username</td>\n  <td><input type=text size=”20” name=”Uname”\nvalue=’<%= Server.HTMLEncode(Request.Form(“Uname”))% >’></td>\n</tr>\n<tr>\n    <td width=”10%”>Password</td>\n<td><input type=”password” size=”20” name=”Upass”></td>\n</tr>\n<tr>\n <td width=”100%” colsp an=”2”>\n<p align=”center”>\n<input type=”submit” value=”Login” name=”B3”> </td>\n</tr>\n</table>\n</form>\n</body>\n</html>\nTạo tập tin main.asp. Khi bạn viết một ứng dụng web thực sự th ì trang main.asp chính\nlà trang chính c ủa ứng dụng.Giả sử tập tin main.asp với nội dung sau:"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 85,
    "text": "84<html>\n<head>\n<title>Trang web chính...</title>\n</head>\n<body>\n<%\nResponse.Write (“Đăng nh ập thành công. Chào m ừng bạn đến trang web của chúng\ntôi!”)\n%>\n</body>\n</html>\nTạo tập tin password.txt v à đặt cùng thư m ục với ba tập tin tr ên với nội dung sau:\nabc:abc\ncobe:becon\nnvlong:long1280\nhung1254:meocon\nĐây chính là danh sách các username và password mà ứng dụng cho phép đăng nhập\nvào. Nếu muốn th êm người dùng, bạn thêm vào tập tin này các dòng t ươngứng.\nĐặt 4 tập tin vừa tạo v ào trong c ùng một thư mục và tạo một th ư mục ảo với t ên\nMyweb ch ỉ đến thư mục chứa 4 tập tin n ày.\nMở trình duyệt và gõ vào http://localhost/Myweb/login.asp . Kết quả sẽ hiển thị l ên\nmàn hình nh ư sau:\nKhi người dùng gõ vào đúng username và password trong t ập tin password.txt th ì khi\nnhấn nút login ng ười dùng sẽ được chuyển sang trang main.asp nh ư sau:\nNhưng khi g õ sai username và passwor thì m ột câu thông báo sẽ đ ược hiện lên và\nbắt người dùng đăng nh ập lại như sau:\n9. Đối tượng adrotator\nĐối tượng AdRotator đ ược dùng để hiển thị các ảnh khác nhau mỗi khi ng ười\ndùng yêu c ầu hoặc refresh một trang. Các thông tin về các ảnh hiển thị đ ược đặt trong\ntập tin văn bản.\n9.1. Cách t ạo đối tượng AdRotator\nĐể tạo đối t ượng AdRot ator ta dùng cú pháp sau:\nSet ad= Server.CreateObject(“MSWC.AdRotator”)\nad.GetAdvertisement(“textfile.txt”)\n9.2. Định dạng tập tin văn bản\nREDIRECT URL\nWIDTH 480\nHEIGHT 100\nBORDER 0\n*\nCITD.GIF\nhttp://www.citd.edu.vn /\nĐến với CITD\n80\nMicrosoft.gif"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 86,
    "text": "85http://www.mircrosoft.com/\nđến với Microsoft\n20\nCác dòng ở phía dưới dấu * l à các dòng ch ỉ hìnhảnh, địa chỉ trang web, d òng văn bản\nđể hiển thị nếu không hiển thị đ ược ảnh, v à tỉ lệ phần trăm số ng ười dùng truy c ập để\nhiển thị các ảnh.\n9.3. Các thu ộc tính của đối t ượng AdRotator\nBorder : chỉ định kích th ước của đ ường viền bao quanh phần quảng cáo.\nClickable : Chỉ định phần quảng cáo có hyperlink  không\nTargetFrame : tên c ủa frame để hiển thị ảnh quảng cáo\nVí dụ:\n<%\nDim adrot\nset adrot = Server.CreateObject(“MSWC.Adrotator”)\nadrot.Border = “2”\nadrot.Clickable = false\nadrot.TargetFrame = “targer=’_blank”’\nResponse.Write(adrot.Advertisement(“ads.txt”))\nSet fso = nothing\n%>\n9.4. Các phươ ng thức của đối t ượng AdRotator\nGetAdvertisement: Phương th ức này tr ả về đoạn HTML m à hiển thị mục quảng\ncáo trên trang web.\nCú pháp:\nAdRotator.GetAdvertisement(path)\nTrong đó path là đư ờng dẫn tới tập tin văn bản mô tả các mục quảng cáo.\nBài tập chương 4\nBài 1.  Thiết kế v à cài đ ặt trang web hiển thị máy tính tay với các phép toán: cộng (+),\ntrừ (-), nhân (*), chia (/), lu ỹ thừa (^), căn (), b ình ph ương (x2), ngh ịch đảo (1/x).\nBài 2. Viết đoạn code d ùng đ ể đếm số lần truy cập v ào m ột trang web. Sau đó nh úng\nđoạn code đó v ào trang web c ủa bạn để kiểm tra.\nBài 3. Tương t ự như câu 2 nhưng đ ếm số l ượt ng ười dùng đ ã login vào trang web.\nBài 4. Thiết kế v à cài đ ặt trang web hiển thị lịch (calendar). Trang web phải cho phép\nngười dùng xem l ịch tháng của một năm nào đó, xem l ịch của tháng tr ước, tháng kế\ntiếp.\nBài 5. Thiết kế v à cài đ ặt trang web hiển thị hệ thống cây th ư mục của máy chủ."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 87,
    "text": "86Chương 5: gi ới thiệu ado v à các kết nối cơ sở dữ liệu\n1.giới thiệu\nADO (ActiveX Data Object) là m ột kỹ thuật mới do M icrosoft phát tri ển để l àm\nviệc với các c ơ sở dữ liệu, đ ược dùng đ ể cung cấp các khả năng kết nối v à xử lý tr ên\ncơ sở dữ liệu.\nViệc sử dụng ADO để truy cập v à xử lý c ơ sở dữ liệu trong trang ASP có thể\nchia làm các bư ớc chính sau:\nKết nối với c ơ sở dữ li ệu thông qua OLEDB hoặc ODBC\nXây d ựng câu truy vấn dữ liệu v à yêu c ầu thực hiện câu truy vấn để thực hiện\nthao tác x ử lý tr ên cơ s ở dữ liệu\nXử lý các kết quả về từ câu truy vấn\nNgắt kết nối với c ơ sở dữ liệu, giải phóng các t ài nguyên c ủa hệ thống đ ã dùng.\n2. Kết nối với c ơ sở dữ liệu\n2.1. Tạo connection string thông qua OLEDB, ODBC\nĐể có thể xử lý dữ liệu, b ước đầu ti ên chúng ta ph ải cung cấp các thông tin cần\nthiết để hệ thống biết bạn muốn truy cập đến c ơ sở dữ liệu n ào. Connection string là\nmột chuỗi kí tự được dùng đ ể lưu tr ữ thông tin về dữ liệu nh ư sau:\n-Thông tin v ề hệ quản trị c ơ sở dữ liệu đ ược dùng trong cơ s ở dữ liệu của bạn. C ơ\nsở dữ liệu của bạn d ùng có th ể MS Access, MS SQL Server hay Oracle...\n- Thông tin v ề vị trí đặt c ơ sở dữ liệu của bạn. Ví dụ nếu bạn d ùng MS Access, b ạn\nphải chỉ ra c ơ sở dữ liệu của bạn đ ược lưu trong t ập tin .mdb n ào.\n- Mô hình k ết nối c ơ sở dữ liệu: ADO nối kết với c ơ sở dữ liệu có thể xem nh ư\nthông qua t ầng OLEDB hay tầng ODBC; từ tầng OLEDB có thể nối kết trực t iếp dựa\ntrên Provider đư ợc cung cấp cho từng hệ c ơ sở dữ liệu ri êng bi ệt hoặc thông qua\nODBC cung c ấp Driver cho từng hệ c ơ sở dữ liệu nh ư mô h ình và ta có các b ảng liệt\nkê bên dư ới:"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 88,
    "text": "87Bảng sau liệt k ê các OLE DB connectio n string cho m ột số hệ quản trị c ơ sở dữ\nliệu thông dụng:\nData Source OLE DB Connection String\nMicrosoft Access provider=Microsoft.Jet.OLEDB.4.0;\nData Source=đư ờng dẫn đến tập tin.mdb\nMicrosoft SQL Provider=SQLOLEDB.1; Data Source=\nServer đường dẫn đến database trên server\nOracle Provider=MSDAORA.1; Data\nSource=đư ờng dẫn đến database tr ên\nserver\nMicrosoft Indexing Service Provider=MSIDXS.1; Data\nSource=đư ờng dẫn\nBảng sau liệt k ê các ODBC connection string cho m ột số hệ quản trị c ơ sở dữ\nliệu thông dụn g:\nData Source Driver ODBC Connection String\nMicrosoft Access Driver={Microsoft Access\nDiver(*.mdb)}; DBQ=đư ờng dẫn đến tập\ntin.mdb\nMicrosoft SQL Server Driver={SQL Server};SERVER=đư ờng\ndẫn đến database tr ên server\nOracle Driver=MSDAORA.1; DataADO\nOLEDB\njet SQL oracle ODBC\nJet SQL Orac le\nAccess SQL Oracle Access SQL OracleOLEDB Layer\nODBC\nLayer"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 89,
    "text": "88Source=đ ường dẫn đến database tr ên\nserver\nMicrosoft Exel Driver={Microsoft Exel\nDriver(*.xls)};DBQ=đư ờng dẫn đến tập\ntin.xls; DriverID=26\nMicrosoft Exel 97 Driver={Microsoft Exel\nDriver(*.xls)};DBQ=đư ờng dẫn đến tập\ntin.xls; DriverID=790\nParadox Driver={Microso ft Paradox\nDriver(*.db)};DBQ=đư ờng dẫn đến tập\ntin.db; DriverID=26\nText Driver={Microsoft Text\nDriver(*.txt;*.csv)};DBQ=đư ờng dẫn\nđến tập tin.xls; DefaultDir=đ ường dẫn\nđến *.txt\nMicrosoft Visual FoxPro (with a database\ncontainer)Driver={Microsoft Visual  FoxPro\nDriver};\nSourceType=DBC;Sourcedb=đư ờng dẫn\nđến tập tin.dbc\nMicrosoft Visual FoxPro (without a\ndatabase container)Driver={Microsoft Visual FoxPro\nDriver};\nSourceType=DBF;SourceDb=đư ờng dẫn\nđến tập tin.dbf\n2.2. Tạo connection string thông qua DSN\nTa có th ể xây dựng connection strings bằng cách tạo Data Source Name (DSN)\ntrong ODBC. M ột DSN chứa các thông tin sau:\noTên c ủa DSN\noTập tin c ơ sở dữ liệu m à nó tr ỏ tơí\noCon tr ỏ chỉ đến các driver kết nối với tập tin c ơ sở dữ liệu\noUserID và password đ ể truy xuất data store\noCác thông tin c ần thiết khác cho việc kết nối\nDSN có ba lo ại: User, System v à File. User DSN b ị giới hạn trong phạm vi ng ười tạo.\nMột user đăng nhập v ào mạng sẽ không thấy DSN của các user khác. System DSN\nđược lưu trên registry và đư ợc nhìn thấy bởi tất cả ng ười dùng trên máy c ục bộ bao\ngồm các dịch vụ NT. File DSN chứa nội dung t ương đương nhưng dư ới dạng tập tin\nvăn bản chứ không phải trong registry\n-Các bước tạo DSN cho c ơ sở dữ liệu Access\n1. Mở cửa sổ điều khiển ODBC v à chọn System DS N. Vào Control Panel -> 32 bit\nODBC (window 98)\nVào Control Panel -> Administrator Tools -> Data Source (ODBC) (Windows 2000\nhoặc Windows XP)\n2. Nhấp vào Add đ ể tạo DSN mới. Chọn từ danh sách driver, driver bạn cần sử\ndụng cho c ơ sở dữ liệu của m ình.ở đây là Access.\n3. Đặt tên DSN"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 90,
    "text": "894. Chỉ ra cơ sở dữ liệu mf DSN trỏ tới bằng cách nhấp Select v à duyệt rồi chọn c ơ\nsở dữ liệu.\nĐối với Windows 9X, mọi ng ười đều có thể cấu h ình DSN\nĐối với Windows NT/2000 (Professional hoặc Server) th ì chỉ có quyền Administrat or\nhay uỷ quyền Admin mới có thể cấu h ình DSN.\nSau khi click nút Ađ đ ể Add DSN, chọn Driver Microsoft Access.\nĐặt tên Data Source Name và nh ấn nút Select chỉ ra tập tin *.mdb chứa c ơ sở dữ liệu\nMS Access\n- Các bước tạo DSN cho c ơ sở dữ liệu SQL Server\nChúng ta cần phải biết một số thông tin sau tr ước khi tạo DSN cho c ơ sở dữ liệu SQL\nServer\noĐịa chỉ mạng của database server\noKiểu mạng (network type) của server (Name pipes, TCP/IP...)\noPhương th ức bảo mật của server (NT hay SQL Server)\noMột tài khoản hợp lệ kh i đăng nhập vào server\noTên của cơ sở dữ liệu tr ên server\nĐặt tên cho data source name và ch ỉ ra tên Server ch ứa database tr ên SQL Server\nChỉ ra login ID v à password c ủa database cần nối kết. Có thể chỉnh lại các cấu h ình\ncác kiểu kết nối mạng đến máy serv er nối chứa dữ liệu bằng cách nhấn Client\nConfiguration\nChọn ra database cần nối kết từ list box\nSau khi đ ã hoàn tất các bước trước ta nhấn nút Finish. Nhấn nút Test Data Source để\nkiểm tra xem việc tạo DSN đ ã thành công hay ch ưa và các k ết nối với c ơ sở dữ liệu có\nthực thi được hay không.\nNếu kết nối th ành công ta có thông báo như sau:\n3. Các đối tượng của ADO\nMô hình các đối tượng ADO v à mối liên hệ đối tượng"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 91,
    "text": "90ADO có các đ ối tượng Connection, Command, Recordset, Record, Stream và\ncác tập hợp Errors Fields, Properities, Parameter nh ư hình trên. Các đối tượng trong\nADO và các m ối liên hệ giữa chúng đ ược thể hiện nh ư hình bên d ưới. Dựa tr ên mô\nhìnhđối tượng của ADO sẽ triển khai v à mô tả một cách chi tiết các đối t ượng, các\nthuộc tính và các phương th ức chức năng của mỗi đối t ượng được tạo và sử dụng cho\nviệc kết nối, truy vấn c ơ sở dữ liệu v à hiển thị dữ liệu thông qua các đối t ượng ADO\nđể hiển thị các tr ường của mẫu tin, hay kết quả câu truy vấn l ên trang web ASP.parameter errors properities properities\nConnection Command\nRecord Recordset\nStream\nFields Fields Properities"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 92,
    "text": "91Đối tượng Connection\nĐối tượng cho phép bạn nối kết với c ơ sở dữ liệu. Qua đó, nó cung cấp sự kết nối\ngiữa ADO v à một cơ sở dữ liệu n ào đó. Nó ch ứa ba thông tin:\noCơ sở dữ liệu\noGiao th ức (driver/provider) để trao đổi thông tin v ới\nousername và Password\nĐối tượng Command\nĐối tượng đ ược thiết kế để thực hiện các câu lệnh ở dạng các câu lệnh SQL nh ư\nSELECT, INSERT, UPDATE, DELETE hay các câu l ệnh SQL thay đổi cấu trúc dữ\nliệu nh ư ALTER TABLE hay DROP INDEX ho ặc có thể chứa các stor e procedure.\nĐối tượng n ày thư ờng đ ược dùng đ ể chạy câu lệnh SQL không trả về bất kỳ mẫu tin\nnào.\nĐối tượng Recordset\nĐối tượng chứa tập hợp các dữ liệu đ ược rút ra từ c ơ sở dữ liệu. Nó cho phép\nthay đ ổi dữ liệu nh ư thêm, xoá, s ửa dữ liệu, hay di chuyển mẫu tin.\nĐối tượng Record\nĐối tượng Record l ưu tr ữ một h àng (m ẫu tin) trong Recordset, một th ư mục hay\ntập tin trong File System.\nĐối tượng Stream\nĐối tượng đ ược thiết kế để quản lý dữ liệu dạng binary, nó đ ược dùng đ ể quản\nlý dữ liệu BLOB (Binary Larg e Object) như h ìnhảnh hay mảng dữ liệu lớn.\n3.1. Đối tượng Connectionerrors\nconnectioncollecti on\nRecordset CommandActiveConne ction\ncollection\nparametersexecute()ActiveCom mand execute()\nFieldscollectionRecord\ncollectionsourceActiveConnection\nGetChildrent()\nopen ()SourceRecord"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 93,
    "text": "923.1.1 Kết nối cơ sở dữ liệu qua đối t ượng Connection\nADO cung c ấp đối t ượng Connection để hỗ trợ cho việc tạo v à quản lý kết nối\ncơ sở dữ liệu cần xử lý. Các thuộc tính v à phương th ức của đối t ượng n ày cho phép\nbạn mở, đóng kết nối, đồng thời cho phép thực hiện các câu truy vấn dữ liệu.\nĐể có thiết lập kết nối c ơ sở dữ liệu, ta cần phải thực hiện các b ước sau:\noTạo một thể hiện (instance) của đối t ượng Connection từ phía server bằng lệ nh:\nServer.CreateObject(“ADODB.Connection”)\noSử dụng ph ương th ức Open để mở kết nối c ơ sở dữ liệu. Tham số của ph ương\nthức này là chu ỗi connection string, chuỗi n ày sẽ tương ứng với c ơ sở dữ liệu.\nVí dụ:minh h ọa cho việc tạo kết nối đến c ơ sở dữ liệu đ ượclưu b ằng MS Access\n<%\nstrDSN=”Driver={Microsoft Access\nDriver(*.mdb)}; DBQ=C: \\path\\filename.mdb”\n‘ Tạo connection string\nSet Conn=server.CreateObject(“ADODB.Connection”)\n‘ Mở nối kết qua bằng connection string\nConn.Open strConn\n%>\nKhi c ần có một kết nối c ố định cho tất cả các trang ta có thể thiết lập tầm vực cho đối\ntượng Connection bằng cách viết các thủ tục sau trong tập tin global.asa\n-ở mức application:\n<%\nSub Application_Onstrat()\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nEnd Sub\n%>\n-ở mức Session:\n<%\nSub Session_Start()\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nEnd Sub\n%>\n3.1.2. Thao tác d ữ liệu thông qua đối t ượng Connection\nĐối tượng Connection cung cấp ph ương th ức Execute để thực hiện một câu\nlệnh truy vấn. Thao tác trên cơ s ở dữ liệu tr ước hết tạo instance cho đối t ượng\nConnection, xây d ựng câu truy vấn SQL v à yêu c ầu hệ thống thực hiện thông qua\nphương th ức Execute của đối t ượng Connection.\nCú pháp:\nobjConn.Execute CommandText, RecordAffected, Options\nCommandTex t: Câu l ệnh SQL, t ên bảng hay Stored Procedure\nOptions: Quy đ ịnh loại CommandText\nHằng Giá tr ị Loại của CommandText\nadCmdUnknown 0 Mặc định, không xác định\nloại CommandText\nAdCmdTable 1 CommandText là câu l ệnh"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 94,
    "text": "93SQL\nadCmdTable 2 CommandText là tên b ảng\nadCmdStore 4 CommandText là stored\nprocedure hay câu truy v ấn\nVí dụ minh hoạ thực hiện truy vấn mẫu tin v ào cơ s ở dữ liệu\n<%\nDim objConn\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nobjConn.Open “DSN=CITDDB”\nDim sqlText\nSqlText=”SELECT * FROM STUDEN TS”\nSet objRS=objConn.Excute(sqlText)\n%>\nVí dụ minh hoạ việc th êm m ẫu tin v ào cơ s ở dữ liệu\n<%\nDim objConn\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nobjConn.Open “DSN=CITDDB”\nDim sqlText\nSqlText=”INSERT INTO STUDENTS (HOTEN, NAMSINH, LOP, DIACHI,\nPHONE) VALUE (‘Nguyen Thang’,’14/08/1974’, ‘CV=012003’, ’78 Truong Dinh\nTPHCM’, ‘9317442’)”\nSet objRS=objConn.Excute(sqlText)\n%>\nCác câu l ệnh DELETE, UPDATE cũng đ ược thực hiện t ương t ự\n<%\nDim objConn\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nobjConn.Open “DSN=CITDDB”\nDim sqlText\nSqlText=”UPDATE STUDENTS  SET DIACHI=’34 Truong Dinh TPHCM’,\nNAMSINH=’07/06/1977’ WHERE HOTEN=’Nguyen Thang’”\nSet objRS=objConn.Excute(sqlText)\n%>\n<%\nDim objConn\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nobjConn.Open “DSN=CITDDB”\nDim sqlText\nSqlText=”DELETE STUDENTS  WHERE HOTEN=’Nguyen Nam’ AND\nNAMSINH=’07/06/1977’”\nSet objRS=objConn.Excute(sqlText)\n%>\n3.2. Thao tác cơ s ở dữ liệu bằng đối t ượng Command"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 95,
    "text": "94Để có thể thao tác v à thay đổi cơ sở dữ liệu bằng đối t ượng Command, ta phải\nthực hiện các b ước sau trước khi sử dụng đối t ượng Command:\nKhai báo và kh ởi tạo thể hiện (instance) của đối t ượng Command\nKhởi tạo các thuộc tính đối t ượng\nTrong đó thu ộc tính của đối t ượng Command nh ư sau:\nActiveConnection chứa instance đối tượng Connection đ ã\nđược khai báo\nCommandText chứa câu lệnh SQL hay t ên bảng\nCommandType chứa các thuộc tính quy định cho\nCommandText\nCommandTimeOut Thời gian để thực hiện câu lệnh, nếu việc\nthực hiện v ượt quá thời gian đ ãđịnh này\nsẽ có thông báo lỗi\nPrepared True/false. True cho phép biên d ịch trước\nthực thi câu lệnh v à false ngư ợc lại\nExecute Thực thi câu lệnh\nGiá trị của thuộc tính CommandType:\nthuộc tính mô tả\nadCmdText Câu lệnh SQL\nadCmdTable tên bảng\nadCmdStoreProc Store Procedure hay câu lệnh query\nadCmdUnknown giá trị mặc định\nVí dụ:minh hoạ sử dụng đối t ượng Command\n<%\nstrDSN=”Driver={Microsoft Access Driver(*.mdb)};\nDBQ=C:\\path\\filename.mdb”\nSet Conn=server.CreateObject(“ADODB.Connection”)\n‘ Khởi tạo các tạo đối t ượng Command\nDim objCmd\nSet ObjCmd=Server.CreateObject(“ ADODB.Command ”)\nobjCmd.ActiveConnection=objConn\nsqlText=”INSERT INTO Customers(FirstName,LastName)\nValues(‘Truc’,’Nguyen’)”\nobjCmd.CommandText=sqlText\nobjCmd.CommandType=adCmdText\nobjCmd.CommandTimeOut=30 ‘ tính bằng giây\nobjCmd.Prepared=false\nobjCmd.Execute\n%>\n3.3. Xử lý dữ liệu thông qua đối t ượng Recordset\nCác phương th ức của đối t ượng recordset\nPhương th ức Diễn giải\nAddNew tạo mới record\nCancel huỷ các thao tác đang thực thi\nClose Đóng đối tượng recordset và các đ ối"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 96,
    "text": "95tượng liên quan\nDelete xoá record hay m ột tập record hiện h ành\nFind tìm một record thoả m ãnđiều kiện\nGetRows Lấy nhiều record đ ưa vào một mảng\nGetString trả về recordset d ưới dạng một chuỗi\nMoveFirst đưa vị trí của record hiện h ành về record\nđầu tiên trong recordset\nMoveLast đưa vị trí của record hiện h ành về record\ncuối cùng trong recordset\nMoveNext đưa vị trí của record hiện h ành về record\nkế\nNextRecordset xoá đối tượng Recordset hiện h ành và trả\nvề đối tượng recordset kế tiếp\nOpen mở một record\nRequery cập nhật lại dữ liệu bằng cách thực hiện\nlại câu lệnh truy vấn ban đầu\nResync Refresh l ại dữ liệu trong đối t ượng\nRecordset hi ện hành\nSave lưu Recordset xu ống file\nseek tìm chủ mục của recordset\nUpdate Lưu các thay đ ổi\nĐối tượng Recordset có nhi ều phương thức để xử lý thao tác dữ liệu nh ư bảng\nliệt kêở trên, trong đó các phương th ức thường sử dụng nh ư để tác động đến sự thay\nđổi mẫu tin nh ưAddNew, Update, Delete ; di chuy ển vị trí các mẫu tin nh ư\nMoveFirst, MovePrevious, MoveNe xt, MoveLast ; đóng m ở recordset nh ưOpen,\nClose. Ta sẽ lần lượt đi vào chi tiết cách thức sử dụng các ph ương thức này một cách\ncụ thể.\n1.Phương th ức Open\nCú pháp:\nobjRs.Open  Source, Connection, CursorType, LockType, Options\nSource tên bảng hay câu lệnh SQL hoặc Stored\nProcedure\nActiveConnection chứa instance đối t ượng Connection đ ã\nđược khai báo hay chuỗi kết nối\nCursorType Kiểu con trỏ m à cơ sở dữ liệu sử dụng\nkhi mở Recordset\nLockType kiểu khoá sẽ đ ược sử dụng trong\nRecordset.Bao g ồm 4 kiểu khoá:\nOptions Kiểu của truy vấn hay bảng đ ược miêu tả\nbởi Source\nTham số CursorType:\nHằng số giá trịChức năng\nadOpenForwardOnly 0 truy vấn tuần tự trong Recordset. Đây là\ncursor mặc định"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 97,
    "text": "96AdOpenKeyset 1 không đư ợc truy xuất đến record đang\nđược user khác truy xuất\nadOpenDynamic 2 cho phép s ửa đổi, th êm hay xoá ngay c ả\nrecordset đang đư ợc mở bởi user khác\nadOpenStatic 3 không đư ợc phép thay đổi record khi nó\nđang được mở bởi user khác\nTham sốLockType :có 4 kiểu khoá\nHằng số Giá trị Chức năng\nadLockReadOnly 1 Khoá mặc định, các tr ường\ntrong recordset ch ỉ có thể\nđọc không thể cập nhật\nadLockPressimistic 2 Sự thay đổi dữ liệu sẽ có\ntác động ngay lập tức tr ên\nrecordset\nadLockOptimistic 3 Khoá mẫu tin hiện h ành\nkhi gọi phương th ức\nUpdate\nadLockBatchOptimistic 4 thực hiện việc cập nhật\ntheo lô\nTham số Options:\nHằng Giá trịLoại của CommandText\nAdCmdText 1 tham số Source l à câu lệnh SQL\nAdCmdTable 2 Tham số Source l à tên bảng\nAdCmdStoredProc 4 Tham số Source l à stored procedure hay câu truy\nvấn\nAdCmdUnknown 0 tham số Source không xác định\nAdCmdFile 256 Tham số Source l à file\nAdCmdTableDirect 512 Tham số Source l à tên bảng\n2.Phương th ứcAddNew: Phương th ức này cho phép t ạo mới mẫu tin, gán dữ\nliệu mới vào các field c ủa mẫu tin, v à nó chỉ được cập nhật v ào cơ sở dữ liệu\nkhi ta gọi phương thức Update hay UpdateBatch\n3.Phương th ức Update:  Phương th ức này được dùng để cập nhật lại mẫu tin\nhiện thời trong c ơ sở dữ liệu\nVí dụ: Sinh vi ên có mã s ố CV-012003, mu ốn thay đổi số điện thoại ‘9817442’\nTrước hết ta t ìm Sinh viên có  mã số CV-012003, n ếu tồn tại ta sẽ cập nhật số điện\nthoại\nobjRs.Find “MASV=’CV -012003’”\nobjRs.(“Phone”)=’9817442’\nobjRs.Update\n4.Phương th ức Delete: phương th ức này cho phép xoá m ẫu tin trong Recordset\nCú pháp:  objRs.Delete\nhay objRs.Delete <tham s ố>\nTham số Mô tả\nAdAffectCurrent xoá mẫu tin hiện h ành\nAdAffectGroup xoá mẫu tin thoả điều kiện lọc"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 98,
    "text": "97Ví dụ:Xoá sinh viên mang h ọ tên ‘Nguyen Thang’\nobjRs.Find “HOTEN=’Nguyen Thang”\nElse\nobjRs.Delete\nEnd If\n5.Phương th ức Close: Để ngắt kết nối với c ơ sở dữ liệu, ta  dùng phương th ức\nClose có trong đ ối tượng Recordset cũng nh ư có trong đ ối tượng Connection.\nSau đó để giải phóng t ài nguyên h ệ thống đ ã dùng trong các đối tượng này, ta\ndùng lệnh gán giá trị nothing cho các biến đối t ượng này.\n<%\nobjRs.Close\nSet objRs=Not hing\nConn.Close\nSet Conn=nothing\n%>\n3.3.1. Lưu tr ữ dữ liệu trả về\nADO sử dụng đối t ượng Recorset để l ưu trữ kết quả trả về từ câu truy vấn dữ\nliệu SELECT. V ì kết quả trả về của một câu truy vấn SELECT có thể có nhiều mẫu\ntin, cho nên có th ể xem Recordset  như là m ột mảng các mẫu tin.\nThông thư ờng có 2 cách để lấy dữ liệu từ câu truy vấn đặt v ào biến Recordset\nThực hiện ph ương thức Execute của đối t ượng Connection cho câu lệnh truy vấn v à trả\nvề kết quả cho Recordset. Ví dụ nh ưSet rs=Conn.Execute(strSQL)\nTạo một thể hiện (instance) cho đối t ượng Recordset v à sử dụng ph ương thức Open,\nkết hợp với đối t ượng Connection đ ã tạo\n3.3.2. Hiển thị dữ liệu trả về\nKhi muốn lấy được dữ liệu của một tr ường (field) trong một mẫu tin hiện h ành,\nta lấy chuỗi t ên của trường đó như là đ ối số cho đối t ượng Recordset hay đối số của\nthuộc tính Fields của đối t ượng Recordset. Ví dụ để lấy dữ liệu của tr ường HOTEN\ntrong b ảng STUDENTS ta có thể d ùngobjRS(“HOTEN”)  hay\nobjRS.Fields(“HOTEN”)\nKhi muốn dịch chuyển qua lại đến các mẫu tin được lưu trong đ ối tượng\nRecordset, ta s ử dụng ph ương thứcMoveNext, MovePrevious, MoveFirst,\nMoveLast và phải đi kèm với việc kiểm tra mẫu tin hiện h ành có đang ở vị trí đầu hay\nở cuối mẫu tin.\nKhi muốn kiểm tra vị trí con trỏ mẫu tin hiện h ànhlà trước mẫu tin đầu hay\nmẫu tin cuối trong Recordset, ta d ùng thuộc tínhBOF hoặcEOF để kiểm tra\nVí dụ minh hoạ thể hiện dữ liệu của tất cả mẫu tin có họ t ên bắt đầu là chữ ‘Nguyen’\ncủa bảng STUDENTS\n<%\nDim objConn\nSet objConn=Server.CreateObject(“ADODB. Connection”)\nobjConn.Open “DSN=CITDDB”\nDim sqlText\nSqlText=”SELECT *  FROM STUDENTS  WHERE HOTEN LIKE ’Nguyen%’”\nSet objRS=objConn.Excute(sqlText)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 99,
    "text": "98‘STUDENTS(HOTEN,NAMSINH,LOP)\nResponse.Write “&nbsp;” “H ọ tên” & “&nbsp;” & “Năm Sinh” & “&nbsp;” &\n“Lớp”\nDo until objRs.EOF\nResponse.Write i & “&nbsp;” & objRs.Fields(“HOTEN”)\n& “&nbsp;” & objRs.Fields(“NAMSINH”) & “&nbsp;”\n& objRs.Fields(“LOP”)\ni=i+1\nobjRs.MoveNext\nLoop\n%>\n3.4. Đối tượng Record\nĐối tượng Record l ưu trữ một hàng (mẫu tin) trong recordset, một  thư mục hay\ntập tin trong File System\nĐể sử dụng đối t ượng này ta phải khai báo thể hiện (instance) cho đối t ượng record\nDim objRec\nSet objRec=Server.CreateObject(“ADODB.Record”)\nĐối tượng Record có các ph ương thức:\nPhương th ức Mô tả\nCancel huỷ việc thực  hiện trên record\nClose đóng một đối tượng Record\nCopyRecord copy một file hay th ư mục\nDeleteRecord xoá một file hay th ư mục\nGetChildren trả về một đối t ượng Recordset, mỗi d òng\ncủa Recordset l ưu trữ tập tin trong th ư\nmục\nMoveRecord di chuyển một file  hay một thư mục\nOpen Mở một đối t ượng Record tồn tại, tạo\nmới một file, hay tạo mới một th ư mục\n1. Phương th ức Open\nSau khi tạo một instance của đối t ượng Record, ta có thể d ùng phương th ức này\nđể open, tạo mới một file hay tạo mới một th ư mục\nCú pháp:\nobjRec.Open (Source,\nActiveConnection,[Mode],[CreateOption],[Option],[Username],[Password])\nVí dụ:\nSource là URL ch ỉ đến th ư mục:\n<%\nDim objRec\nSet objRec=Server.CreateObject(“ADODB.Record”)\nobjRec.Open “URL=http://localhost/sinhvien”\nobjRec.Open  “readme.txt”,objConn\n%>\nSource là m ột hàng (row) hi ện thời trong Recordset\n<%"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 100,
    "text": "99Set objRs=Server.CreateObject(“ADODB.RecordSet”)\nSet objRs=Server.CreateObject(“ADODB.Record”)\nobjRs.Open “SINHVIEN”,”DSN=CITDDB”\nobjRec.MoveFirst\nobjRec.Open objRs\n%>\n2. Phương  thức CopyRecord:\nPhương th ức CopyRecord d ùng đ ể chép một file hay một th ư mục từ n ơi này\nđến nơi khác\nCú pháp:\nobjRec.CopyRecord (Source, Destination, username, psword, opt, async)\nSource: Tên hay thư m ục của tập tin cần copy\nDestination: v ị trí cần co py đến\nusername: userID có quy ền truy cập đối với Destination\nPsword: m ật khẩu\nopt: ch ế độ Copy. Mặc định adCopyUnspeacified. Nếu bạn muốn ghi đ è có th ể\ndùng adCopyOverWrite.\nasync: n ếu là true, th ực thi bất đồng bộ\nTương t ự cho ph ương th ứcMoveRecord\n3. Phương th ức DeleteRecord:\nPhương th ức DeleteRecord cho phép  xoá một file hay một th ư mục chỉ định\nnào đó.\nCú pháp:\nobjRec.DeleteRecord (Source, Async)\n3.5. Đối tượng Stream\nĐối tượng Stream d ùng đ ể lưu tr ữ luồng dữ liệu dạng text hoặc nhị phân\nTrướckhi s ử dụng đối t ượng n ày cần phải khai báo thể hiện (instance):\nSet objStream = Server.CreateObject(ADODB.Stream)\nCác phương th ức của đối t ượng Stream:\nPhương th ức Mô tả\nClose đóng đ ối tượng Stream\nCopyTo chép m ột số ký tự hoặc bytes từ đối t ượng Strea m này\nsang đ ối tượng Stream khác\nFlush gửi nội dung của đối t ượng Stream\nLoadFromFile lấy nội dung của một đối t ượng v ào đối tượng Stream\nOpen mở một đối t ượng Stream từ URL hay đối t ượng\nRecord\nread đọc số l ượng bytes trong đối t ượng Stream chứa dữ\nliệu nhị phân\nReadText đọc số ký tự  trong đối t ượng Stream chứa nội dung l à\ntext\nSaveToFile lưu n ội dung đối t ượng Stream xuống tập tin\nSetEOS thiết lập thuộc tính của EOS đối với vị trí hiện thời\nSkipLine bỏ qua một d òng khi đọc một TextStream"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 101,
    "text": "100Write ghi m ột số đối t ượng bytes của dữ liệu nhị phân v ào\nđối tượng Stream\nWriteText ghi d ữ liệu dạng Text v ào đối tượng Stream\n4. Tập hợp errors\nXử lý lỗi l à phần quan trọng trong việc tạo các ứng dụng. Bạn cần phải xử lý\nkhéo léo các l ỗi dự đoán sẽ xảy ra cũng nh ư cần có một c ơ chế để xử lý những lỗi\nkhông đoán trư ớc được. Điều n ày cho phép b ạn kiểm soát d òng ch ương tr ình  khi có\nlỗi xảy ra, cung cấp cho ng ười dùng cu ối những thông báo lỗi có ý nghĩa h ơn và đ ề\nxuất cách xử lý.\nMô hình đối tượng ASP không hỗ trợ chức năng xử lý lỗi, công việc n ày do đ ối\ntượng Error có sẵn của ngôn ngữ kịch bản thực hiện nh ư VBScript. Đ ối tượng Error bị\nhạn chế v ì nó ch ỉ hỗ trợ phát biểu “ On Error Resume Next ”\nThuộc tính Mô t ả\nDescription Trả về phần mô tả lỗi\nHelpContext Trả về ID của chủ đề trong phần hệ\nthống trợ giúp\nHelpFile Trả về đ ường dẫn v à tập tin trợ giúp\nNativeerror Trả về m ã lỗi từ provider hay data source\nNumber Trả về số hiệu lỗi\nSource Trả về t ên đối tượng hay ứng dụng\nnguồn gốc lỗi\nSQLState Trả về 5 ký tự m ã lỗi SQL\nVí dụ:Hiển thị thông báo lỗi khi kết nối đến c ơ sở dữ liệu bị lỗi\n<html>\n<body>\n<%\nset objconn=Server.CreateObject(“ADODB.Connection”)\nobjconn.Provider=”Microsoft.Jet.OLEDB.4.0”\non error resume next\nobjconn.Open(Server.Ma pPath(“northwind1.mdb”))\nif objconn.Errors.Count >0 then\nset objErr=Server.CreateObject(“ADODB.Error”)\n%>\n<%\nfor each objErr in objConn.Errors\nif objErr.Number<>0 then\nresponse.Write(“<p>”)\nresponse.Write(“Description:”)\nresponse.Write(“objErr.Description & <br />”)\nresponse.Write(“Help context:”)\nresponse.Write(objErr.helpContext & “<br />”)\nresponse.Write(“Help File:”)\nresponse.Write(“objErr.HelpFile & “<br />”)\nresponse.Write(“Native error”)\nresponse.Write(objErr.Nativeerror & “<br />”)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 102,
    "text": "101response.Write(“E rror number”)\nresponse.Write(objErr.Number & “<br />”)\nresponse.Write(“Error source”)\nresponse.Write(objErr.Source & “<br />”)\nresponse.Write(“SQL state:”)\nresponse.Write(objErr.SQLState & “<br />”)\nresponse.Write(“</p>”)\nEnd if\nNext\nEnd if\nobjconn.close\n%>\n</body>\n</html>\n5. stored procedure\nStored Procedure là t ập các câu lệnh T -SQL đư ợc bi ên dịch tr ước, nó có nhiều\nthuận lợi h ơn so v ới việc sử dụng các câu lệnh SQL b ên trong chương tr ình c ủa bạn:\nThực hiện nhanh h ơn, ti ết kiệm thời gian khi thực hiện công vi ệc. Giảm sự l ưu\nthông các gói d ữ liệu tr ên m ạng\nCó th ể dễ d àng truy ền tham số v ào Stored Procedure và truy xu ất dữ liệu\nNâng cao tính b ảo mật thông qua việc chỉ định quyền truy cập đối với Stored\nProcedure\nCú pháp:\nCREATE PROC[EDURE] procedure_name {:number}\n[{@parameter data_type} [VARYING]=default]\n[OUTPUT][,...n]\n[WITH]{RECOMPILE | ENCRPTION | RECOMPILE,\nEMCRYTION}\n[FOR REPLICATION]\nAs sql_satement [...n]\nVí dụ:\nStored procedure không có tham s ố,: tạo stored procedure hiển thịi m ã số, tên\nvà đi ạchỉ của sinh vi ên\nCREATE PROCEDURE sp_Sinhvien\nAS\nSELECT MASV, HOTEN, DIACHI, NAMSINH\nFROM SINHVIEN\nBạn có thể sử dụng Query Analyer trong SQL SERVER để thực thi stored\nprocedure trên\nEXEC sp_Sinhvien\nStored procedure có tham s ố: tạo stored procedure t ìm kiếm thông tin của sinh\nviên, tham s ố truyền v ào là mã s ố sinh vi ên (MSSV)\nCREATE PROCEDURE sp_TimSinhvien\n(@MSSV varchar(15))\nAS"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 103,
    "text": "102SELECT MSSV, HOTEN, DIACHI, NAMSINH\nFROM SINHVIEN\nWHERE ( MASV=@MSSV )\nStored Procedure v ới đối tượng Command:\nChương tr ình minh hoạ: stored procedure đ ược gọi thông qua đối t ượng Command\n<%@LANGUAGE=VBScript%>\n<HTML>\n<HEAD>\n<TITLE>Stored procedure qua đ ối tượng ADO</TITLE>\n</HEAD>\n<BODY>\n<%\nDim MSSV\nMSSV=’CV -01-2003’\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nobjConn.Open “DSN=CITDDB”,sa\nSet objCmd=Server.CreateObject(“ADODB.Command”)\nSet objCmd.CommandText=”sp_TimSinhvien ‘\n“& CStr(MSSV) &” ’ ”\nSet objRS=objCmd.Execute\nResponse.Write (“Thông tin c ủa sinh vi ên có mã s ố:” & MSSV & “<BR>”)\nResponse.Write (“<TABLE BORDER=1>”)\nDo Until Not objRS.EOF\nResponse.Write(“<TR>”)\nResponse.Write(“<TD>” & objRS(“MSV”) & “</TD>”)\nResponse.Write(“<TD>” & objRS(“HOTEN”) & “</TD>”)\nResponse.Write(“<TD>” & objRS(“NAMSINH”) & “</TD>”)\nResponse.Write(“<TD>” & objRS(“DIACHI”) & “</TD>”)\nResponse. Write(“</TR>”)\nobjRS.MoveNext\nLoop\nResponse.Write(“</TABLE>”)\nobjRS.Close\nSet objRS=Nothing\nSet objConn=Nothing\n%>\n</BODY>\n</HTML>\nStored procedure v ới đối tượng Recordset:\nChương tr ình minh ho ạ: stored procedure đ ược gọi thông qua đối t ượng Command\n<%@LAN GUAGE=VBSript%>\n<HTML>\n<HEAD>\n<TITLE>Stored procedure qua đ ối tượng ADO</TITLE>\n</HEAD>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 104,
    "text": "103<BODY>\n<%\nDim MSSV\nMSSV=’CV -01-2003’\nSet objConn=Server.CreateObject(“ADODB.Connection”)\nobjConn.Open “DSN=CITDDB”,sa\nsqlText=”sp_TimSinhvien ‘ ”&CStr(MSSV) &” ’ ”\nSetobjCmd=Server.CreateObject(“ADODB.Recordset”)\nobjRs.Open sqlText, objConn\nResponse.Write (“Thông tin c ủa sinh vi ên có mã s ố:” & MSSV & “<BR>”)\nResponse.Write (“<TABLE BORDER=1>”)\nDo Until Not objRS.EOF\nResponse.Write(“<TR>”)\nResponse.Write(“<TD>” & objRS(“ MSV”) & “</TD>”)\nResponse.Write(“<TD>” & objRS(“HOTEN”) & “</TD>”)\nResponse.Write(“<TD>” & objRS(“NAMSINH”) & “</TD>”)\nResponse.Write(“<TD>” & objRS(“DIACHI”) & “</TD>”)\nResponse.Write(“</TR>”)\nobjRS.MoveNext\nLoop\nResponse.Write(“</TABLE>”)\nobjRS.Close\nSet objRS=Nothing\nSet objConn=Nothing\n%>\n</BODY>\n</HTML>\n6. xÂY D ựNG WEBSITE BằNG ASP\nTrong ph ần này sẽ minh hoạ một số ví dụ việc sử dụng ADO để kết nối v à thao\ntác d ữ liệu, v à một số b ài tập\nVí dụ 1: Chúng ta mu ốn hiển thị chỉ những mẫu tin từ bảng “Custo mers” trong\ndatabase northwind có CompanyName b ắt đầu với chữ A (chú ý l ưu tập tin với t ên m ở\nrộng .asp):\n <HTML>\n<BODY>\n<%\nSet conn=Server.CreateObject(“ADODB.Connection”)\nconn.Provider= “Microsoft.Jet.OLEDB.4.0”\nconn.Open “c:/webdata/northwind.mdb”\nSet rs=Server.CreateObject(“ADODB.Recordset”)\nsql=” SELECT Companyname, Contactname FROM\nCustomers\nWHERE CompanyName LIKE ‘A%’”\nrs.Open sql, conn\n%>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 105,
    "text": "104<table border=”1” width=”100%”>\n<tr>\n<%for each x in rs.Fields\nresponse.write(“<th>” & x.name & “</th>”)\nnext%>\n</tr>\n<%do until rs.EOF%>\n<tr>\n<%for each x in rs.Fields%>\n<td><%Response.Write(x.value)%></td>\n<%next\nrs.MoveNext%>\n</tr>\n<%Loop\nrs.Close\nconn.close%>\n</table>\n</BODY>\n</HTML>\nKết quả hiển thị nh ư sau:\nVí dụ 2: Hiển thị danh sách khách h àng sau khi ch ọn lựa tên nư ớc của khách h àng\n(chú ý l ưu tập tin  với t ên m ở rộng.asp), danh sách các n ước được lấy từ bảng Country,\ntên khách hàng đư ợc lấy từ bảng Customers trong database northwind:\nKết quả sẽ hiển thị nh ư sau:\n<HTML>\n<BODY>\n<%\nSet conn=Server.CreateObjec t(“ADODB.Connection”)\nconn.Provider= “Microsoft.Jet.OLEDB.4.0”\nconn.Open(Server.MapPath(“northwind.mdb”))\nSet rs=Server.CreateObject(“ADODB.Recordset”)\nsql=” SELECT DISTINCT Country FROM Customers ORDER BY Country”\nrs.Open sql, conn\ncountry=request.form(“c outry”)\n%>\n<form method=”post’>\nChoose Country<select name=”country”>\n<%do until rs.EOF%>\nresponse.write(“<option>”)\nif rs.fields(“coutry”)=country then\nresponse.write(“selected”)\nend if\nresponse.write(“>”)\nresponse.write(rs.fields(“Country”))"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 106,
    "text": "105rs.MoveNext\nLoop\nrs.Close\nset rs=Nothing%>\n</select>\n<input type=”submit” value=”Show customers”>\n</form>\n<%\nif country<>”” then\nsql=”SELECT Companyname, Contacname, Country FROM Customers WHERE\ncountry=”&country &””\nset rs=Server.CreateObject(“ADODB.Recordset”)\nrs.Op en sql, conn\n%>\n<table width=”100%” cellspacing=”0” cellpadding=”2” border=”1”>\n<tr>\n<th>Companyname</th>\n<th>Contactname</th>\n<th>Country</th>\n</tr>\n<%\ndo until rs.EOF\nresponse.write(“<tr>”)\nresponse.write(“<td>” & rs.fields(“companyname”) & “< /td>”)\nresponse.write(“<td>” & rs.fields(“contactname”) & “</td>”)\nresponse.write(“<td>” & rs.fields(“country”) & “</td>”)\nresponse.write(“</tr>”)\nrs.MoveNext\nloop\nrs.close\nconn.Close\nset rs=nothing\nset conn=nothing\n%>\n</table>\n<%end if%>\n</BODY>\n</HTML>\nVí dụ 3: Hiển thị thông tin khách h àng t ừ bảng Customers, ta sử dụng ph ương th ức\nQueryString c ủa đối t ượng Request để lấy thông số sort truyền v ào, d ựa vào thông s ố\nnày đ ể sắp xếp thứ tự theo t ên trư ờng đ ược truyền v ào, lưu thành t ập tin\ndemo_sort_3.asp:\n<HTML>\n<BODY>\n<table border=”1” width=”100%” bgcolor=”#fff5ee”>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 107,
    "text": "106<tr>\n<th align=”left” bgcolor=”#b0c4de”>\n<a href=”demo_sort_3.asp?sort=companyname”>Company</a>\n</th>\n<th align=”left” bgcolor=”#b0c4de”>\n<a href=”demo_sort_3.asp?sort=contactname”>Contact</a>\n</th>\n</tr>\n<%\nif request.querystring(“sort”)<>”” then\nsort=request.querystring(“sort”)\nelse\nsort=”companyname”\nend if\nSet conn=Server.CreateObject(“ADODB.Connection”)\nconn.Provider= “Microsoft.Jet.OLEDB.4.0”\nconn.Open(Server.MapPath(“northwind.mdb”))\nSetrs=Server.CreateObject(“ADODB.Recordset”)\nsql=” SELECT Companyname, Contactname FROM Customers ORDER BY ” & sort\nrs.Open sql, conn\ndo until rs.EOF\nresponse.write(“<tr>”)\nfor each x in rs.Fields\nresponse.write(“<td>” & x.value & “</td>”)\nnext\nrs.MoveNext\nresponse.write(“</tr>”)\nLoop\nrs.Close\nconn.Close\n%>\n</table>\n</BODY>\n</HTML>\nBài tập 1: Ta sẽ xây dựng mô h ìnhứng dụng cho việc bán h àng qua m ạng, xây dựng\nmột cơ sở dữ liệu, qua đó vận dụng các đối t ượng của ADODB để có thể kết nối với\ncơ sở dữ liệu sao c ho có th ể hiển thị v à cung c ấp được thông tin cho khách h àng. Ch ủ\nyếu giới thiệu cách thức thiết kế một ứng dụng web có các chức năng nh ư sau: xem\nthông tin chi ti ết của một mặt h àng, ch ọn lựa h àng và tính ti ền\nHướng dẫn:\nTạo cơ sở dữ liệu gồm có hai bảng giỏ hàng “basket” và thành ph ần chi tiết của một\ngiỏ hàng đ ãđược chọn mua “basket_detail”\nDưới đây l à cách th ức để tạo bảng bằng tập tin script cho SQL Server\nCREATE TABLE [dbo].[basket]"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 108,
    "text": "107([shopper_id] [varchar] (32) NOT NULL, [basket_id] [int]\nIDENTITY (1 000,1) NOT NULL\nPRIMARY KEY CLUSTERED,\n[basket_name] [varchar] (100) NULL,\n[default_basket] [bit] NULL,\n[date_created] [datetime] NULL,\n[date_modified] [datetime] NULL) ON [PRIMARY]\nCREATE TABLE [dbo].[basket_detail]\n([basket_id] [int] NOT NULL\nFOREIGN  K EY REFERENCES basket(basket_id),\n[sku] [varchar] (25) NOT NULL,\n[sku_name] [varchar] (100) NOT NULL,\n[sku_qty] [int] NOT NULL,\n[sale_price] [money] NOT NULL,\n[list_price] [money] NOT NULL,\n[adjuste_price] [money] NOT NULL,\nPRIMARY KEY (basket_id, sku) ON [ PRIMARY]\nSau khi đ ã tạo được cơ sở dữ liệu, ta cần phải xây dựng các trang chính có giao diện\nnhư sau:\nTrang hiển thị tất cả các thông tin các mặt h àng ví dụ tên mặt hàng, hình ảnh đi\nkèm, giá, giá gi ảm, mã số mặt hàng,...để cho phép khách h àng chọn lựavà đặt mua\nmặt hàng này cho vào gi ỏ. Trang n ày chúng ta có th ể làm tĩnh hoặc động tức l à ta có\nthể liệt kê sẵn các mặt h àng lên trang này, ho ặc lấy dữ liệu từ c ơ sở dữ liệu để hiển thị\nbằng cách tạo th êm bảng chứa sản phẩm cần bán.Từ trang n ày có thể xem thông tin v ề\ngiỏ hàng của khách h àng bằng nhấn đến nút “your basket”.\nSau khi đ ã chọn mua “buy”  đ ược sản phẩm cho phép hiển thị danh sách các\nmặt hàng đã chọn lựa một cách chi tiết.\nVới trang n ày cho phép khách hàng xoá “Delete” m ặt hàng này n ếu không chọn\nmua, cho  phép thay đ ổi số lượng hàng cần mua chỉ việc nhấn nút “update”, ghi nhận\ncác mặt hàng mà khách hàng đ ã mua “save basket” ghi nh ận mã số giỏ hàng đã chọn\nvà có thể tiếp tục chọn lựa mặt h àng cho gi ỏ hàng mới, và “checkout” đ ể kết thúc chọn\nvà mua hàng. Có th ể cho phép tiếp tục chọn lựa các mặt h àng khác “continue\nshopping”.\nCập nhật các thông tin mặt h àng vào gi ỏ hàng hiện hành\nCác hàm ti ện ích trong tập tin basket_util.asp\n<%\n‘ Hàm thêm m ột mặt hàng đã chọn vào giỏ hàng của khách h àng\nFunction FcnAddBasket            (ConnObj, usr_GUID, proID,\nprodname,prodquantity,prodlistprice,prodsaleprice)\ndim strAddCode,rsAdd\nset rsAdd=server.CreateObject(“ADODB.RECORDSET”)\nrsAdd.Open “EXEC sproc_addToBasket” & chr(39) & usr_GUID & chr(39)\n&”, “& ch r(39) & proddID & chr(39) &”.”& chr(39) & prodname & chr(39) &”,”&\nprodquantity &”, “ & prodlistprice &”,” & prodsaleprice, ConnObj"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 109,
    "text": "108strAddCode=rsAdd(“errorcode”)\nFcnAddtoBasket=strAddCode\nrsAdd.Close\nset rsAdd=nothing\nEnd Function\n‘Hàm xoá toàn b ộ hàng đã có trong gi ỏ hàng\nFunction FcnDeleteBasket\n(ConnObj, usr_GUID, bID)\ndim rsDel\nset rsDel=server.CreateObject(“ADODB.RECORDSET”)\nrsDel.Open “EXEC sproc_DelBasket” & chr(39) & usr_GUID & chr(39) &”,\n“& chr(39) & bID, ConnObj\nFcnDeleteBasket=rsDel(“erro rcode”)\nrsDel.Close\nset rsDel=nothing\nEnd Function\n‘Hàm xoá toàn b ộ hàng trong gi ỏ hàng\nFunction FcnMakeDefBasket\n(ConnObj, usr_GUID, bID)\ndim rsDef\nset rsDef=server.CreateObject(“ADODB.RECORDSET”)\nrsDef.Open “EXEC sproc_MakeDefaultBasket” & chr(39)  & usr_GUID &\nchr(39) &”, “& chr(39) & bID, ConnObj\nFcnMakeDefBasket=rsDef(“errorcode”)\nrsDef.Close\nset rsDef=nothing\nEnd Function\n‘ Hàm cập nhật vào giỏ hàng\nSub SubUpdateBasket(updStr)\ndim updConn\nset updConn=server.CreateObject(“ADODB.Connection”)\nupdConn.ConnectionString=strBasketDSN\nupdConn.Open\nupdConn.Execute updStr\nupdConn.Close\nSet updConn=nothing\nEnd Sub\n‘ Hàm lấy mã số của giỏ h àng của khách h àng\nFunction FcnGetBasket\n(ConnObj, usr_GUID)\ndim rsTemp\nset rsTem=server.CreateObject (“ADODB.RECORDSET”)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 110,
    "text": "109rsTemp.Open “EXEC sproc_getBasket” & chr(39) & usr_GUID & chr(39) ,\nConnObj\nset FcnGetBasket=rsTemp\nEnd Function\n‘ Hàm lưu gi ỏ hàng hiện tại của khách h àng\nFunction FcnSaveBasket\n(ConnObj, usr_GUID, bName,bID)\ndim rsSave\nset rsSave=server.CreateObject(“ADODB.RECORDSET”)\nrsSave.Open “EXEC sproc_SaveBasket” & chr(39) & usr_GUID & chr(39) &”,\n“& chr(39) & bName &chr(39) &”,” & bID, ConnObj\nFcnSaveBasket=rsSave(“errorcode”)\nrsSave.Close\nset rsSave=nothing\nEnd Function\n‘ Hàm lấy giỏ hàng trước của khách h àng nếu có\nFunction FcnGetSavedBaskets\n(ConnObj, usr_GUID)\ndim rsTempSaved\nset rsTempSaved=server.CreateObject(“ADODB.RECORDSET”)\nrsTempSaved.Open “EXEC sproc_GetSavedBaskets” & chr(39) & usr_GUID\n&chr(39), ConnObj\nset FcnSavedBa skets=rsTempSaved\nSet rsTempSaved=nothing\nEnd Function\n‘ Thủ tục hiển thị thông báo lỗi phát sinh\nSub writeError\nResponse.Write(“<font color=’red’><p>An error occured while processing your\nbasket request!<br>Please contact the site Administrator<p></font>” )\nEnd Sub\n‘ Thủ tục hiển thị thông báo giỏ h àng đãđược lưu\nSub writeSavedBasketMessage\nResponse.Write(“<h4>Your Saved Baskets</h4><p><font color=’brown’>You do not\nhave any saved basket at this time</font><p>”)\nEnd Sub\n‘ Thủ tục hiển thị thông báo mặt h àng đã có trong gi ỏ hàng\nSub writeDuplicateEntryMessage\nResponse.Write”<font color=’green’>You already have this product in your\nbasket</font>”\nEnd Sub\n‘ This function returns a 32 character GUID from SQL Server\nFunction FcnGenerateGUID(ConnObj)\ndim strGUID ,rsGUID\nset rsGUID=server.CreateObject(“ADODB.RECORDSET”)\nrsGUID.Open “EXEC sproc_createGUID”, ConnObj"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 111,
    "text": "110strGUID=rsGUID(“guid”)\nFcnGenerateGUID=strGUID\nrsGUID.Close\nset rsGUID=nothing\nEnd Function\n‘ Thủ tục lấy 32 ký tự guid từ SQL v à ghi giá tr ị cookie\nSubSubCreateNReturnGUID\nDim myGUID\n‘Call function to return a GUID\nmyGuid=FcnGenerateGUID(BaskConn)\n‘append created userGuid to cookie...\nResponse.Cookies(“shopGuid”)(“Guid”)=myGuid\nResponse.Cookies(“shopGuid”).expires=”August 30,2020”\nEnd Sub\n%>\n<%Sub B asketHeader To display Basket Header%>\n<table cellspacing=”1” cellpadding=”1” border=”0” width=”500”>\n<tr bgcolor=”gray”>\n<th><b><font size=” -1” color=”#ffffff”>Item</font></b></th>\n<th><b><font size=” -1” color=”#ffffff”>Item ID</font></b></th>\n<th><b><fon t size=”-1” color=”#fffff”>Qty</font></b></th>\n<th><b><font size=” -1” color=”#fffff”>Unit<br>Price</font></b></th>\n<th><b><font size=” -1” color=”#fffff”>Sale<br>Price</font></b></th>\n<th><b><font size=” -1” color=”#fffff”>Total</font></b></th>\n</tr>\n<%End S ub%>\n<% Sub BasketManager  ‘To Manage Saved Baskets%>\n<p>\n<h4>Your Saved Baskets</h4>\n<form name=”BaskMgr” method=”POST” action=”basket.asp”>\n<table cellspacing=”2” cellpadding=”1” border=”0” width=”500”>\n<th align=”left” bgcolor=”gray”><b><font size=” -1”color=”#ffffff”>Basket\nName</font></b></th>\n<th align=”left” bgcolor=”gray”><b><font size=” -1” color=”#ffffff”>Date\nCreated</font></b></th>\n<th>&nbsp;</th>\n<th>&nbsp;</th>\n<!--Loop to populate table -->\n<%\ndo\nDim strBName,strĐateCreate,intSavedBaskID\nintSavedBaskID=rsSavedBaskets(“basket_id”)\nstrBName=rsSavedBaskets(“basket_name”)\nstrĐateCreate=rsSavedBaskets(“date_created”)\n%>"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 112,
    "text": "111<tr>\n<td><%=strBName%></td>\n<td><%=strDateCreated%></td>\n<td align=”center”><a\nhref=”basket.asp?bntMkDef=<%=intSavedBaskID%>”><b>Mak e\nDefault</b></a></td>\n<td align=”center”><a\nhref=”basket.asp?bntDelSaved=<%=intSavedBaskID%>”><b>Delete</b></a></td>\n</tr>\n<%\nrsSavedBaskets.moveNext\nloop until rsSavedBaskets.eof\nrsSavedBaskets.close\nset rsSavedBaskets=nothing\n%>\n<!--End Loop -->\n</table>\n</form>\n<%End Sub%>\nCác store procedure dùng trong các hàm ti ện ích\nCREATE PROCEDURE sproc_createBasket\n@shopperid varchar(32)\n/* DESCR:Checks for existing default basket for shopper*/\n/* Returns the basker ID, if non exits, creates one */\ndeclare@baskID int\nset nocount on\nSELECT @baskID=basket_id FROM basket WHERE shopper_id=@shopperid AND\ndefault_basket=1\nIF (@baskID IS NULL) OR (@baskID=”)\nBEGIN --create and return a new basket\nINSERT INTO\nbasket(shopper_id,default_basket,date_created,date_modified )\nVALUES(@shopperid,1,getdate(),getdate())\nIF @@ERROR!=0\nBEGIN\nSELECT @baskID=1\nRETURN@baskID\nEND\nSELECT @baskID=basket_id FROM basket WHERE shopper_id=@shopperid AND\ndefault_basket=1\n--add the default basket name (=BasketID)\nUPDATE basket SET\nbasket_nam e=@baskID\nWHERE shopper_id=@shopperid AND default_basket=1 RETURN @baskID\nEND"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 113,
    "text": "112ELSE\nBEGIN --return existing basket\nRETURN @baskID\nEND\nset nocount off\nCREATE PROCEDURE sproc_addToBasket\n@shopperid varchar(32),\n@sku varchar(25)\n@skunamevarchar(150),\n@qty int,\n@listprice money,\n@salepricemoney\n/*DESCR:Inserts new product into shopper basket tables */\n/*RETURNS: interger errorcode; 0=success,1=error */\nAS\nDECLARE @basketID int\nDECLARE @subtotal money\n--calculate subtotal\nSET@subtotal=@saleprice * @qty\nset nocount on\n--get the default basket ID by calling sproc_createBasket\nEXEC @basketID=sproc_createBasket @shopperid\n--check returned value. If=1, then return error!\nIf @basketID=1\nBEGIN\nSELECT @basketID AS ‘errorcode’\nRETURN\nEND\n--start the insert transaction\nBEGIN TRAN InsertBasket\n--do the insert into the basket_detail table\nINSERT INTO\nbasket_detail(basket_id,sku,sku_name,sku_qty,sale_price,list_price,adjusted_price)\nVALUES\n(@basketID,@sku,@skuname,@qty,@saleprice,@listprice,@subtotal)\n--do error checking\nIF @@ERROR!=0\nBEGIN\n--rollback transaction!\nROLLBACK TRAN InsertBasket\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 114,
    "text": "113--update the basket modified time\nUPDATE basket SET date_modified=getdate() WHERE shopper_id=@shopperid\nAND basket_id=@basketID\n--do error checking\nIF  @@ERROR!=0\nBEGIN\n--rollback transaction!\nROLLBACK TRAN InsertBasket\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND\n--commit transaction\nCOMMIT TRAN InsertBasket\n--return success code(0)\nSELECT 0 AS ‘errorcode’\nCREATE PROCEDURE sproc_createGUID\n/*DESCR:this sp creates a 32 character GUID */\n/*RETURNS: 32 character GUID alpha -numeric */\nAS\nset nocount on\nDECLARE @guid_val varchar(100)\nSET @guid_val=REPLACE(CONVERT(varchar(100),NEWID()),’ -’,”)\n--Return the GUID value\nSELECT @guid_v al as ‘guid’\nset nocount off\nCREATE PROCEDURE sproc_deleteBasket\n@shopperguid varchar(32)\n@basketid int\n/*DESCR:Deletes shopper’s entire basket content */\n/* Uses a Transaction -either whole basket ****/\n/* deleted or its left as is ! */\n/*RETURNS: Int: 0= success,1=error */\nAS\n--disable the row count message\nset nocount on\n--begin a transaction\nBEGIN TRAN BasketDeletion\n--delêt contents of basket in foreign key table\nDELETE FROM basket_detail\nWHERE basket_id=@basketid\n--do error checking\nIF @@ ERROR!=0"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 115,
    "text": "114BEGIN\n--rollback the transaction!\nROLLBACK TRAN BasketDeletion\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND\n--delete contents of basket table (PK table)\nDELETE FROM basket\nWHERE shopper_id=@shopperguid\nAND basket_id=@basketid\n--do error checking\nIF @@ERROR!=0\nBEGIN\n--rollback the transaction!\nROLLBACK TRAN BasketDeletion\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND\n-no errors, commit the transaction!\nCOMMIT TRAN BasketDeletion\n--return success code\nSELECT 0 AS ‘errorcode’\nset nocount off\nCREATE PROCEDURE sproc_getBasket\n@shopperid varchar(32)\n/*DESCR:Returns recordset of shopper’s default basket */\n/*RETURNS: Returns recordset of shopper’s default basket */\nAS\nset nocount on\n--get the RS\nSELECT\nbd.basket_id,bd.sku,bd.sku -\nname,bd.sku_qty,bd.s ale_price,bd.list_price,bd.adjusted_price,bt.basket_name\nFROM basket_detail bd,basket bt\nWHERE     bd.basket_id=bt.basket_id\nAND bt.default_basket=1\nAND bt.shopper_id=@shopperid\nset nocount off\nCREATE PR OCEDURE sproc_getSavedBaskets\n@shopperid varchar(32)"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 116,
    "text": "115/* Retrieves all saved baskets by shopper*/\n/* Returns recordset of all saved baskets by shopper */\nAS\nset nocount on\n--get the RS\nSELECT\nbt.basket_id,bt.basket_name,bt.default_basket,bt.date_created,bt. date_modified\nFROM basket bt\nWHERE bt.shopper_id=@shopperid\nAND bt.default_basket=0\nset nocount off\nCREATE PROCEDURE sproc_makeDefaultBasket\n@shopperguid varchar(32)\n@basketid int\n/* Makes the specified basket shopper’s default basket */\n/* RETURNS: Int: 0=success,1=error   ****/\nAS\n--disable the row count message\nset nocount on\n--begin a transaction\nBEGIN TRAN BasketDefault\n--set shopper’s existing default basket to 0\nupdate basket set default_basket=0 w here shopper_id=@shopperguid\n--do error checking\nIF @@ERROR!=0\nBEGIN\n--rollback the transaction!\nROLLBACK TRAN BasketDefault\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND\n--set the new default basket\nupdate basket set default_basket=1 where shoppe r_id=@shopperguid and\nbasket_id=@basketid\n--do error checking\nIF @@ERROR!=0\nBEGIN\n--rollback the transaction!\nROLLBACK TRAN BasketDefault\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 117,
    "text": "116-no errors,commit the transaction!\nCOMMIT TRAN BasketDefault\n--return success code\nSELECT 0 AS ‘errorcode’\nset nocount off\nCREATE PROCEDURE sproc_saveBasket\n@shopperid varchar(32)\n@basketname varchar(100)\n@basketid int\n/* DESCR: Saves specified basket for shopper */\n/* RETURNS: interger errorcode: 0=succes,1=error ****/\nAS\nset nocount on\nUPDATE basket\nSET basket_name=@basketname,default_basket=0,date_modified=getdate()\nWHERE shopper_id=@shopperid\nAND  basket_id=@basketid\n--do error checking\nIF @@ERROR!=0\nBEGIN\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND\nELSE\n--return success code\nSELECT 0 AS ‘errorcode’\nset nocount off\nCREATE PROCEDURE sproc_updateBasket\n@shopperid  varchar(32)\n@basketid int,\n@sku varchar(25)\n@qty  int\n/* DESCR: Updates shopper’s default basket */\n/* RETURNS:interger errorcode: 0=success,  1=error */\nAS\nset nocount on\n--do the update\nIF @qty=0\nBEGIN --delete this sku from basket\nDELETE FROM basket_detail WHERE basket_id=@basketid AND sku=@sku\nUPDATE basket SET date_modified=getdate() WHERE shopper_id=@shopperid\nAND basket_id=@basketid"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 118,
    "text": "117--do error checking\nIF @@ERROR!=0\nBEGIN\n--return error code\nSELECT 2 AS ‘errorcode’\nRETURN\nEND\nEND\nELSE\nBEGIN\nUPDATE basket_detail SET sku_qty=@qty,adjusted price=(@qty*sale pric) WHERE\nbasket id=@basketid AND sku=@sku\nUPDATE basket SET date_modified=getdate()\nWHERE shopper_id=@shopperid AND basket_id=@basketid\n--do error checking\nIF @@ERROR!=0\nBEGIN\n--return error code\nSELECT 1 AS ‘errorcode’\nRETURN\nEND\nEND\n--return success code\nSELECT 0 AS ‘errorcode’\nset nocount off\nBài tập 2:\nMột siêu thị muốn thông báo cho  các khách hàng c ủa mình mỗi khi có mặt h àng mới\nvề. Hãy viết một ứng dụng web hỗ trợ công việc tr ên bằng các chức năng sau:\na.Cho phép ngư ời dùng điền vào thông tin c ủa khách h àng như tên đăng nh ập,\nmật khẩu, họ t ên, địa chỉ liên lạc, điện thoại, địa chỉ em ail... và các ch ủng loại\nmặt hàng mà ngư ời dùng muốn thông tin khi có mặt h àng mới thuộc chủng loại\nnày.\nb.Cho phép ngư ời dùng cập nhật lại các thông tin đ ãđăng ký. Đ ể thực hiện đ ược\nthao tác này, ngư ời dùng phải đăng nhập đúng với t ên và mật khẩu đãđăng ký.\nc. Cho phép qu ản lý liệt k ê danh sách các khách hàng đ ãđăng ký theo t ừng chủng\nloại mặt hàng.\nHướng dẫn:\n-Xây dựng csdl quản lý thông tin khách h àng, mặt hàng, loại mặt\nhàng.\n-Xây dựng các trang trong đó có các form cho phép đăng ký khách\nhàng, đăng nh ập để cung cấp thông tin.\n-Xây dựng các câu truy vấn để liệt k ê danh sách khách hàng theo\nchủng loại mặt h àng."
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 119,
    "text": "118Tài liệu tham khảo\n1. ASP 3.0, ASP.NET\nNguyễn Phương Lan (ch ủ biên) của Nhà Xuất Bản Giáo Dục năm 2001\n2.  ASP Database (d ịch và tổng hợp)\nSAIGON BOOK của Nhà Xuất Bản Trẻ năm 2002\n3. Xây dựng trang web động ASP\n4. Building an Intranet\n5. HTML & CGI Unleased\nJohn December & Mark Ginsburg_USA:Sams.net,1996_830 tr;23 cm\n6. Intranet bible\nEd Tittel & James M.Stewart_USA: IDG Books Worldwide, 1997_854 t r,23 cm"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 120,
    "text": "119Mục lục\nChương 1: các khái ni ệm cơ bản................................ ................................ ...............1\n1.Mạng máy tính l à gì?................................ ................................ ............................... 1\n2.Internet là gì? ................................ ................................ ................................ ...........1\n3.Địa chỉ IP l à gì?................................ ................................ ................................ .......2\n4.Giao thức SMTP,POP3 ................................ ................................ ........................... 3\n5.Giao thức FTP................................ ................................ ................................ ..........3\n6.Giao thức HTTP ................................ ................................ ................................ .......4\n7.Giao thức NNTP ................................ ................................ ................................ ......4\n8.Giao thức Chat................................ ................................ ................................ .........4\n9.URL................................ ................................ ................................ .......................... 6\n10.Hyperlink  là gì?................................ ................................ ................................ ......6\n11.Web Browser là gì? ................................ ................................ ................................ 7\n12.Web Server là gì? ................................ ................................ ................................ ...7\n13.Website là gì? ................................ ................................ ................................ .........7\n14.World Wide Web (www) là gì? ................................ ................................ .............8\n15.Sự khác biệt giữa Internet v à WorldWideWeb ................................ ...................... 8\n16.Web page là gì? ................................ ................................ ................................ ......8\nChương 2: Lập trình web v ới ngôn ngữ si êu văn bản HTML ................................ 10\n1.khái niệm ngôn ngữ  HTML................................ ................................ ..................... 10\n2.Lập trình web v ới ngôn ngữ html ................................ ................................ ............10\n2.1.Các thành ph ần cơ bản của HTML ................................ ................................ .12\n2.2.Tạo trang Web ................................ ................................ ................................ .12\n2.3.Cấu trúc của một tập tin HTML ................................ ................................ ......13\n2.4.Xem trang HTML b ằng trình duyệt Web................................ ........................ 13\n2.5.Các tag cơ b ản trong HTML ................................ ................................ ............13\n2.5.1.Tag chú gi ải................................ ................................ ................................ ..14\n2.5.2.Các tag đ ịnh dạng văn bản ................................ ................................ ............20\n2.5.3.Các tag đ ịnh dạng h ìnhảnh................................ ................................ ..........22\n2.5.4.Các tag đ ịnh dạng trang ................................ ................................ ................ 23\n2.5.5.Các tag t ạo danh sách(list) ................................ ................................ ............28\n2.5.6.Tạo liên kết(link)................................ ................................ .......................... 29\n2.5.7. Một số ký tự đặc biệt trong HTML ................................ ............................. 30\n2.5.8.Các tag dùng thi ết kế bảng ................................ ................................ ...........33\n2.5.9.Các tag dùng t ạo Form................................ ................................ ................. 38\n2.6.Các tag t ạo Frame (khung) ................................ ................................ ..............38\n2..6.1.Tạo Frame có dạng h àng................................ ................................ .............40\n2.6.2.Tạo Frame có dạng cột ................................ ................................ ................. 40\n2.6.3.Kết hợp tạo Frame vừa dạng h àng vừa có dạng cột ................................ .....41\n2.7.Các hi ệu ứng Dynamic HTML (DHTML) ................................ ...................... 41\n2.7.1.Tạo chuỗi ký tự chuyển độ ng................................ ................................ ....... 41\n2.7.2.Thay đ ổi hình dạng chuột khi đi qua một ô trong bảng ............................... 2\nChương 3: Giới thiệu ngôn ngữ kịch bản vbscript v à javascript .......................... 43\n1.giới thiệu ngôn ngữ vbscript v à javascript ................................ ............................... 44"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 121,
    "text": "1202.ngôn ng ữ vbscript ................................ ................................ ................................ .....44\n2.1.Chú thích m ột dòng lệnh................................ ................................ ................. 44\n2.2.Cách khai báo biến, hằng, mảng ................................ ................................ ......44\n2.2.1.Khai báo bi ến................................ ................................ ................................ 45\n2.2.2.Khai báo h ằng................................ ................................ ............................... 45\n2.2.3.Khai báo m ảng................................ ................................ .............................. 46\n2.3.Các ki ểu dữ liệu ................................ ................................ ............................... 47\n2.4.Các toán t ử cơ sở................................ ................................ ............................. 48\n2.5.Các lệnh xử lý điều kiện rẽ nhánh ................................ ................................ ...48\n2.5.1.Cấu trúc If...Then ................................ ................................ .......................... 48\n2.5.2.Cấu trúc If..Then...Else ................................ ................................ ................. 49\n2.5.3.Cấu trúc Select Case5 ................................ ................................ ................... 0\n2.6.Cấu trúc lặp ................................ ................................ ................................ ...........50\n2.6.1.Cấu trúc Do...Loop ................................ ................................ ....................... 51\n2.6.2.Cấu trúc While...Wend ................................ ................................ ................. 51\n2.6.3.Cấu trúc For...Next ................................ ................................ ....................... 52\n2.6.4.Cấu trúc For Each...Next ................................ ................................ ..............52\n2.7.Khai báo hàm và th ủ tục................................ ................................ ....................... 52\n2.7.1.Khai báo hàm ................................ ................................ ................................ 53\n2.7.2.Khai báo th ủ tục................................ ................................ ............................ 53\n3.Ngôn ngữ javascript ................................ ................................ ................................ .53\n3.1.Chú thích m ột hay nhiều d òng lệnh................................ ................................ .53\n3.2.Cách khai báo bi ến,mảng5 ................................ ................................ ..............3\n3.2.1.Cách khai báo bi ến................................ ................................ ....................... 54\n3.2.2.Khai báo m ảng................................ ................................ .............................. 54\n3.3.Các ki ểu dữ liệu trong javascript ................................ ................................ .....54\n3.3.1.Dữ liệu kiểu số ................................ ................................ .............................. 55\n3.3.2.Kiểu ký tự................................ ................................ ................................ .....55\n3.3.3.Kiểu chuỗi................................ ................................ ................................ .....55\n3.3.4.Kiểu luận lý ................................ ................................ ................................ ..56\n3.3.5.Kiểu ngày................................ ................................ ................................ ......57\n3.4.Các lệnh xử lý điều kiện rẽ nhánh ................................ ................................ ...57\n3.4.1.Cấu trúc If ................................ ................................ ................................ .....57\n3.4.2.Cấu trúc If..else ................................ ................................ ............................. 57\n3.4.3.Cấu trúc switch...case ................................ ................................ ................... 58\n3.5.Cấu trúc lặp ................................ ................................ ................................ ......58\n3.5.1.Cấu trúc For ................................ ................................ ................................ ..58\n3.5.2.Cấu trúc While ................................ ................................ .............................. 59\n3.5.3.Cấu trúc Do ...While................................ ................................ ...................... 59\n3.6.Khai báo hàm ................................ ................................ ................................ ...60\n4.Sử dụng vbscript v à javascript trong trang web ................................ ....................... 61\n4.1.Chèn đo ạn vbscript/javascript v ào trang HTML ................................ .............61\n4.2.Xuất/nhập dữ liệu trong vbscript v à javascript ................................ ...............62\n4.2.1.Xuất dữ liệu ................................ ................................ ................................ ..61\n4.2.2.Nhập dữ liệu ................................ ................................ ................................ .62"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 122,
    "text": "1215.Xử lý các sự k iện khi tương tác v ới các thành phần trên trang web ........................ 62\nChương 4:\nLập trình webđộng với ngôn ngữ lập tr ình ASP................................ ................... 66\n1.Giới thiệu về asp ................................ ................................ ................................ ......66\n2.nạp một ứng dụng web l ên trình ch ủ iis................................ ................................ ...67\n3.các khái ni ệm cơ bản về asp ................................ ................................ ..................... 68\n3.1.Thành ph ần cơ bản của một trang asp ................................ ............................. 68\n3.2.Nhập/xuất dữ liệu ................................ ................................ ............................ 69\n3.3.Hoạt động của asp ................................ ................................ ............................ 69\n4.Các đối tượng cơ bản trong asp ................................ ................................ ................ 69\n4.1.Đối tượng Request ................................ ................................ ........................... 69\n4.1.1.Các t ập hợp của đối t ượng Request ................................ .............................. 70\n4.1.2.Thu ộc tính của đối t ượng Request ................................ ................................ 73\n4.1.3.Phương th ức của đối t ượng Request ................................ ............................. 73\n4.2.Đối tượng Response ................................ ................................ ........................ 73\n4.2.1.Các t ập hợp của đối t ượng Response ................................ ........................... 73\n4.2.2.Thu ộc tính của đối t ượng Response ................................ ............................. 74\n4.2.3.Phương th ức của đối t ượng Response ................................ .......................... 77\n4.3.Đối tượng Session ................................ ................................ ............................ 81\n4.3.1.Tập hợp của đối t ượng Session ................................ ................................ ....81\n4.3.2.Các thu ộc tính của đối t ượng Session................................ .......................... 82\n4.3.3.Các phương th ức của đối t ượng Session ................................ ...................... 84\n4.3.4.Các s ự kiện của đối t ượng Session ................................ ............................... 86\n4.4.Đối tượng Application ................................ ................................ ..................... 86\n4.4.1.Tập hợp của đối t ượng Application ................................ .............................. 86\n4.4.2.Các phương th ức của đối t ượng Application ................................ ................ 87\n4.4.3.Các s ự kiện của đối t ượng Application ................................ ........................ 88\n4.5.Đối tượng Server ................................ ................................ ............................. 88\n4.5.1.Các thu ộc tính của đối t ượng Server ................................ ............................ 88\n4.5.2.Các phương th ức của đối t ượng Server ................................ ........................ 88\n4.6.Đối tượng ASP Error ................................ ................................ ....................... 93\n5.Chỉ thị #include ................................ ................................ ................................ ........94\n6.tập tin global.asa ................................ ................................ ................................ .......95\n7.đối tượng dictionary ................................ ................................ ................................ .97\n7.1.Tạo đối tượng dictionary ................................ ................................ ................. 98\n7.2.Các thu ộc tính của đối t ượng dictionary ................................ ......................... 98\n7.3.Các phương th ức của đối t ượng dictionary ................................ ..................... 100\n8.đối tượng filesystemobject ................................ ................................ ....................... 103\n8.1.Tạo đối tượng filesystemobject ................................ ................................ .......103\n8.2.Các thu ộc tính của đối t ượng filesystemobject ................................ ...............103\n8.3.Các phương  thức của đối t ượng Filesystemobject ................................ ..........103\n8.4.Ví dụ minh hoạ ................................ ................................ ................................ 109\n9.đối tượng adrotator ................................ ................................ ................................ ...112\n9.1.Cách t ạo đối tượng AdRotator ................................ ................................ .........112\n9.2.Định dạng tập tin văn bản ................................ ................................ ................ 112"
  },
  {
    "file": "Giaotrinh_LTW_HaNoi.pdf",
    "page": 123,
    "text": "1229.3.Các thu ộc tính của đối t ượng AdRotator ................................ ......................... 113\n9.4.Các phương th ức của đối t ượng AdRotator ................................ ..................... 113\nChương 5: giới thiệu ado v à các kết nối cơ sở dữ liệu ................................ ............114\n1.giới thiệu................................ ................................ ................................ .................. 114\n2.kết nối với c ơ sở dữ liệu................................ ................................ ........................... 114\n2.1.Tạo connection string thông qua OLEDB,ODBC ................................ ...........114\n2.2.Tạo connection string thông qua DSN ................................ ............................ 116\n3.các đối tượng của ADO ................................ ................................ ............................ 117\n3.1.Đối tượng Conn ection................................ ................................ ..................... 120\n3.1.1.Kết nối cơ sở dữ liệu qua đối t ượng Connection ................................ ..........120\n3.1.2.Thao tác d ữ liệu thông qua đối t ượng Connection ................................ .......120\n3.2.Thao tác cơ s ở dữ liệu bằng đối t ượng Command ................................ ..........122\n3.3.Xử lý dữ liệu thông qua đối t ượng Recordset ................................ ................. 123\n3.3.1.Lưu tr ữ dữ liệu trả về................................ ................................ .................... 125\n3.3.2.Hiển thị dữ liệu trả về ................................ ................................ ................... 126\n3.4.Đối tượng Record ................................ ................................ ............................ 126\n3.5.Đối tượng Stream ................................ ................................ ............................ 128\n4.tập hợp errors ................................ ................................ ................................ ...........128\n5.stored procedure ................................ ................................ ................................ .......130\n6.xây dựng website bằng asp ................................ ................................ ...................... 133"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 1,
    "text": "BỘLAOĐỘNG-THƯƠNGBINHVÀXÃHỘI\nTỔNGCỤCDẠYNGHỀ\nGIÁOTRÌNH\nNĂM2012Môđun:LẬPTRÌNHWEB\nMãsố:ITPRG-06\nNGHỀ:LẬPTRÌNHMÁYTÍNH\nTrìnhđộ:Caođẳngnghề"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 2,
    "text": "2Tuyênbốbảnquyền:\nTàiliệunàythuộcloạisáchgiáotrình\nChonêncácnguồnthôngtincóthể\nđược\nphépdùngnguyênbảnhoặctríchdùng\nchocácmụcđíchvềđàotạovàtham\nkhảo.\nMọimụcđíchkháccóýđồlệchlạchoặc\nsửdụngvớimụcđíchkinhdoanhthiếu\nlành\nmạnhsẽbịnghiêmcấm.\nTổngCụcDạynghềsẽlàmmọicáchđể\nbảovệbảnquyềncủamình.\nTổngCụcDạyNghềcámơnvàhoan\nnghênhcácthôngtingiúpchoviệctu\nsửa\nvàhoànthiệntốthơntàIliệunày.\nĐịachỉliênhệ:\nDựángiáodụckỹthuậtvànghềnghiệp\nTiểuBanPháttriểnChươngtrìnhHọc\nliệu\n………………………………………………\n................................................................"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 3,
    "text": "3LỜITỰA\nĐâylàtàiliệuđượcxâydựngtheochươngtrìnhcủadựángiáodụckỹthuậtvàdạy\nnghề,đểcóđươcgiáotrìnhnàydựánđãtiếnhànhtheohaigiaiđoạn.\nGiaiđoạn1:XâydựngchươngtrìnhtheophươngphápDACUM,kếtquảcủagian\nđoạnnàylàbộkhungchươngtrìnhgồm230trangcấpđộ2và170trangcấpđộ3.\nGiaiđoạn2:29giáotrìnhvà29tàiliệuhướngdẫngiáoviênchonghềlậptrìnhmáy\ntính2cấpđộ.\nĐểcóđượckhungchươngtrìnhchúngtôiđãmờicácgiáoviên,cácchuyêngiađang\nlàmviệctronglĩnhvựccôngnghệthôngtincùngxâydựngchươngtrình.\nTronggiaiđoạnviếtgiáotrìnhchúngtôicũngđãcónhữngsựđiềuchỉnhđểgiáo\ntrìnhcótínhthiếtthựcvàphùhợphơnvớisựpháttriểncủalĩnhvựccôngnghệthôngtin.\nMôđunlậptrìnhwebnàynhằmcungcấpchosinhviênnhữngkỹnăngbanđầucho\nviệcxâydựngcáctrangwebđộngmàcôngcụchủyếulàMacromediaDreamweaver.\nTrongquátrìnhbiênsoạn,mặcdùđãcốgắngthamkhảonhiềutàiliệuvàgiáotrình\nkhácnhưngtácgiảkhôngkhỏitránhđượcnhữngthiếusótvàhạnchế.Tácgiảchânthành\nmongđợinhữngnhậnxét,đánhgiávàgópýđểcuốngiáotrìnhngàymộthoànthiệnhơn.\nTàiliệunàyđượcthiếtkếtheotừngmôđun/mônhọcthuộchệthốngmôđun/môn\nhọccủamộtchươngtrình,đểđàotạohoànchỉnhnghềLậptrìnhmáytínhởcấptrìnhđộbậc\ncaovàđượcdùnglàmGiáotrìnhchohọcviêntrongcáckhoáđàotạo,cũngcóthểđượcsử\ndụngchođàotạongắnhạnhoặcchocáccôngnhânkỹthuật,cácnhàquảnlývàngườisử\ndụngnhânlựcthamkhảo.\nĐâylàtàiliệuthửnghiệmsẽđượchoànchỉnhđểtrởthànhgiáotrìnhchínhthức\ntronghệthốngdạynghề."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 4,
    "text": "4MỤCLỤC\nĐỀMỤC TRANG\nLỜITỰA...............................................................................................................................................3\nMỤCLỤC.............................................................................................................................................4\nGIỚITHIỆUVỀMÔNHỌC...............................................................................................................8\nCÁCHÌNHTHỨCHỌCTẬPCHÍNHTRONGMÔNHỌC...........................................................11\nBÀI1:CÁCTHÀNHPHẦNCƠBẢNCỦAHTML\n1.1.Giớithiệuvàthuậtngữ...............................................................................................................12\n1.2.TổngquanvềHTML...................................................................................................................15\n1.2.1Cấutrúctrangweb...................................................................................................................15\n1.2.2Cúpháptagtổngquátcủamộtthẻ(tag)trongHTML........................................................15\n1.2.3Tagđầutrang<HTML></HTML.............................................................................................16\n1.2.4Tagbắtđầu<HEAD></HEAD................................................................................................16\n1.2.5Tagtiêuđề<TITLE></TITLE>................................................................................................16\n1.2.6Tagthântrang<BODY></BODY>.........................................................................................17\n1.2.7Tagxuốngdòngsangđoạnmới<P></P>............................................................................19\n1.2.8Tagxuốngdòngkhôngsangđoạnmới<BR></BR>..........................................................19\n1.2.9Tagthêmđườngthẳngnằmngang<HR></HR>................................................................20\n1.2.10Tagđậm<B></B>.................................................................................................................21\n1.2.11Tagnghiêng<I></I>..............................................................................................................21\n1.2.12Taggạchdưới<U></U>......................................................................................................21\n1.2.13Taggạchgiữa<S></S>.......................................................................................................21\n1.2.14Tagđậmlogictype<STRONG></STRONG>..................................................................21\n1.2.15Tagnghiênglogictype<EM></EM>..................................................................................21\n1.2.16Taggạchnganglogictype<STRIKE></STRIKE>...........................................................21\n1.2.17Tagchỉsốlogictype<SUB></SUB>.................................................................................21\n1.2.18Tagmũlogictype<SUP></SUP>......................................................................................21\n1.2.19Tagđịnhfontchữcơsở<BASEFONT></BASEFONT>..................................................22\n1.2.20Tagfontchữ<FONT></FONT>...........................................................................................22\n1.2.21Tagnhạcnền<BGSOUND>.................................................................................................23\n1.2.22Tag6mứctiêuđề<Hn></Hn>.............................................................................................23\n1.2.23Ðịnhnghĩatag<A></A>........................................................................................................24\n1.2.24Nhúnghìnhảnh,âmthanhvàotrangWeb.........................................................................24\nBÀI2:THAOTÁCVỚIPHẦNMỀMTẠOWEB\n2.1.GiớithiệuvềIIS-InternetInformationServices.....................................................................28\n2.1.1IISlàgì?......................................................................................................................................28\n2.1.2IIScóthểlàmđượcgì?............................................................................................................28\n2.1.3IIShoạtđộngnhưthếnào?...................................................................................................28\n2.1.4CàiđặtIIS...................................................................................................................................28\n2.2.XâydựngWebSitebằngphầnmềmMacromediaDreamweaverMX2004.....................30"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 5,
    "text": "52.2.1TổngquanvềMacromediaDreamweaverMX2004...........................................................30\n2.2.2Làmviệcvớivănbản...............................................................................................................32\n2.2.3Làmviệcvớicáchìnhảnh.......................................................................................................37\n2.2.4Làmviệcvớibảng(Table).......................................................................................................42\nBÀI3:ĐINHDẠNGVĂNBẢNVÀTẠOẢNHCHOTRANGWEB\n3.1Giớithiệu.......................................................................................................................................49\n3.2CácloạiảnhđượchỗtrợtrongHTML......................................................................................49\n3.3Chènmộthìnhảnh.....................................................................................................................49\n3.4Sửaảnh.........................................................................................................................................51\n3.5Chuyểnđổiảnh.............................................................................................................................54\n3.6Cácchứcnăngkhác...................................................................................................................56\nBÀI4:LIÊNKẾT\n4.1Kháiniệmvềsiêuliênkết...........................................................................................................59\n4.2Tạosiêuliênkết............................................................................................................................59\n4.2.1TạoBookmark...........................................................................................................................59\n4.2.2Tạoliêuliênkết(Hyperlink).....................................................................................................60\n4.3XemmãHTMLcủasiêuliệnkết................................................................................................62\nBÀI5:TẠODANHSÁCH,KHUNG,BIỂUMẪUVÀTHIẾTKẾBẢNG\n5.1Địnhnghĩamộtdanhsách..........................................................................................................65\n5.2Thiếtkếbảng................................................................................................................................67\n5.3Tạobiểumẫu................................................................................................................................69\n5.4GửidữliệubiểumẫuquaInternet.............................................................................................70\n5.5Tạokhung(Frame)......................................................................................................................70\nBÀI6:ĐAPHƯƠNGTIỆN-MULTIMEDIA\n6.1KháiniệmvềMultimedia(đaphươngtiện)..............................................................................76\n6.2.SửdụngMacromediaFlashđểthiếtkếhìnhảnh,Flash......................................................76\n6.2.1TổngquanvềMacromediaFlash...........................................................................................76\n6.2.1.1Cácthaotáccơbản..............................................................................................................76\n6.2.1.2Côngcụ(Tools)......................................................................................................................77\n6.2.1.3Cácthaotác...........................................................................................................................79\n6.2.1.4Ảnh...........................................................................................................................................81\n6.2.1.5Âmthanh................................................................................................................................81\n6.3.Hoạthình......................................................................................................................................82\n6.4.Hoạtcảnh.....................................................................................................................................88\n6.5.ĐưaFLASHvàoWeb.................................................................................................................94\n6.5.1NộidungtrangHTMLdoFlashxuấtbản..............................................................................94\n6.5.2Nhúngtậptin.GIFđượcxuấtbảnvàotrangHTML............................................................96"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 6,
    "text": "66.5.3Giảithíchcácthẻ......................................................................................................................97\nBÀI7:THIẾTLẬPCÁCSTYLE\n7.1KháiniệmcơbảnvềCSS........................................................................................................100\n7.2TrìnhbàytrangWebvớicácStyle..........................................................................................100\n7.3Styletrêndòng...........................................................................................................................113\n7.4Giớithiệutrangstyle.................................................................................................................114\n7.5Bộchọn......................................................................................................................................119\n7.6Thayđổinguyêntắc.................................................................................................................126\n7.7Chúgiảitrongtrangstyle........................................................................................................127\n7.8Giànhquyềntrìnhduyệt...........................................................................................................128\n7.9Dàntrang....................................................................................................................................128\nBÀI8:NHỮNGKIẾNTHỨCCƠBẢNVỀJAVASCRIPT,\nVBSCRIPTVÀCÁCỨNGDỤNG\n8.1KháiniệmvềngônngữJavaScriptvàVBScript(ASP).....................................................131\n8.1.1GiớithiệuvềASP...................................................................................................................131\n8.1.2LậptrìnhvớiASP...................................................................................................................139\n8.2.ĐưacácđoạnScriptvàotrongtrangWeb..........................................................................142\n8.3.Thiếtlậpcácthưviệnprocedure,functioncho1ứngdụngWEB...................................142\n8.3.1Địnhnghĩathủtục..................................................................................................................143\n8.3.2Địnhnghĩahàm......................................................................................................................144\n8.3.3Sửdụngthưviệnhàm,thủtục.............................................................................................144\n8.4.Mộtsốbàitậpứngdụngmẫu................................................................................................144\nBÀI9:ỨNGDỤNGKỸTHUẬTLẬPTRÌNH\nXÂYDỰNGTRANGWEB\n9.1NhắclạicáccâulệnhSQL.......................................................................................................148\n9.2CáclệnhliênkếtCSDL.............................................................................................................151\n9.3Mộtsốbàitậpứngdụngmẫu..................................................................................................153\nBÀI10:LIÊNKẾTTRANGWEBĐẾNHỆCSDL\nXÂYDỰNGCÁCTRANGWEBĐỘNG\nBẰNGMACROMEDIADREAMWEAVERMX2004\n10.1.Xâydựngtrangmaster(trangchính)vàdetail(chitiết)bằngchứcnăngDetail\nPage.......................................................................................................................................................157\n10.2.TạotrangmastervàdetailbằngchứcnăngMasterDetailPageSet............................159\n10.3.Bàithựchànhcơsởdữliệu.................................................................................................160\n10.3.1Tạomộtsitemới...................................................................................................................160\n10.3.2Chènthẻ<%Includevàotrang.........................................................................................161\n10.3.3Chènđốitượngvàtạokếtnốicơsởdữliệu...................................................................161"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 7,
    "text": "710.3.4Tạotrangchènmớidữliệu................................................................................................164\n10.3.5Tạotrangchèndữliệutựđộng.........................................................................................164\n10.3.6TạotrangDeletedữliệu.....................................................................................................165\n10.3.7Tạotrangđăngnhập(LogIn)............................................................................................166\n10.3.8Tạotrangchỉnhsửa(cậpnhật)dữliệu..........................................................................166\n10.3.9Tạotrangtìmkiếmhiểnthịdữliệungaydướiformtìm.................................................166\n10.3.10Tạotrangtìmkiếmsửdụngapplicationobject.............................................................168\n10.3.11TạotrangMastervàtrangDetailkhikhôngcódữliệutạomớihoàntoàn..............170\n10.3.12Tạotrangmastervàdetailkhiđãcódữliệu.................................................................170\n10.3.13Tạokếtnốibằnglệnh........................................................................................................172\n10.3.14ChènFlash..........................................................................................................................173\n10.3.14.1TạonútFlash..................................................................................................................173\n10.3.14.2TạodòngtitlebằngFlash..............................................................................................174\n10.3.15Tạokếtnốivớiwebasp.net.............................................................................................175\n10.3.16Viếtchữlênthanhtrạngthái............................................................................................176\n10.3.17SửdụngFreemenubluestyle1cấp..............................................................................178\n10.3.18Thayđổimàusắc...............................................................................................................179\n10.3.19TạohiệuứngHover...........................................................................................................181\n10.3.20Tạomenuthunhỏ..............................................................................................................182\n10.3.21Tựtạomenufreemenustyle...........................................................................................182\n10.3.22TạoPopUpmenu...............................................................................................................183\n10.3.23SửdụngCss.......................................................................................................................183\n10.3.24Đổifontchữ........................................................................................................................183"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 8,
    "text": "8GIỚITHIỆUVỀMÔĐUN\nVịtrí,ýnghĩa,vaitròmôđun:\nLậptrìnhWeblàmộtmôđunquantrọngđốivớingườilậptrìnhviên.Trongthờiđại\ncôngnghệthôngtintoàncầuhiệnnay,việcnắmvữngcáckiếnthứclậptrìnhwebcơbản\ngiúplậptrìnhviêntiếpcậnnhanhchóngvớihầuhếtcáccôngnghệmớihiệnnay,làmnền\ntảngđểpháttriểncácứngdụngthươngmạiđiệntử.\nGiáotrìnhnàylàmộtthànhphầncủahệthốnggiáotrìnhcủaTổngcụcdạynghề.\nGiáotrìnhđượcbiênsoạntheochươngtrìnhchínhquycôngnhânlànhnghềngànhCông\nnghệthôngtin.\nMụctiêuthựchiệncủamôđun:\nHọcxongmôđunnàyhọcviêncókhảnăng:\n-Xâydựngđượccáctrangchủ,trênđócócácứngdụngphụcvụcácmụctiêucụthể,có\nkhảnăngliênkếtđếncáctrangWebkhác\n-TrìnhbàytrêntrangWebhệthốngthôngtintổnghợpbaogồm:vănbản,hìnhảnh,âm\nthanhvớinhiềukiểuđịnhdạngkhácnhau\n-ỨngdụngmộtsốngônngữlậptrìnhcơbảnvàotrangWEBphụcvụcôngviệctínhtoán,\ntạocáchiệuứngtrêntrangWEB\n-TạođượccáctrangWebđộngliênkếtđếncáchệCSDLchotruớchoặcxâydựngmới\nphụcvụchocácứngdụng,cụthểtrongchươngtrìnhpháttriểnCNTTquốcgia.\n-SosánhsựkhácnhaugiữacácngônngữlậptrìnhtrênWebtừđóchọncôngcụphù\nhợptrongthiếtkếvàthicôngtrangWEBbảođảmkỹthuậtvàtínhmỹthuật\nNộidungchínhcủamônhọc:\nBÀI1:CÁCTHÀNHPHẦNCƠBẢNCỦAHTML\nBÀI2:THAOTÁCVỚIPHẦNMỀMTẠOWEB\nBÀI3:ĐINHDẠNGVĂNBẢNVÀTẠOẢNHCHOTRANGWEB\nBÀI4:LIÊNKẾT\nBÀI5:TẠODANHSÁCH,KHUNG,BIỂUMẪUVÀTHIẾTKẾBẢNG\nBÀI6:ĐAPHƯƠNGTIỆN–MULTIMEDIA\nBÀI7:THIẾTLẬPCÁCSTYLE\nBÀI8:NHỮNGKIẾNTHỨCCƠBẢNVỀJAVASCRIPT,VBSCRIPTVÀCÁCỨNG\nDỤNG\nBÀI9:ỨNGDỤNGKỸTHUẬTLẬPTRÌNHXÂYDỰNGTRANGWEB\nBÀI10:LIÊNKẾTTRANGWEBĐẾNHỆCSDLXÂYDỰNGCÁCTRANGWEB\nĐỘNGBẰNGMACROMEDIADREAMWEAVERMX2004"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 9,
    "text": "9SƠĐỒMỐILIÊNHỆGIỮACÁCMÔĐUNVÀMÔNHỌCTRONGCHƯƠNGTRÌNH\nHọckỳI HọckỳII HọckỳIII HọckỳIV\nKỹnăngtinhọc\nvănphòng\nCơsởtoánhọcHệthống\nmáytính\nAnhvăn\nchotinhọcGiaodiện\nngườimáy\nLậptrình\ncănbản\nMạngcănbản\nKỹnăng\nGiaotiếp\nKỹnăng\nInternet&WWW\nPhầncứng\nmáytínhLậptrình\nnângcao\nLậptrìnhhướng\nđốitượng\nCấutrúcdữliệu\nvàthuậtgiải\nCơsởdữliệu\nThiếtkếWeb\nAntoàn\nlaođộngLậptrình\nWeb\nPhântíchthiết\nkếhệthống\nThiếtkếhướng\nđốitượng\nỨngdụngCNTT\ntrongdoanhnghiệp\nCôngnghệ\nphầnmềm\nHướngdẫnđồ\nántốtnghiệpCôngnghệĐa\nphươngtiện\nLậptrình\nVisualBasicQuảnlýdựán\nphầnmềm\nThi\ntốtnghiệpHệcơsởdữ\nliệu\nMôitrườngPT\nPhầnmềm"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 10,
    "text": "10Lậptrìnhweblàmộtmôđuncơsởcủacôngnhânlànhnghề.Đểhọctốtmonhọcnày,họcviêncầnphảihọcquamônlậptrìnhcănbản,\nKỹnăngInternetvàWWW.\nKỹthuậtAntoànvàbảohộlaođộnglàmôđuncơbảnvàbắtbuộc.Mọihọcviênphảihọcvàđạtkếtquảchấpnhậnđượcđốivớicác\nbàikiểmtrađánhgiávàthikếtthúcnhưđãđặtratrongchươngtrìnhđàotạo.\nNhữnghọcviênquakiểmtravàthimàkhôngđạtphảithuxếpchohọclạinhữngphầnchưađạtngayvàphảiđạtđiểmchuẩnmớiđượcphép\nhọctiếpcácmôđun/mônhọctiếptheo.\nHọcviên,khichuyểntrường,chuyểnngành.nếuđãhọcởmộtcơsởđàotạokhácrồithìphảixuấttrìnhgiấychứngnhận;Trongmộtsố\ntrườnghợpcóthểvẫnphảiquasáthạchlại."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 11,
    "text": "11CÁCHÌNHTHỨCHỌCTẬPCHÍNHTRONGMÔĐUN\n1-Họctrênlớpvề:\n-CúphápcácthẻHTML.\n-CúpháptậplệnhVBScript.\n-CúphápcáclệnhthaotácdữliệucủaSQL.\n-Phươngphápbảomậtcơsởdữliệu.\n2-Họctạiphònghọcthựchànhởtrườngvề:\n-SửdụngphầnmềmthiếtkếwebMacroDreamweaverMX.\n-SửdụngphầnmềmthiếtkếFlashMacroFlashMX.\n.-Thiếtkếcơsởdữliệuvàsửdụngchotrangweb.\n-XâydựngmộtứngdụngwebđộngthựctiễndùngngônngữVBScript.\nYÊUCẦUVỀĐÁNHGIÁHOÀNTHÀNHMÔĐUN\nKỹnăngthựchành:\n-SửdụngthànhthạophầnmềmhỗtrợthiếtkếWebvàFlash\n-Xâydựngđượchệthốngbảomậtchotrangweb.\n-Kếthợpthànhthạosựhổtrợcủađaphươngtiệntrongtrangweb.\nTháiđộhọcviên:\n-Cẩnthậnlắngngheýkiếnvàthảoluậntrongnhómthiếtkế\n-Họcviêncầntuânthủcácbàitậpthựchànhtheothứtựcácchương,từdễđếnkhó.\nĐánhgiáthôngquakiểmtratrắcnghiệm:\n-Dùngphầnmềmthitrắcnghiệm.\n-Kiểmtratrắcnghiệmcóthểtrêngiấyhoặctrênmáytính.\n-Xâydựngngânhàngcâuhỏi,họcviênsẽnhậnđượcmộtbộđểphátsinhngẫunhiênvà\nchấtlượngcácđềnhưnhau(trungbình,khá,giỏi,xuấtsắc).\n-Thờigianlàmbàituỳtheosốlượngcáccâutrongđề.\n-Thangđiểm100chiađềuchocáccâu.\n-Kếtquảđánhgiádựavàobàilàmtheođiểmđạtđược.\nThựchành:Đánhgiáthôngquakhảnănggiảihoànthànhchươngtrình(đềkiểmtra)đềra.\nThangđiểm:(đánhgiácâuhỏitrắcnghiệm)\n0-49:Khôngđạt\n50-69:Đạttrungbình\n70-85:Đạtkhá\n86-100:ĐạtGiỏi"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 12,
    "text": "12BÀI1:CÁCTHÀNHPHẦNCƠBẢNCỦAHTML\nMụctiêu:\n-SửdụngđượccấutrúctổngthểcủaHTML,cácthẻHTML\n-Nhậndạngtêntậptin,cácđịachỉURL\n1.1Giớithiệuvàthuậtngữ\n-HTMLlàgì?\nHTML(hayHypertextMarkupLanguage-Ngônngữliênkếtsiêuvănbản)làngôn\nngữđánhdấuchuẩndùnglậptrìnhcáctàiliệuWorldWideWeb,tàiliệulàcáctậptinvăn\nbảnđơngiản.NgônngữHTMLdùngcáctaghoặccácđoạnmãlệnhđểchỉchocáctrình\nduyệt(Webbrowsers)cáchhiểnthịcácthànhphầncủatrangnhưtextvàgraghics,vàđáplại\nnhữngthaotáccủangườidùngbởicácthaotácấnphímvànhắpchuột.HầuhếtcácWeb\nbrowser,đặcbiệtlàMicrosoftInternetExplorervàNetscapeNavigator,nhậnbiếtcáctagcủa\nHTMLvượtxanhữngchuẩnHTMLđặtra.MicrosoftFrontPagechỉdùngđểđọcvàviếtcác\ntậptinHTMLmàkhônghiểungônngữHTMLyêucầuphảilàmgì.\n-DynamicHTML(DHTML-HTMLđộng):làngônngữHTMLmởrộnglàmtănghiệu\nứngtrìnhbàyvănbảnvàđốitượngkhác.TrongFrontPage,bạncóthểsửdụngthanhcông\ncụDHTMLEffectsđểlàmtăngcườnghiệuứngchocácthànhphầncủamàkhôngcầnlập\ntrình.\n-ActiveDataObjects(ADO):Cácthànhphầngíupcácứngdụngcủangườidùng\n(clientapplications)truycậpvàchếtácdữliệucủacơsởdữliệutrênserverqua1nhàcung\ncấp.\n-ActiveServerPage(ASP):là1tàiliệuchứascriptnhúngtrênserver.Webservers\ntươngthíchASPcóthểchạycácscriptnày.Trênmáytrạm,1ASPlà1tàiliệuHTMLchuẩn\ncóthểđượcxemtrênbấtkỳmáynàotrênWebbrowsernào.\n-ActiveX:1tậphợpcáckỹthuậtchophépcácthànhphầnphầnmềmtươngtácvới\nmộtthànhphầnkháctrongmôitrườngmạng,bấtchấpngônngữcủathànhphầnđượctạo\nra.ActiveXđượcdùnglàmchínhyếuđểpháttriểnnộidungtươngtáccủaWorldWideWeb,\nmặcdùnócóthểsửdụngtrongcácứngdụngngười-máyvàcácchươngtrìnhkhác.\n-URL(UniformResourceLocator):địachỉtớimộttrạmInternethaymạngnộibộ,là\n1chuỗicungcấpđịachỉInternetcủa1WebsitetàinguyêntrênWorldWideWeb,đitheo\nsau1nghithức.URLthườngdùnglàhttp://,đểchỉđịnhđịachỉWebsitetrênInternet.\nNhữngURLkháclàgopher://,ftp://,mailto://...\n-Bookmark:1vịtrítrên1trangwebcóthểlàđíchcủa1hyperlink.1bookmarkcó\nthểápdụngcho1chuỗikýtựtồntạitrêntrangngăncáchbởibấtkỳkýtựnào.Bookmarks\nchophéptácgiảlinkđến1phầnđãchỉđịnhtrêntrang.Trong1URL,1bookmarkđược\nđánhdấuphíatrướcbằngdấuthăng(#).Cũngđượcgọilàneo(anchor)."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 13,
    "text": "13-Webbrowser(Trìnhduyệtweb):Phầnmềnphiêndịchđánhdấucủacácfilebằng\nHTML,địnhdạngchúngsangcáctrangWeb,vàthểhiệnchúngchongườidùng.Vài\nbrowsercóthểchophépngườidùnggởinhậne-mail,đọcnewsgroups,vàthựchiệncácfile\nsoundhoặcvideođãđượcnhúngvàtrongtàiliệuWeb.\n-Script:Mộttậpcácchỉlệnhdùngđểbáochochươngtrìnhbiếtcáchthựchiệnmột\nthủtụcquiđịnh,nhưđăngnhậpvàohệthốngthưđiệntửchẳnghạn.Cáckhảnăngscript\nđượccàisẵntrongmộtsốchươngtrình.Bạnphảitìmhiểucáchviếtscriptđóbằngloạingôn\nngữkhôngkhácgìngônngữlậptrìnhmini.Cómộtsốchươngtrìnhghiscriptnàymộtcách\ntựđộngbằngcáchghilạinhữnglầngõphímvàchọndùnglệnhcủabạnkhibạntiếnhành\nthủtụcnày.Cácscriptgiốngnhưcácmacro,trừmộtđiềulàthuậtngữmacrođượcdành\nriêngđểchỉnhữngscriptnàomàbạncóthểkhởiđầubằngcáchấnmộttổhợpphímdobạn\ntựquyđịnh.\n-StructuredQueryLanguage-SQL:Trongcáchệquảntrịcơsởdữliệu,đâylà\nngônngữvấnđápdoIBMsoạnthảođượcsửdụngrộngrãitrongmáytínhlớnvàhệthống\nmáytínhmini.SQLđangđượctrangbịtrongcácmạngkhách/chủnhưlàmộtphươngpháp\nlàmchocácmáytínhcánhâncókhảnăngthâmnhậpvàocáctàinguyêncủacáccơsởdữ\nliệuhợptác.Ðâylàloạingônngữđộclậpvớidữliệu;ngườisửdụngkhôngphảibậntâm\nđếnvấnđềdữliệusẽđượcthâmnhậpvàobằngcáchnàovềmặtvậtlý.Theolýthuyết,\nSQLcũngđộclậpvớithiếtbị;cóthểdùngcùngmộtngônngữvấnđápđểthâmnhậpvào\ncáccơsởdữliệutrênmáytínhlớn,máytínhmini,vàmáytínhcánhân.Tuynhiên,hiệnnay\ncómộtsốphiênbảncủaSQLđangbịcạnhtranh.SQLlàmộtngônngữvấnđápsúctíchchỉ\nvới30lệnh.Bốnlệnhcơbản(SELECT,UPDATE,DELETE,vàINSERT)đápứngchobốn\nchứcnăngxửlýdữliệucơbản(phụchồi,cảitiến,xoá,vàchènvào).CáccâuhỏicủaSQL\ngầngiốngcấutrúccủamộtcâuhỏitiếngAnhtựnhiên.Kếtquảcủacâuhỏisẽđượcbiểu\nhiệntrongmộtbảndữliệubaogồmcáccột(tươngứngvớicáctrườngdữliệu)vàcáchàng\n(tươngứngvớicácbảnghidữliệu).\n-HypertextTransferProtocol-HTTP:Giaothứctruyềnsiêuvănbản\n-Hyperlink:Siêuliênkết\n-Website:nghĩahẹp:trangweb,nghĩarộng:chỗchứaweb.\n-HTTPaddress:địachỉHTTP,vídụ:http://www.dalattech.edu.vn\n-Database:cơsởdữliệu,khodữliệu.Mộtbộsưutậpcácthôngtinvềmộtchủđề,\nđượctổchứchợplýđểthànhmộtcơsởchocácthủtụccôngviệcnhưtruytìmthôngtin,rút\nracáckếtluận,vàthànhlậpcácquyếtđịnh.Bấtkỳmộtsưutậpthôngtinnàophụcvụcho\ncácmụcđíchnàyđềuđượccoilàmộtcơsởdữliệu,ngaycảtrườnghợpcácthôngtinđó\nkhôngđượclưutrữtrongmáytính.Thựcra,\"tổtiên\"củacáchệcơsởdữliệudoanh\nthươngphứctạphiệnnaylànhữngtệpđượcgiữtrêncáctấmbìa,cómangmãsố,vàđược\nxếptrongcácphònglưutrữtrướcđây.Thôngtinthườngđượcchiarathànhnhiềubảnghi\n(record)dữliệukhácnhau,trênđócómộthaynhiềutrườngdữliệu."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 14,
    "text": "14-Table:bảngtrongchươngtrìnhquảnlýcơsởdữliệuliênquan,đâylàcấutrúccơ\nsởcủaviệclưutrữvàhiểnthịdữliệu,trongđócáckhoảnmụcdữliệuđượcliênkếtvới\nnhaubởicácquanhệhìnhthànhdoviệcđặtchúngtheocáchàngvàcáccột.Cáchàngứng\nvớicácbảnghidữliệucủacácchươngtrìnhquảnlýdữliệuhướngbảng,vàcáccộtthìứng\nvớicáctrườngdữliệu.\n-Hypertext:vănbảncủamộttàiliệutruytìmkhôngtheotuầntự.Ngườiđọctựdo\nđuổitheocácdấuvếtliênquanquasuốttàiliệuđóbằngcácmốiliênkếtxácđịnhsẵndo\nngườisửdụngtựlậpnên.\nTrongmộtmôitrườngứngdụnghepertextthựcsự,bạncóthểtrỏvào(highlight)bấtkỳtừ\nnàocủatàiliệuvàsẽtứckhắcnhảyđếncáctàiliệukháccóvănbảnliênquanđếnnó.Cũng\ncónhữnglệnhchophépbạntựtạochoriêngmìnhnhữngdấuvếtkếthợpquasuốttàiliệu.\nCáctrìnhứngdụnghypertextrấthữuíchtrongtrườnghợpphảilàmvớimộtsốlượngvăn\nbảnlớn,nhưcácbộtừđiểnbáchkhoavàcácbộsáchnhiềutập.\n-Multimedia:đaphươngtiện,đamôitrường,đatruyềnthông\nMộtphươngphápgiớithiệuthôngtinbằngmáytính,sửdụngnhiềuphươngtiệntruyền\nthôngtinnhưvănbản,đồhoạvàâmthanh,cùngvớisựgâyấntượngbằngtươngtác.\n-WorldWideWeb-WWW:LàmộtdịchvụcủaInternet.Ðâylàmộthệthốngdùng\nđểtruytìmvàphụchồicáctàiliệuhypertextthựchiện.\n-FileTransferProtocol-FTP:địnhướctruyềntệp,giaothứctruyềntệp.Trong\ntruyềnthôngkhôngđồngbộ,đâylàmộttiêuchuẩnnhằmbảođảmtruyềndẫnkhôngbịlỗi\nchocáctệpchươngtrìnhvàdữliệuthôngquahệthốngđiệnthoại.ChươngtrìnhFTPcũng\nđượcdùngđểgọitênchođịnhướctruyềntệpUNIX,mộtđịnhướchướngdẫnviệctruyền\ndữliệu.\n-Internet:Mộthệthốnggồmcácmạngmáytínhđượcliênkếtvớinhautrênphạmvi\ntoànthếgiới,tạođiềukiệnthuậnlợichocácdịchvụtruyềnthôngdữliệu,nhưđăngnhậptừ\nxa,truyềncáctệptin,thưtínđiệntử,vàcácnhómthôngtin.\nInternetlàmộtphươngphápghépnốicácmạngmáytínhhiệnhành,pháttriểnmộtcách\nrộngrãitầmhoạtđộngcủatừnghệthốngthànhviên.\nNguồngốcđầutiêncủaInternetlàhệthốngmáytínhcuảBộQuốcPhòngMỹ,gọilàmạng\nARPAnet,mộtmạngthínghiệmđượcthiếtkếtừnăm1969đểtạođiềukiệnthuậnlợicho\nviệchợptáckhoahọctrongcáccôngtrìnhnghiêncứuquốcphòng.\nARPAnetđãnêucaotriếtlýtruyềnthôngbìnhđẳng(peer-to-peer),trongđómỗimáy\ntínhcủahệthốngđềucókhảnăng\"nóichuyện\"vớibấtkỳmáytínhthànhviênnàokhác.\nBấtkỳmạngmáytínhnàodựatrêncơsởthiếtkếcủaARPAnetđềuđượcmôtảnhưmột\ntậphợpcáctrungtâmđiệntoántựquản,mangtínhđịaphươngvàtựđiềuhành,chúng\nđượcliênkếtdướidạng\"vôchínhphủnhưngcóđiềutiết\".\nSựpháttriểnthiếtkếcủamạngARPAnetđơnthuầnchỉdonhữngyêucầuvềquânsự:Mạng"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 15,
    "text": "15nàyphảicókhảnăngchốnglạimộtcuộctấncôngcóthểvôhiệuhoámộtsốlớncáctrạm\nthànhviêncủanó.\nTưtưởngnàyđãđượcchứngminhlàđúngkhiMỹvàcácđồngminhthamgiavào\ncuộcchiếntranhvùngVịnh.\nSựchỉhuyvàmạngkiểmsoátcủaIrak,đượctổchứcmôphỏngtheocôngnghệ\nARPAnet,đãchốnglạimộtcáchthànhcôngđốivớicácnổlựccủalựclượngđồngminh\nnhằmtiêudiệtnó.\nÐólàlýdotạisaocôngnghệcónguồngốctừARPAnethiệnnayđangđượcxuất\ncảngmộtcáchrộngrãi.\nMạngInternetnguyênthuỷđượcthiếtkếnhằmmụcđíchphụcvụviệccungcấp\nthôngtinchogiớikhoahọc,nêncôngnghệcủanóchophépmọihệthốngđềucóthểliên\nkếtvớinóthôngquamộtcổngđiệntử.\nTheocáchđó,cóhàngngànhệmáytínhhợptác,cũngnhưnhiềuhệthốngdịchvụ\nthưđiệntửcóthuphí,nhưMCIvàCompuservechẳnghạn,đãtrởnênthànhviêncủa\nInternet.\n-Password:mậtkhẩu,mậtlệnh.Mộtcôngcụbảovệantoàn,dùngđểxácđịnh\nđúngngườisửdụngđượcphépđốivớimộtchươngtrìnhmáytínhhoặcmạngmáytính,và\nđểxácđịnhcácphạmviquyềnhạncủahọnhưchỉđọcra,đượcđọcvàghi,hoặcđượcsao\nchépcáctệp.\n1.2TổngquanvềHTML\n1.2.1Cấutrúctrangweb\n<HTML>\n<HEAD>\n<TITLE>Tiêuđềtrangweb</TITLE>\n</HEAD>\n<BODY>\nThântrangweb\n</BODY>\n</HTML>\n1.2.2Cúpháptagtổngquátcủamộtthẻ(tag)trongHTML\nKhitrìnhduyệt(webbrowser)hiểnthịnộidung1trangwebnósẽtìmkiếmtrongđó\nnhữngđoạnmãđặcbiệtlàcáctagđượcđánhdấubởikýhiệu<và>,vàcăncứvàođóđể\nthểhiện.Cúpháptổngquátcủa1tag:\n<tên_tagthuộc_tính_1=giá_trị_1thuộc_tính_2=giá_trị_2...>...</tên_tag>\nhoặcđơngiảnnhấtlà:<tên_tag>Chuỗivănbản</tên_tag>\ntên_taggõvàodạngchữthườnghoặchoađềuđượcvàcáctagcóthểlồngvàonhau.\nVídụ:\n-tagchữđậm<B>cúpháp<B>chuỗivănbảninđậm</B>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 16,
    "text": "16-tagxuốnghàng<P>cócúpháp<PALIGN=align-type>mộtđoạnvănbản</P>\nHTML Kếtquả\nDòngchữnàythường Dòngchữnàythường\n<b>Dòngchữnàyđậm</b> Dòngchữnàyđậm\n<i>Dòngchữnàynghiêng</i> Dòngchữnàynghiêng\n<fontcolor=\"#800000\"face=\"Verdana\">Ðâylàđoạn\nvănthứnhấtmàuđỏcóphônglà\nVerdana.</font><p><fontcolor=\"Black\"\nface=\"Verdana\">Ðâylàđoạnvănthứhaimàuôliucó\nphôngcũnglàVerdana.</font></p>Ðâylàđoạnvănthứnhấtmàuđỏ\ncóphônglàVerdana.\nÐâylàđoạnvănthứhaimàuôliu\ncóphôngcũnglàVerdana.\n<b><i>Dòngchữnàyvừađậmvừanghiêng</i></b>Dòngchữnàyvừađậmvừa\nnghiêng\nÐoạnnàycanhtrái.</font><palign=\"center\"><font\nface=\"Verdana\">Ðoạnnàycanhgiữa.</font></p><p\nalign=\"right\"><fontface=\"Verdana\">Ðoạnnàycanh\nphải.</font>Ðoạnnàycanhtrái.\nÐoạnnàycanhgiữa.\nÐoạnnàycanhphải.\n1.2.3Tagđầutrang<HTML></HTML>:Tag<HTML>ởđầutrangwebtĩnhvà</HTML>ở\ncuốitrang.Trangwebđượcbắtđầuvàkếtthúcbởitagnày.\n1.2.4Tagbắtđầu<HEAD></HEAD>:Tag<HEAD>đánhdấuđiểmbắtđầu\nphần_đầu_headingcủatrangweb.Tag</HEAD>cóthểbỏqua.\n1.2.5Tagtiêuđề<TITLE></TITLE>:Tag<TITLE>chỉđịnhtiêuđềcủacủatrangweb.Tiêu\nđềnàysẽxuấthiệntrênthanhtiêuđềcủatrìnhduyệt(webbrowser:InternetExplorerhoặc\nNetscapeNavigator).Tagnàychỉhợplệkhiđưavàobêntrongphần<HEAD>\nVídụ:\nHTML Kếtquả\n<html>\n<head>\n<title>Webdemo</title>\n</head>\n<body>\nHelloWorld!\n</body>\n</html>-Trênthanhtiêuđềxuấthiện:\nWebdemo-MicrosoftInternetExplorer\n-Nộidungtrangwebxuấthiện:\nHelloWorld!\n1.2.6Tagthântrang<BODY></BODY>:dùngchỉđịnhbắtđầuvàkếtthúcphầnnộidung\ntrangweb.Tagnàyđượcđịnhnghĩanhưsau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 17,
    "text": "17<BODY\nBACKGROUND=url\nBGCOLOR=color\nBGPROPERTIES=FIXED\nLEFTMARGIN=n\nLINK=color\nTEXT=color\nTOPMARGIN=n\nVLINK=color>\ntrongđó:\nThuộctính Diễngiải\nurlViếttắtcủaUniformResourceLocators:là1chuỗicungcấpđịa\nchỉInternetcủa1WebsitehoặctàinguyêntrênWorldWideWeb,\ntheocùnglànghithứcprotocolcủasitehoặctàinguyêntruycập\nvào.Nghithứcthườngdùnghttp://,chocácđịachỉInternetcủa\nmộttrangweb.VàidạngURLkháclàgopher://,chocácđịachỉ\nInternetcủa1thưmụcdịchvụgopher,vàftp://,chocácđịachỉtài\nnguyênFTP.Trongtag<BODY>tathườngdùngdạngURLlà\nfile://,têntậptinảnh.GIF,.JPG,.BMP.Khilưutrangweb,bạnsẽ\nxácđịnhthưmụcmớisẽlưutrữtậptinảnh.\ncolorMàudạng#NNNNNNvớiN:0,1,...,F.Hoặctênnhữngmàuđãquy\nđịnhtrướcnhư:AQUA,BLACK,Black,FUCHSIA,GRAY,\nGREEN,LIME,MAROON,NAVY,OLIVE,PURPLE,#800000,\nSILVER,TEAL,WHITE,YELLOW.\nBACKGROUND=urlChỉđịnhảnhnềnchotrangweb,urllàđịachỉvàtêntậptinlàm\nảnhnền.\nBGCOLOR=color Chỉđịnhmàunềnchotrangweb\nBGPROPERTIES=FIXEDChỉđịnhảnhnềntrangwebkhôngcuộnkhicuộnthanhscrollbar.\nLEFTMARGIN=n Chỉđịnhlềtráitrangweb,nlà1sốnguyêndươngtínhtheopixel\nLINK=colorChỉđịnhmàuchocáchyperlinkkhichưađược\"duyệt\"trongtrang\nweb.\nTEXT=color Chỉđịnhmàuvănbảntrongtrangweb\nTOPMARGIN=n Chỉđịnhlềtrêntrangweb,nlà1sốnguyêndươngtínhtheopixel\nVLINK=colorChỉđịnhmàuchocáchyperlinkkhiđãđược\"duyệt\"trongtrang\nweb."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 18,
    "text": "18Vídụ:\nHTML Kếtquả\n<BODYBGCOLOR=YELLOWTEXT=#800000>\nChàomừngthếkỷmới\n</BODY>Chàomừngthếkỷmới\n<BODYBGCOLOR=\"#0000FF\"TEXT=\"#FFFFFF\">\nChàomừngthếkỷmới\n</BODY>Chàomừngthếkỷmới\n<html>\n<head>\n<title>Webdemo</title>\n</head>\n<BODYtext=BLACKbackground=\"images/so01871_1.gif\"\ntopmargin=\"20\"leftmargin=\"25\"link=#800000\nvlink=GREEN>\n<palign=\"center\"><b>Danhmụccôngviệc</b><p><a\nhref=\"#Nộidungmục1\">Mục\n1</a></p>\n<p><ahref=\"#Nộidungmục2\">Mục2</a></p>\n<p><ahref=\"#Nộidungmục3\">Mục3</a></p>\n<p></p>\n<p><aname=\"Nộidungmục1\">Nộidungmục1</a></p>\n<p></p>\n<p></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><aname=\"Nộidungmục2\">Nộidungmục2</a></p>\n<p></p>\n<p></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><aname=\"Nộidungmục3\">Nộidungmục3</a></p>\n<p>&nbsp;</p>\n</BODY>-fileảnhnền:so01871_1.gif\n-Vìkhôngđưavàothuộctính\nbgproperties=\"fixed\"nênảnhnền\nbịcuộn\n-lềtrái=25\n-lềtrên=20\n-màuvănbảnđen\n-màuhyperlinkchưaduyệtlàđỏ\n-màuhyperlinkđãduyệtlàxanh"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 19,
    "text": "19</html>\n1.2.7Tagxuốngdòngsangđoạnmới<P></P>:ngắtvănbảnsangđoạn(paragraph)mới.\nThànhphần</P>cuốiđoạnkhôngnhấtthiếtphảicó.Tagnàyđượcđịnhnghĩanhưsau:<P\nALIGN=align-type>,ALIGN=align-typedùngchỉđịnhcanhđoạnmới.align-type=LEFT(canh\ntrái),RIGHT(canhphải)hoặcCENTER(canhgiữa).\nVídụ:\nHTML Kếtquả\nCó2trìnhduyệthiệnđangđượcsửdụngrộngrãilà:\n<palign=left>-NetscapeNavigator<palign=center>-\nVàInternetExplorerCó2trìnhduyệthiệnđangđượcsử\ndụngrộngrãilà:\n-NetscapeNavigator\n-VàInternetExplorer\n1.2.8Tagxuốngdòngkhôngsangđoạnmới<BR></BR>:ngắtxuốngdòngmớinhưng\nvẫnthuộccùngmộtđoạnhiệnhành.</BR>khôngnhấtthiếtphảicó.\nVídụ:\nHTML Kếtquả\nProntpagehaytựthêmvàocácchuỗimã\nthaythếchoviệcđưacáckýtựvào\nsourcetrangwebnhư:<BR>-chuỗi\"&reg;\"\nthaythếkýtự(R).<BR>-chuỗi\"&lt;\"thaythế\ndấu<.Prontpagehaytựthêmvàocácchuỗimã\nthaythếchoviệcđưacáckýtựvào\nsourcetrangwebnhư:\n-chuỗi\"&reg;\"thaythếkýtự(R).\n-chuỗi\"&lt;\"thaythếdấu<.\n1.2.9Tagthêmđườngthẳngnằmngang<HR></HR>:thêmđườngthẳngnằmngang\ntrongtrangweb.Tagnàyđượcđịnhnghĩanhưsau:\n<HR\nALIGN=align-type\nCOLOR=color\nNOSHADE\nSIZE=n\nWIDTH=m>\ntrongđó:\n-ALIGN=align-tpye:canhlềchođườngthẳngngang,align-typecóthểlàLEFT,\nRIGHT,CENTER\n-COLOR=color:màuđườngthẳngngang\n-NOSHADE:khôngcóbóng\n-SIZE=n:độđậmcủađườngthẳngngang,ncógiátrịlàsốnguyêntínhtheođơnvị\npixel."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 20,
    "text": "20Vídụ:\nHTML Kếtquả\n<HR\nALIGN=CENTER\nCOLOR=#800000\nNOSHADE\nSIZE=3\nWIDTH=200>\n<HR\nALIGN=LEFT\nCOLOR=BLACK\nSIZE=2\nWIDTH=150>\n1.2.10Tagđậm<B></B>:Hiểnthịvănbảnđậmtheophysicaltype\n1.2.11Tagnghiêng<I></I>:Hiểnthịvănbảnnghiêngtheophysicaltype\n1.2.12Taggạchdưới<U></U>:Hiểnthịvănbảngạchdướitheophysicaltype\n1.2.13Taggạchgiữa<S></S>:Hiểnthịvănbảngạchgiữa(strikeout)theophysicaltype\nVídụ:\nHTML Kếtquả\nDòngnàythôngthường Dòngnàythôngthường\n<b>Dòngnàyđậm</b> Dòngnàyđậm\n<i>Dòngnàynghiêng</i> Dòngnàynghiêng\n<u>Dòngnàygạchdưới</u> Dòngnàygạchdưới\n<s>Dòngnàygạchgiữa</s> Dòngnàygạchgiữa\n<b><i>Dòngnàyvừađậmvừa\nnghiêng</b></i>Dòngnàyvừađậmvừanghiêng\n<i><u>Dòngnàyvừanghiêngvừagạch\ndưới</u></i>Dòngnàyvừanghiêngvừagạchdưới\n1.2.14Tagđậmlogictype<STRONG></STRONG>:Hiểnthịvănbảnđậmtheologictype\n1.2.15Tagnghiênglogictype<EM></EM>:Hiểnthịvănbảnnghiêngtheologictype\n1.2.16Taggạchnganglogictype<STRIKE></STRIKE>:Hiểnthịvănbảngạchdướitheo\nlogictype\n1.2.17Tagchỉsốlogictype<SUB></SUB>:Hiểnthịvănbảndạngchỉsốtheologictype"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 21,
    "text": "211.2.18Tagmũlogictype<SUP></SUP>:Hiểnthịvănbảndạngmũtheologictype\nVídụ:\nHTML Kếtquả\nDòngnàythôngthường Dòngnàythôngthường\n<strong>Dòngnàyđậm</strong> Dòngnàyđậm\n<em>Dòngnàynghiêng</em> Dòngnàynghiêng\n<strike>Dòngnàygạchgiữa</strike> Dòngnàygạchgiữa\n<strong><em>Dòngnàyvừađậmvừa\nnghiêng</strong></em>Dòngnàyvừađậmvừanghiêng\n<em><u>Dòngnàyvừanghiêngvừagạch\ndưới</u></em>Dòngnàyvừanghiêngvừagạchdưới\nH<sub>2</sub>SO<sub>4</sub> H2SO4\nX<sup>y</sup> xy\n1.2.19Tagđịnhfontchữcơsở<BASEFONT></BASEFONT>:chỉđịnhfont,size,màuvăn\nbảnchocácvănbảnkhôngđịnhdạngvàdùngvớitag\n<BASEFONT\nSIZE=n\nFACE=name\nCOLOR=color>\nTrongđó:\nSIZE=n:chỉđịnhkíchthướcvănbản,ntừ1đến7.Giátrịmặcnhiênlà3.\nCOLOR=color:màuvănbản\nFACE=name:tênfont\n1.2.20Tagfontchữ<FONT></FONT>:chỉđịnhfont,size,màuvănbản.Ðịnhnghĩanhư\nsau:\n<FONT\nSIZE=n\nFACE=name\nCOLOR=color>\nTrongđó:\nSIZE=n:chỉđịnhkíchthướcvănbản,ntừ1đến7.Thêmdấucộng+hoặctrừ-phía\ntrướcđểchỉđịnhviệctănghoặcgiảmkíchthướcsovớikíhcthướcđãđịnhtrong\nBASEFONT.\nCOLOR=color:màuvănbản\nFACE=name:tênfont"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 22,
    "text": "22Vídụ:Vănbảnthường\nHTML Kếtquả\n<basefontsize=3>\n<fontsize=5>Kíchthớcvănbảnlà5</font>\n<p><fontsize=+1>Kíchthớcvănbảnlà4</p></font>\n<p><fontsize=+2>Kíchthớcvănbảnlà5</p></font>\n<p><fontsize=-1>Kíchthớcvănbảnlà2</p></font>Kíchthướcvănbảnlà5\nKíchthướcvănbảnlà4\nKíchthướcvănbảnlà5\nKíchthướcvănbảnlà2\n1.2.21Tagnhạcnền<BGSOUND>:địnhnhạcnềnchotrangtưliệu.Tagnàyđượcđặt\ndướitag</HEAD>nhưngtrêntag<BODY>.Ðịnhnghĩanhưsau:\n<BGSOUND\nSCR=url\nLOOP=n>\nTrongđó:\nurl:chỉđịnhtậptinnhạc.CáckiểunhạccóthểlàWAV,AU,MIDI,….\nn:chỉsốlầnlặplạibàinhạc.Nếun=-1hoặcinfinitethìsẽlặpđếnkhinàođóngtrang\nweb.\nVídụ:\n<HTML>\n<TITLE>BackgroundSound</TITLE>\n<HEAD>\n</HEAD>\n<BGSOUND\nSCR=\"sound/bgs.wav\"\nLOOP=-1>\n<BODY>\nEnjoymysound.\n</BODY>\n</HTML>\n1.2.22Tag6mứctiêuđề<Hn></Hn>\nDùngđểtạocácchuỗitiêuđềtonhỏtùyýtùytheocấptiêuđềđótrongtrangweb.\nCó6cấptiêuđềkhácnhauđượcđịnhnghĩanhưsau:\n<Hn>Textxuấthiệntrongtiêuđề</Hn>\nvớinlàmộtsốtừ1đến6"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 23,
    "text": "23Vídụ:\nHTML Kếtquả\n<H1>Tiêuđềcấp1</H1> Tiêuđềcấp1\n<H2>Tiêuđềcấp2</H2> Tiêuđềcấp2\n<H3>Tiêuđềcấp3</H3> Tiêuđềcấp3\n<H4>Tiêuđềcấp4</H4> Tiêuđềcấp4\n<H5>Tiêuđềcấp5</H5> Tiêuđềcấp5\n<H6>Tiêuđềcấp6</H6> Tiêuđềcấp6\n1.2.23Ðịnhnghĩatag<A></A>(Hypelink-siêuliênkết):\na)Ðịnhnghĩa1bookmarkvàhyperlinktrongcùngtrangweb:bookmarklàkỹthuậtchỉ\nđịnh1địnhdanh(đích)đểhyperlinknhảyđếnđầuđoạnvănbản.\n<Aname=\"tên\">chuỗikýtựđầuđoạnvănbản</A>\nVídụ:\n<Aname=\"Ndphần1\">Nộidungphần1</A>baogồmcácnộidungchitiếtsau...\nKhiđótrongphầnkhaibáohyperlinkbạnkhaibáotheocúphápsau:\n<ahref=\"#tên_của_bookmark_đã_khai_báo\">Chuỗihướngdẫnnhảyđếnđầuđoạncó\nbookmark=\"tên_của_bookmark_đã_khai_báo\"</a>\nVídụ:<ahref=\"#Ndphần1\">Xemnộidungphần1</a>\nb)Hyperlinkđếnmộttrangwebkhác:\nCúpháp:\n<AHREF=\"địa_chỉ_trang_web_sẽ_nhảy_tới\">Chuỗidiễngiảihyperlink</A>\nVídụ:\n<AHREF=\"http://www.dalattech.edu.vn\">Linkđếntrangwebchủcủahãngmáytính\nMicrosoft.</A>\n<AHREF=\"trang_chu.htm\">Linkđếntrangwebtrang_chu.htmtrongcùngthư\nmục.</A>\n<ATARGET=\"viewer\"HREF=\"sample.htm\">Clickvàođâyđểmởtrangweb\nsample.htmtrongcửasổ\"viewer\".</A>\n<AHREF=\"http://www.dalattech.edu.vn\"><IMGSRC=\"images/bullet.gif\">Clickvàoảnh\nnàyđểlinkđếntrangwebcủaMicrosoft</A>\n<AHREF=\"mailto:admin@kythuatdalat.edu.vn\">admin@kythuatdalat.edu.vn</A><br>\n1.2.24Nhúnghìnhảnh,âmthanhvàotrangWeb\n-Thẻ<IMG>:Thêmhìnhảnhhoặcphimvàotrangweb.Ðịnhnghĩa\n<IMG\nALIGN=align-type\nALT=text"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 24,
    "text": "24SRC=url\nBORDER=n\nHEIGTH=n\nWIDTH=n\nHSPACE=n\nVSPACE=n>\nTrongđó:\n-ALIGN=align-type:lềchoảnhhaychovănbảnbaoquanhảnh.GiátrịcóthểlàTOP,\nMIDDLE,BOTTOM,LEFT,RIGHT.\n-ALT=text:vănbảnhiểnthịhaythaythếchohìnhảnhkhichức\"ShowPicture\"trong\ntrìnhduyệtbịtắt.\n-SRC=url:chỉđịnhảnh\n-BORDER=n:đườngviềnảnh.Nếuảnhđượcdùngchohyperlinkthìđườngviềncó\nmàutrùngvớimàuhyperlink.Nếuảnhkhôngdùngchohyperlinkthìđườngviềnkhônghiển\nthị.\n-HEIGTH=n,WIDTH=n:chỉđộcaovàđộrộngcủaảnh.Ðơnvịbằngpixel.\n-HSPACE=n,VSPACE=n:chỉđịnhkhoảngcáchtừảnhđếnvănbảnquanhnótheo\nchiềungangvàdọc.\nVídụ:\n<AHREF=\"index.htm\"><IMGSRC=\"images/btoc.gif\"ALT=\"[cácnộidung]\"\nALIGN=MIDDLEHSACE=5VSPACE=5>Nộidung</A></P>\n-Thẻ<EMBED>:thêmđốitượngâmthamvàotrangweb.\nCúpháp:\n<EMBED\nALIGN=align-type\nSRC=url\nHEIGTH=n\nWIDTH=n\n…\n>\n-Cácthamsốthuộctínhtươngtựthẻ<IMG>\nVídụ:\n<EMBEDSRC=\"nhac/muatrenphohue.mp3\"ALIGN=MIDDLEHSACE=5\nVSPACE=5>MưatrênphốHuế"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 25,
    "text": "25Bàithựchànhsố1:\nSửdụngNotepadđểthựchiệnbàithựchànhnày.\n1.ViếtmãHTMLchotrangWebvớitiêuđềtranglà“Sửdụngtiêuđề”,thêmvàophần\nBodycủatrangmộtdòngvănbảnởtiêuđềmức3(H3)vớinộidung“ĐâylàtrangHTML\nđầutiêncủatôi”.Lưutậptinvớitêntrang1.htm.\n<HTML>\n<HEAD>\n<TITLE>Sửdụngtiêuđề</TITLE>\n</HEAD>\n<BODY>\n<H3>ĐâylàtrangHTMLđầutiêncủatôi</H3>\n</BODY>\n</HTML>\n2.TạomộttrangWebvớitiêuđề“Sửdụngthẻphânđoạn”đểtạohaiđoạnvănbản,\ngiữahaiđoạnvănbảnnàyđượcngăncáchnhaubởimộtđườngkẽngang.Lưutậptinvới\ntêntrang2.htm.\n<HTML>\n<HEAD>\n<TITLE>Sửdụngthẻphânđoạn</TITLE>\n</HEAD>\n<BODY>\n<P>\naaaaaaaaa\n</P>\n<HRalign=centerwidth=50%>\n<P>\nbbbbbb\n</P>\n</BODY></HTML>\n3.TạomộttrangWebđểhiểnthịthôngtinlịchhọcnhưsauvàlưuvớitêntrang3.htm\nđểhiểnhịratrìnhduyệtkếtquảsau:\nThứhai\n9giờ-11giờ:Kếtoánđạicương\nThứba"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 26,
    "text": "2610giờ-11giờ:ThiếtkếWeb\nThứtư\nThứnăm\nNghĩ\nThứsáu\n4.Mởtrang1.htmbằngNotepadvànhậpthêmmộtvàidòngvàophầnthântrang\n(Body).Sửdụngcácthẻ<Font>đểđịnhdạngmàuchữchovănbảnmớithêmvào,sửdụng\nthẻ<BR>đểxuốngdòngmới.Thêmvàocôngthức“H2SO4”,“n2-3n+1”,…\nBÀI2:THAOTÁCVỚIPHẦNMỀMTẠOWEB\nMụctiêuthựchiện:\n-ThiếtkếđượcmộtWebSitetrênmộtphầnmềmtạoWebMacromediareamweaver\nMXđápứngyêucầuđặtra.\n-Tổchứcđượchệthốngthưmụctậptinlưutrênđĩa.\n-Nhúngđượcâmthanh,hìnhảnhvàotrongmộttrangWeb\n2.1GiớithiệuvềIIS-InternetInformationServices\n2.1.1IISlàgì?\nMicrosoftInternetInformationServiceslàmộtứngdụngserverchuyểngiaothôngtin\nbằngviệcsửdụnggiaothứcchuyểnđổisiêuvănbảnHTTP.\n2.1.2IIScóthểlàmđượcgì?\nXuấtbảnmộtHomepagelênInternet.\nTạocácgiaodịchthươngmạiđiệntửtrênInternet(Quátrìnhgiaodịch,đặthàng…)\nChophépngườidùngtừxacóthểtruyxuấtCơsởdữliệu(DataBaseRemote\nAccess)\n2.1.3IIShoạtđộngnhưthếnào?\nHình2.1:môhìnhhoạtdộngISS\nWeb,vềcơbảnthựcsựlàmộthệthốngcácyêucầu(Request)vàcácđápứng\n(Response).IISphảnhồilạicácyêucầuđòithôngtincủaWebBrowser.IISlắngnghecác\nyêucầuđótừphíaUserstrênmộtmạngsửdụngWWW.\n2.1.4CàiđặtIIS\nĐốivớiWindowXP:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 27,
    "text": "27-VàoStartControlPanelAddorRemovePrograms\n-ChọntabAdd/RemoveWindowsComponentsđánhdấuvàoôInternetInformation\nServices(IIS).\nHình2.2:wndowsCompnentsWinzard\n-NhấnnútDetails…,cửasổhiệnra,đánhdấumụcFrontpage2000ServerExtensions\nvàWoldWideWebService,nhấnOK.\nHình2.3:internetInformationServices\n-NhấnNextđểcàiđặtFinishhoàntất.\n2.2XâydựngWebSitebằngphầnmềmMacromediaDreamweaverMX2004"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 28,
    "text": "282.2.1TổngquanvềMacromediaDreamweaverMX2004\nDreamweaverlàmộtchươngtrìnhVisualEditorchuyênnghiệpđểtạovàquảnlýcác\ntrangweb.Dreamweavercungcấpcáccôngcụphácthảotrangwebcaocấp,hỗtrợcáctính\nnăngDHTML(DynamicHTML)màkhôngcầnviếtcácdònglệnhgiúpcácbạnkhôngbiếtlập\ntrìnhwebcũngcóthểthiếtkếđượccáctrangwebđộngmộtcáchdễdàng,trựcquan.Với\nDreamweaverbạncóthểdễdàngnhúngcácsảnphẩmcủacácchươngtrìnhthiếtkếweb\nkhácnhưFlash,Fireworks,Shockwave,Generator,Authorwavevv...\nVớiDreamweaverbạncóthểquảnlýcácLocalvàRemotesitegiúpchoviệcquảnlý\ncáctrangwebtrongcácsitecụcbộvàcácwebsiteđiềukhiểntừxacóthểđồngbộ.\nNgoàiraDreamweavercònchophépbạnchỉnhsửatrựctiếpHTML.VớiCodeView\nbạncóthểnhanhchóngbổsunghoặcxóabỏmộtHTMLmàkhôngcầnthoátkhỏicửasổtài\nliệu.ChếđộsoạnthảotrangwebbằngHTMLgiúpcácbạncóthểthiếtkếtrangtrựctiếp\nbằngngônngữHTML.\nDreamweavercònhổtrợcácHTMLStylesvàCascadingStyleSheetgiúpbạnđịnh\ndạngtrangwebnhằmtăngtínhhấpdẫnkhiduyệtcáctrangwebnày.\nVùnglàmviệccủachươngtrìnhDeamweaverrấtlinhđộngvàdễsửdụnggồmcác\nthànhphầnnhưsau:Document,Launcher,ObjectPalette,PropertyInspector,Floating\nPalettevàcáccontextmenu(menungữcảnh)...đểmởcácthànhphầnnàybạncóthểvào\nmenuWindow->chọntêncủathànhphầncầnhiểnthị.\nHình2.4:menungữcảnh"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 29,
    "text": "29+Launcher:cóchứacácnútđểmởvàđóngcácInspectorvàcácPaletteđượcdùng\nthườngxuyênnhất.BạncũngcóthểtruycậpLaunchertạiMiniLaunchertạigócphảicủa\ncửasổDocument.\nHình2.5:ObjectPalette\n2.2.2Làmviệcvớivănbản\nĐặtcontrỏtạivịtrímuốnnhậpvănbảntrongcửasổtàiliệu(Document)sauđónhậpdữ\nliệuvào.ĐểnhậpvănbảncótiếngviệtbạnhãycàiđặtcácthamchiếuFontnhưsau:\na)CàiđặtcácthamchiếuFonts/Encoding.\nSửdụngcácthamchiếuFonts/Encodingđểcàiđặtviệctạomãfontmặcđịnhdànhcho\ncáctrangtàiliệumớivàcàiđặtcácfontmàDreamweaverdùngđểhiểnthịmỗimộtchếđộ\ntạomãfont.Việctạomãchotàiliệu(trangweb)sẽxácđịnhcáchmàtrangwebđượchiển\nthịtrongtrìnhduyệt.ChọnEdit->Preferences,chọnmộtchếđộtạomãtừselectboxDefault\nEncoding.Chếđộtạomãmặcđịnhđượclưucùnglúcvớitàiliệutrongthẻ<META>được\nchènởđầutàiliệu.VídụnếubạnchỉđịnhWesternEuropeanthìthẻ<meta>phátsinhbên\nsourcecodengônngữHTMLlà:<metahttp-equiv=\"Content-Type\"content=\"text/html;\ncharset=iso-8859-1\">.ĐểchỉđịnhcácfontdùngchoUSEnglishvàtấtcảcácthứtiếngTây\nÂuhãychọnesternEuropean.ĐểcàiđặtfontchocácthứtiếngViệthãychọnVietnamese."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 30,
    "text": "30\nHình2.6:Đểcàiđặtfontchocácthứtiếng\nHãychọnkiểutạomãchẳnghạnnhưWesternEuropeanhoặcVietnamesetừFonts.\nTạiProportionalFontchọnfontvàkíchthướchiểnthịmặcnhiênkhisoạnthảotrangweb\n(vídụ:TimesNewRoman,size=12pt).\n+FixedFontlàfontmàDreamweaverdùngnhằmhiểnthịvănbảnbêntrongcácthẻ\n<PRE>,<CODE>,<TT>\n+CodeViewlàfontđượcdùngchotấtcảcáctext(vănbản)bêntrongHTML\nHình2.7:chọnfont\n+TạihộpthoạiPropertyInspectortạiselectboxDefaultfonthãychọnEditfontlisthoặc\nchọnmenuText->Font->EditFontlistsẽxuấthiệnhộpthoạisau:\nHình2.8:EditFontList\n+TạiAvailableFontshãychọnfontsthườngdùng(vídụfontTimesNewRoman)sauđó\nClicknút<<.FontsđượcchọnsẽhiệntronghộpChosenFontsvàsẽhiệntronghộpdanh"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 31,
    "text": "31sáchcácFontListthườngdùng.Lưuý,hiệnnaycácFontUnicodeđượclàmchuẩncho\nInternet,tạiselectboxchọnfonttronghộpthuộctínhPropertyInspectorthìmớiphátsinh\nđượcthuộctínhface<fontface=\"TimesNewRoman\"...>thìmớihiệnđượcfonttiếngviệt\nkhiduyệttrangwebtrongtrìnhduyệt.\nHình2.9:hìnhminhhoạ\nLưuý:BạnnênEditFontListmỗilầnmộtfontvàbạnthựchiệnviệcEditFontlistnày\nchocácfontbạnthườngdùng.\nb)Địnhdạngvănbản:\nBạncóthểđịnhdạngtexttrongcửasổtàiliệuDocumentbằngcáchcàiđặtcácthuộc\ntínhtronghộpPropertyInspector.Đểđịnhdạngvănbảntrướctiênhãybôiđenvănbản\nmuốnđịnhdạngrồisauđóchọncácthayđổitrênhộpthuộctínhPropertyInspector.Nếu\nhộpPropertyInspectorkhôngmởhãychọnmenuWindow->Properties\nHình2.10:địnhdạngvănbản\nLưuý:TronglúcđịnhdạngvănbảnbạncóthểsửdụnghộpPropertyInspectorhoặc\nbạncóthểsửdụngmenuTextđểđịnhdạngvănbảnvìcónhữngchứcnăngmàhộpthuộc\ntínhPropertyInspectorkhôngxâydựngsẵnchobạn(vídụnhưvănbảnđượcgạch\ndưới,gạchnganghoặcbạncóthểsửdụngchếđộthiếtkếwebbằngngônngữHTMLđể\nthiếtkếthêmnhữngthuộctínhcầnthiết(vídụnhưbạnmuốnvănbảnđựoccanhđều<p\nalign=\"justify\"...>\nNếubạnđangthaotácvớicácBulletshayNumberingbạncóthểClicknútListItemtrên\nthanhPropertyInspectorđểcàiđặtmộtsốthôngsốsau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 32,
    "text": "32\nHình2.11:listPropertive\n+ChọnkiểuListTypelàBullethayNumbering,chọnkiểuStyle.Nếubạnđangthaotác\nvớinumberingbạncóthểchosốtăngtừmấytạiStartCount.TạiResetCounttobạncóthể\nnhậpvàogiátrịsốtrởvềmặcnhiên(thườnglà1).\nĐểhiệnchếđộthiếtkếtrangwebởngônngữHTMLbạncóthểclicknút<>ShowCode\nView.\nHình2.12:ShowCodeView\nc)Tạosiêuliênkết(Hyperlink)chovănbản:\nVớiDreamweaverbạncónhiềucáchđểtạosiêuliênkếtđếncáctrangwebkháchoặc\ncáctậptintàiliệu,hìnhảnh,âmthanh(Sound),Phim(Video)hoặccácchươngtrìnhcóthể\ntảixuống(Download).Thườngcócácloạisiêuliênkếtsau:\n1)InternalLink:LiênkếtđếncáctàiliệutrongcùngWebsite(LocalSite).\n2)ExternalLink:LiênkếtcáctàiliệubênngoàiLocalwebsite(vídụnhưlinktớicác\nWebServerkháctrênInternet,FTPServerkháctrênInternet,cácTelnetServer,cácNews\nServervv...)\n3)E-mailLink:tạomộtsiêuliênkếtchophépngườisửdụnggởiEmail.\n4)LinktoNameAnchors(còncóthểgọilàBookmark):Tạosiêuliênkếtnhảyđếnmột\nvịtrínàođótrongtrangwebhiệnhành."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 33,
    "text": "33\nHình2.13:cáchchọnfileliênkết\nNguyêntắcchungkhibạntạomộtsiêuliênkếtchovănbản(text),hìnhảnh(image),\nHotpotcủabảnđồhìnhảnh(hotpotofImagemap):hãychọnvănbảnhoặchìnhảnhhoặc\nHotpotmuốntạosiêuliênkếtsauđóclicknútBrowseForfile(tạoInternalLink)trênhộp\nthuộctínhPropertyInspectorcủađốitượngtươngứngđangchọn.\nKhibạnchỉđườngdẫntớitrangwebbạnsẽthấyđịachỉcủatrangwebnàyhiệntạiđịa\nchỉURLnhưhìnhvẽ.\nTạihộplinkcủahộpPropertyInspectorxuấthiệnđườngdẫncủatậptinbạnđangliên\nkếttớitheokiểucụcbộ(trênđĩacứng)nhưngnếubạnđãsavelạicótênbạnsẽcókiểu\nđườngdẫnlàtươngđối.Bạnnênlưutrangweblạitrướckhitạosiêuliênkếtđểkhônghiện\nthôngbáonhắcnhởmỗikhitạosiêuliênkết.\nHình2.14:PropertyInspector\nBạncóthểđịnhTargetchosiêuliênkết(nơihiểnthịnộidungcủatrangwebkhiclick\nvào).\nTacócácloạiTargetsau:\n•_bank:nộidungtrangwebsẽhiệnraởcửasổmới(NewWindow)."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 34,
    "text": "34•_parent:nộidungsẽhiệnởtrangcha\n•_self:nộidunghiệnởtranghiệnhành\n•_top:nộidunghiệnởtoàntrang(Wholepage)\nChúý:NếubạntạomộtExternallinktớimộtWebServer,FTPServer,NewsServervv..\nbạnkhôngcầnClicknútBrowseForFilemàhãynhậpvàođịachỉcủaServer(máychủ)mà\nbạnđangmuốnliênkếttới.\nVídụ:http://www.dalattech.edu.vn/,http://www.dalat.gov.vn/rauhoadl,vv...\nHình2.15:hìnhminhhoạ\nTạosiêuliênkếtđểReplyEmail:\n(vídụ:dinhnamit@yahoo.com,admin@dalattech.edu.vn)\n+HãyClicknútInsertEmailLinkbạnsẽthấyhộpthoạisau:\nHình2.16:EmailLink\n+TạihộpthoạiTexthãynhậpvàochuổihiểnthị.\n+TạihộpE-mail:hãynhậpvàođịachỉEmailmuốngởiđến.\n2.2.3Làmviệcvớicáchìnhảnh\nVớiDreamweaverbạncóthểchèncáchìnhGIFvàJPGvàotrongtrangwebhoặccóthể\nđịnhảnhnềnchocáctrangwebhoặcảnhnềnchocáclớp(Layer).\nĐểchènhìnhảnhvàotrangweb:đặtcontrỏtạivịtrímuốnchènảnh,chọnmenuInsert\n->ImageshoặcClicknútInsertImagetrênhộpObjectPalletesauđóchỉđườngdẫnđến\nhìnhảnhmàbạnmuốnchènvào."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 35,
    "text": "35\nHình2.17:Đểchènhìnhảnhvàotrangweb\nSaukhichènảnhvàođươctrangWebbạncóthểClickchuộtchọnảnhđểxuấthiệnhộp\nthuộctínhPropertyInspectorđểđịnhnghĩacácthuộctínhcủahìnhảnh.\nHình2.18:hộpthuộctínhPropertyInspector\nĐểđịnhđượcbộsoạnthảoảnhbênngoài(ExternalImageEditor)khibạnnhấpnút\nEditbạnhãyvàomenuEdit->PreferenceschọnExternalcodeeditor."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 36,
    "text": "36\nHình2.19:fileTypes/Editors\nTronghộpExtensionshãychọnkiểuảnhmàbạnmuốnchỉnhsửahoặcbạncóthểClick\ndấu(+)đểthêmmộtkiểuảnhmàbạnmuốnchỉnhsửa,nhấpnút(+)bênEditorssauđóbạn\nhãychỉđườngdẫnđếntậptinchươngtrìnhsoạnthảoảnh(vídụnhưphotoshop.exe)\nTạobảnđồhìnhảnh(ImageMap/Hotpot):\nHãychọnảnhsauđóchọncôngcụvẽHotpotvuông(RectangularHotpotTool),tròn\n(OvalHotpotTool)haybấtkỳ(PolygonHotpotTool)trênhộpPropertyInspectorcủahình\nảnhsauđóvẽmộttọađộtrênảnhmàbạnmuốntạođócósiêuliênkếtsẽxuấthiệnhộp\nthuộctínhcủaHotpotnhưhìnhvẽ.\nHình2.20:Tạobảnđồhìnhảnh\nHãyClicknútBrowseForFileđểchỉđườngdẫnđếntậptincầnLinktới,nếubạnmuốn\ntạoExternalLinkthìnhãynhậpđịachỉcủaWebserverhayFTPServertạihộpLink.Nhập\nvàomộtchúthíchtrênđiểmHotpotkhimousedichuyểnquanótạiAlt.Bạncóthểchỉđịnh\nTargetchonộidungcủasiêuliênkết(thamkhảocácloạiTargetởphầntrên).\nTronglúcthaotácvớiHotpotbạncóthểdùngbiểutượngmũitênđểchọnHotpotđểdi\nchuyểnhaythayđổikíchthướctọađộcủađiểmsiêuliênkết.\nChúý:NếubạnsửdụngnhiềubảnđồhìnhảnhtrongcùngmộttrangWebthìbạnphải\nchắcrằngmỗibảnđồphảicómộttênduynhất.BạncóthểđặttênbảnđồtạihộpTextbox\nMap."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 37,
    "text": "37TạoRolloverImage:\nRolloverImagelàmộthìnhảnhthayđổikhimousedichuyểnquanó.MộtRolloverchứa\n2hìnhảnh:\n+Ảnhsơcấp(PrimaryImage):làhìnhảnhđượchiểnthịkhitrangđầutiênđượcload.\n+Ảnhđảo(RolloverImage):làảnhsẽxuấthiệnkhimousedichuyểntrênảnhsơcấp.\nChúý:khibạntạomộtRolloverthìcảhaihìnhảnhphảicókíchthướcgiốngnhau,nếu\ncáchìnhkhôngcókíchthướcgiốngnhauthìDreamweavertựđộngđịnhlạikíchthướchình\nảnhthứhaiđểkếtvớicáctínhchấtcủahìnhảnhthứnhất.\nCáchtạo:\n+HãyđặtcontrỏtạivịtrímuốnchènRollover.\n+ChọnInsert->ImageObjects->RolloverImagetừmenuInserthoặcClicknútInsert\nRolloverImagetrênthanhObjectPalette,bạnsẽthấyxuấthiệnhộpthoạisau:\nHình2.21:InsertRolloverImage\n+TạiOriginalImagehãyClicknútBrowseđểtìmảnhgốc(PrimaryImage).\n+TạiRolloverImagehãyClicknútBrowseđểtìmảnhđảo(RolloverImage).\n+HãychọnPreloadRolloverImagekhibạnmuốnDreamweavertảitrướchìnhảnh\nRollovervàocachecủabộduyệtđểtăngnhanhtốcđộloadtrangweb.\n+TạiAlternatetext,hãynhậpchuỗivănbảnhiểnthịkhirêchuộtlênhìnhảnh.\n+TạiWhenClick,GoToURLhãyClicknútBrowseđểtìmtậptinmuốntạosiêuliênkết\nhoặcnhậpvàođịachỉURLtạitextboxnày.\nTạoNavigationBar:\nBạncóthểtạomộtNavigationbartheochiềunganghoặcchiềuđứngbằngcáchchọn\nmụcInsert->ImageObjects->NavigationBarhoặcClicknútInsertNavigationBartrên\nhộpObjectPallettesẽxuấthiệnhộpthoạisau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 38,
    "text": "38\nHình2.22:InsertNavigationBar\n+TrongtrườngElementNamehãynhậpvàotêncủaphầntửNavigationbar.\n+TạiUpImagehãynhấpBrowsevàchỉđườngdẫnđếnhìnhảnhđượchiểnthịbanđầu\n(vídụa1.gif).\n+TạiOverImagehãynhấpBrowsevàchỉđườngdẫnđếnhìnhảnhđượchiểnthịkhi\nmousedichuyểnquaảnh(vídụa2.gif).\n+TạiDownImagehãynhấpBrowsevàchỉđườngdẫnđếnhìnhảnhđượchiểnthịkhi\nmouseClickvàoảnh(vídụa2.gif,hoặcbạncóthểthiếtkếthêmmộtảnha3.gif).\n+TạiOverWhileDownImagehãynhấpBrowsevàchỉđườngdẫnđếnhìnhảnhđược\nhiểnthịkhimouseClickvàoảnhtronglúcdichuyểncontrỏlênhìnhảnhđó(bạncóthể\nkhôngcầnthiếtkếtrạngtháinày).\n+TạiWhenClicked,GotoURLhãyClicknútBrowseđểchỉđườngdẫnđếntậptinmà\nmàbạnmuốnLinktớihoặcnhậpvàođịachỉExternalURLmàbạnmuốnLinktới.\n+HãychọntùychọnPreloadImage.Nếubạnkhôngchọntùychọnnàysẽtạorasự\nchậmtrễkhimouseOverquaảnh.\n+ShowdownImageInitially:Hiểnthịảnhởtrạngtháinhấnmousekhitrangvừamớitải\nxuống.\n+HãychọnkiểuNavigationbarnằmdọchayngangtạiInsert.\n+HãychọnUseTablesđểchèncácphầntửNavigationbartrongTable.\n+Hãynhấpnút+đểthêmmộtphầntửNavigationmớihoặcclicknút-đểloạibỏphầntử\nNavigationđangchọn.\n+ĐểsắpxếpcácphầntửbạncóthểClicknútmũitênlênhayxuống.\n*Lưuý:BạnchỉchènđượcmộtNavigationBartrongcùngmộttrangWeb."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 39,
    "text": "39SaukhitạoxongđượcNavigationBarnếumuốnchỉnhsửalạibạnhãychọnMenu\nModify>Navigation.\n2.2.4Làmviệcvớibảng(Table)\nTablelàmộtcôngcụthiếtkếWebnhằmsắpxếpdữliệuvàcáchìnhảnhtrênmộttrang\nHTML.VớiDreamweaverbạncóthểdễdàngchuyểnđổigiữamộtthiếtkếTablevàthiếtkế\nLớp.CảTablevàlớpđềuchophépbạnđiềukhiểnvịtrícủacácphầntửcủatrangWeb\nnhưngcáclớpthìkhôngđượchổtrợtrongcáctrìnhduyệttừ3.0vàtrướcđó.\nChènTable:\nĐểchènTablebạnchọnmenuInsert->TablehoặcClicknútInsertTabletrênthanh\nObjectPalettebạnsẽthấyhộpthuộctínhcủaTablenhưsau:\nHình2.23:table\n+TronghộpRowshãynhậpvàosốhàngcủaTable.\n+TronghộpColumnshãynhậpvàosốcộtcủaTable.\n+TronghộpCellPaddinghãychỉđịnhkhoảngcáchtừTextsovớicạnhcủaTable.\n+TronghộpCellSpacinghãynhậpvàokhoảngcáchgiữacácCell.\n+TronghộpTablewidthhãynhậpvàochiềurộngcủaTabledướidạngsốPixelhoặc\ndướidạngmộttỷlệphầntrămcủacửsổtrìnhduyệt.\n+TronghộpBorderthicknesshãynhậpvàođườngviềncủaTable,nếubạnmuốnTable\nlàdạnglướibạnhãynhậpvàogiátrịlà0.\nĐịnhdạngTable:\nĐểđịnhdạngTablebạnhãydichuyểnMousevàocáccạnhcủanósauchoxuấthiện\nđượchìnhmũitên4đầusauđóClickchọnTablebạnsẽthấyxuấthiệnhộpthuộctínhcủa\nTablenhưhìnhvẽ:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 40,
    "text": "40\nHình2.24:ĐịnhdạngTable\nĐịnhdạngCell:\nĐểđịnhdạngcellbạnhãyDragchọncácCellmuốnđịnhdạngbạnsẽthấyxuấthiệnhộp\nthuộctínhcủaCellnhưsau:\nHình2.25:ĐịnhdạngCellbằngthanhcôngcụ\nChúý:KhibạnđịnhdạngCellngoàicácthuộctínhcủaCelltrênhộpthuộctínhbạncó\nthểchọncácCellmuốnđịnhdạngbằngcáchDragmousechọnsauđóClickphímphải\nchuộtvàocácCellđãchọnsauđóchọnmenuTablevàchọncáclệnhthíchhợptrênmenu\nnày."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 41,
    "text": "41\nHình2.26:ĐịnhdạngCellbằngchuột\nĐểchỉnhsửaTablehoặcCellbạncòncóthểchọnmenuModify->Tablebạncũngthấy\nđượcmenunhưhìnhtrên.\nHình2.27:ĐểchỉnhsửaTablehoặcCell\nĐịnhdạngTabletheocácmẫuchotrước(PresetDesign)\nHình2.28:ĐịnhdạngTabletheocácmẫuchotrước\n1)ChọnbảngsauđóchọnmenuCommand->FormatTablebạnsẽthấyxuấthiệnnhiều\nmẫutablechosẵnbạnhãychọnmộttrongnhữngmẫunày."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 42,
    "text": "42\nHình2.29:trongFormatTable\n2)TronghộphộithoạimớixuấthiệnbạnhãychọnmộtkiểuTablebêndanhsáchbêntráivà\nbạncũngcóthểthayđổicácthuộctínhtùychọnchoTable.\nSắpxếpdữliệuchoTable:\nHình2.20:SắpxếpdữliệuchoTable\n•ChọnTablesauđóchọnmenuCommand->SortTablebạnsẽthấyhộpthoạisauđây:\nHình2.21:SortTable"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 43,
    "text": "43•ChọncộtđểphânloạitạiSortBy\n•TạiOrderchọnkiểusắpxếptheoAlphabehaytheosốvàchọnkiểusắpxếptăngdần\nAscendinghaygiảmdầnDescending\nMacromediaDreamweaver4.0MediaspaceClub#14\n•Đểthựchiệnviệcsắpxếpthứcấptrêncộtkháchãychỉđịnhcáctùychọnphânloại\ntrongmenuThenby.\n•TùychọnSortincludethefirstrowchophépbạnsắpxếpluôndòngđầumàthường\nlàtiêuđềcủaTablekhôngđượcdichuyển,bạnđừngchọnoptionnàynếuTablecótiêuđề.\nChènTabletrongTable:\nMộtTablecóthểnằmtrongmộtTablekhác,tuynhiênchiềurộngcủanóbịgiớihạnbởi\nchiềurộngcủaôquađóxuấthiện.\nHình2.22:ChènTabletrongTable\nĐểthựchiệnbạnlàmnhưsau:\n+ĐầutiênbạnhãychènvàotrangWebmộtTablebằngmenuInsert->TablehoặcClick\nnútInsertTabletrênhộpObject.HãyđặtvịtrícontrỏtạiômàbạnmuốncóTablethứ2rồi\ncũngchọnInsert->Table.\nBàithựchànhsố2:\nSửdụngMacromediaDreamweaverđểthựchiệnbàithựchànhnày.\n1.SửdụngMacromediaDreamweaverđểthiếtkếlạicáctrangWebcủabàitập1.\n2.TạohaitrangHTMLtênlàa.htmvàb.htm.\na)Trongtranga.htmtạoliênkếtđếntrangb.htm.\n<HTML>\n<BODY>\n<P>ĐâylàtàiliệutrangA\n<BR>\n<AHREF=\"b.htm\">Nhấnvàođâyđểmởtrangb</A>\n</BODY>\n</HTML\nb)Trongtrangb.htmtạoliênkếttrởlạitranga.htm.\nCácemtựhoànthànhbàitậpnày!\n3)TạotrangHTMLvớinộidungsau(nộidungởđâychỉmangtínhchấtminhhọa,họcviên\ncóthểgõnộidungbấtkỳ):"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 44,
    "text": "44-Table:bảngTrongchươngtrìnhquảnlýcơsởdữliệuliênquan,đâylàcấutrúccơ\nsởcủaviệclưutrữvàhiểnthịdữliệu,trongđócáckhoảnmụcdữliệuđượcliênkếtvới\nnhaubởicácquanhệhìnhthànhdoviệcđặtchúngtheocáchàngvàcáccột.Cáchàngứng\nvớicácbảnghidữliệucủacácchươngtrìnhquảnlýdữliệuhướngbảng,vàcáccộtthìứng\nvớicáctrườngdữliệu.\n-Hypertext:vănbảncủamộttàiliệutruytìmkhôngtheotuầntự.Ngườiđọctựdo\nđuổitheocácdấuvếtliênquanquasuốttàiliệuđóbằngcácmốiliênkếtxácđịnhsẵndo\nngườisửdụngtựlậpnên.Trongmộtmôitrườngứngdụnghypertextthựcsự,bạncóthểtrỏ\nvàobấtkỳtừnàocủatàiliệuvàsẽtứckhắcnhảyđếncáctàiliệukháccóvănbảnliênquan\nđếnnó.\n-Multimedia:đaphươngtiện,đamôitrường,đatruyềnthôngMộtphươngphápgiới\nthiệuthôngtinbằngmáytính,sửdụngnhiềuphươngtiệntruyềnthôngtinnhưvănbản,đồ\nhoạvàâmthanh,cùngvớisựgâyấntượngbằngtươngtác.\n-WorldWideWeb-WWW:TrongcácmáytínhcócơsởUNIXvàđượcnốivới\nmạngInternet.Ðâylàmộthệthốngdùngđểtruytìmvàphụchồicáctàiliệuhypertextthực\nhiện.Ðượcxâydựngđầutiênởmộtphòngthínghiệmvậtlý,WWWthườngxuyênnhận\nđượccácthôngtinbổsungnhờnhữngngườisửdụngđónggópthêmcáctàiliệuđãđược\nđánhchỉsố.\n-FileTransferProtocol-FTP:địnhướctruyềntệp,giaothứctruyềntệp.Trong\ntruyềnthôngkhôngđồngbộ,đâylàmộttiêuchuẩnnhằmbảođảmtruyềndẫnkhôngbịlỗi\nchocáctệpchươngtrìnhvàdữliệuthôngquahệthốngđiệnthoại.ChươngtrìnhFTPcũng\nđượcdùngđểgọitênchođịnhướctruyềntệpUNIX,mộtđịnhướchướngdẫnviệctruyền\ndữliệu.\n-Internet:Mộthệthốnggồmcácmạngmáytínhđượcliênkếtvớinhautrênphạmvi\ntoànthếgiới,tạođiềukiệnthuậnlợichocácdịchvụtruyềnthôngdữliệu,nhưđăngnhậptừ\nxa,truyềncáctệptin,thưtínđiệntử,vàcácnhómthôngtin.\n4)TạobảngdanhmụcđểliênkếtđếncácphầncủatrangWebtrên.\nTable\nHypertext\nMultimedia\nWorldWideWeb–WWW\nFileTransferProtocol–FTP\nInternet\n………………………………\n………………………………"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 45,
    "text": "45\nBÀI3:\nĐINHDẠNGVĂNBẢNVÀTẠOẢNHCHOTRANGWEB\nMụctiêuthựchiện:\nHọcxongbàinàyhọcviênsẽcókhảnăng:\n-TrìnhbàytrangWeb\n-Địnhdạngvàthiếtlậphiệuứngcácđoạntext\n-ChènhìnhảnhvàxửlýảnhtrêntrangWeb\n3.1Giớithiệu\nĐểtrangWebthêmsốngđộng,cácnhàthiếtkếthườngđưavàotàiliệuHTMLcủamình\nnhữnghìnhảnhmangtínhchấtquảngcáo,trangtrí,cũngnhưnhữngthôngtinmàhọcần\ncungcấpchongườisửdụng.Hiệnnay,hailoạiảnhđượchỗtrợvàđọcđượcbởitrìnhduyệtlà\nGIFvàJPEG.Cácbạnsẽđượctìmhiểurõhơnvềđặcđiểmcủahaikhuôndạngảnhnàyở\nphầndướiđây.Trongbàinày,chúngtasẽtìmhiểuvềcáchđịnhdạngvănbảnvàtạoảnh\nchotrangwebtrongmôitrườngProntPage.\n3.2CácloạiảnhđượchỗtrợtrongHTML\nCácảnhtrêncáctrangWebphảicóđịnhdạnghoặclàGraphicsInterchangeFormat(GIF)\nhoặclàJointPhotographicExpertGroupformat(JPEG).FrontPagechophépimportcácảnh\ntheocácđịnhdạngsau:GIF,JPEG(standardandprogressive),BMP(WindowsandOS/2),TIFF,\nTGA,RAS,EPS,PCX,vàWMF.Khiđó,FrontPagechuyểnđổicácảnhđượcimportedthành\nảnhGIF(chocácảnhchứatới256màu)hoặcảnhJPEG(chocácảnhchứatrên256màu)khi\ntrangđượclưutrữtrongFrontPagewebhiệnthời.\n3.3Chènmộthìnhảnh\n3.3.1Chènảnhtừmộtfile\nCóthểchèncácloạiảnh:GIF,JPEG,BMP(WindowsandOS/2),TIFF,TGA,RAS,EPS,\nPCX,vàWMF.KhichènmộtảnhkhôngthuộcđịnhdạngGIFhoặcJPEG,nótựđộng\nchuyểnthànhảnhGIF(đốivớiảnhmàu8bitshoặcíthơn)hoặcảnhJPEG(đốivớicácảnh\nmàulớnhơn8bits).\n1.TrongFrontPageEditor,chọntrangmuốnchènảnh.\n2.ChọnInsert/Picture.XuấthiệnhộphộithoạiPicture:\n3.KíchnútFromFile\n."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 46,
    "text": "46Hình3.1:Chènảnhtừmộtfile\n4.TronghộphộithoạiSelectFilesửdụnghộpLookInvàhộpliệtkêcácfilesvàcác\nfoldersđểtìmtớicácfilevàfolderchứaảnh.ChọnloạifiletừhộpFilesofType.Chọnảnh\nmuốnchènvàkíchOK.\n3.3.2ChènảnhtừFrontPagewebhiệnthời\nCácloạiảnhđượcphépchèn:GIF,JPEG,BMP(WindowsandOS/2),TIFF,TGA,RAS,\nEPS,PCX,vàWMF.KhichènảnhkhôngthuộcloạiGIFhoặcJPEG,nótựđộngchuyển\nthànhảnhGIF(đốivớiảnhvớibitsmàuhoặcnhỏhơn)hoặcảnhJPEG(đốivớiảnhlớnhơn\n8bitsmàu).\n1.TrongEditor,kíchtrangmuốnchènảnh.\n2.ChọnInsert/Picture.\n3.TronghộphộithoạiPicture,chọnảnhmuốnchèn.\n4.KíchOK.\n3.3.3ChènảnhtừWorldWideWeb\nKhichènảnhtừWorldWideWeb,ảnhluônluônđượclấyvềtừvịtríxácđịnhcủanó.\nChúý:\nNếumáytínhcủabạnđượcđặtsaumộtfirewall,đầutiênbạnphảixácđịnhproxyserver\ncủamìnhtrongmụcProxiescủahộphộithoạiOptionstrongcửasổFrontPageExplorertrước\nkhibạncóthểchènảnhtrựctiếptừWorldWideWeb.\nTrongFrontPageEditor,đặttrỏtexttạinơimuốnchènảnh.\n1.ChọnInsert/Picture.\n2.KíchnútWorldWideWeb.TrìnhduyệtWebđượcmở.\n3.TrongtrìnhduyệtWeb,gõvịtrívàtêncủaảnhbạnmuốnchèn(vídụnhư,\nhttp://www.microsoft.com/sample.gif)vàấnENTERđểhiệnảnh.\n4.QuayvềhộphộithoạiPicturevàkíchOKđểchènảnh.\n3.3.4Chènclipart\n1.FrontPagecóMicrosoftClipGallery,làcôngcụđểxem,chènclipart,pictures,\nsounds,videoclips,vàảnhđộng(animations).\n2.TrongFrontPageEditor,kíchtrangbạnmuốnchènclipart.\n3.ChọnInsert/ClipartđểmởMicrosoftClipGallery.\n4.TrongClipGallerychọnảnh,picture,soundfile,hoặcvideo,vàkíchInsert.\n3.3.5Chènmộtvideoclip\nFrontPagecóhaiphươngphápđểchènmộtvideoclipvàotranghiệnthời.\nGhichú:NếubạnđãcàiđặtMicrosoftInternetExplorer,bạncóthểlậptứcxemtrước\nvideoclipbằngcáchchọnmụcPreviewtrongFrontPageEditor.\n1.TrongFrontPageEditor,chọnInsert/ActiveElements/Video.\n2.TronghộphộithoạiVideo,địnhvịvideobạnmuốnchèntừFrontPagewebhiệnthời,\ntừWorldWideWeb,hoặchệthốngfilecủabạn.NếubạnđãcàiMicrosoftOffice\n2000,kíchClipArtđểchènvideocliptừMicrosoftClipGallery."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 47,
    "text": "473.KíchOK.\n3.3.6CáchchènmộtvideocliptừMicrosoftClipGallerycủaMicrosoftOffice.\n1.TrongFrontPageEditor,chọnInsert/ClipArt.\n2.ChọnmụcVideos.\n3.Chọnvideoclipmuốnchèn.\n4.KíchInsert.\n3.4Sửaảnh\nLàmmộttrongcáccáchsau:\n-TừFrontPageEditorhoặcExplorer,kíchđúpảnhcầnsửa.\n-TrongFrontPageEditor,chọnảnhvàsửdụngbấtkìlệnhsửaảnhnàotrênthanh\ncôngcụpicture.\nCáchsửdụngcácnúttrênthanhcôngcụPicture\n-NútBevel\n:đặtgócnghiêngchoảnhtrongkhônggianbachiều.\n-NútText\n:chèntextchoảnh.NếulàảnhJPEG,FrontPageEditornhắcbạn\nchuyểnthànhảnhGIF,vìtextkhôngđượchỗtrợtrênảnhJPEG.NếuFrontPage\nchuyểnkiểuảnh,sốmàucủaảnhcóthểbịgiảmvàkíchthướcfilecóthểlớnhơn.\nSauđó,gõtexttronghìnhchữnhậttrênảnh.Cóthểthayđổikíchthướcmiềntextvà\ndichuyểnnótớicácvịtríkhácnhưcácđốitượngđồhoạthôngdụng.Việcchèntext\nvàoảnhkhônglàmthayđổifileảnhtrongFrontPagewebcủabạn.\n-NútMoreContrast\n:tăngđộtươngphảncủaảnh\n-NútLessContrast\n:giảmđộtươngphảncủaảnh.\n-NútMoreBrightness\n:tăngđộsángcủaảnh.\n-NútLessBrightness\n:giảmđộsángcủaảnh.\n-NútBlackandWhite\n:chuyểnthànhảnhđentrắng.\n-NútCrop\n:dùngđểcắtxénảnh.FrontPagehiệnhìnhchữnhậtbaoquanhmột\nphầnảnh.CóthểthayđổikíchthướchìnhchữnhậtvàấnEnter.\n-NútFlip\n:đểlậtdọcảnh.\n-NútRotateLeft\n:quayảnh900ngượcchiềukimđồnghồ.\n-NútRotateRight\n:quayảnh900theochiềukimđồnghồ.\n-NútReverse\n:đểlậtngượcảnh.\n-NútWashout\n:đểgiảmđộtươngphảnvàđộsángcủaảnh.Thườngđượcdùng\nkhitạoảnhnềnchotrang.\n-NútRestore\n:đểphụchồilạiảnhcũ."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 48,
    "text": "48-Thayđổicáchsắpđặtảnh\n1.TrongFrontPageEditor,chọnảnhtrêntrang,sauđóchọnEdit(hoặcshortcut\nmenu)/PictureProperties(Alt+Enter).Xuấthiệnhộphộithoại\nHình3.2:PictureProperties\n2.ChọnmụcAppearancecủahộphộithoạiPicturePropertiesvàchọncáclựachọnsau:\n-Alignment:điềuchỉnhcáchdónghàng\n-BorderThickness:điềuchỉnhđộdàykhung\n-HorizontalSpacing:điềuchỉnhkhoảngcáchngangsovớilềtráivàphảicủatrang.\n-VerticalSpacing:khoảngcáchdọcđiềuchỉnhsovớilềtrênvàdướicủatrang.\n3.KíchOK.\n-Tạothumbnailpicture:Thumbnailpicturelàphiênbảnnhỏcủaảnhtrêntrang,chứa\nhyperlinkvớikíchthướcthậtcủaảnh.\n-TrongFrontPageEditor,chọnảnh.\n-ChọnTools/AutoThumbnail(Ctrl+T).\n-Tuỳbiếnvideoclip:Dùngthủtụcnàyđểtuỳbiếnvideocliptrêntrangkíchhoạtkhixem\ntrêntrìnhduyệtWeb.\nGhichú:đểsửanộidungcủavideo,kíchđúpđểmởnótrongvideoeditorđượccàitrong\nmáytínhcủabạn.Nếutrongmáytínhkhôngcàivideoeditor,thìkhôngthểsửavideo.\n1.TrongFrontPageEditor,chọnvideoclipmuốntuỳbiếnvàchọnEdit/Picture\nProperties."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 49,
    "text": "49\nHình3.3:videoPictireproperties\n2.TronghộphộithoạiPictureProperties,kíchmụcVideovàchọncáctuỳchọn:\n-NếumuốnvideochạyvớinútVCRchophépngườisửdụngđiềukhiểnplayback,chọn\ncheckboxShowControlsinBrowser.\n-ChỉđịnhsốlầnvideolặplạibằngcáchgõsốtrongtrườngLoophoặcchọncheckbox\nForeverđểtiếptụcchơi.\n-ChọntuỳchọntrongmụcStart:OnFileOpenkhởitạovideokhitrangđượcgọitrong\ntrìnhduyệtWebcủangườisửdụng;OnMouseOverkhởitạovideokhingườisửdụngdi\nchuyểnchuộttrênvideo.\nGhichú:NếubạnđãcàiđặtMicrosoftInternetExplorer,bạnlậptứccóthểxemvideoclip\ntrêntrangkíchhoạtbằngcáchchọnmụcPreviewtrênFrontPageEditor.\n-Thayđổikíchthước(Resample)fileảnh\nResampleảnhlàthayđổikíchthướcfileảnhchohợpvớikíchthướchiệnthờicủanó.\nBạncóthểthayđổikíchthướcfilelớnhơnhoặcnhỏhơn.\n5.TrongFrontPageEditor,chọnảnh.\n6.Chọnmộttrongcácnútđiềukhiểnkíchthướcvàdãnrộnghoặccohẹpảnh.\n7.KíchnútResample\ntrênpicturetoolbar.\n-Thayđổikíchthướcảnh\nTrongFrontPageEditor,kíchảnhđểchọnnó.Xuấthiện8nútđiềuchỉnhảnh.Đểthay\nđổikíchthướcảnhlàmmộttrongcácviệcsau:\n-Đưatrỏchuộtvàomộttrongcácnútđiềukhiểnvàrêchuộtđểlàmthayđổikíchthước.\n-ChọnEdit/PictureProperties.TrongmụcAppearance,chọnSpecifySizetrongphần\nSize.Cóthểđiềuchỉnhkíchthướcảnhtheocácđiểm(pixels)hoặctheotỉlệphầntrăm.Để\nthayđổikíchthướcảnhtỉlệvớikíchthướccũ,chọnnútKeepAspecttrướckhithayđổicác\ngiátrịHeightvàWidth.\n-Tạoảnhtrongsuốt\nTạomàutrongảnhtrongsuốtthườngđượcápdụngchoảnhnềncủatrang.\n8.TrongFrontPageEditor,chọnảnh.\n9.KíchnútMakeTransparent\n.ContrỏchuộtbiếnthànhdạngMakeTransparent."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 50,
    "text": "5010.Trongảnh,kíchmàumuốnlàmchotrongsuốt.\n11.NếulàảnhJPEG,FrontPagenhắcbạnchuyểnthànhảnhGIFformat,vìsựchuyển\nthànhmàutrongsuốtkhônghỗtrợchoảnhJPEG.\n3.5Chuyểnđổiảnh\nChuyểnthànhảnhGIF\n12.TrongFrontPageEditor,chọnảnhmuốnchuyển\n13.ChọnEdit/PictureProperties.ChọnmụcGeneral:\nHình3.4:PictureProperties\n14.TronghộphộithoạipicturePropertieschọnGIFtrongphầnType.Nếuchọn\nInterlaced,ảnhsẽchuyểnthànhđịnhdạnginterlacedGIF.\n15.KíchOK."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 51,
    "text": "51\nHình3.5:greneralpicturepropertive\nChuyểnthànhảnhJPEG\n16.TrongFrontPageEditor,chọnảnhmuốnchuyểnđổi.\n17.ChọnEdit/PictureProperties.\n18.TronghộphộithoạiPictureProperties,chọnJPEGtrongphầnType.\n19.QualitylàIntegertrongkhoảng1-100.Qualitycàngtăng,độnénảnhcànggiảm\nlàmchofileảnhlớnnhưngchấtlượngcao.Qualitygiảm,độnéntănglàmgiảmkích\nthướcfilenhưngchấtlượngkém.GiátrịQualityngầmđịnhlà75.Đểthaychấtlượng\nảnhJPEG,thayđổigiátrịtrongtrườngQuality.\n20.TrongtuỳchọnProgressivePasseschọn0(zero)đểchỉđịnhJPEGchuẩn.Nếu\nchọnsốcaohơn,ảnhđượcchọnsẽchuyểnthànhdạngJPEGcao(progressive).\n21.KíchOK.\n3.6Cácchứcnăngkhác\n-ImportảnhvàoFrontPageweb\nKhiimportmộtảnhtứclàbạnđặtbảncopycủanóvàoFrontPagewebcủamình.Để\nimportnhanhmộthoặcnhiềuảnhvàoFrontPagewebhiệnthời,kéochúngtừdesktopcủa\nbạnvàoFolders,AllFiles,Navigation,hoặcHyperlinksviewcủaFrontPageExplorer.Để\nimportcácảnhvàodanhsáchimport,màtừđóbạncóthểđổitênvàimportchúngvào\nFrontPageweb.\nTrongFrontPageExplorer,chọnFile/Import.Xuấthiệnhộphộithoại:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 52,
    "text": "52\nHình3.6:Import\n-Đểbổsungảnhvàodanhsáchimport,kíchAddFile.TronghộphộithoạiAddFile\ntoImportList,sửdụnghộpLookInvàhộpliệtkêcácfilevàcácfoldersđểtìmnơilưutrữ\nảnh.ChọnảnhvàkíchOpen.\n-Đểbổsungtoànbộnộidungcủamộtfoldervàodanhsáchimport,kíchAddFolder.\nTronghộphộithoạiBrowseForFolder,tìmvàchọnfolder,kíchOK.\n-ĐểthayđổiURLcủabấtkìảnhnàotrướckhiimportnó,hoặcđổitên,hoặcthayđổi\nthưmụcchứaảnhtrênFrontPageweb,kíchEditURLđểmởhộphộithoạiEditURL.Trong\nFilelocationbêntrongtrườngFrontPageweb,gõURLtươngđốitớigốc(root)của\nFrontPagewebhiệnthời.Vídụ,NếubạngõURLpictures/picture.gif,ảnhsẽđượclưutrữ\nvàofolderảnhdướifoldergốccủaFrontPagewebhiệnthời.SaukhithayđổiURL,kíchOK.\n-ĐểimportảnhvàcácfileskháctrêndanhsáchimportvàoFrontPageweb,kíchOK.\nTrongkhicácfilesđangđượcimported,bạncóthểdừnglạibằngcáchkíchStop.\n-Chỉđịnhđộảnhcóđộphângiảithấp\nBạncóthểhiệnảnhcóđộphângiảithấptrongkhivẫndownloadảnhđẹptừWebserver.\nĐiềuđósẽtiếtkiệmthờigiankhikếtnốivớiInternet.\n22.TrongFrontPageEditor,chọnảnh\n23.ChọnEdit/PictureProperties.ChọnmụcGeneral.\n24.TrongvùngAlternateRepresentationscủahộphộithoạiPictureProperties,kích\nBrowsebêncạnhtrườngLow-Resvàlàmmộttrongcácviệcsau:\n-TronghộphộithoạiSelectAlternatePicture,chọnlow-resolutionpicturefiletobeused,\nvàkíchOK.\n-KíchnútWorldWideWebđểchuyểntớitrìnhduyệtWebngầmđịnhcủabạn.Tìmvị\ntrícủafileảnhcóđộphângiảithấptrênWorldWideWeb,sauđóquayvềFrontPagebằng\ncáchnhấntổhợpphímALT+TAB.\n-KíchnútFileđểchọnfileảnhcóđộphângiảithấptừổđĩacụcbộhoặctừmạng.\nNếubiếtđườngdẫnđầyđủvàtênfilecủafiletext,hãygõnótrongtrườngFileName.\n25.KíchOKđểđónghộphộithoạiPictureProperties.\nGhichú:đầutiênbạnphảitạophiênbảnphângiảithấpcủaảnhtrêntrangwebcủa\nmìnhtrướckhisửdụngchúng.Đểlàmđiềuđó,hãymởảnhtrongmộtphầnmềmpicture\neditingvídụnhưMicrosoftPictureComposervàgiảmmàutrênảnh.Bạnchỉđịnhsốmàuít\nhơnchophiênbảnphângiảithấpcủaảnh,nósẽhiệntrêntrìnhduyệtWebnhanhhơn.Vì\nảnhcóđộphângiảithấpđượcdùngđểgiữchỗ(placeholder)choảnhcóđộphângiảicao,\nbạnkhôngcầnthayđổiđộrộngvàđộcaocủaảnh."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 53,
    "text": "53-Đặthyperlinkngầmđịnhchoảnh\nHyperlinkngầmđịnhcủaảnhlàđíchcủahyperlinkđốivớibấtkìdiệntíchnàokhông\nchứahotspot.\n25.Kíchảnhđểchọnnó.\n26.ChọnEdit/PictureProperties.\n27.TrongmụcGeneral,chọnđíchcủahyperlinkngầmđịnhnhưURLtrongtrường\nLocationhoặckíchBrowseđểchỉđịnhđíchcủahyperlinkngầmđịnhtronghộphội\nthoạiCreateHyperlink.\n28.Saukhitạohyperlink,kíchOKđểđónghộphộithoạiPictureProperties.\n-Tạotextthaythếchoảnh\nTạotextthaythếchoảnhđểhiệnvịtrícủaảnhkhiảnhbịmờhoặckhôngthểhiệnđược\ntrêntrìnhduyệtWeb.MộtsốtrìnhduyệtWebhiệntextthaythếtrongkhiđanggọiảnh.\n29.TrongFrontPageEditor,chọnảnh.\n30.ChọnEdit/PictureProperties.ChọnmụcGeneral.\n31.TrongvùngAlternateRepresentationscủahộphộithoạiPictureProperties,gõtext\nthaythếtrongtrườngText.\nBàithựchànhsố3\n1.TạomớimộttrangHTMLbằngDreamweaver,lưulạitrangwebnàyvớitênBaiTho.htm\nlênmộtthưmụctrênổđĩa,thiếtlậptiêuđề,màunền,nhạcnềnchotrang.\n-ChènvàomộtMarqueeởđầutrangvớidòngchữĐÔIDÉP(tiếngViệtcódấu),thiếtlập\nkíchthước,chọnfont(VNI-),chọnmàusắcvàhướngdichuyểnchoMarquee.\n-Nhậpnộidungvàsửdụngcácthẻ<P>,<UL>,<OL>đểđịnhdạnhcácđoạnthơnhưsau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 54,
    "text": "54\n2.Sửdụngphầnmềmtạoảnhđộng(GifAminatorhoặcmộtphầnmềmtạoảnhkhác)đểtạo\nmộtảnhđộngvớinhiềuframevàlayer.Xuấtảnhvớiđịnhdạng.GIFvàchènảnhnàyvào\ntrangweb.\n--------------------\nBÀI4:LIÊNKẾT\nMụctiêu:\n-TạođượccácmớiliênkếttừmộttraqngWebnàyđếnmộttrangWebkhác\n-TổchứccácmốiliênkếtPictureBullets\nPlainBullets\nNumbers"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 55,
    "text": "554.1Kháiniệmvềsiêuliênkết\n-ĐặctrưngcơbảncủangônngữHTMLchínhlàtínhsiêuliênkết.Tínhsiêuliênkếtthể\nhiệnởtấtcảmọiloạitàiliệumàngườiđọctựdođuổitheocácdấuvếtliênquanquasuốttài\nliệuđóbằngcácmốiliênkếtxácđịnhsẵndongườisửdụngtựlậpnên.Mộtkháiniệmquan\ntrọngđượcsửdụngtrongliênkếtlàHypertext.\nTrongmộtmôitrườngứngdụnghypertextthựcsự,bạncóthểtrỏvào(highlight)bấtkỳ\ntừnàocủatàiliệuvàsẽtứckhắcnhảyđếncáctàiliệukháccóvănbảnliênquanđếnnó.\nCũngcónhữnglệnhchophépbạntựtạochoriêngmìnhnhữngdấuvếtkếthợpquasuốttài\nliệu.Cáctrìnhứngdụnghypertextrấthữuíchtrongtrườnghợpphảilàmvớimộtsốlượng\nvănbảnlớn,nhưcácbộtừđiểnbáchkhoavàcácbộsáchnhiềutập.\nTrongbàinàychúngtasẽtìmhiểuvềliênkếtquamôitrườngProntPage2002\n(ProntPageXP).\n4.2Tạosiêuliênkết\n4.2.1TạoBookmark\n-Chọnđốitượngcầnđặttên(lưuý,đốitượngởđâycóthểlàđốitựongTexthoặchình\nảnh,…).\n-VàomenuInsertBookmark,trongphầnBookmarknamenhậptênchođốitượng."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 56,
    "text": "56\nHình4.1:ĐặttênchođốitượngBookmark\n4.2.2Tạoliêuliênkết(Hyperlink)\n-Chọnđốitượngcầnliênkết\n-VàoInsertHyperlink(hoặcnhấnCtrl+Khoặcnhấnvàonútlẹnhcóhìnhquảcầu)\n-TạiphầnAddress,nhậpvàođịachỉURLhoặcchọntậptincầnliênkết.\nHình4.2:LiênkếttớimộtđịachỉURL\n-NếumuốnliênkếttớimộtBookmarktrongtrangwebvừatạothìnhấnvàonút\nBoomark…chọntênBookmark:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 57,
    "text": "57\nHình4.3:LiênkếttớimộtBookmark\n-NếutrangcósửdụngFramethìbạncóthểchỉđịnhcholiênkếtđượchiểnthịtrong\nphầnFramenàobằngcáchnhấnvàonútTagetframe,cửasổhiệnrachophéptachọncác\nthamsố:\nHình4.4:ChọnFramehiểnthị\n+SameFrame:tranghiểnthịđúngvớiframechứatrangcóchứađườnglink\n+WholePage:tranghiểnthịtoànbộcửasổ(khôngthuộcmộtframenào)\n+NewWindow:tranghiểnthịởmộtcửasốmới(khôngthuộcframenào)\n+ParentFrame:tranghiểnthịởframecha(baoframecóchứađườnglink)\n4.3XemmãHTMLcủasiêuliệnkết\nBâygiờchúngtahãyxemHTMLđãsinhranhữngthẻgìtrongnhữngcôngviệctavừa\nthựchiện,từđócácbạncóthểnắmbắtđượcnhữngđoạnmãchủyếutạonênsựsiêuliên\nkếtthúvịnày.\nNhưởtrên,chúngtađãtạoramộtbookmarktênlàcntt(ởnộidungCôngnghệthông\ntin)vàliênkếtđoạnvănbảnCôngnghệthôngtintớibookmarknày,HTMLđãsinhrađoạn\nmãvớithẻ<a>…</a>sau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 58,
    "text": "58<atarget=\"_self\"href=\"#cntt\">Côngnghệthôngtin</a>\n-NếumuốnliênkếtđếnmộtđịachỉURL,cácbạnchỉcầnthayđổithuộctínhhref=<địa\nchỉURL>.\n-Nếumuốnthayđổiframehiểnthị,chúngtathayđổithuộctínhtarget.\n-Ðôikhinộidungtrangwebdàivàchiếmnhiềutrangmànhình,nhưngnộidunglạicó\nmốiliênhệchặtchẽ,hayvì1lýdonàođómàtakhôngmuốntoànbộnộidungnàyđược\nchứatrongcùng1trangwebvàchiaranhiềutrang.Khiđótacầnđặtcáchyperlinkngay\nđầutrangwebđểkhicầnngườidùngcóthểclickvàođóđểđiđếnmộtđoạntưliệuhọquan\ntâmmàkhôngcầnphảikéoscrollbarđếnđoạnđó.\n-Ðịnhnghĩatag<A></A>nhưsau:\na)Ðịnhnghĩa1bookmarkvàhyperlinktrongcùngtrangweb:bookmarklàkỹthuật\nchỉđịnh1địnhdanh(đích)đểhyperlinknhảyđếnđầuđoạnvănbản.\n<Aname=\"tên\">chuỗikýtựđầuđoạnvănbản</A>\nVídụ:\n<Aname=\"Ndphần1\">Nộidungphần1</A>baogồmcácnộidungchitiếtsau...\nKhiđótrongphầnkhaibáohyperlinkbạnkhaibáotheocúphápsau:\n<ahref=\"#tên_của_bookmark_đã_khai_báo\">Chuỗihướngdẫnnhảyđếnđầuđoạncó\nbookmark=\"tên_của_bookmark_đã_khai_báo\"</a>\nVídụ:\n<ahref=\"#Ndphần1\">Xemnộidungphần1</a>\nb)Hyperlinkđếnmộttrangwebkhác:\nCúpháp:\n<AHREF=\"địa_chỉ_trang_web_sẽ_nhảy_tới\">Chuỗidiễngiảihyperlink</A>\nVídụ:\n<AHREF=\"http://www.dalattech.edu.vn\">Linkđếntrangwebchủcủahãngmáytính\nMicrosoft.</A>\n<AHREF=\"trang_chu.htm\">Linkđếntrangwebtrang_chu.htmtrongcùngthưmục.</A>\n<ATARGET=\"viewer\"HREF=\"sample.htm\">Clickvàođâyđểmởtrangwebsample.htm\ntrongcửasổ\"viewer\".</A>\n<AHREF=\"http://www.dalattech.edu.vn\"><IMGSRC=\"images/bullet.gif\">Clickvàoảnh\nnàyđểlinkđếntrangwebcủaMicrosoft</A>\n<AHREF=\"mailto:admin@kythuatdalat.edu.vn\">admin@kythuatdalat.edu.vn</A><br>\nBàithựchànhsố4:\n1.Tạo3trangHTMLlầnlượttênDoan1.htm,Doan2.htmvàDoan3.htmchứanộidung3\nđoạnthơởbàithựchànhsố3,lưu3tậptinnàycùngthưmụcvớitậptinBaiTho.htm.\n-Tạo3nútliênkếtđến3trangDoan1.htm,Doan2.htm,Doan3.htmtrên:\n-Tạomộtmenungangliênkếtđến3trangDoan1.htm,Doan2.htm,Doan3.htmtrên:Màusắcnútliênkếtthayđổikhiđưachuộtlên."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 59,
    "text": "59\n2.TạomớimộttrangHTMLvàlưuvớitênHotSport.htm,chènmộthìnhảnhgồmnhiều\nnhânvậtvàotrangweb,tạocácHotSportlêntrênkhuônmặtcủatừngngườiđểkhinhấn\nchuộtvàokhuônmặtcủangườinàothìsẽliênkếtđếntrangthôngtinriêngcủatừngngười\n(cáctrangthôngtinriêngnàycácemtựthiếtkế).\n-DùngAutoShapes,vẽcáchìnhsauvàotrangwebtrên,tạocácHotSporttrêncáchìnhngôi\nsaovàmặttrờiđểkhitanhấnvàochúngsẽliênkếtđếnmộthìnhảnhthực.\nBÀI5:TẠODANHSÁCH,KHUNG,BIỂUMẪUVÀTHIẾTKẾBẢNG\nMụctiêu:\n-Tạocácdanhsách,theothứtự,khôngtheothứtự,danhsáchlồngnhau\n-Thiếtkếvàđịnhdạngcácbảng,thiếtkếvàđịnhdạngkhung\n-Tạomẫubiểu,tạocáchộpnhậpdữliệu,tạocácnút,gởidữliệumẫubiểuthôngquae-\nmail\n5.1Địnhnghĩamộtdanhsách\n-Thẻ<DL></DL>\nCúpháp:\n<DL>Đềmụcdanhdách\n<DT>Danhsáchmức1</DT>\n<DT>Danhsáchmức1</DT>\n……\n<DD>Danhsáchmức2</DD>Trêntrờicaocómuônngàn\nánhsao,trênđồngxanhcó\nmuônngàncâylúa,chimtrong\nrừngcómuônngàntiếngca,cây\ntrongrừngcómuônngànláhoa.\nA,á,à,…Nhưngmặttrờichỉcó\nmộtmàthôivàmẹemchỉcó\nmộttrênđời.Duynhất"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 60,
    "text": "60<DD>Danhsáchmức2</DD>\n……\n<DT>Danhsáchmức1</DT>\n<DD>Danhsáchmức2</DD>\n</DL>\nVídụ:TrongphầnHTMLchúngtagõvàođoạnlệnhsau:\n<html>\n<head>\n<title>Viduvedanhsach</title>\n</head>\n<body>\n<b><DL>Đềmụcdanhdách</b>\n<DT>Danhsáchmức1</DT>\n<DT>Danhsáchmức1</DT>\n<DD>Danhsáchmức2</DD>\n<DD>Danhsáchmức2</DD>\n<DT>Danhsáchmức1</DT>\n<DD>Danhsáchmức2</DD>\n</DL>\n</body>\n</html>\nKếtquảhiểnthịtrongtrìnhduyệt:\n-Thẻ<UL><LI></UL>,<OL><LI></OL>:Danhsáchsắpxếp(OrderedList),danhsách\nkhôngsắpxếp(UnorderedList)vàdanhsáchcácđịnhnghĩa(DefinitionList).Danhsáchsắp\nxếpbắtđầubằngtag<OL>,danhsáchkhôngsắpxếpbắtđầubằng1trongcáctagsau:\n<UL>,<DIR>và<MENU>,danhsáchcácđịnhnghĩabắtđầubằngtag<DL>.Ðểthểhiện\nmỗimộtmẫutrongdanhsáchsắpxếpvàkhôngsắpxếpdùngtag<LI>.\nUL,DIR,MENU:danhsáchkhôngsắpxếpkiểubullet,mỗimẫubắtđầubằngtagLI.\nVídụ:danhsáchkiểubullet(khôngsắpxếp).\n<UL>\n<LI>Ðâylàmục1trongdanhsách.\n<LI>Ðâylàmục2trongdanhsách."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 61,
    "text": "61</UL>\nKếtquảtrìnhduyệtnhưsau:\nÐâylàmục1trongdanhsách.\nÐâylàmục2trongdanhsách.\nOL:danhsáchsắpxếp.Mỗimụctrongdanhsáchcũngbắtđầubằng<LI>.\n-ÐinhnghĩaOL:\n<OLSTART=nTYPE=order-type>trongđó:\nSTART=n:chỉđịnhchỉsốbắtđầu\nTYPE=order-type:chỉđịnhkiểuchỉsố.Cóthểlàmộttrongcácgiátrịsau:\nA:sửdụngkýtựlớnA,B,C,...\na:sửdụngkýtựnhỏa,b,c,...\nI:sửdụngsốLaMãlớnI,II,III,...\ni:sửdụngsốLaMãnhỏi,ii,iii,...\n1:sửdụngsố1,2,3,...\nVídụ:\n<OLTYPE=I>\n<LI>NghithứcHTTP\n<LI>NghithứcFTP\n<LI>NghithứcSMTP\n</OL>\nKếtquảtrìnhduyệtnhưsau:\nI.NghithứcHTTP\nII.NghithứcFTP\nIII.NghithứcSMTP\n5.2Thiếtkếbảng\n-Thẻ<TABLE><TR><TD></TABLE>:sửdụngtag<TABLE>đểbắtđầuvàkếtthúc1\nbảng.Sửdụngkèmtheovớitag<TR></TR>đểthêm1dòngtrongbảngvàtag<TD></TD>\nđểthêmvào1ôtrêndòng.\nVídụ:\n<TABLE>\n<TR><TD>Ô11<TD>Ô12\n<TR><TD>Ô21<TD>Ô22\n</TABLE>\nKếtquảtrìnhduyệtnhưsau:\nÔ11Ô12\nÔ21Ô22\nÐểđóngkhungchobảng,sửdụngthuộctínhBORDER\nVídụ:\n<TABLEBORDER=1>\n<TR><TD>Ô11<TD>Ô12\n<TR><TD>Ô21<TD>Ô22\n</TABLE>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 62,
    "text": "62Kếtquảtrìnhduyệtnhưsau:\nÔ11 Ô12\nÔ21 Ô22\nChiềurộngmặcđịnhcủabảngsẽlàchiềurộnglớnnhấtcủadòngrộngnhấttrongbảng.\nÐểchỉđịnhchiềurộngcácbảng,sửdụngthuộctínhWIDTH=n%đểquyđịnhchiềurộng.\nVídụ:\n<TABLEBORDER=1WIDTH=100%>\n<TR><TD>Ô11<TD>Ô12\n<TR><TD>Ô21<TD>Ô22\n</TABLE>\nKếtquảtrìnhduyệtnhưsau:\nÔ11 Ô12\nÔ21 Ô22\nÐểthêmtiêuđềchobảng,sửdụngtag<CAPTION></CAPTION>.Mặcđịnhtiêuđềcủa\nbảngnằmởtrênvàcanhlềgiữa.Tuynhiêncóthểthayđổibằngcáchdùngthuộctính\nALIGNbêntrongCAPTION.\nVídụ:\n<TABLEBORDER=1WIDTH=100%>\n<CAPTION>Tiêuđềcủabảng</CAPTION>\n<TR><TD>Ô11<TD>Ô12\n<TR><TD>Ô21<TD>Ô22\n</TABLE>\nKếtquảtrìnhduyệtnhưsau:\nTiêuđềcủabảng\nÔ11 Ô12\nÔ21 Ô22\nÐểthêmvàocácôtrảidàitrênnhiềucột,dòngkhác,dùngthuộctínhCOLSPAN=nvà\nROWSPAN=n.\nVídụ:\n<TABLEBORDER=1WIDTH=100%>\n<CAPTION>Tiêuđềcủabảng</CAPTION>\n<TR><TD>Ô11<TDCOLSPAN=2>Ô12trảidàitrên2ô\n<TR><TD>Ô21<TD>Ô22<TD>Ô23\n</TABLE>\nKếtquảtrìnhduyệtnhưsau:\nÔ11 Ô12trảidàitrên2ô\nÔ21 Ô22 Ô23\n-ÐịnhnghĩaTABLE(bảng):\n<TABLE\nALIGN=align-type"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 63,
    "text": "63BACKGROUND=url\nBGCOLOR=color-type\nBORDER=n\nCELLPADDING=n\nWIDTH=n%>\nTrongđó:\nALIGN=align-type:lềcủabảng,cógiátrịlàLEFThoặcRIGHT\nBACKGROUND=url:chỉđịnhảnhnềncủabảng\nBGCOLOR=color-type:màunềncủabảng\nBORDER=n:đườngviềnbảng,ntínhbằngpixel\nCELLPADDING=n:khoảngcáchtừôtớinộidungcủaô,đơnvịpixel\nWIDTH=n:độrộngcủabảng,ntínhtheo%(phảicódấu%theosau)\n-ÐịnhnghĩaTR(dòng):\n<TR\nALIGN=align-type\nBACKGROUND=url\nBGCOLOR=color-type\nVALIGN=v-align-type>\nTrongđó:\nALIGN=align-type:lềcủacácôtrongdòng,cógiátrịlàLEFT,RIGHThoặcCENTER\nBACKGROUND=url:chỉđịnhảnhnềncủadòng\nBGCOLOR=color-type:màunềncủadòng\nVALIGN=v-align-type:lềtheochiềudọcchovănbảntrongcácôtrêndòng.Giátrịcó\nthểlà:TOP,BOTTOM,MIDDLE.\n-ÐịnhnghĩaTD(ô):\n<TD\nALIGN=align-type\nBACKGROUND=url\nBGCOLOR=color-type\nCOLSPAN=n\nROWSPAN=n\nVALIGN=v-align-type>\nTrongđó:\nALIGN=align-type:lềvănbảntrongô,cógiátrịlàLEFT,RIGHThoặcCENTER\nBACKGROUND=url:chỉđịnhảnhnềnchoô\nBGCOLOR=color-type:màunềncủaô\nCOLSPAN=n:ôtrảirộngtrênncột\nROWSPAN=n:ôtrảidàitrênnhàng\nVALIGN=v-align-type:lềtheochiềudọcchovănbảntrongcácô.Giátrịcóthểlà:\nTOP,BOTTOM,MIDDLE.\nTH:tạoôtiêuđề.TươngtựnhưTDchỉkháclàvănbảnđượcthểhiệnởdạngnghiêng."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 64,
    "text": "645.3Tạobiểumẫu\n-Thẻ<form>…</form>:làcôngcụchủyếutạoracáctrangwebcótínhchấttươngtác.\n-Biểumẫuchophépngườisửdụngnhậpthôngtinhoặctùychọncáckhảnăngcósẵn.\n-Thẻ<form>thườnggắnvớimộtchươngtrìnhthựcthi,thườnggọilà“script”,chương\ntrìnhnàysẽthựchiệnmộtcôngviệcnàođókhingườisửdụngnhấtvàonútSubmit.\n-Cúpháp:\n<FORMMETHOD=<Phươngthức>ACTION=<Đườngdẫnđếnchươngtrình>\n[nộidungtrongFORMcóthểlàvănbảnhoặccácthẻFORM]\n<inputtype=submitvalue=“NútSubmit”>\n</FORM>\n-Phươngthức:gồmphươngthứcPOSTvàGET.\n+KhidùngphươngthứcPOST,dữliệugửiđisẽkhôngđượchiểnthịtrênđịachỉURL.\n+KhidùngphươngthứcGET,dữliệugửiđiđượchiểnthịtrênđịachỉURL.\n-CácthẻForm:cóthểlàthẻ<input>,<TextArea>,<Button>,<option>,…\n5.4GửidữliệubiểumẫuquaInternet\n-KhingườisửdụngnhấnnútSubmit,thôngtintrongformsẽđượcgửiđilênServerđể\nyêucầu(Request)Servertrảlời(ServerAnswer).TrênServerđãđượccàiđặtcácchương\ntrìnhứngdụng(cóthểbằngmộtngônngữWebC++,ASP,Java,…),cácchươngtrìnhứng\ndụngnàysẽtựđộngxửlýthôngtingửiđitừngườisửdụng(Client)vàphảnhồithôngtin\n(Response).PhươngthứcnàyđôikhingườitacòngọilàYêucầu–Đápứng,tứclànên\nClientthìRequestcòntrênServersẽResponse.Cácbạncóthểhìnhdungtiếntrìnhgửi\nthôngtinquanInternervớisơđồsau:\nHình5:Cáchthứctraođổithôngtinquachươngtrình\n5.5Tạokhung(Frame)"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 65,
    "text": "65-ThẻFrame:<FRAMESET><FRAME></FRAMESET>:\nSửdụngtag<FRAMESET>và</FRAMESET>đểchiacửasổtrìnhduyệtthànhnhiều\ncửasổconframe.Tag<FRAMESET>đượcdùngkèmvớitag<FRAME>đểđịnhnghĩa1\nframe.\nVídụ:tạotrangwebcótênlà2frame.htmchứa2frame,frame1bêntráichứanộidung\ntrangwebpage_1.htmvàframe2bênphảichứanộidungtrangwebpage_2.htm.\n<html>\n<head>\n<title>Trangwebcó2khung</title>\n</head>\n<framesetcols=\"150,*\">\n<framename=\"muc_luc\"target=\"noi_dung\"src=\"http://localhost/html/page_1.htm\">\n<framename=\"noi_dung\"src=\"http://localhost/html/page_2.htm\">\n</frameset>\n</html>\nMỗiframecó1tên,vídụframetráicóname=\"muc_luc\"vàframephảicó\nname=\"noi_dung\".Ðểtạoliênkếttừframemuc_lucvớiframenoi_dungtachỉđịnhtrong\nframemuc_lucnhưsau:target=\"noi_dung\".src=file:đểchỉđịnhratrangwebthểhiệntrên\nkhung.Cáctrangwebpage_1.htmvàpage_2.htmcầntạoratrướckhitạotrangweb\n2frame.htmchứachúng.Nộidungcủatrangwebpage_1.htmtrongtag<HEAD></HEAD>\ncókhaibáosau:\n<head>\n<basetarget=\"noi_dung\">\n</head>\nÐểkhôngxuấthiệnscrollbarvàbordercủaframe,khiđóbạnthêmthuộctính\nscrolling=\"no\"vàframeborder=0vàotag<FRAME>,vídụ:\n<framename=\"muc_luc\"target=\"noi_dung\"src=\"http://localhost/html/page_1.htm\"\nscrolling=\"no\">\nÐểtạocácliênkếthyperlinkgiữatrangpage_1.htmvớicáctrangwebkhácnhư\npage_2.htm,page_3.htm,...đểthểhiệntrênkhungbênphảithìtrongnộidungtrang\npage_1.htmcónộidungnhưsau:\n<html>\n<head>\n<title>Trangmụclục</title>\n<basetarget=\"noi_dung\">\n</head>\n<body>\n<p>Mụclụccôngviệc</p>\n<p><ahref=\"page_2.htm\">page2</a></p>\n<p><ahref=\"page_3.htm\">page3</a></p>\n</body>\n</html>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 66,
    "text": "66Khiđótrongtrìnhduyệtbạnclickvàocáchyperlinkthìcáctrangwebpage_2.htmvà\npage_3.htmsẽmởratươngứngởframebênphải(framenoi_dung)nhờkhaibáo\ntarget=\"noi_dung\".\nBàithựchànhsố5:\n1.Thiếtkếcácbảngsau:\na)\nBẢNGTHỐNGKÊCÁCHỘGIAĐÌNHTRONGPHƯỜNG\nSTTHọvàTênPhái\nNgàySinhĐịachỉ\nthườngtrúNghề\nnghiệp NữNam\n1\n2\n3\n4\n5\nb)\nNềnxanh,chữtrắng (chènhìnhảnhvàođây)\nNềnđỏ,chữvàng (chènhìnhảnhvàođây)\n(chènhìnhảnhvàođây)\nNềnxanhlácây,chữđen\n2.Tạomớimộttrangframegồm2frame(2khungtráivàphải),tạotrangmớicho2\nframenàyvàlưulạivớitênlầnlượtlàLeft.htmvàRight.htm,lưutrangframevớitênlà\nindex.htm(3tậptinnàyđượclưutrêncùngmộtthưmục\nD:\\tên_bạn\\ThucHanhFrame\\Bai2).\n-NhậpnộidungchophầntrangRight.htm(nộidungvàhìnhảnhgiớithiệuvềbạn).\n-TạocácliênkếtchophầntrangLeft.htmgồmcácmụcsau:\n3.Tạomới1trangframegồm3khungvàlưutấtcảcáctrangcủaframenàylênthưmục\nD:\\tên_bạn\\ThucHanhFrame\\Bai3\n(cácemtựhoànthànhbàitậpnày!)Mỗichuyênmụcđượcđặttrongmộtôcủabảngmột\ncột,liênkếtđếnmộttrangthôngtintươngứng(các\ntrangthôngtinnàycácemtựthiếtkế),khichọnmục\nnàothìthôngtinmụcđósẽhiểnthịởphầnFrame\nbênphải."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 67,
    "text": "674.Mởtrangframeindex.htmđãthiếtkếởbài3,chiaFramebênphảithành2frameconvà\nđặttêncho2frametrênvàdướinàylầnlượtlàTopvàMain.\n-TạotrangmớichoframeTopvàlưuvớitênTop.htm,chènvàotrangnàymột\nmenusaubằngcôngcụXaraWebstyle3.0:\n(Mỗitabliệnkếtđếnmộttrangthôngtintươngứngnhưởbàitập2)\n-ThiếtlậpthuộctínhchocácFrameđểkhixemtrêntrìnhduyệtInternet,ngườisử\ndụngkhôngthểthayđổiđượcđộrộngcủacácFrame.\n-ThiếtlậpthuộctínhchotrangFrameđểẩncácđườngviền(Borders)khixemtrên\ntrìnhduyệtInternet.\n5.Tạomới3trangHTML(NormalPage)vàlưuvớitênlầnlượtlàbanner.htm,menu.htm\nvàContent.htmtrênthưmụcD:\\tên_bạn\\ThucHanhFrame\\Bai5\n-TạomớimộttrangFrame,lựachọnFrametheomẫusau:\n(Banner)\n(Menu) (Content)\nvàlưutậptinvớitênindex.htmtrêncùngthưmụcvới3tậptinHTMLvừatạo.\n-Đặttrangkhởitạocho3framelà3tậptintươngứngbanner.htm,menu.htmvà\nContent.htm\n6.TạomớimộttrangHTMLvàlưuvớitênDatHang.htmtrênthưmục\nD:\\tên_bạn\\ThucHanhFormvớigiaodiệnnhưsau:\nhình6:phiếuđặthàng\nYêucầu:+KhinhấnnútLàmlại,cácđiềukhiểnsẽtrởlại(Reset)trạngtháibanđầu."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 68,
    "text": "68+KhinhấnnútĐặthàng,mộttrangThongBao.htmsẽđượcmởrađểthôngbáo\nchokháchhàngbiếtlàđãđặthàngthànhcông.\n7.TạomớimộttrangHTMLvàlưuvớitênDangKyThanhVien.htmtrênthưmục\nD:\\tên_bạn\\ThucHanhFormvớigiaodiệnnhưsau:\nhình7:dangkíthànhviên\nYêucầu:+Ràngbuộctênsửdụngkhôngđượcngắnhơn3kýtựvàkhôngđượcdàiquá20\nkýtự,chỉđượcnhậpkýtựchữcái,chữsốvàdấugạchnối(_).\n+KhinhấnnútĐăngký,nếudữliệuhợplệ,mộttrangthôngbáosẽđượcmởra\nđểthôngbáochothànhviênbiếtđãđăngkýthànhcông.\n--------------------\nBÀI6:ĐAPHƯƠNGTIỆN-MULTIMEDIA"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 69,
    "text": "69Mụctiêu:\n-ThiếtkếđượccácảnhđộngchotrangWeb\n-ThiếtkếđượccácFlashnhúngvàotrangWeb\n6.1KháiniệmvềMultimedia(đaphươngtiện)\n-Multimedia:đaphươngtiện,đamôitrường,đatruyềnthông.\nMộtphươngphápgiớithiệuthôngtinbằngmáytính,sửdụngnhiềuphươngtiệntruyền\nthôngtinnhưvănbản,đồhoạvàâmthanh,cùngvớisựgâyấntượngbằngtươngtác.\n-Mộtsốkỹthuậttạofileâmthanh,hìnhảnh\n-Hiệnnaytrênthịtrườngxuấthiệnrấtnhiềuphầnmềmtạoâmthamvàhìnhảnhvới\ncácmứcchấtlượngkhácnhau,việclựachọnphầnmềmsửdụngchobảnthânvàdoanh\nnghiệp,côngtyphụthuộcvàotúitiền,nhucầuvànhânlực.Cácbạncóthểsửdụngmộtsố\nphầnmềmxửlý,thiếtkếđồhọanhưPhotoshop,CorelDraw,…Hayđểtạonhanhcáchình\nảnhthiếtkếWebmàkhôngcầnnhiềukỹnăng,bạncóthểsửdụngphầnmềmtạobanner,\nnútlệnh…nhưMacromediaFlash,WebStyle,Cool3D,…phầnmềmtạoVideochấtlượng\ncaonhưUleadVideo,phầnmềmthunhạcvớiđịnhdạnhMP3nhưSuperMP3Recorder.\n-Trongchươngnày,chúngtôixingiớithiệutớicácbạnmộtsốkỹthuậttạohìnhảnh\nđộngbằngphầnmềmMacromediaFlashMX.\n6.2SửdụngMacromediaFlashđểthiếtkếhìnhảnh,Flash\n6.2.1TổngquanvềMacromediaFlash\nCáckháiniệmcơbản:\n•Thuộctính(Properties):làcáctínhchấtápdụngchođốitượng(lớp,hìnhvẽ,…)\n•Lớp(Layer):lànơichứacáchìnhvẽ,đốitượng,đượcxemlàthànhphầncủatiếntrình\nhoạthình.Cáclớpđượcxếpvàchồnglênnhau(chephủnhau),cóbaonhiêulớpcũng\nđược.\n•Lớpdẫn(GuideLayer):làlớpdùnglàmkhung,sườnđểbốtrícáclớpkhác.\n•Khung(Frame):cửasổthaotác.\n•Tậptin.FLA:TậptinchứađốitượngcủaFlash.\n•Tậptin.SWF:TậptinđãchuyểnsanghoạthìnhcủaFlash.\n6.2.1.1Cácthaotáccơbản\n+Địnhtrangin:File\\Pagesetup.\n+MenuView:\nGoto:ChuyểnđấncáckhunghoặccáccảnhtrongFilmđanglàmviệc.\nZoomin,ZoomOut:Phóngto,thunhỏcủasổlàmviệc.\nMagnification:điềuchỉnhtỉlệcửasổlàmviệc.(ShowFrame,ShowAll:Hiện1tấtcả\ncáckhunglàmviệc).\nOutlines:chuyểntoànbộcácđốitượngtrênkhunglàmviệcradạngđườngnétkhông\ncótômàuđểlàmviệcnhanhhơn.\nFast:Tắttínhnăngbỏđườngrăngcưa(antialiasing)đểvẽnhanhhơn."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 70,
    "text": "70Antialias:làmtrơncácđườngnétngoàicủahìnhvẽ(trừtext)\nAntialiasText:làmtrơncácđườngnétngoàicủahìnhvẽkểcảvănbản.\nTimeline:hiểnthịcửasổtiếntrình.\nWorkArea:hiểnthịhoặccheđivùnglàmviệc.\nRulers:Hiệnẩncâythước.\nGrid\\ShowGrid:hiệnẩnđườnglưới(ôlưới).\nGrid\\SnaptoGrid:bậttắttínhnăngchođốitượngbámdínhôlưới.\nGrid\\EditGrid:điềuchỉnhôlưới.(Accuracy:chínhxác)\nGuiders:cácchếđộcholớpdẩn.\nHideEdges:Hiệnẩngờbaođốitượng.\nHidePanels:hiệnẩncácPanel(instance,info,character,mixer)\n+MenuWindows:\nNewWindow:mởcảnhlàmviệctrongcửasổmới\nToolbasr:trìnhbàyToolbar(Main,Status,Controller)\nTools:hiệnẩnthanhcôngcụTools.\nPanels:hiệncácthànhphầncửasổlàmviệckhác.\nPanelset:bốtrílạicácthànhphầncửasổdạngmặcđịnh.\nSavePanelLayout:ghilạibốtrícủamộtthànhphầncửasổ.\nCloseAllPanel:đóngtấtcảcácthànhphầncửasổkhác.\nAction,MovieExplorer,Output,Debugger:Mởcáccửasổchứcnăngkhác..\nCascade,Tile:sắpcáccửasổlàmviệctheolớp,látgạch.\n6.2.1.2Côngcụ(Tools)"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 71,
    "text": "71\n1/.ArrowTool(V):dùngchọn,drag,sắpđặtcácđốitượngvẽ.\nSnaptoobjects:cácđốitượngvẽsẽbámdínhvàolướihoặccác\nđốitượnggầnkếkhidichuyển,quay,codãn.\nSmooth:làmmềmcácđườngvàhìnhdạngđơngiản.\nStraighten:làmthẳngcácđườngvàhìnhdạngđơngiản.\nRotate:xoaycácđốitượng.(nếumuốnxoaychínhxácphảichỉnh\ngócxoaytrongkhungTransform[Window\\Panels\\Transfrom])\nScale:thayđổikíchthướccácđốitượng(cokéo).\n2/.Subselecttool(A):dùngchọnđốitượng,thànhphầncủahình.\n3/.LineTool(N):dùngvẽđườngthẳng.\n4/.LassoTool(L):chọnđốitượnglàmviệcvớicáctínhnăngđặc\nbiệthơn.(chọnxongdoubleclick).\nMagicwand:dùngchọncácđốitượngvớivùngcóhìnhdạngbấtkỳ.\nMagicwandproperties:xáclậpcácthuộctínhchoMagicwnad.\nPolygonmode:dùngchọncácđốitượngtheođượcđagiácbấtkỳ.\n5/.TextTool(T):côngcụdùngtạovănbản(muốnxuốngdòng\nnhấnEnter).\n6/.PenTool(P):dùngtạocácnétthẳnghoặccong.\n7/.OvalTool(O):dùngvẽhìnhtrònhoặcEllipse.\n8/.RectangleTool(R):dùngvẽhìnhvuônghoặchìnhCN.\nRoundRectangleradius:dùngđịnhgóctrònchohình(Corner\nradius)\n9/.PencilTool(Y):dùngvẽđườngbằngtay.\nPencilMode:chọn1chếđộvẽ:Straighten:vẽđườngthẳng\ntrơn_gấpkhúc;\nSmooth:vẽđườngmềmmại_cong;Ink:khônlàmgìvớinétvẽ.\n10/.Brush(B):Vẽtheonétcọ.\nBrushmode:Paintnormal:vẽtrênvùnglàmviệc(đè);PaintFills:\nvẽcácvùngcóthểtômàunhưngkhôngvẽtrêncácđườngnét;Paint\nbehind:vẽquanhcácđốitượng,khôngđè,chỉvẽdướicáchình;Paint\ninside:vẽbêntrongvùngđượctômàu,khôngvẽđèlênnét,nếu\nkhôngcóvùngtômàuthìvẽkhôngtácdụng;Paintselection:chỉvẽ\nbêntrongvùngtômàuđãđượcchọn.\nBrushsize:chọnkíchthướcnétvẽ\nBrushshape:chọnnétvẽ.\nLockfill:bậttắtkiểutômàugradient.\n11/.InkBottleTool(S):dùngthayđổimàucủanétbaoquanhhình\n(màunét)."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 72,
    "text": "7212/.PaintBucketTool(K):dùngtômàucáchìnhđượctạoratừ\nđườngviền(màubêntronghình).\nGapsize:chọnmộtcáchtôtronghình:Don’tclosegap:hìnhkhônglỗ\nhở;Closesmallgaps:hìnhcólổnhỏ;Closelargegaps:hìnhcólỗhở\nlớn;Closemediumgaps:hìnhcólỗhỗtrungbình.\nLockfill:bậttắtchếđộtôvớikiểumàuGradient.\nTransformfill:chophépcodãn,quay,xônghiêngvớikiểutô\nGradienttrongHình.\n13/.DropperTool(I):dùngchophéplấymẫutô,kiểuđườngnétcủa1\nđốitượngrồiápdụngmẫutôđócho1đốitượngkhác.(chọn1mẫu\nrồiquétvào1mẫukhác)\n14/.EraserTool(E):dùngxóađườngnét,vùngtômàuvàcáchình\ndạng.\nErasermode:chọnchếđộxóa:Erasenormal:xóanétvàmàutô;\nErasefill:chỉxóamàutô;Eraselines:chỉxóađườngnét;Erase\nselectedfills:chỉxóavùngtômàuđangchọn,khôngxóanét;Erase\ninside:xóabêntrong1vùngcótômàu,khôngxóanét.\nFaucet:xóađườngnétvàvùngtômàu.\nErasershape:chọnnétxóa\n15/.HandTool(H):dùngdichuyển“bằngtay”quanhvùnglàmviệc.\n16/.ZoomTool(M,Z):dùngphóngto,thunhỏvùnglàmviệc\nEnlarge:phóngtovùnglàmviệc.\nReduce:thunhỏvùnglàmviệc.\n6.2.1.3Cácthaotác\nThaotácchọn:\n+Chọnthôngthường:Clickđâuchọnđó.\n+Chọnđườngnétvàmàutô:Doubleclick.\n+Chọnbằngđườngbao:chọncôngcụArrowTool,tạođườngbaokhuvựcchọn.\n+Chọnnhiều:đèShifttrongkhiclickchọn.\n+Chọntấtcả:Ctrl+A.\nThaotáccopy:chọn,Ctrl+C\nThaotácdán:thựchiệncopy,thựchiện1trong:\nCtrl+V:dánbìnhthường.\nCtrl+Shift+V:dántạichổ.\nNhânbản(Duplicating):chọn,Ctrl+D|đèCtrl+kéochuột.\nXoá:chọn,Delete.\nDichuyển:chọn,drag|đèShift+mũitên(8pixel)|mũitên(1pixel).\nNhóm:chọncácđốitượngcầnnhóm,Modify\\Group."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 73,
    "text": "73Bỏnhóm:chọn,Modify\\Ungroup.\nPhânđoạn:\n+Phânđoạnbằnghìnhvẽ:tạocáchìnhbêntrongnhau,dragchúngtáchnhau.\n+Phânđoạnbằngđường:tạohình,chọncôngcụPencilTool,chọnInk,vẽcắtlát(slicing)\nquahìnhtađược2hìnhphânđoạn.\nKếtnốicáchình:(chỉdùngchohìnhtrêncùnglớp,cùngmàuvàkhôngcóđườngnét)\nChọn1hìnhkéolênhìnhkia,chúngsẽkếtnốithành1.\nThaotáctrênhình:\n+Modify\\Shape\\Convertlinestofills:chuyểnđườngnétthànhhìnhdạngcóthểtômàu.\n+Modify\\Shape\\Expandfill:mởrộngvùngtôcủa1hình(expand:mởrangoài,Inset:mở\nvàotrong,Distance:khoảngmở)\n+Modify\\Shape\\Softenfilledges:làmmềmđườngbiêncủahình(Distance:khoảngcách\ngiữabiênmềmvàbiênngoài;Step:sốbướccủabiênmềm)\n+Modify\\Transform\\Scale:codãn.\n+Modify\\Transform\\Rotate:xoay.\n+Modify\\Transform\\Flip…:lậtngangdọc.\n+Modify\\Transform\\EditCenter:chỉnhtâmhìnhchephủ\nĐặtthuộctínhchokhung:Modify\\Moviehiệnhộpthoại:\n+Framerate:chứatốcđộhoạtcảnhchoframe\n+Dimension:kíchthướcngangdọcchoframe\n+Match:khungvừavớimáyinhoặcnộidung.\n+Backgroundcolor:chọnmàunềnchoframe\n+Rulersunit:chọnđơnvịđotrênthướclàmviệc\nThaotácvănbản:chọn,menuTextchọncácmụcsau:\n+Font:chọnfont.\n+Size:chọnkíchthước.\n+Style:chọnkiểu.\n+Align:canhbiên.\n+Tracking:codãncỡchữ.\n+Character:hiệncửasổthànhphầnCharacter.\n+Paragraph:hiệncửasổthànhphầnParagraph.\n+Táchrờivănbản:chọn,Modify\\BreakApart(cóthểsửatừngkýtự,tômàu…\nCanhbiên:chohiệncủasổthànhphầnAlign(Window\\Panels\\Align|Ctrl+K)\nChọn1trong:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 74,
    "text": "74\nAlignleftedge:canhvềcạnhtrái\nAlignhorizontalcenter:canhvềgiữa(ngang)\nAlignrightedge:canhvềcạnhphải\nAligntopedge:canhvềcạnhđầu\nAlignverticalcenter:canhvềgiữa(dọc)\nAlignbottomedge:canhvềcạnhđáy\nDistributetopedge:canhvềđầu\nDistributeverticalcenter:\nDistributebottomedge:\nDistributeleftedge:\nDistributehorizontalcenter:\nDistributerightedge:\nMatchwidth:\nMatchheight:\nMatchwidthandheight:\nSpaceevenlyvertically:\nSpaceevenlyhorizontally:\n6.2.1.4Ảnh\n+Flashcóthểchènvàocáctậptinảnhdạng:.BMP,JPG,GIF(tĩnh),PNG.\n+Chènảnh:menuFile\\Importchọntêntậptinảnh.(làđốitượngchephủcóthểthaotác\nnhưđốitượnghìnhvẽ)\n+Phânrãảnh:chọnảnh,Modify\\BreakApart.\n+SửdụngcửasổthànhphầnLibrary:Window\\Library.\n+Tốiưuảnh:MởcửasổLibrary,Rightclick,chọnProperties,xáclậpcáctínhchất(Allow\nsmoothing:chophéplàmmềmđườngnét,Compression:chọn1phươngphápnén,Quality:\nnhậpchấtlượngnén)\n+Lấy1bảnsaotừLibrary:DragtừkhungLibraryra.\n+Ảnhđộng.Gif:nạpvàquansáttrênthanhtiếntrình(Timeline).\n6.2.1.5Âmthanh(SOUND)\n+Flashchophépchènvàocáctậptinâmthanhdạng.Wav,.Mp3.\n+Chènâmthanh:File\\Importchọntêntậptinâmthanh(âmthanhđượcđưavàoLibrary).\n6.3Hoạthình\nTạoHoạthình:\nCách1_Tạohoạthìnhbằngcáckhunghìnhnốitiếp:làcáchchohiệnliêntiếpcác\nkhunghìnhbiếnđổinốitiếpnhau.\n+Tạohìnhtrênkhunglàmviệc."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 75,
    "text": "75+Clickchọn1khunghìnhtrênthanhTimeLine,chọnInsert\\KeyFrame(tađược1khung\nhìnhhoágiốngvớikhungtrướcđó),thựchiệnthêm,bớt,thayđổitrênkhunghìnhtùyý.\n+Lậplạibướctrênchođếnkhikếtthúchoạthình.\n+NhấnEnterđểkiểmtra.\nCách2_Tạohoạthìnhbằngcáchbiếnđổihìnhdạng:làcáchcho1hìnhbiếnđổi\ndạngthànhmộthìnhkhác.Flashsửdụngphépbiếnhìnhtheocáchlôgicnhất(cóthểtạora\ncácdạnghìnhngoàiýmuốn).Khôngthểbiếnđổihìnhdạngcácbiểutượng,ảnh,nhóm.\n+Tạohìnhtrênkhunglàmviệc.\n+Clickchọn1khunghìnhtrênTimeline,chọnInsert\\BlankKeyFrame(tađượckhung\nhìnhkhoárỗng),Tạo1dạnghìnhkhác.\n+Trởvềkhunghình1,chọnWindow\\Panels\\InstancechọnthẻFramevàquiđịnhnhư\nsau:\nLabel:nhậptênbấtkỳ(sẽhiệntrênthanhtiếntrình,tuỳchọn)\nTweening:chọnShape(biếnhìnhtheonét).\n++Easing:chỉnhtốcđộ(Easingin:hoạthìnhchậm,\nEasingOut:hoạthìnhnhanh)\n++Blend:chọncáchthiếtlậpchobiếnhình(Angular:tốtchogócvàđườngthẳng,\nDistribute:tốtchocácđườngcong,trơn).\n+Lậplạibướctrênchođếnkhikếtthúchoạthình.\n+NhấnEnterđểkiểmtra.\nĐịnhcácđiểmbiếnhình:\n+ChứcnăngShapeHint:cóthểco<=26điểmShapeHint(a!z)\n++Bắtđầutừkhunghìnhđầutiên,Modify\\Transform\\AddShapeHint,tathấyxuấthiện\nchấmđỏ,dichuyểnchấmnàyđếnvịtríthamchiếutrênhình.\n++ClickchọncáckhunghìnhkếtiếpđểdichuyểnShapeHint….\n++Tươngtựchocáckhunghìnhkhác.\n+Hiện/ẩnShapeHint:View\\ShowShapeHint.\n+GỡbỏShapeHint:ClickchọnFramecầngởbỏ,Modify\\Transform\\RemoveAllHints.\nTạocácdạnghoạthìnhsau:\n1/.Cánhquạtquay,Bánhxequay.\n2/.Biếnđổichử,hình…."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 76,
    "text": "76Cách3_Tạohoạthìnhbằngcáchbiếnđổichuyểnđộng:làcáchcho1hìnhdichuyển,\ncodãn,xoay…đểthànhhìnhdạngkhác.Chophépbiếnđổihình,biểutượng,nhóm,khối\nvănbản.\n+Tạohìnhtrênkhunglàmviệc.\n++Clickchọn1khunghìnhcáchquãng(N)trênTimeline,chọnInsert\\Frame(tađượcN-\n1khunghìnhgiốngnhưkhung1).\n++Rightclicktạikhunghình1(đầu),chọnCreateMotionTween,chọn\nWindow\\Panels\\InstancechọnthẻFramevàquiđịnhnhưsau:\nLabel:nhậptênbấtkỳ(sẽhiệntrênthanhtiếntrình,tuỳchọn)\nTweening:chọnMotion(biếnhìnhtheochuyểnđộng).\n\"Scale:nếuchọnsẽchophépcodãnkhichuyểnđộng.\nEasing:chỉnhtốcđộ(Easingin:hoạthìnhchậm,EasingOut:hoạthìnhnhanh)\nRotate:chọncáchquay(None:không,Auto:tựđộng,CW:quaytheochiềukimhđồng\nhồ,CCW:quayngượckimđồnghồ)\nTimes:nhậpsốlầnquaytrongkhichuyểnđộng.\n\"Orienttopath:chọnkhichuyểnđộngtheo1đườngdẫn.\n\"Synchronize:chọnkhicầnđồngbộcáckhunghình.\n\"Snap:chọnkhimuốnhìnhbiếnđổibámvàođườngdẩntrênlớpdẩn.\n++Tạikhunghìnhcuối,chọnhìnhđãcóởkhung1vàdichuyển,xoay,codãntùyý.\n+Enterđểkiểmtra.\n+Muốnchỉnhsửaphảitrởvềkhunghìnhđầu,cuối.\n+CửasổthànhphầnInstance:\nThẻInstance:thểhiệnhình\nThẻEffect:hiệuứngmàu\nThẻFrame:quiđịnhdạngquay\nThẻSound:hiệuứngâmthanh\nBiếnđổichuyểnđộngtheo1đườngdẫn(MotionwithOrienttopath):\n+Tạohoạthìnhbiếnđổichuyểnđộng(nhớchọnOrienttopathvàSnap).\n+ClicknútAddGuideLayertrênthanhtiếntrình,tađượcmộtlớpdẫntrênlớphoạthình\n(kiểmtratênlớphoạthìnhcóthụtvàosovớilớpdẫnkhông?).\n+Clickchọnlớpdẫn,chọncôngcụPencilTool,chếđộSmooth,nétSolid,thựchiệnvẽ1\nđườngchuyểnđộngtrênlớpdẫn."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 77,
    "text": "77+ClicktạiClock(ổkhoá)đểkhoáđườngchuyểnđộngtrênlớpdẫnkhôngchosửa.\n+Clickchọnlớphoạthình(đừngquên).\n+Clicktạikhunghìnhđầu,kéotâmcủanóđếnđầuđườngchuyểnđộng.\n+Clicktạikhunghìnhcuối,kéotâmcủanóđếncuốiđườngchuyểnđộng.\n+Enterđểkiểmtra.\n+Chúý:cóthểtạonhiềuhìnhkhácnhautrênnhiềuFrameđểcùngchuyểnđộngvới\nnhau;cóthểdùngnhiềulớpdẫnhoặclớpdẫnchungcónhiềuđườngdẫn.\nLớp(Layer)vàFrame:\n1/.Frame:làcáckhunglàmviệcdùngchứacácđốitượng.\nKhungrỗng:Làkhunghìnhchưalàmviệc(khôngchứagìcả)\nKhungKhóa:Làkhunghìnhlàkhunghìnhnơichứacácđốitượng,thiếtlậpchuyển\nđộng,….\nKhungthường:Làkhunghìnhhiểnthịnộidungcủakhunghìnhkhoágầnnhất.\n2/.CácthaotácFrame:\n+Thêm1frame:\n++Insert\\Frame|F5:chènthêm1khunghìnhthườngtạivịtríchọn.\n++Insert\\Keyframe|F6:chènthêm1khunghìnhkhóatạivịtríchọn(trướcđólàcác\nkhunghìnhthường).\n++Insert\\BlankKeyframe|F7:chènthêm1khunghìnhkhóarỗngtạivịtríchọn(trướcđó\ncũnglàcáckhunghìnhthường).\n+Xóa1frame:chọnkhunghìnhcầnxóa,rightclick,chọnRemoveFrame.\n+Copy,cắt,dán:chọn,rightclick,chọnCopyFrames,CutFrames,PasteFrames.\n+ClearFrame:chuyển1khunghìnhkhoáthànhkhunghìnhbìnhthường.\n3/.Cácthaotáctrênlớp:\n+Thêm1lớp:\n++ClicknútInsertLayer|Insert\\Layer:chèn1lớp.\n++ClicknútAddGuideLayer|Insert\\MotionGuide:chèn1lớpdẫn.\n+Chọnlớp:Clicktạilớp(xemcódấuchưa?)\n+Xóa1lớp:chọnlớpcầnxoá,rightclick,chọnDeleteLayer|clicktạithùngrác.\n+Thayđổithứtựcủa1lớp:Dragchuộtcáclớplêntrênhoặcxuốngdưới.\n+Đặtthuộctínhcholớp:chọnlớp,rightclick,chọnProperties:tên,hiện\\ẩn,khóa,loại,\nmàunền,Outlines,chiềucao..\n++Guide:lớpdẫn.(ởtrênlớphoạthìnhchuyểnđộng)\n++Guided:lớplàlớphoạthìnhchuyểnđộngtheolớpdẫn(ởdướilớpdẫnvàthụtvàoso\nvớilớpdẫn).\n++Mask:lớpdùnglàmmặtnạ(ởtrênlớpche)\n++Masked:lớpbịmặtnạche|lớpche(ởdướilớpmặtnạ,chỉthấyđượcqua1đối\ntượngđặccủalớpmặtnạ)."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 78,
    "text": "784/.Thanhtiếntrình(Timeline):\nVịtríkhung Sốkhung/giây Thờigianđãchiếu\nhình6.1:Thanhtiếntrình(Timeline)\n+NútOnionSkin:xemvàchỉnhsửanhiềukhunghìnhcùnglúc(cáckhunghìnhtrong\nphạmviOnionSkinsẽhiệnrachochỉnhcùnglúc).\n+NútOnionSkinOutlines:tươngtựOnionSkinnhưngcáchìnhtrênkhunghiệndưới\ndạngđườngviền.\n+NútEditMultipleFrames:hiệnvàchosửanhiềukhunghìnhcùnglúc.\n+NútModifyOnionMarkers:dichuyểnphạmviOnionSkin.\n++AlwaysShowMarkers:luônhiệndấuOnionSkin.\n++AnchorOnion:khoádấuOnionSkin.\n++Onion2,Onion5,OnionAll:đánhdấu2,5hoặctấtcảcáckhunghìnhchungquanh.\n+Showalllayerasoutlines:hiệnẩncáchtrìnhbàycáclớpởdạngđườngviền.\n+Lock/Unlockalllayers:Khoáhoặcbỏkhoácáclớp.(khoásẽkhôngchọnđược).\n+Show/Hidealllayers:hiệnẩncáclớp.(ẩnsẽkhôngthấygìcả).\n5/.QuảnlýcácScenne:ClickchọncôngcụEditScenetrênthanhtiếntrình,chọn1\ncảnh.\n6/.QuảnlýcácFrame:ClickchọncôngcụEditSymbolstrênthanhtiếntrình,chọn1\nbiểutượngcầnsửa.\nhình6.2:EditSymbols"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 79,
    "text": "79Chúý:\nCáckhungcó--------!màutímlàkhungbiếnđổichuyểnđộng.\nCáckhungcó--------!màuxanhlàkhungbiếnđổihìnhdạng.\nCáckhungcó-------làkhungkhôngxácđịnhrõchuyểnđộnggì(cóthểbịsai!)\nBiểutượng(Symbol)\n1/.KN:làđốitượngđượctạoranhằmmụcđíchsửdụngnhiềulầnmàkhôngphảitạolại,\nbiểutượngđượccấttrữtrongthưviện.Biểutượngđượcchiathành3loạisau:\n+Graphic:biểutượngdạngđồhọađượctạoratừcáchìnhvẽ,hìnhảnhcótínhchấttĩnh\n(khôngchuyểnđộng).\n+Button:biểutượngdạngcácnútnhấn,thườngđượcphốihợpvớilậptrìnhđểtạocác\nđiềukhiệnchođoạnFilm.\n+Movie:biểutượngdạngđoạnFilm,chứatoànbộcácphầntửcủađọanFilm:hìnhảnh,\nâmthanh,chuyểnđộng….\n2/.Tạobiểutượng:\n+Graphic:Tạohìnhảnh,nhóm….chọnInsert\\ConverttoSymbol,hiệnhộpthoại:\nhình6.3:sybolproperties\nnhậptên,chọnGraphic,OK,xongmởcửasổthànhphầnLibraryđểkiểmtralại.\n+Button:Tạodạngnút,chọnInsert\\ConverttoSymbol,hiệnhộpthoại:chọnButton,OK.\n+Movie:Tạođoạnhoạthình,chọnLayer,chọnđoạnhoạthìnhvừatạo,Rightclick,chọn\nCopyFrames,chọnInsert\\NewSymbol,hiệnhộpthọaiSymbolProperties,đặttênchọn\nMovieClip,OK.Flashchuyểnsangchếđộtạohoạthình,Rightclicktạikhung1,chọnPaste\nFrames.xongclicknútScenetrênthanhtiếntrìnhđểtrởvề.\n3/.Cácthaotáctrênbiểutượng:\n+Sửa:chọnbiểutượngtrênLibrary,chọnEdit\\EditSymbols,sửaxongclicknútScene.\n(DoubleClicktạibiểutượngđểsửa)\n+SửaButton:khisửabiểutượngButton,tathấtcó4khung:Up,Over,Down,Hit,mỗi\nkhungthểhiệntrạngtháikhácnhaucủabiểutượngnút,tacóthểthêm,bớt,bỏtrốngcác\nkhungnhằmtạocác“đápứng”vớisựdichuyểncontrỏtùyý,sửaxongclicknútScene.\nUp:KhungnàythểhiệnButtonkhicontrỏkhôngởtrongphạmvinút.\nOver:KhungnàythểhiệnButtonkhicontrỏởtrongphạmvinút.\nDown:KhungnàythểhiệnButtonkhingườidùngclickvàonút.\nHit:KhungnàythểhiệnButtonkhidichuyểncontrỏ,nútcóthểđượcthayđổivịtrí,hình\ndạng.NúttrongkhungHitsẽkhôngthấytrongđoạnhoạthình."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 80,
    "text": "80+Xoá:Rightclick,chọnDelete.\n+Lấyrasửdụng:DragtừLibraryraFrame.\n+Nhânbản:Rightclick,chọnDuplicates.\nSửdụngThưviệntậptincủaFlash.\n1/.Giớithiệu:\nFlashchophéptacóthểsửdụnglạicáchìnhảnh,âmthanh,đoạnFilm,biểutượngcó\nsẵnchứatrongcáctậptinđãtạorahoặctậptinmẫu.Cáctậptinnàyđượcxemnhưmột\nthưviệnchứacácthànhquảtalàmviệc,cóthểcórấtnhiềutậptinđượcdùnglàmthưviện.\n2/.CácThaotác:\n+Mởthưviệncủa1tậptin:File\\OpenasLibrary,chọntêntậptin.Fla,Open.Cóthể\nmởnhiềutậptinlàmthưviện.\n+Mởthưviệndùngchung:File\\OpenasSharedLibrary,chọntêntậptin.Fla,Open.\n3/.Sửdụng:(trongcácthưviệncóhìnhảnh,đoạnFilm,biểutượng,nút)Dragtừthư\nviệnbỏvàoFrame.\n4/.Sửdụngthưviệnchung:\nWindow\\CommonLibraries,chọn1loại.Sửdụngnhưcácthưviệnkhác.\nhình:6.4:CommonLibraries\nYêucầu:\n+Hiệuứnglớpmặtnạ\n+Hiệuứngchiếusáng\n+HiệuứngX_Ray\n+Hiệuứngcửasổ\n6.4Hoạtcảnh\n1/.Giớithiệu:\nLàsựliênhệqualạigiữacácđoạnhoạthình,cảnh,khunghìnhkhitrìnhchiếu.Hoạt\ncảnhcóthểthựchiệntốtnhờcácthiếtlậptươngtáchoặclậptrình(Scripting).\n2/.Kháiniệmcơbản:\n+Sựkiện:làtìnhhuốngxảyrahoặcthờiđiểmthiếtlậpđãđến.\n+Đích:làđốitượngbịtácđộngbởihànhđộngkhixảyrasựkiện.\n+Hànhđộng:làmộttácđộng,tươngtáctrênđíchkhisựkiệnxảyra."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 81,
    "text": "813/.Sựkiện:\nCácsựkiệncủaMouse:\n+Press:Sựkiệnxảyrakhingườidùngnhấnchuộttrênnút.\n+Release:Sựkiệnxảyrakhingườidùngnhấnvànhảchuộttrênnút.\n+ReleaseOutside:Sựkiệnxảyrakhingườidùngnhấnvànhảnútchuộtbênngoàinút.\n+RollOver:Sựkiệnxảyrakhingườidùngdichuyểncontrỏlênphíatrêncủanútnhấn.\n(cuộnlên)\n+RollOut:Sựkiệnxảyrakhingườidùngdichuyểncontrỏrakhỏiphạmvicủa\nnút.(Cuộnra)\n+DragOver:Sựkiệnxảyrakhingườidùngnhấnnúttrongphạmvinút(khôngnhả),kéo\ncontrỏrangoàiphạmvinútvàdichuyểntrởlạiphạmvinút.(Dragtrong)\n+DragOut:Sửkiệnxảyrakhingườidùngnhấnnúttrongphạmvinút(khôngnhả),kéo\ncontrỏrangoàiphạmvinút.(Dragngoài)\nCácsựkiệncủabànphím:\nSựkiệnxảyrakhingườidùngnhấn1kýtự,phímmũitên,Backspace,Insert,Home,End,\nPageup,PageDown.Sựkiệnbànphímcóphânbiệtchữinvàchữthường.\n4/.Cáchànhđộng:Cónhómsau:BasicsAction,Actions,Operators,Functions,\nProperties,Objects.Chươngtrìnhtachỉnghiêncứu1sốhànhđộngsau:\n+Goto:làmchođoạnFilmnhảyđếnkhunghìnhhoạtcảnh.\nhình6.5:Cácsựkiệncủabànphím\nCócácthamsố:\nScene:chọncảnhbắtđầuchohànhđộngGoTo\nType:chọnFramecóthểlàtheosố,theonhãn,Frametrước,Framesau.\nFrame:nhậpsốlàkhunghìnhthứmấy.\nGotoandPlay:nếuchọnsẽlàGotoandPlay(Chuyểnđếnvàthựchiện)cònkhônglà\nGotoandstop(Chuyểnđếnvàdừng).\nVd:Chuyểnđếnvàchiếukhung1,theosựkiệnnhấnvànhảchuột.\non(release){\ngotoAndPlay(1);\n}"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 82,
    "text": "82+Play:chođoạnhoạthìnhbắtđầuthựchiện.\nKhôngcóthamsố.\n+Stop:chođoạnhoạthìnhngừnglại.\nKhôngcóthamsố.\n+ToggleHighQuality:bậttắtchếđộkhửrăngcưa.\nKhôngcóthamsố\nVd:\non(release){\ntoggleHighQuality();\n}\n+StopallSound:Tắttấtcảcácâmthanh.\nKhôngcóthamsố.\n+GetURL:MởcửasổtrìnhduyệtWebvớiđịachỉURLđểnhận1địachỉxácđịnh.\nhình6.6:MởcửasổtrìnhduyệtWebvớiđịachỉURL\nCócácthamsốsau:\nURL:chứađịachỉURLnơitruycập.\nWindow:xácđịnhcửasổtảiURL\nSelf:TảiđịachỉURLvàocửasổlàmviệc.\nBlank:MởcửasổmớivàtảiđịachỉURLvàođó.\nParent:MởđịachỉURLvàocửasổchacủacửasổhiệntại.\nTop:nếuđoạnhoạthìnhFlashvớihànhđộngGetURLđangnằmtrong\nkhungHTMLthìsẽloạibỏkhungđểtảiURLvàocửasổ.\nVariables:chọnbiếntrongđoạnhoạthìnhđượcxửlýrasao?\nDon’tsend:Khônggởicácbiến.\nSendusingGet:GởicácbiếnnốitiếpvàođịachỉURL.\nSendusingPost:GởicácbiếntáchbiệtvớiURL.\n+FSCommand:gởidữliệuđếnứngdụngsửdụngđoạnhoạthìnhnhưtrìnhduyệtWeb.\nFSCommandđượcdùngkhiđoạnhoạthìnhFlashtươngtácvớiJavaScripttrêntrangWeb.\n+Load/UnloadMovie:Nạp1đoạnFilmởđịachỉURLhoặcloạibỏđoạnhoạthìnhđã\nnạp."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 83,
    "text": "83Cócácthamsốsau:\nURL:đườngdẫnđếntậptin.Swfcầntảivào.(htpt://www.ngcuong……)\nLocation:địnhmứchayđíchbịhànhđộngtácđộng\nLevel:tậptin.Swftảivàođượcđặttrong1mứcvàcó1sốmức.\nTarget:tậptin.Swftảivàokhônggiancủađoạnhoạthình.\nVariables:chọnbiếntrongđoạnhoạthìnhđượcxửlýrasao?(tươngtựGET\nURL).\n+TellTarget:Xácđịnhmộttiếntrìnhthựchiệnhànhđộng.\nCóthamsốsau:\nTarget:chứatênnhãnmộtđoạnhoạthìnhcầnthựchiệnhànhđộng.\n+IfFrameisLoaded:Xácđịnhmộtkhunghìnhnàođóđãđượcnạphaychưa?,nếunạp\nrồithìthựchiệnhànhđộngnàođócònchưathìbỏqua(khônglàmgìcả).\nKhôngthamsố.\n+OnMouseEvent:Chọncácsựkiệnxảyradochuộtlàđốitượngphátsinhthayvìcác\nhànhđộng,cóthểđịnhphímchosựkiệnbànphím.\n+If:Kiểmtramộtcâulệnhđiềukhiểnnàođóđúnghaysaiđểthựchiệnhànhđộng.\n+Loop:Thựchiệnmộtnhómhànhđộngnhiềulầnkhiđiềukiệncònđúng.\n+Call:Gọithựchiệnmộtnhómcáchànhđộngđượcgắnvớimộtkhunghình.\n+SetProperty:Đặtcácthuộctínhchođoạnhoạthình.\n+SetVariable:Tạo1biếnmớihoặcđặtgiátrịchobiến.\n+Dupplicate/RemoveMovieClip:Nhânbảnhoặcgỡbỏđoạnhoạthình.\n+DragMovieClip:ChophépđoạnhoạthìnhcóthểDragđượctheocontrỏ.\n+Trace:Hiễnthịmộtthôngbáo.\n+Comment:Chứanộidungchúthíchchohànhđộng.\nChúý:Cáchànhđộngkhôngchỉlàriênglẻmàthườnghaylồngnhauđểtạocáctươngtác\nphứctạp(đòihỏiphảicókiếnthứclậptrình).\n5/.Càiđặttươngtáchoạtcảnh:\nNhấnCtrl+Alt+AđểhiệncửasổthànhphầnAction,Clickchọnđốitượngcầncàiđặt,\nClickdấu+trêncửasổ,chọnhànhđộng,cungcấpthamsố…\nNếumuốnxoáthìclickchọndấu–(trừ).\nKiểmTravàXuấtBảnHoạtHình\n1)MenuControl:Dùngkiểmtrahoạthình.\n+Play:Trìnhchiếuhoạthình.\n+Rewind:Quaytrởlạikhunghìnhđầutiên.\n+StepForward:Dịchchuyểntới1khunghình(bênphải)\n+StepBackward:Dịchchuyểnlui1khunghình(bêntrái)\n+TestMovie:Kiểmtratậptin.FLAđượcdịchthànhdạnghoạthình.SWF.\n+TestScene:Kiểmtracảnhđượcchuyểnthànhdạnghoạthình.SWF."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 84,
    "text": "84+DebugMovie:Kiểmtratậptin.FLAđượcdịchthànhdạnghoạthình.SWFvàcóhiện\ncửasổDebugđểxemnộidungcácbiến,Codechươngtrình.\n+LoopPlayback:Lậplạicácchuyểnđộnghoạthình.\n+PlayallScene:Lậplạiviệcthựchiệnchuyểnđộngtấtcảcáccảnh.\n+EnableSimpleFrameActions:Chophépđápứnglạicáchànhđộngđãcài(càicác\ntươngtáchoạtcảnh).\n+EnableSimpleButtons:Chophépcácnút(Button)cóhiệulựcvớicáctrạngthái:Up,\nOver,Down,Hit.\n+MuteSounds:Tắttoànbộâmthanh.\n++Kiểmtranút:chọnControl\\EnableSimpleButtons,trướckhiTest.\n++Kiểmtracáchànhđộng:chọnControl\\EnableSimpleFrameActions,trướckhi\nTest.\n2)Xuấtbản:\n1/.Xuấttậptinhoạthình:\nFile\\ExportMovie,nhậptêntậptinxuất(.SWF).\n2/.Xuấttậptinảnh:\nFile\\ExportImage,nhậptêntậptinxuất(.SWF).\n3/.Thiếtlậpcácthamsốxuấtbản:\nFile\\PublishSettings,hiệnhộpthoạicó3thẻsau:\n+ThẻFormats:\nType:chọn1kiểuchotậptinxuất.\nFileName:dùngđặttênchotậptinxuất.\nUseDefaultNames:Flashsẽđặttênmặcđịnh.\n+ThẻFlash\nhình6.7:flashPublishSettings\nLoadOrder:chọnthứtựnạptậptinhoạthìnhkhitảilêntrangWeb."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 85,
    "text": "85BottomUp:nạplớpdướicùngtrước.\nTopDown:nạplớptrêntrước.\nOptions:chọncáctùychọnkhác.\nGerenateSizeReport:sẽtạotậptin.TXTchứathôngtincủahoạthình.\nOmitTraceActions:loạibỏcáchànhđộngTrace(dấuhiệuCode)rakhỏihoạthìnhvà\nkhôngchongườikhácxemmãnguồn(chươngtrìnhScript).\nProtectfromimport:bảovệkhôngchongườikhácsửdụngtậptinhoạthìnhcủabạn\n(ngườikháckhôngthểImporttậptinvàosửdụnglại).\nDebuggingPemitted:chophépgỡlỗichươngtrình(khicóchươngtrình)\nPassword:nhậpmậtmãchoProtectfromimport,DebuggingPemitted.\nJPEGQuality:XácđịnhcấpđộnénchocácảnhBitmapcủatậptinhoạthình,0:làchất\nlượngthấp,100:làchấtlượngcao.\nAudioStream,AudioEvent:chophépđịnhmứcđộnén,tốcđộtruyền,chấtlượngcho\nâmthanhtheoluồngvàsựkiện.\nOverrideSoundSettings:ghiđèthôngsốvềâmthanhlêncácthiếtlậpâmthanhđã\nthiếtlậptrướcđó.\nVersion:chọnphiênbảnxuấtbản.\n+ThẻHTML:\nTemplate:chọn1dạngtrangHTMLmẫuđểđặttậptinhoạthìnhlêntrangnày.\nDimensions:chọnvừa,đơnvịhoặctỉlệchotậptinhoạthìnhtheotrangHTML.\n(cungcấpđơnvịhoặctỉlệchoWidth,Height).\nPlayBack:chọncáctùychọntrìnhchiếutrêntrangHTML\n-PauseatStart:hoạthìnhsẽkhôngtrìnhchiếuchođếnkhingườidùngclicknútPlay.\n-Loop:hoạthìnhtựđộngtrìnhchiếulặpđilặplại.\n-DisplayMenu:thanhDisplaysẽhiệntrongcửasổtrìnhduyệtkhinạphoạthình.\n-Devicefont:chophépsửdụngfonthệthốngkhimáytínhcủabạnkhôngcófontnhưđã\nđịnh.\nQuality:chọnchấtlượngthểhiệnhoạthìnhtheotốcđộCPUcủamáytính.\nWindowMode:chọnchếđộcửasổhoạthình\n-Window:thểhiệndạngcửasổ.\n-Opaque:nộidungcủatrangHTMLsẽchuyểnxuốngphíasaucửasổhoạthình.(không\nthấyđượcdocửasổhoạthìnhmờđục)\n-TransparentWindowless:làmchonềncủacửasổhoạthìnhtrởnêntrongsuốt.(thấy\nnộidungbêndướinó).\nHTMLAlignment:chọncanhbiênhoạthìnhtrêntrangHTML.\nScale:địnhkíchthướccủacửasổhoạthình.\n-Default:theogiátrịởDimension(khôngvừacửasổ).\n-NoBorder:hoạthìnhkhôngcóđườngviềntrongcửasổ(khôngvừacửasổ)."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 86,
    "text": "86-ExactFit:codãnhoạthìnhtheotỉlệchínhxácvớikhungcửasổ(vừavớicửasổ).\nFlashAligment:canhbiênhoạthìnhtrongcửasổtheochiềudọcchiềungang.\nShowWarningMessages:chophéphiệncácthôngbáovềtìnhtrạngtrangHTMLmẫu\ncócầnphảisửađổihoặchiệuchỉnhgìkhông?.\n4/.Xemtrướckhixuấtbản:File\\PublishPreview,chọndạngcầnxem.\n5/.Xuấtbản(dịch)thànhtậptin.SWF:File\\Publish,sẽcótậptinxuấtbảnnhưđãđịnh.\n6.5ĐưaFLASHvàoWeb\n6.5.1NộidungtrangHTMLdoFlashxuấtbản\n<html>\n<head>\n<title>Flower</title>\n</head>\n<bodybgcolor=\"#FFFFFF\">\n<p>\n<objectclassid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"\ncodebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#ver\nsion=5,0,0,0\"\nWIDTH=\"360\"HEIGHT=\"360\">\n<paramname=\"movie\"value=\"Flower.swf\">\n<paramname=\"quality\"value=\"high\">\n<paramname=\"bgcolor\"value=\"#FFFFFF\"><embedsrc=\"Flower.swf\"quality=\"high\"\nbgcolor=\"#FFFFFF\"\nWIDTH=\"360\"HEIGHT=\"360\"\nTYPE=\"application/x-shockwave-flash\"\nPLUGINSPAGE=\"http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod\n_Version=ShockwaveFlash\">\n</object>\n</p>\n</body>\n</html>\nHoặc:\n<html>\n<head>\n<title>HTMLWithFlash5</title>\n</head>\n<bodybgcolor=\"#FFFFFF\">\n<p>\n<objectclassid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\""
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 87,
    "text": "87codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#ver\nsion=5,0,0,0\"\nWIDTH=\"210\"HEIGHT=\"252\">\n<paramname=\"movie\"value=\"Flower.swf\">\n<paramname=\"quality\"value=\"high\">\n<paramname=\"bgcolor\"value=\"#FFFFFF\"><embedsrc=\"Flower.swf\"quality=\"high\"\nbgcolor=\"#FFFFFF\"\nWIDTH=\"360\"HEIGHT=\"360\"\nTYPE=\"application/x-shockwave-flash\"\nPLUGINSPAGE=\"http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod\n_Version=ShockwaveFlash\">\n</object>\n</p>\n<p>IntroducationaWebPagewithFlash5</p>\n<p>&nbsp;</p>\n</body>\n</html>\nhình6.8:NộidungtrangHTMLdoFlashxuấtbản\n6.5.2Nhúngtậptin.GIFđượcxuấtbảnvàotrangHTML\nMacromediaFlash5MediaspaceClub#17\n<html>\n<head>\n<title>Flower</title>\n<metaname=\"GENERATOR\"content=\"MicrosoftFrontPage3.0\">"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 88,
    "text": "88</head>\n<body>\n<tableborder=\"0\"cellpadding=\"3\"width=\"100%\">\n<tr>\n<tdalign=\"right\"valign=\"top\"width=\"50%\"><imgsrc=\"Flower.gif\"width=\"360\"\nheight=\"360\"\nalt=\"Flower.gif(6931bytes)\"><br>\n<fontsize=\"2\"><em>GifFileofFlash5</em></font></td>\n<tdvalign=\"top\"width=\"40%\"><fontsize=\"3\"face=\"Arial\"><strong>YourHeadingGoes\nHere</strong></font><p><font\nsize=\"2\"face=\"Arial\">Loremipsumdolorsitamet,consectetueradipiscingelit,seddiem\nveroerosetaccumsanet\niustoodiodignissimquiblanditpraesentluptatumzzrildelenitaugueduisdolorete\nfeugatnullafacilisi.</font></p>\n<p><fontsize=\"2\"face=\"Arial\">Utwisienimadminimveniam,quisnostrudexercitaion\ndolorsitamet,\nconsectetueradipiscingelit,seddiemnonummynibheuismodtinciduntutlacreetdolore\nmagnaaliguameratvolutpat.\n</font></p>\n<p><fontsize=\"2\"face=\"Arial\">Duisautemdolorinhendreritinvulputatevelitesseet\niustoodiodignissimqui\nblanditpraesentluptatumzzrildelenitaugueduisdoloreteeugatnullafacilisi.\n</font></td>\n<tdwidth=\"10%\"></td>\n</tr>\n</table>\n</body>\n</html>\n+Nếunhúngtậptin.JPGthìmãHTMLlà:\n<imgsrc=\"Flower.jpg\"width=\"360\"height=\"360\"alt=\"Flower.jpg(10323bytes)\"><br>\n6.5.3Giảithíchcácthẻ\n+Thẻ<Object>:dùngvớitrìnhduyệtInternetExplorercủaMicrosoft.\n<ObjectClassid=”mãsố”Width=”value”Height=”value”CodeBase=”Url”>\n<ParamName=”Movie”Value=”tênfile.Swf”>\n<ParamName=”Quality”Value=”chấtlượng”>\n<ParamName=”Bgcolor”Value=”màu”>\n<ParamName=”Play”Value=”True|False”>\n<ParamName=”Loop”Value=”True|False”>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 89,
    "text": "89</Object>\n+Thẻ<Embed>:dùngvớitrìnhduyệtCommunicator/NavigatorcủaNetscape.\n<EmbedSCR=”têntậptin.Swf”Width=”value”Height=”value”\nPlay=”True|False”Quality=”chấtlượng”Loop=”True|false”Bgcolor=”màu”\nPluginspage=”Url”>\n</Embed>\n+Cácthuộctính:\n++MOVIE:đườngdẫncủatậptin.Swf.(bb)\nVd:File://MyWeb/Flash/Movie99.swf\nVd:Http://MyWeb/myFlash/Movie98.swf\n++SCR:đườngdẫncủatậptin.Swf.(bb)\n++Width:quiđịnhkíchthướcngang.(bb)\n++Height:quiđịnhkíchthướcdọc.(bb)\n++Classid:chứaIDkiểmsoátActiveXcủaFlashLayer,cầnnhậpchínhxáctheođúng\nsốLicencecủađĩađãcài.(bb)\n++Codebase:Url,chứaIDkiểmsoátActiveXcủaFlashLayerđượctảixuốngInternet\nExplorer(bb)\n++Pluginspage:Url,chứaIDkiểmsoátActiveXcủaFlashLayerđượctảixuống\nNetscape(bb)\n++Name:chứatênthuộctínhdùngđặtthuộctính.(khôngbb)\n++Play:kiểmsoáttìnhtrạngtrìnhchiếucủahoạthìnhkhinạplêntrangHTML,\nTrue:chiếungay,False:chờngườisửdụngtácđộng.(mặcđịnhlàTrue,khôngbb)\n++Bgcolor:thiếtlậpmàunềnchođoạnhoạthình.(khôngbb)\n++Quality:chấtlượngthểhiệnhoạthìnhtheotốcđộCPUcủamáytính,cóthểlà:\nLow,Autolow,Autohigh,High,Best(mặcđịnhlàHigh,khôngbắtbuộc).\n++Loop:cho/khôngchohoạthìnhtrìnhchiếulậpđilậplại,True:cho,False:chỉchiếu1\nlần.(mặcđịnhlàTrue,khôngbb)\n++Scale:quiđịnhcửasổhoạthình.(mặcđịnhlàShowall,khôngbb)\n-Showall:hoạthìnhhiệnđủtrongcửasổ.\n-Noborder:hoạthìnhhiệntrongcửasổkhôngcóđườngviền,cóthểbịcắttheokhung.\n-Exactfit:hoạthìnhhiệntheotỉlệkhớpvớicửasổ.\n++SAlign:Canhbiênhoạthìnhtheocửasổ.(khikíchhoạthình<>kíchthướccửasổ,\nmặcđịnhlàcanhgiữatâmcửasổ,khôngbbvìkhôngcầnthuộctínhnày)\n-T:canhTop.\n-B:canhBottom.\n-L:canhLeft.\n-R:canhRight.\n-TL:canhTop_Left."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 90,
    "text": "90-TR:canhTop_Right.\n-BL:canhBottom_Left.\n-BR:canhBottom_Right.\n++WMode:thayđổichếđộmàucủacửasổhoạthình.(mặcđịnhlàWindow,khôngbb)\n-Window:hoạthìnhnằmtrongcửasổcóchấtlượngtốtnhất.\n-Opaque:nộidungtrêntrangHTMLđượcđưalêntrênkhunghình.(vìcửasổmờđục\nkhôngthấyđược)\n-Transparent:Nềncủahoạthìnhtrongsuốt,cóthểthấyđượcbêndướihình.\n++Swliveconnect:dùngkhitrongFlashcólậptrìnhJavaScripting,True:chophépJava,\nFalse:khôngcóJava.(mặcđịnhlàFalse,khôngbb).\nBàithựchànhsố6:\n1.DùngcôngcụMacromediaFlashMX2004,hãythiếtkếmộtlogovàbannervềtrường\ncủabạnvàchènvàotrangweb.\n2.DùngcôngcụMacromediaFlashMX2004làmmộtđoạnfilmFlashvàchènvàotrang\nweb.\nBÀI7:THIẾTLẬPCÁCSTYLE"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 91,
    "text": "91Mụctiêuthựchiện:\nHọcxongbàinàyhọcviênsẽcókhảnăng:\n-XâydựngvàlưutrữcácStylebêntrongmộtWebSite\n-TrìnhbàytrangWebvớicácStyle\n7.1KháiniệmcơbảnvềCSS\nBảngkiểu(stylesheet)làmộttậphợpnhữngđịnhnghĩavềkiểumàcóthểápdụng\nchonhữngphầntửcủamộttrangHTML.Haynóimộtcáchkhácbảngkiểuchỉđơnthuầnlà\nnhữngtậptinvănbảnchứanhữngmãđịnhdạngthíchhợp.CònCSS,haychỉđơngiảnlà\nstyle,chophépbạngánnhiềuthuộctínhcùnglúcchotấtcảphầntửnàođượcđánhdấu\nbằngmộtthẻcụthểtrêntrangWeb.MặcdùcóthểđịnhdạngbằngthẻHTML,nhưngstyle\nvẫncónhiềuưuđiểmvượttrội.Nóitómlạicsslàchuẩnxácđịnhcáchthứcấnđịnhkiểuvà\nđượcgọilàCascadingStyleSheets-Trangkiểuxếplớp.Trướckhichúngtaxétcặnkẽphần\nnàychúngtôinêuracácbàiminhhoạtrongphầnsau.\n7.2TrìnhbàytrangWebvớicácStyle\nBàiminhhoạ1:\n<HTML><HEAD><TITLE>Bài1</TITLE></HEAD><BODY>\n<H1>VôLý?!!</H1>\n<IMGSRC=cogai.jpgALIGN=left>\n<BR>Cũngchẳngbiếtvìđâumàkhóc\n<BR>Khianhđiquakhôngkịpnhìnmình.\n<BR>Bướcvộivã,cóđiềugìphíatrước.\n<BR>Cóđiềugìmàkhôngphảilàem?\n<BR>Nỗimủilòngcứthếngậptrongtim\n<BR>Khôngbiếtgiócứàolêntừngđợt\n<BR>Cũngchẳngbiếtvìsaomìnhchẳngtanthànhnước\n<BR>Chảyngượcchiềuđườnganh.\n</BODY></HTML>\nKếtquảbài1trêntrìnhduyệtlà:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 92,
    "text": "92VôLý?!!\nCũngchẳngbiếtvìđâumà\nkhóc\nKhianhđiquakhôngkịpnhìn\nmình.\nBướcvộivã,cóđiềugìphía\ntrước.\nCóđiềugìmàkhôngphảilàem?\nNỗimủilòngcứthếngậptrongtim\nKhôngbiếtgiócứàolêntừngđợt\nCũngchẳngbiếtvìsaomìnhchẳngtanthànhnước\nChảyngượcchiềuđườnganh.\nBàiminhhoạ1làtrangwebbìnhthườngkếtquảnhưhìnhtrên.Bâygiờtatiếptục\nxétbàiminhhoạ2sau:\nBàiminhhoạ2\n<HTML><HEAD><TITLE>Bàiminhhoạ2</TITLE>\n<STYLE>\nDIV.yellowback{background:yellow}\n</STYLE>\n</HEAD><BODY>\n<H1>VôLý?!!</H1>\n<IMGSRC=cogai.jpgALIGN=left>\n<BR><DIVCLASS=yellowback>Cũngchẳngbiếtvìđâumàkhóc\n<BR><DIVCLASS=yellowback>Khianhđiquakhôngkịpnhìnmình.<BR><DIV\nCLASS=yellowback>Bướcvộivã,cóđiềugìphíatrước.\n<BR><DIVCLASS=yellowback>Cóđiềugìmàkhôngphảilàem?\n<BR><DIVCLASS=yellowback>Nỗimủilòngcứthếngậptrongtim\n<BR><DIVCLASS=yellowback>Khôngbiếtgiócứàolêntừngđợt\n<BR><DIVCLASS=yellowback>Cũngchẳngbiếtvìsaomìnhchẳngtanthànhnước\n<BR><DIVCLASS=yellowback>Chảyngượcchiềuđườnganh.\n</BODY></HTML>\nVớibàiminhhoạ2mãnguồngiốngnhưmãnguồncủabàiminhhoạ1,chỉcókháclà\nthêmmộtđoạnmã:\n<STYLE>\nDIV.yellowback{background:yellow}"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 93,
    "text": "93</STYLE>\nĐâylàđoạnmãdẫntớikếtquảnhưhìnhtrênvàchínhchúngtađangsửdụnghiệulựccủa\ncáchứngdụngbảngkiểu.Bâygiờtađivàonghiêncứucụthể.\nKếtquảminhhoạ2trêntrìnhduyệtlà:\nVôLý?!!\nCũngchẳngbiếtvìđâumàkhóc\nKhianhđiquakhôngkịpnhìn\nmình.\nBướcvộivã,cóđiềugìphía\ntrước.\nCóđiềugìmàkhôngphảilàem?\nNỗimủilòngcứthếngậptrongtim\nKhôngbiếtgiócứàolêntừngđợt\nCũngchẳngbiếtvìsaomìnhchẳngtanthànhnước\nChảyngượcchiềuđườnganh.\nĐâylàđoạnmãdẫntớikếtquảnhưhìnhtrênvàchínhchúngtađangsửdụnghiệu\nlựccủacáchứngdụngbảngkiểu.Bâygiờtađivàonghiêncứucụthể.\nBàiminhhoạ3:\n<HTML>\n<HEAD>\n<TITLE>Bai1</TITLE>\n<STYLE>\nH1{Font-Size:16pt;Font-weight:bold;color:red}\nH2{Font-style:italic;Font-Size:24pt;COLOR:green}\nSPAN{Font-weight:bold;Font-style:italic}\n</STYLE>\n</HEAD>\n<BODY>\n<SPAN>\n<SPAN>TrườngthptLongChâuSa</SPAN>\n<H1>TrườngTHPTLongChâuSa</H1>\n<H2>TrườngTHPTLongChâuSa></H2>\n<BODY>\n</HTML>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 94,
    "text": "94Vớibài3thìdòngvănbảntrongH1cócỡ16,chữđậmvàcómầuđỏ;cònvănbảntrongH2\ncókiểuchữnghiêng,cỡ24vàmầugreen.DòmgvănbảntrongSPANlàkiểuchữnghiêngvà\nđậm(xemkếtquảtrongtrìnhduyệt).Bạnđọctựtrảlờichomìnhvềsựkhácnhaugiữatrang\nwebcósửdụngbảngkiểuvàkhôngsửdụngbảngkiểu.Bạntựviếtbài1ởdạngkhông\ndùngbảngkiểu.Đểhiểurõhơntatiếptụcxétbàiminhhoạdướiđây:\nBàiminhhoạ4:\n<HTML>\n<HEAD>\n<TITLE>Bai2</TITLE>\n<STYLE>\nH1{Font-Size:16pt;Font-weight:bold;color:red}\nH2{Font-style:italic;Font-Size:24pt;COLOR:green}\nSPAN{Font-weight:bold;Font-style:italic}\n</STYLE>\n</HEAD>\n<BODY>\n<SPAN>\n<SPAN>TrườngthptLongChâuSa</SPAN>\n<H1>TrườngTHPTLongChâuSa</H1>\n<H2>TrườngTHPTLongChâuSa</H2>\n<H2STYLE=Font-Size:36pt>TrườngTHPTBCLONGCHÂUSA</H2>\n</BODY></HTML>\nBàitiếptheo\n<HTML>\n<HEAD>\n<TITLE>bai3</TITLE>\n<STYLETYPE=”text/css”TITLE=”lcsa”>\nBODY{color:white}\nP{color:blue;\nfont-size:12pt;\nfont-family:Arial}\nH1{color:red;\nFont-size:18pt}\n</STYLE>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 95,
    "text": "95</HEAD>\n<BODY>.\nTrườngTHPTBCLongChâuSa\n</BODY>\n</HTML>\nVớiđoạnmãtrêntacầnhiểu:\n1/<STYLETYPE=”text/css”hiểulàtoànbộcácvănbảntrongtrangwebđềuđượcbiểudiễn\ntheokiểucss\n2/BODY{color:white}<BODY>TrườngTHPTLongChâuSa</BODY>\nđềucómầu:white.\n3/P{color:blue;font-size:12pt;font-family:Arial}toànbộđoạnvăn\nnằmtrongđoạn<p>đềucómầu:bluevớicỡchữlà12pt,phôngchữlàArial.\n4/H1{color:red;Font-size:18pt}tiêuđềcómầuđỏvớicỡchữlà18pt\n-SPANlàmộtphầntửdòng,cónghĩalànócóthểthamgiavàođoạnvănbản\nvàkhôngtạoramộtngắtdòng.NgoàiratacũngcóthểbiểudiễnthẻSPAN:\nSPAN{color:rgb(0,0,255)};SPAN{color:#ggbbff}\n<HTML>\n<HEAD>\n<TITLE>Bai4</TITLE>\n<STYLE>\nSPAN{\nFont-weight:bold;Font-style:italic\n}\n</STYLE>\n</HEAD>\n<BODY>\n<palign=\"left\"><fontcolor=\"#800000\">\n<SPAN>TRƯỜNGTHPTBCLONGCHÂUSA</SPAN>\n</font><br><fontcolor=\"#800080\">TRƯỜNGLONGCHÂU\nSA</font><br>\n<fontcolor=\"#008000\">\n<SPAN>TRƯỜNGTHPTLONGCHÂUSA</SPAN></font><BR>\n<fontcolor=\"#FF00FF\">TRƯỜNGTHPTLONGCHÂU\nSA</font><BR>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 96,
    "text": "96<fontcolor=\"#0000FF\">\n<SPAN>TRƯỜNGTHPTPHONGCHÂU</SPAN></font><BR>\n<fontcolor=\"#008080\">TRƯỜNGTHPTPHONGCHÂU</font><BR>\n</p>\n</BODY>\n</HTML>\nỞbàiminhhoạ4,cóxuấthiệnhaithẻ:<STYLE>và<SPAN>\n-Thẻ<STYLE>phảinằmtrongphần<HEAD>.Dùngquyđịnhdạngbiểumẫuchung\nkhihiểnthị,giúpngườisoạnthảođỡmấtcônglặpđilặplạicùngmộtquyđịnh.\nBàiminhhoạ5:\n<HTML>\n<HEAD>\n<TITLE>Bai5</TITLE>\n<LINKHREF=\"styles.css\"REL=STYLESHEETTYPE=\"Text/css\">\n</HEAD>\n<BODY>\n<SPAN>\n<SPAN>TrườngthptLongChâuSa</SPAN>\n<H1>TrườngTHPTLongChâuSa</H1>\n<H2>TRƯỜNGTHPTLONGCHÂUSA</H2>\n<H2STYLE=Font-Size:36pt>TrườngTHPTBCLONGCHÂUSA</H2>\n</BODY>\n</HTML>\nVớibàiminhhoạ5tasửdungmộtkháiniệmLINK.ThẻLINKchứathuộctínhHREF.\nGiốngnhưthể<IMG>HREFsẽxácđịnhvịtrícủatậptinđích.ThuộctínhRELsẽđịnhrõ\nrằngliênkếtnàylàmộtthamchiếuđếnmộtbảngkiểuvàthuộctínhTYPEđịnhróloạibảng\nkiểu.Tạithờiđiểmhiệntạithìtext/csslàloạibảngkiểuđượchỗtrợphổbiếnduynhất.Bảng\nkiểuliênkếtcóảnhhưởngtớihồsơHTML.MọiphầntửtronghồsơHTML,màthẻcủa\nchúngđượcđịnhnghĩatrongtậptinstyle.csssẽđượcthểhiệnbằngcáchsửdụngkiểuđã\nđượcxácđịnh.\nBàiminhhoạ6:\n<HTML>\n<HEAD>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 97,
    "text": "97<TITLE>Bai6</TITLE>\n<STYLE>\n.large\"{Font-Size:24pt}\n.small{Font-Size:8pt}\n</STYLE>\n</HEAD>\n<BODY>\nStandardtext\n<H2CLASS=\"small\">TrườngthptLongChâuSa</H2>\n<SPANCLASS=\"large\">TrườngTHPTLongChâuSa</SPAN>\n<PCLASS=\"small\">TrườngthptLongChâuSa</p>\n<BCLASS=\"large\">TrườngthptbcLongChâuSa</B>\n</BODY>\n</HTML>\nVớibàiminhhoạ6tađãsửdụngtớikháiniệmCLASS(smallvàlarge).csscóthểhỗ\ntrợchoviệctạolớp.Nóimộtcáchđơngiảnhơn,bạnmuốntạocáclớpcủaphầntửB-Kiểu\nchữinđậm,nhưngtrongđịnhnghĩalớpsẽlàmthayđổikíchcỡphôngchữcủanhữngphần\ntửBxácđịnh.BạncóthểápdụngmộtlớpvàomộtphầntửbằngthuộctínhCLASSnhư\ntrongthẻ<B>củbàitrên..nhưvậylớpđượcxácđịnhbởitêncủaselector,tứclàbạncóthể\nsửdụngchothẻbấtkìnàotrongtrangwebcủamình\nBàiminhhoạ7:\n<HTML>\n<HEAD>\n<TITLE>Bai7</TITLE>\n<STYLE>\nSPAN{\nFont-family:“ArialWestern”,Verdana,sans-serif;\nFont-style:italic;\nFont-variant:small-caps;\nFont-weight:700;\nFont-Size:18pt;\n}\n</STYLE>\n</HEAD>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 98,
    "text": "98<BODY>\nThissentenceisstandardtextthathasnocustomstyle.\nThissentenceisalsostandardtextthathasnocustomstyle.\n<HR>\n<SPAN>ThistextusesthecustomSPANstylewecreated.</SPAN>\n<HR>\nAsyoucansee,somepartsofthisparagraph<SPAN>useour\nCustomSPANstyle,</SPAN>andsomedonot.Thisparagraph\nDemonstrateshowthetwotypesoftextcaninteractandhow\nLinespacingorwrappingcanbeaffectedbymixingstyles.\n</BODY>\n</HTML>\nTrongbàiminhhoạ7tađãsửdụngcácthuộctínhvềFONTSvàTEXT.Đólà:\n1/Font-Familyxácđịnhkiểuchữmàtrìnhduyệtsửdụngkhihiểnthịfont\n2/Font-Variantđượcthiếtlậplàsmall-caps:mọichữcáiđềuviếthoa\n3/Font-weighcócácgiátrịnormal,bold:đậm,border:đậmhơn,lighter:nhạthơn\n4/Font-sizekíchcỡphôngchữ\n5/Font-styleđượcthiếtlậpkiểuchữnormalvàkiểuchữnghiêng(italicvàoblique)\n6/Text-Align=left/right/center/justify\n7/Text-Indentxácđịnhdòngđầutiêntrongkhốivănbảnsẽđượcthụtvàomột\nkhoảngcógiátrịlà(theođơnvị:emhoặcpx)\n8/Text-Decorationcóthểthiếtlậplàunderline,overline,line-through,blinkhoặc\nname.Underline,overline,line-throughUserlàmxuấthiệnnhữngđườngthẳngdọctheovăn\nbảnởnhữngchiềucaokhácnhau\n9/Text-transformkiểmsoátviệcviếthoavănbản.Capitelize:viếthoachữcáiđầu\ntiêncủamọitừ,uppercase:Viếthoamọichữcáicủamọitừ.Lowercase:viếtthường,\nnone:loạibỏchếđộviếthoađượcthừahưởng.\n10/Vertical-Alignchophéptathiếtlậpvănbảnlàsubscript(sub)hoặcsuperscript\n(super).Thuộctínhnàykhôngchophépbạnthiếtlậpchínhxáckhoảngcáchmàvănbảnsẽ\nđượcdichuyểnđi\n11/Letter-spacingkiểmsoátkhoảngcáchgiữamỗikítựtrongvănbảnvànóthường\nđượcthểhiệntheođơnvịđolàemhoặcpx\n12/Line-Heightxácđịnhkíchthướctổngthểcủadòngvănbản,baogồmkhoảng\ntrắngphíatrênvàdướikítự.ThểDIVlàthẻsohàngvănbảntheolề.Chẳnghạnnhư:\n<DIVALIGN=”Left”>THPTLongChâuSa</DIV>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 99,
    "text": "99<DIVALIGN=”center”>TrườngTHPTLongChâuSa</DIV>\n<DIVALIGN=”right”>TrườngTHPTLongChâuSa</DIV>\nXongcácthẻDIVvàSPANtựchúngkhôngtạorahiệuứngnhiềulắm.Tuynhiên,có\nthểkếthợpchúngvớicáclớpIDđểtạocácthẻHTMLtuỳbiến.DIVdùngchocácphầntử\ncấpđộkhối,cònSPANdùngchocácphầntửnộituyến.cácthẻP.BODY,H1,TABLElàthẻ\ncấpđộkhối,cònFONT,IMGlàthẻcấpđộnộituyến.Bâygiờtatómtắtcácmẫucâulệnh\ntrongđịnhdạngvănbảntheokiểudáng:\nChọnhọphôngchữ:ĐểđặthọphôngchữtagõtrongthẻSTYLE\nFont-family:font1,font2,font3,…Vídụ:\n<HTML>\n<HEAD>\n<STYLE>\nH1{font–family:”Arial”,”NuevaRoman”}\nP{font–family:“Arial”,”MyriodRoman”,”Verdana”}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n<P>Thisistheelement<EM>withitsdefault</EM>styleas\ndisplayedinthebrowser</P>\n</BODY>\n</HTML>\nTạochữnghiêng:GõFont-style:obligue(tạochữnghiêngkhôngchân),hoặc\nitalic(tạochữnghiêngcóchân),hoặcnormal(bỏchữnghiêng)\n<HTML>\n<HEAD>\n<STYLE>\nH1{font–family:”Arial”,”NuevaRoman”}\nP{font–family:“Arial”,”MyriodRoman”,”Verdana”}\nP.intro{Font-style:italic}\nP.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 100,
    "text": "100<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n<Pclass=intro>Bạnđánhvàidong<EM>vàođây</EM>để\nminhhoạstyle</P>\n</BODY>\n</HTML>\nTạochữđậm:GõFont-weight:bold,bolder,lighter(bolderhay\nlighter-tạogiátrịtươngđốisovớiđộđậmnhạthiệnthời),hoặc\nnormal(huỷbỏđộđậmnhạthiệnthời).\n<HTML>\n<HEAD>\n<STYLE>\nH1{font–family:”Arial”,”NuevaRoman”}\nP{font–family:“Arial”,”MyriodRoman”,”Verdana”}\nP.intro{Font-style:italic;Font-weight:bold}\nP.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<Pclass=intro>Bạnđánhvàidòng<EM>vàođây</EM>để\nminhhoạstyle</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n</BODY>\n</HTML>\nThiếtlậpkíchcỡphông:GõFont-size:xx-small,xsmall,small,medium,large,x-large,\nxx-largehoặcgõkíchcỡphôngtươngđối,hoặcchocỡphôngchínhxác:12pt,15pt,hoặc\ngõtỉlệphầntrăm150%\n<HTML>\n<HEAD>\n<STYLE>\nH1{Font-size:20pt;Font-weight:normal;font–\nfamily:”Arial”,”NuevaRoman”}\nP{Font-size:10ptfont–family:“Arial”,”Myriod\nRoman”,”Verdana”}\nP.intro{Font-style:italic;Font-weight:bold}"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 101,
    "text": "101P.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<Pclass=intro>Bạnđánhvàidòng<EM>vàođây</EM>để\nminhhoạstyle</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n</BODY>\n</HTML>\nThiếtlậpđộcaodòng:GõFont-height:10pthoặc10pxhoặcgõ100%_tỷlệsovới\nkíchcỡphông.Hoặccóthểthiếtlậpđồngthờitoànbộcácgiátrịchophông:Normal,\nobligue,italic,bolder,lighterhoặcsmall-laps….\n<HTML>\n<HEAD>\n<STYLE>\nH1{Font-size:20pt;Font-weight:normal;font–\nfamily:”Arial”,”NuevaRoman”}\nP{Font-height:15ptFont-size:10ptfont–family:\n“Arial”,”MyriodRoman”,”Verdana”}\nP.intro{Font-style:italic;Font-weight:bold}\nP.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n<Pclass=intro>Bạnđánhvàidòng<EM>vàođây</EM>để\nminhhoạstyle</P>\n</BODY>\n</HTML>\nĐặtmàuchữvănbản:Gõcolor:colornone,#rrggbbhoặcrgb(r,g,b)hoặcgõrgb\nr%,g%,b%).\n<HTML>\n<HEAD>\n<STYLE>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 102,
    "text": "102H1{color:yelow;Font-size:20pt;Font-weight:normal;font–\nfamily:”Arial”,”NuevaRoman”}\nP{Font-height:15ptFont-size:10ptfont–family:\n“Arial”,”MyriodRoman”,”Verdana”}\nP.intro{Font-style:italic;Font-weight:bold}\nP.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n<Pclass=intro>Bạnđánhvàidòng<EM>vàođây</EM>để\nminhhoạstyle</P>\n</BODY>\n</HTML>\nThayđổinềnvănbản:GõBackground:transparenthoặcgõcolorhoặcurl\n(image.gif)hoặcnếumuốngõrepeatđểxếpảnhliêntục:\nRepeat-x:xếpảnhliêntụctheochiềungang\nRepeat-y:xếpảnhliêntụctheochiềuđứng.\nNo-repeat:Huỷbỏchếđộxếpảnh.Pixelhoặccolorđểchỉđịnhnềncốđịnhhoặc\ncuộncùngảnh.\n<HTML>\n<HEAD>\n<STYLE>\nH1{Background:green;color:yelow;Font-size:20pt;Font-\nweight:normal;font–family:Arial}\nP{Font-height:15pt;Font-size:10pt;font–family:\n“Arial”,”MyriodRoman”,”Verdana”}\nP.intro{Font-style:italic;Font-weight:bold}\nP.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n<Pclass=intro>Bạnđánhvàidòng<EM>vàođây</EM>để"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 103,
    "text": "103minhhoạstyle</P>\n</BODY>\n</HTML>\nĐiềukhiểnkhoảngcách:GõWord-spacing:length(cógiátrịthườngbằngpixel,\npoint,em,v.v…).\n<HTML>\n<HEAD>\n<STYLE>\nH1{lefter-spacing:5em;Background:green;color:yelow;Font-\nsize:20pt;Font-weight:normal;font–family:Arial}\nP{text-indent:8pt;Font-height:15pt;Font-\nsize:10pt;font–family:Arial,MyriodRoman,Verdana}\nP.intro{text-indent:0pt;Font-style:italic;Font-weight:bold}\nP.introEM{Font-style:normal}\n</STYLE>\n</HEAD><BODY>\n<P>Đâylàtrangwebmôtảvềcáchlựachọncácphông</P>\n<H1>Chàocácbạnđếnvớichươngtrìnhhọcweb</H1>\n<Pclass=intro>Bạnđánhvàidòng<EM>vàođây</EM>để\nminhhoạstyle</P>\n</BODY>\n</HTML>\nChỉđịnhkhoảngcáchgiữacácchữcái:Gõletter-spacing:length.Đểthụtlềgõtext-\nindent:%.(ápdụngbàitrên)\nThiếtlậpthuộctínhkhoảngtrốngtrắng:Gõwhite-space:prehoặcnowrep(giữchocác\nphầntửtrêncùngmộtdòng)hoặcnormal(theochếđộbìnhthường).(ápdụngbàitrên)\nCănlềvănbản:GõText-align:left,right,center,justify(cănđềuvănbảncảhaibên)\n(ápdụngbàitrên)\nĐểgạchchâncácdòngchữ:GõText-decoration:underline,hoặcgõoverlinehoặcline-\nthrough(gạchbỏdòngchữ)hoặcgõnone(đểhuỷbỏ).\nThayđổikiểuchữ:GõText-transform:\nCepitelize:Chuyểnchữcáiđầuthànhchữhoa.\nUppercase:chuyểntấtcảthànhchữhoa.\nFowercase:Chuyểntấtcảthànhchữthường."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 104,
    "text": "104None:trởlạinhưtrước.\nChuyểnchữhoanhỏ:GõFont-variant:small-caps(hoặcnone).\nChúngtađãxétcácbàitậpvềcss,đểbạnđọchiểurõhơncáchsửdụngcsstrongcác\ntrangwebđộngchúngtôitổnghợplạimộtsốthủthuấtvềcáchlậptrìnhtrangwebđộng\ntheocss,cáctrangwebđãnêuởtrênphầnlớntasửdụngcáckiếnthức:Môtảstyletrên\ndòng,môtảtrangStyle,môtảtrangstyletrongjavascript,địnhnghĩathuậtngữtrangstyle,\nliệtkênhữnglợiíchcủatrangstyle,liệtkênhữngkỹthuậtứngdụngcủatrangstyle,giải\nthíchphântầng(Cascading)\n7.3Styletrêndòng\nMộtđặctínhquantrọngcủaDynamicHTMLlàbạncóthểthayđổistylecủavôsố\nthànhphầnHTMLtrêntrangsaukhikiểnthịnótrongtrang.Thayđổicólẽđáplạitươngtác\nngườidùnghoặcthayđổitrạngtháinhưbiếncốchỉnhlạikíchthước.\nCóhaicáchthayđổistylecủatrang:\n+Đổistyletrêndòng\n+Viếtkịchbảnđổistyle\nThôngquastyletrêndòng,cóthểtạostyleđộngmàkhôngthêmbấtcứkịchbảnnào\nvàotrang.\n“Styletrêndòng”làstylegánchothànhphầncụthể.Stylekhôngápdụngchomọithành\nphầnthuộcloạihaylớpnàođó.ĐịnhnghĩaStyletrêndòngbằngthuộctínhSTYLEchothẻ\ncủathuộctính.Vídụ,nếumuốnấnđịnhmàu<H1>(Heading1)ởmàuđỏ,bạnấnđịnh\nthuộctínhSTYLEcủathẻH1.\n<H1STYLE=”color:red”>\nStyleObjectchophépsửađổistyletrêndòngbấtcứlúcnàothôngquakịchbản.Style\nObjecthỗtrợtừngthuộctínhmàCSShỗtrợchostyle.Muốnứngdụngthuộctínhtrongviết\nkịchbản:\n+XoádấugạchnốikhỏitênthuộctínhstyleCSS.\n+Đổimẫutừđầucủatừđứngsaudấugạchnốisangchữhoa.\nVídụthuộctínhfont–weighttrongCSStrởthànhfontWeighttrongDHTML.Hoặctext–\naligntrởthànhtextAlign,…\nChúngtasẽdùngstyletrêndòngđểấnđịnhthuộctínhthànhphần<P>.Xemđoạnmãnày\ntrongInternetExplorer.\n<HTML>\n<HEAD>\n<TITLE>Thiếtlậpthuộctính</TITLE>\n</HEAD>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 105,
    "text": "105<BODY>\n<Pstyle=”color:aqua;font–style:italic;text–align:center;”>\nThisparagraphhasaninlinestyleappliedtoit\n<BR>\n<P>Thisparagraphisdisplayedinthedefaultstyle.\n<BR.\n<P>canyouseethe<SPANstyle\n=color:red>difference</SPAN>inthisline\n</BODY>\n</HTML>\n7.4Giớithiệutrangstyle\nTrangstylelànơiquảnlývàđiềukhiểnstyle.Trangstylemôtảhìnhthứcvàtrìnhbày\ntàiliệuHTMLkhihiểnthịtrênmànhình,hoặcthậmtrítrongbảnin.Trongthựctế,cóthể\nxemnólàtemplateđặtcơsởchotàiliệuHTML.Ngoàira,cóthểxácđịnhchínhxácvịtrívà\nhìnhthứccủacácthànhphầntrêntrangvàtạohiệuứngđặcbiệt.Vídụ,tạostyleđịnhstyle\ncho<H1>làđậmnghiêngvàmàuxanh.Hoặchiểnthịthànhphần<P>ởmàuđỏvớiphông\nchữArial.\nCóthểquyđịnhthôngtinstylemongmuốnởmọinơi–trangstyle.Trangstylecóthể\nliênkếtvớitấtcảcáctrangwebsitenhằmtạovềnhấtquántrêntoànbộsite.Quyđịnhnhiều\ntrangstylevàkếtchúngcùngtậphợptrangWeb,tăngthêmtínhlinhhoạttrongquátrìnhtạo\ntrangWeb.\nNgàynaytrangWebthậmchíkhôngcótrangstyle.Khôngcónguyêntáccứngnhắc\nvềchuyệnnày.giảnhưkhôngđịnhrõstyle,trìnhduyệtápdụngquyướcriêng.Vídụ,luôn\nhiểnthịđềmục<H1>theocùngmộtcách.Đoạnvàlềcũngthế.Tuynhiên,thôngquatrang\nstyle,cóthểquyđịnhcáchthứchiểnthịđềmục<H1>trongtrìnhduyệt.\nVềmặtlýthuyết,cóthểứngdụngcôngnghệtrangstylebấtkỳvớiHTML.Nhưngtrongthực\ntế,chỉhỗtrợcôngnghệCSS(CascadingStyleSheet).BảnthânCSSlàchuẩnđangđược\nW3CpháttriểnđểứngdụngtrongtrìnhduyệtWeb.\nBảngởcuốichươngliệtkêmộtsốthuộctínhCSSkhảdụngtrongDynamicHTML.\nKhiápdụngtrongkịchbản,xoádấugạchnốivàviếtmẫutựđầucủatừđứngsaugạchnối.\nVídụ,font–sizeđổithànhfontsize.Bâygiờtaxétmộtsốnộidung:\n-TrangstyleJavascipt\nNetscapehỗtrợCSS.NócũnghỗtrợtrangstyleđượcviếtbằngJavaScriptvàtheo\nmôhìnhtàiliệu(DOM).Khixácđịnhtrangstyle,cóthểkhaibáokiểulà:\n“text/CSS”–TrongtrườnghợpnàynótìmcúphápCSS."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 106,
    "text": "106“text/JavaScript”–TrongtrườnghợpnàynótìmcúpháptrangstyleJavaScript.\nKhiápdụngcúphápJavaScripttrongthànhphần<STYLE>,bạnphảiđịnhrõthuộc\ntínhthẻcủađốitượngdocument.\nTrongDOM,cácthànhphầnHTMLđượcxemlàđốitượng.Đốitượngcóthuộctính\ncóthểtruycậpđểxácđịnhhìnhthứcvàstylecủathànhphần.Đếnphiênthuộctínhđóng\nchứcnăngnhưđốitượngthuộctậphợpthuộctính.Vídụ,trangWebđượcxemlàđốitượng\ndocument.Đốitượngdocumentcóthuộctínhthẻ.ThuộctínhthẻcóđốitượngH2.Đối\ntượngH2cóthuộctínhcolorcóthểtruycậpvàthayđổikhicần.\nDocument.tags.H2.color=“limegreen”;\nÄthuộctínhthẻápdụngchotàiliệuhiệnhành,dođócóthểlượcbỏtàiliệukhỏicầu\nlệnhdocument.tags.\n<HTML>\n<HEAD>\n<STYLETYPE=“text/javascript”>\ntags.P.fontSize=”25pt”;\ntags.P.marginLeft=”15pt”;\ntags.H2.color=”hotpink”;\n</STYLE>\n</HEAD>\n<BODY>\n<H2>ThisisanH2elementwithastyleapplied</H2>\n<BR>\n<P>Thisisparagraphelement\n</BODY>\n</HTML>\nMọithànhphầnkhácthừahướngtừthànhphần<BODY>.Nếumuốnápdụngstyle\nmặcđịnhchomithànhphầntrongtàiliệu,bạnấnđịnhstylecầnthiếttrongthànhphần\n<BODY>.TácdụngđốivớitrìnhduyệtNetscape.\n<HTML>\n<HEAD>\n<STYLETYPE=”text.javascript”>\ntags.body.color=”limegreen”;\n</STYLE>\n</HEAD>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 107,
    "text": "107<BODY>\n<H2>ThisisanH2element</H2>\n<BR>\n<P>Thisisparagrphelement\n</BODY>\n</HTML>\nápdụngvớiwith:\n<HTML>\n<HEAD>\n<STYLETYPE=”text/css”>\nBODY{color=”limegreen”}\n</STYLE>\n</HEAD>\n<BODY>\n<H2>ThisisanH2element</H2>\n<BR>\n<P>Thisisaparagraphelement\n</BODY></HTML>\nGiảsửphảiấnđịnhvàithuộctínhchothànhphần,cóthểáp\ndụngcúphápwith(tags.element)đểrútngắnmã:\n<HTML>\n<HEAD>\n<STYLETYPE=”text/javascript”>\nwith(tags.P){\ncolor=”hotpink”;\nfontStyle=”italic”;\nfontFamily=”helvetica”;\nfontSize=”20pt”;\n}\n</STYLE>\n</HEAD>\n<BODY>\n<P>Thisisaparagraphelement\n</BODY>\n</HTML>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 108,
    "text": "108-Thuậtngữtrangstyle\nCSSxácđịnhstyleápdụngchotranghaythànhphầntrang.\n+Nguyêntắcstyle:CSSlàtậphợpnguyêntắc.Nguyêntắcxácđịnhstylecủatàiliệu.\nVídụ,tạonguyêntắcstylequyđịnhhếtthảyđềmục<H2>hiểnthịởmàuvàngxanh\n(limegreen).\n+Trangstylelàdanhsáchnguyêntắcstyle.NócóthểlồngtàiliệuHTML.Trong\ntrườnghợpđó,nómangtênlàtrangstylelồng.Hơnnữa,cóthểtạotrangstyledướidạng\ntậptinngoàivàliênkếtvớitàiliệuHTML.\nCóthểápdụngnguyêntắcstylechonhữngphầnđượcchọntrongtrangWeb.Vídụ,\nquyđịnhđoạncụthểhiểnthịởđậmnghiêngtrêntrang.Đâygọilàkhaithácstyletrêndòng,\nápdụngstylelênnhữngthànhphầnHTMLriênglẻtrêntrangWeb.\n+Nguyêntắc–Trangstylecóthểchứanhiềunguyêntắc.Phầnđầucủanguyêntắclà\nbộchọn(selector).Mỗibộchọncóthuộctínhvàgiátrịdikèm.\nARuleSelector{Declarationsproperty:Value;\nProperty:value;…\n}\nPhầnnguyêntắcđặttrongcặpngoặcmóclàkhaibáo(declaration).Khaibáocóhai\nphần,phầnđứngtrướcdấuhaichấmlàthuộctính(property)vàphầnđứngsaudấuhai\nchấmlàgiátrị(value)củathuộctínhđó.\nCáckhaibáophâncáchnhaubằngdấuchấmphảy(;).Khôngbắtbuộcđặtdấuchấm\nphảysaukhaibáocuốicùng.\nH1{color:blue}\nH1làbộchọn,color:bluelàkhaibáo.\nBêntrongkhaibáo:\n{property:Value}\ncolorlàthuộctính,bluelàgiátrị.\nCóthểđặtriêngtừngnguyêntắcbêntrongthẻSTYLE.\n<HTML>\n<HEAD>\n<STYLETYPE=”text/css”>\nH1{color:limegreen}\nH1{font–family:Arial}\nH2{color:limegreen}\nH2{font–family:Arial}\n</STYLE>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 109,
    "text": "109</HEAD>\n<H1>ThisistheH1element</H1>\n<H2>ThisistheH2element</H2>\n<H3>ThisistheH3elementwithitsdefaultstyleasdisplayed\ninthebrowser</H3>\n</HTML>\nThayvàođó,cóthểnhómcácnguyêntắc.Phâncáchtừng\nkhaibáobằngdấuchấmphảy.\n<HTML>\n<HEAD>\n<STYLETYPE=”text/css”>\nH1,H2{color:Limegreen;font–Family:Arial;\n}\n</STYLE>\n</HEAD>\n<H1>ThisistheH1element</H1>\n<H2>ThisistheH2element</H2>\n<H3>ThisistheH3elementwithitsdefaultstyleasdisplayed\ninthebrowser</H3>\n</HTML>\n7.5Bộchọn\nCóthểđịnhnghĩabộchọn(selector)là“chuỗinhậndiệnnguyêntắctươngtácápdụng\nchothànhphầnnào”:\nCóhailoạibộchọncơbản:\n+Bộchọnđơngiản\n*BộchọnthànhphầnHTML\n*Bộchọnlớp\n*BộchọnID\n+Bộchọntheongữcảnh\na)Bộchọnđơngiản\nDễsửdụngnhất.Nómôtảthànhphầnbấtluậnvịtrítrongcấutrúctàiliệu.Kýhiệu\nnhậndiệnđềmụcH1làmộtđiểnhìnhvềbộchọnđơngiản.\nH1{color:blue}\n*BộchọnthànhphầnHTML"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 110,
    "text": "110DùngtênthànhphầnHTML.Khácbiệtduynhấtlàbạncóthểxoácặpngoặc.Dođó\nthẻ<P>trongHTMLtrởthànhP.ởvídụsau,tuyđịnhnghĩastyle,nhưngthànhphầnP\nkhôngcócặpngoặc.SởdĩnhưvậylàvìthànhphầnHTML<P>đượcxemlàbộchọn.\n<HTML>\n<HEAD>\n<STYLETYPE=”text/css”>\nP{font–style:italic;font–weight:bold;color:limegreen}\n</STYLE>\n</HEAD>\nởđâyquyđịnhnộidung<P>.Thànhphần<P>đượcxemlà\nthànhphầnHTML.\n<P>TheseselectorsusethenamesofHTMLelements.The\nonlydifferenceisthatyouremovethebrackets.</P>\n</BODY></HTML>\ntext/csschobiếtstyleđượcápdụnglàcss.\n*BộchọnCLASS\nBộnàysửdụngthuộctínhCLASScủathànhphầnHTML.Mỗithànhphầncóthuộc\nCLASSđượcdùngđểgánkýhiệunhậndiện.Cóthểgántênlớpkhôngtrùnglặpchotừng\nthànhphầnkhácnhau.Thayvàođó,gánkýhiệunhậndiệnlớpchonhiềuthànhphầnthuộc\nlớpđơngiảnkhimuốnhiểnthịcácbiếnthể.vídụ,bạnmuốn<H2>hiểnthịởnhiềumàutuỳ\nbiếnkhácnhau.Trongtrườnghợpđó,ápdụngkýhiệunhậndiệnlớpcho<H2>.\nBộchọnCLASSmởđầubằngdấuchấm(.),kèmtheo“tênlớp”.Tốthơnhếtlàchọn\ntênlớptheomụcđíchcủachúngthayvìtênmôtảmàusắchaystyle.vídụ,bạnthíchđoạn\nAhiểnthịởinnghiêng,nhữngđoạnkhácmangstylekhác,trongtrườnghợpđóđoạnAcó\nthểcókýhiệunhậndịênlớp.slant.\n<STYLETYPE=”text/css”>\n.water{color:blue}\n.danger{color:red}\n</STYLE>\n<pclass=”water”>testwater\n<pclass=”danger”>testdanger\n<p>nostyle\nToànđoạnmã"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 111,
    "text": "111<HTML>\n<HEAD>\n<STYLETYPE=”text/javascript”>\nclasses.water.all.color=”blue”\nclasses.danger.all.color=”red”\n</STYLE>\n</HEAD>\n<pclass=”water”>testwater\n<pclass=”danger”>testdanger\n<p>nostyle\n<BR>\n<EMclass=”danger”>italic</EM>\n</BODY>\n</HTML>\nKhiđótheocúphápJavascript,bạnkhôngthểsửdụngdấu\ngạchnốibêntrongtênlớp.ĐólàdoJavascriptđọcdấugạchnốilà\ntrừ(-)toántửtrongJavascript).Tênlớpkhôngthểbaogồmbấtcứ\ntoántửJavascriptnào.\nkhiđịnhnghĩalớpstyle:\n+CóthểđịnhrõthànhphầnHTMLnàokhaithácstylenày.\n+Dùngtừkhoáđểchophéphếtthảythànhphầnkhaithácnó.\nXemđoạnmãnàytrongNetscapeNavigator:\n<HTML>\n<HEAD>\n<STYLEtype=”text/css”>\nall.hotpink{color:hotpink;}\nP.BLUE{color:blue;font-weight:bold;}\nH5.red1{color:red;font-weight:bold;}\n</STYLE>\n</HEAD>\n<BODYbgcolor=”lavender”>\n<PCLASS=BLUE>thisparagraphisblue.</P>\n<P>ThisparagraphdoesnotusetheclassBLUE.</P>\n<H5CLASS=red1>ThisisanH5elementthattriedtousethered1class</H5>\n<PCLASS=hotpink>Thisparagraphishotpink."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 112,
    "text": "112<H5CLASS=hotpink>ThisisanH5elementthathasbeenallowedtousehotpink\nstyle.</H5>\n</BODY>\n</HTML>\nĐoạnmãlàthànhphầncụthể\n<HTML>\n<HEAD>\n<STYLEtype=”text/javascript”>\nclasses.HOTPINK.all.color=”hotpink”;\nclasses.BLUE.P.color=”blue”;\nclasses.BLUE.P.fontWeight=”bold”;\nclasses.red1.H5.color=”red”;\nclasses.red1.H5.fontWeight=”bold”;\n<STYLE>\n</HEAD>\n<BODYbgcolor=lavender>\n<PCLASS=BLUE>Thisparagraphisblue.</P>\n<P>ThisparagraphdoesnotusetheclassBLUE.</P>\n<H5CLASS=red1>ThisisanH5elementthattriedtousethered1class</H5>\n<PCLASS=hotpink>Thisparagraphishotpink.\n<H5CLASS=hotpink>ThisisanH5elementthathasbeenallowedtousehotpink\nstyle.</H5>\n</BODY>\n</HTML>\n*BộchọnID\nBộchọnIDápdụngthuộctínhIDcủathànhphầnHTML.BộchọnIDápdụngstylelên\nthànhphầnriênglẻtrêntrangWeb.vídụ,ápdụngstylelênđềmục<H2>thôngquabộchọn\nkênhID.Điềunàykhôngcónghĩasẽápdụngcùngstyleđólênlầnxuấthiệnkháccủathành\nphần<H2>trêntrangtrừphiquyđịnh.Nótươngtựnhưápdụngstyletrêndòng.BộchọnID\nmởđầubằngdấu(#).KhitheocúphápJavaScript,bạnphảidùngthuộctínhids.\n<HTML>\n<HEAD>\n<TIILE>IDselectors</TITLE>\n</HEAD>\n<BODY>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 113,
    "text": "113<STYLEtype=”text/css”>\n#control{color:red}\n</STYLE>\n<Pid=”control”>fireisthiscolour</H2>\n<BR>\n<P>Thisparagraphhasnostyleapplied\n</BODY>\n</HTML>\nĐoạnmãkếthợpbộchọnIDvàbộchọnlớp\n<HTML>\n<HEAD>\n<TITLE>CombiningIDandClassSelectors</TITLE>\n</HEAD>\n<BODY>\n<STYLEtype=”text/css”>\n.forest{color:green}\n.danger{color:red}\n#control{color:blue}\n</STYLE>\n<Pclass=”forest”>Greenthings\n<Pclass=”danger”>firehazards\n</P>\n<EMclass=”forest”>movegreenthings</EM>\n<BR>\n<EMclass=”danger”>movefirehazards</EM>\n<UL>\n<LIclass=”danger”>Thingsthatburn\n<LIclass=”forest”>Thingsthatdon’tburn\n</UL>\n<Pid=“control”>Water</P>\n</BODY>\n</HTML>\nb)Bộchọntheongữcảnh\nBộchọntheongữcảnhámchỉngữcảnhcủathànhphần.Thỉnhthoảng,bạncóhai\nthànhphầncùnggiátrị.Thànhphầnchínhhaythànhphầnchacóthànhphầnconchứa"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 114,
    "text": "114trongđó.Trongtrườnghợpđó,muốnđổistylecủathànhphầncon,bạncầnbộchọntheo\nngữcảnh.\nĐiềunàydựatrênkháiniệmthừahưởng,thànhphầnconthừahưởngstylegáncho\nthànhphầncha.\nMộtvídụđiểnhìnhlàthànhphần<BODY>.Khibạnthêmthànhphầnvào<BODY>,\nmỗithànhphầnchứatrongđósẽthừahưởngstylecủa<BODY>.\n<p>…<b>…</b>…</p>\nplàcha,blàcon\nBâygiờlàmsaokiểmsoát?Suychocùng,cólẽbạnkhôngmuốnmọithànhphầntrên\ntrangWebđềumangcùngmộtstyle.Vìvậy,phảigiànhquyềnthừahưởng.Khiđó,phảithay\nđổiriêngstylecủathànhphầncon.XemđoạnmãnàytrongInternetExplorer.\n<HTML>\n<HEAD>\n<TITLE>Contextualselectors</TITLE>\n</HEAD>\n<STYLETYPE=”text/css”>\nBODY{color:blue;\nBackground:lavender;\nFont-family:Arial;\n}\nUL{color:red}\n</STYLE>\nBộchọnULtrongtrangstylequyđịnhphảiinđỏdanhsáchkhôngxếpthứtự,dođó\nmọithànhphầnLIsẽmangmàusắcđãđịnhtrừphigiànhquyền.\n<UL>\n<LI>mangoes\n<LI>oranges\n<LI>apples\n</UL>\nBộchọnULtrongtrangstylequyđịnhcáckhoảnmụcdanhsáchphảilàmàuđỏ.\nChúngthừahưởngphôngchữArialtừkhaibáoBODY,màuđỏtừkhaibáoUL.Nếuđịnhhọ\nphôngchữ(font-family)trongkhaibáoUL,nósẽgiànhquyềnkhaibáobộchọnBODY.\nKhôngcóbộchọnOLtrongtrangstyle,vìvậydanhsáchOLthừahưởngthuộctínhtừbộ\nchọnBODY.\n<OL>\n<LI>mangoes"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 115,
    "text": "115<LI>oranges\n<LI>apples\n</OL>\n</BODY>\n</HTML>\nThànhphầnkhôngcómặttrongtrangstyledướidạngbộchọnsẽthừahưởngthuộc\ntínhcủathànhphầncha.ởvídụsau,thànhphầnBvàIthừahưởngthuộctínhcủabộchọn\nP.\n<HTML>\n<HEAD>\n<TITLE>Contextualselectors</TITLE>\n</HEAD>\n<STYLETYPE=”text/css”>\nBODY{color:blue;\nBackground:lavender;\nFont-family:Arial;\n}\nP{color:hotpink}\n</STYLE>\n<BODY>\n<P>\n<B>Iamhavingfun</B><BR>\n<I>Thisisfuntoo</I><BR>\nMuốnvôhiệuhoáthuộctínhcủabộchọnP,hãyđóngnó.\n</P>\nIamhavingfun\n<BR>\nThisisfuntoo\n</BODY>\n</HTML>\nĐoạnmãdướiđâylàbộchọntheongữcảnh\n<HTML>\n<STYLETYPE=”text/javascript”>\nwith(tags.BODY){\ncolor=”blue”;"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 116,
    "text": "116backgroundColor=”lavender”;\nfontFamily=”Arial”;\n}\ntags.P.color=”hotpink”;\n</STYLE>\n<BODY>\n<P>\n<B>Iamhavingfun</B><BR>\n<I>Thisisfuntoo</I><BR>\n</P>\nIamhavingfun\n<BR>\nThisisfuntoo\n</BODY>\n</HTML>\n7.6Thayđổinguyêntắc\nBạnđãbiếtsửađổistylecủathànhphầnriênglẻ.Cólúcbạnmuốntiếnhànhtrênquy\nmôtoàncục,chotấtcảcáctrangtrongWebsite.Bạnsửađổistyleđượctrangstyleđịnh\nnghĩalàstylelớphaystyletoàncục.Khilàmvậy,sửađổisẽcóảnhhưởnglanrộng.Tứclà\nthayđổistylecủamọithànhphầntrêntrangthuộcstylequyđịnhstylecụthể.\nvídụ,bạncóđịnhnghĩatrangstylequyđịnhstyle:\n¦Styletoàncụcápdụngchomọithànhphần<H2>(xanh,họphôngchữArial,co\nchuẩn).\n¦Lớpstylechungwarning(đỏ,đậm,nghiêng)ápdụngchothànhphầnbấtkỳsửdụng\nlớpđó.\nHaivídụsauminhhoạtrangstylesheet1.cssliênkếtfirst1.htmlrồiđến1.html.\nSheet1.csscóđoạnmã\nH2{color:blue;font-style:italic;}\n.warning{color:red;font-weight:bold;font-style:italic;}\nSaochépđoạnmãnàytrongNotepad/Frontpagevàlưunóvớitênlà“sheet1.css”.\n1.html\n<HTML>\n<HEAD>\n<TITLE>ChangingtheRules</TITLE>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 117,
    "text": "117<LINKREL=stylesheetHREF=”sheet1.css”\nTYPE=”text/css”>\n<HEAD>\n<H2>Changingtherulesisfun</H2>\n<BR>\n<Pclass=”warning”>Changingtherulesmaynotbesuchfun\n<H2>TheH2elementagain<P>\n</HTML>\n2.html\n<HTML>\n<HEAD>\n<TITLE>ChangingtheRules</TITLE>\n<LINKREL=stylesheetHREF=”sheet1.css”TYPE\n=”text/css”>\n</HEAD>\n<H2>Thisdocumentusethesheet1stylesheet</H2>\n<BR>\n<Pclass=”warning”>Selectingthisoptioncounddeleteall\nyourfiles\n<H2>TheH2elementagain<P></BODY></HTML>\n7.7Chúgiảitrongtrangstyle\nChúgiảilàđặctínhđượchầuhếtngônngữhỗtrợ.Bạncũngcóthểthêmchúgiảivào\ntrangstylehầugiúptheodõistyleápdụngtrongsuốttrang.Chúgiảiđặttrongdấu/*,nhưng\nkhôngđượclồngnhau.\nĐốivớiCSS,cúpháplà:\nH1{color:blue;}/*H2elementwillbeblue*/\nTags.H1.color=”blue”;/*H1elementwillbeblue\nĐốivớitrangstyleJavaScript,cúpháplà:\ntags.H1.color=”blue”;//H1elementswillbeblue\nnhữnglợiíchcủatrangstyle\nNếumuốnkiểmsoáttốthơntrangWeb,bạnnêntiếnhànhstyle.Cóthểápdụngtrang\nstyleđể:\n7.8Giànhquyềntrìnhduyệt\nMỗitrìnhduyệthiểnthịtrangWebtheocáchriêng.Đãquarồithờinhàthiếtkếkhông\nkiểmsoátcáchhiểnthịtrangtrongtrìnhduyệt.Suychocùng,bạnkhôngbiếtngườiởđầu"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 118,
    "text": "118kiathếgiớicókhảnăngsửdụngtrìnhduyệtnào.vớitrangstyle,bạncóthểgiànhquyềnquy\nướccủatrìnhduyệtvàtựtayấnđịnh.vídụ,quyđịnhstylehiểnthịthànhphần<H1>\n<H1><FONTSIZE=3COLOR=AQUA>\n<B><I>Overridingthebrowser</I></B>\n</FONT></H1>\n7.9Dàntrang\nTrangstylechophéphiểnthịphôngchữ,thayđổimàusắc,…màkhôngảnhhưởng\nđếncấutrúctrangWeb.Nghĩalàvớitưcáchnhàthiếtkế,giờđâybạncóthểtáchyêucầu\nthiếtkếtrựcquanrakhỏicấutrúclogiccủatrangwebvàgiảiquyếtriêng.\nNhờnhữngsốđotươngđốitrongtrangstyle,cóthểtrìnhbàytàiliệuđẹpmắttrênbất\nkỳmànhìnhnào,ởbấtkểđộphângiảinào.\n-Dùnglạitrangstyle\nĐịnhxongthôngtinstyle,cóthểlồngtrangstyletrongtàiliệuHTML.Hoặcliênkếttất\ncảtrangtrênWebsitevớitrangstyle.NhưvậybảođảmtrangWebmangvẻđồngnhấtkhi\nhiểnthị.Bởivậycóthểcónềnchung,logocôngtyvàthôngtinchuẩntrongmộtstyle.Thử\nhìnhdungnếucóvàitrămtrangweb,vàbạnphảiđịnhriêngstylecủatừngtrang.\n-Nỗlựcmộtlần\nCóthểtạotrangstylevàliênkếtnhiềutàiliệuvớinó.Mọitàiliệusẽcócùngdiện\nmạo.Nhưngquantrọnghơncảlàkhithayđổitrangstyle,tấtcảtàiliệuliênkếtvớitrang\nstylesẽphảnánhthayđổiđó.\nBàithựchànhsố7:\n1.TạomớimộttậptinCSStêndefault.csslưutrênthưmụcH:\\tên_bạn\\ThucHanhCSS.\n-Địnhnghĩacácthuộctínhcơbảntrongtậptin:\na:link\n{\ncolor:#FF0000;\n}\na:visited\n{\ncolor:#0000FF;\n}\na:active{\ncolor:#336699;\n}\nbody\n{\nfont-family:Arial,Helvetica;\nbackground-color:#FFFFFF;\ncolor:rgb(0,51,102);\n}"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 119,
    "text": "119table\n{\ntable-border-color-light:rgb(204,153,255);\ntable-border-color-dark:rgb(204,0,204);\n}\nh1,h2,h3,h4,h5,h6\n{\nfont-family:Arial,Helvetica;\n}\nh1\n{\ncolor:rgb(0,51,102);\n}\nh2\n{\ncolor:rgb(51,0,153);\n}\nh3\n{\ncolor:rgb(204,0,153);\n}\nh4{\ncolor:rgb(0,51,102);\n}\nh5\n{\ncolor:rgb(51,0,153);\n}\nh6\n{\ncolor:rgb(204,0,153);\n}\n.TieuDe\n{\nColor:Red;\nbackground-color:#C0C0C0;\n}\n.NoiDung\n{\nColor:Blue;\nbackground-color:#999966;\n}\n-Cácemtựkhaibáothêmmộtsốthuộctínhkhácchoriêngmình.\n2.TạomớimộttrangHTMLtênSuDungCSS.htmlưutrênthưmục\nD:\\tên_bạn\\ThucHanhCSS.\n-Trongphần<Head>…</Head>củatrangHTML,thêmvàothẻsau:\n<Linkhref=default.csstype=text/cssrel=stylesheet>\n-Trongphần<Body>…</Body>củatrangHTML,bổsungvàomộtsốthànhphần\nnhư:bảng,TextBox,liênkết,DropDownBox,…\n-Sửdụngcácthuộctínhđãkhaibáoởtrênđểđịnhdạngchovănbảnvàcácthành\nphầnthêmvào."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 120,
    "text": "120\nBÀI8:NHỮNGKIẾNTHỨCCƠBẢNVỀJAVASCRIPT,\nVBSCRIPTVÀCÁCỨNGDỤNG\nMụctiêuthựchiện:\nHọcxongbàinàyhọcviênsẽcókhảnăng:\n-LậptrìnhtrêntrangWEBđểtínhtoánphụcvụmộtmụctiêucụthểbằngngônngữVB\nScript.\n8.1KháiniệmvềngônngữJavaScriptvàVBScript(ASP)\n8.1.1GiớithiệuvềASP\nASPđượcviếttắttừ:ActiveServerPage.\nMicrosoftđãpháttriểnActiveServerPage(ASP)nhưmộtkiếntrúcserver-sidedùng\nđểxâydựngcácứngdụngwebđộng.VớiASP,tacóthểbiêndịchthànhclient-sideHTML,\nscriptingvàActiveXcontrolsvớiserver-sidescriptingvàcáccomponentCOMhayDCOMđể\ntạonộidungđộngvàcácứngdụngweb-basedphứctạp.Cácứngdụngcóthểchưamạnh\nvàchưaphứctạpđểtạovàmởrộng.\nASPlàmôitrườngkịchbảntrênmáyserver(server-sidescriptingenvironment)dùng\nđểtạovàchạycácứngdụngtrongtrangweb.Nhờtậpcácđốitượngcósẳn(build-inobject)\nvơícáctínhnăngphongphú,khảnănghỗtrợVBScript,Javascriptcùngmộtsốthànhphần\nActiveXkháckèmtheo.\nASPcungcấpmộtcáchlàmmớiđểtạotrangWebđộng.ASPkhôngphảilàmộtkỹ\nthuậtmơínhưngsửdụngdễdàngvànhanhchóng.ASPsẽthamvấntrựctiếpvàotrình\nduyệt,gởidữliệuđếnWebservervàtừđâysẽđưalênmạng.\nTrongkhiASPthựcthitrênmáymànóhỗtrợdùng,thìtacóthểxemASPtừbấtcứ\nmáynàovàvớibấtcứbrowsernào.ASPcungcấpgiaodiệnlậptrìnhnhanhvàdễdàngđể\ntriểnkhaicácứngdụng.\nASPchạytrênmôitrườngInternetInformationServer4.0(IIS)vàPersonalWeb\nServer4.0.ASPchophéptaquảnlýviệctruyềnnốigiữatrìnhduyệtvàWebserver,vàtạo\nđượchìnhthứcđộngcủatrangWebvàphảnhồilạichongườidùng.ASPcóthểchophép"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 121,
    "text": "121tatruycậpđếncơsởdữliệuvàquaytrởvềvớikếtquảngắnnhấttrênWebsite,cậpnhật\nnộidungtrênWebsitekhithayđổi.\nASPlàmộtmôitrườngđểthựcthicáccomponentnêntùytheoyêucầumàngườisử\ndụngcóthểthiếtkếracáccomponentkhácnhau,phụcvụchonhữngmụcđíchkhácnhau\nvàđưacáccomponentđóvàothựcthitrênmôitrườngASP.\nĐâylàmộtlợiđiểmcủaASP,khitamuốnnângcấphaypháttriển,thayđổichương\ntrìnhthìchỉcầnthaythếcáccomponentmàkhôngcầnphảithayđổitoànbộchươngtrình\nđó.Chínhvìvậy,ASPhơnhẳnCGIvàJSPdotínhđộclậpvàdễpháttriển,nênhệthốngsử\ndụngASPlàmmôitrườngthuậnlợichothiếtkếWeb.\nInternetInformationService(IIS)hỗtrợổnđịnh,giúpchonhàquảntrịmạngdễdàng\ntrongviệcquảntrịmạng.NgoàiracònhỗtrợchoASPthựcthinhanhhơn.\nMicrosoftVisualInterdevlàmộtmôitrườngđặcbiệtđượcthiếtkếriêngchoASPdựa\nvàowebsitevàcungcấpmôitrườngdùngđểthiếtkếvàkiểmtralỗi.\nSựkhácbiệtgiữaASPvàcáckỹthuậtmơíkháclàASPthựcthitrênwebservertrong\nkhicáctranglạiđượcphátsinhtừnhữngkỹthuậtkhácđượcbiêndịchbởibrowser(hay\nclient).NhữnglợiđiểmmàASPdùngthíchhợphơnlàdùngCGIvàPerl.\n8.1.1.1CácchứcnăngcủaASP\nĐọcnhữngyêucầutừtrìnhduyệt.\nTìmtrangcầnthiếttrongserver.\nThựchiệnbấtcứnhữnggiớithiệuđãcungcấptrongASPđểcậpnhậtvàotrang\nWeb.\nSauđógởitrảvềchotrìnhduyệt.\nHình8.1:CácchứcnăngcủaASPClient WebServerGetspage\n<html>\n<%ASPcode%>\n</html>\nHello<html>\n<b>Hello</b>\n</html>InterprestASPcode\nServerResponseHTTPResquest\nBrowsercreatesthewebpage"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 122,
    "text": "1228.1.1.2CáchoạtđộngcủaASP\nASPchưátrongcáctậptincóđuôimởrộng“*.asp”.TrongScriptcóchưácáclệnh\ncủacácngônngữscriptnàođókhitanhậpđuôiđịachỉcóphầnlà*.asptrênwebbrowser\nthìlậptứcgởiyêucầuđếnchoASP.KhinhậnyêucầuWebserverđồngthờiwebserversẽ\ntìmcáctậptintrênđịachỉcócáctậptinyêucầuwebservergởiđếntậptin.Chươngtrình\nđặcbiệtnàygọilàasp.dll.Khiđócáccâulệnhyêucầusẽđượcthựchiện.\nVàiứngdụngkhidùngASP:\nTạonhữngnộidungcủatrangWebbằngcáchcậpnhậttậptinvănbảnhaynộidung\ncơsởdữliệu.\nTạonhữngtranggiớithiệuchỉđểhiệnthị.\nHiểnthịvàcậpnhậtcơsởdữliệuđượclưutrữtrongtrangWeb.\nTạonhữngtrangwebmàcóthểđượcsắpxếpthứtự.\nPhảnhồitừphiángườidùngvàđưathôngtintrởvềchongườidùng.\n8.1.1.3TruycậpcơsởdữliệuvớicácđốitượngActiveData\nDùngADO,CSDLcóthểtruycậptừASPscriptsvàcácngônngữphổbiếnnhưVisual\nBasicvàC++.ChophéphợpnhấtcácứngdụngWebCommercevớisốlượngcósẳnvà\nđápứngchohệthống,vìthếviệcthayđổitrongcơsởdữliệusẽđượcphảnhồivàocác\nứngdụngtrangwebmộtcáchtứcthời.\nCácvấnđềcơbảnxâydựngcácứngdụngtrênASP:\na)TậptinGlobal.asa:\nTậptinGlobal.asalàtậptintùychọn,cóthểkhaibáocácscriptđápứngbiếncố,các\nobjecttrongứngdụnghaycácsession(cácphiênlàmviệc).Đâylàtậptinmàngườidùng\nkhôngcầnthựcthivẫntựđộngthựcthi,khichươngtrìnhtrênserverthựcthi.Thôngtin\nchưálànhữngthôngtinđượcdùngchotoàncục.TậptinnàyđặttênlàGlobal.asavàđược\nđặttrongthưmụcgốccủaứngdụng.MỗiứngdụngchỉcómộttậptinGlobal.asaduynhất:\nApplication,Events,SessionEvents.\nNhữngscripttrongtậptinGlobal.asacóthểđượcviếtbởibấtcứngônngữnàocóthể\nhổtrợchoscripts.Nếuscriptđượcviếtcùngmộtngônngữthìcóthểkếthợpchungtrong\nmộtthẻtag<script>duynhất.\nKhithayđổitậptinGlobal.asavàlưulạithìserverdừngviệcxửlývàyêucầuứng\ndụnghiệnthờitrướckhibiêndịchlạitậptinGlobal.asa.Trongthờigiannàyservertừchối\ncácyêucầukhácvàgởithôngbáo:“Yêucầukhôngthểxửlýkhiứngdụngđangkhởiđộng\nlại”(“Therequestcannotprocessedwhileapplicationisbeingrestarted.”).\nSaukhiyêucầu(request)đãxửlýxongthìserversẽxoábỏtấtcảcácsessionđang\nthựcthi.GọibiếntươngứngSession_OnEndtươngứngmàserverxoá,tiếptheolàbiếncố\nApplication_OnStop.SaukhitậptinGlobal.asađượcbiêndịchlạiyêucầucủangườidùng\nvàsẽkhởiđộnglạiứngdụng."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 123,
    "text": "123b)CóthểdùngASPđểxemtrênNetscapehoặcInternetExplorer\nASPđượcthựcthitrênserver,cónghĩalàtacóthểdùngbấtcứtrìnhduyệtnàođể\nxemkếtquả.ASPcóthểđượcxemdễdàngtrongtrìnhNetscapeNavigatorhayInternet\nExplorer.Tuynhiên,tacầnchúýđếnwebserverphảicókhảnăngchạyASP.\nc)ActiveWebSites\nActivewebsitesvơínhiềukỹthuậtmới,chúngđượckếthợpxâydựngvơínhiềungôn\nngữvàcáckỹthuật,tacóthểdùngbấtkỳmộttrongnhữngkỹthuậtngônngữnày:\n-ActiveXControls:đượctạobởicácngônngữnhưVisualC++hayVisualBasic.\n-Java.\n-Ngônngữkịchbản(ScriptingLanguage)như:VBScriptvà\nJavaScript/JScript/ECMAScript.\n-ActiveServerPagevàDynamicHTML.\n8.1.1.4CácthànhphầncơbảntrongASP\na)ActiveServerObjects:\nGồmcó5đốitượng(objects)chính:\n-Request.\n-Response.\n-Server.\n-Application.\n-Session.\nMôhìnhđốitượngcủaASP:\nHình8.2:CácthànhphầncơbảntrongASP\n-RequestđượctạotronghìnhthứcnhậptừmộttrangHTML.\n-Responsedùngđểtrảlờikếtquảtừserverchobrowser.\n-Serverdùngđểcungcấpnhiềuchứcnăngnhưtạomộtobjectmới.\n-ApplicationvàSessiondùngđểquảnlýthôngtinvềcácứngdụngđangchạy\ntrongchươngtrình.CLIENTSERVER\nResponseObjectRequestObjectServerObject\nApplication\nObject\nSession\nObject"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 124,
    "text": "124b)RequestObject:\nChophéptalấythôngtindọctheoyêucầuHTTP.Việctraođổibênngoàitừserverbị\nquaytrởvềnhưmộtphầncủakếtquả(Response).Requesttậptrungnhiềuđếnphầnlưutrữ\nthôngtin.\nCácRequestobject:\n-QueryString:lưutrữmộttậpnhữngthôngtinđểvàođịachỉcuối(URL).\n-vd:<%Request.QueryString(“buyer”)%>\n-Form:lưutrữmộttậptấtcảcácbiếngởiđếnHTTPrequest.\nvd:<%Request.Form(“buyer”)%>\n-ClientCertificate:Khiclienttạomộttậpvớimộtserveryêucầusựbảomậtcao.\n-ServerVarialbles:Khiclientgởimộtyêucầuvàthôngtinđượcđưatớiserver,nó\nkhôngchỉgởiquamàcònthôngtinviệcaitạotrang,tênservervàcổngmàyêucầugởiđến.\nvd:<%Request.ServerVariables(“HTTP_USER_AGENT”)%>\nc)ResponseObject:\nCungcấpnhữngcôngcụcầnthiếtđểgởibấtcứnhữnggìcầnthiếttrởvềclient.\nNhữngphươngthứccủaResponseObject:\n-Write:ghibiến,chuỗi,chophéptagởithôngtintrởvềbrowser.\nVd:text“HelloWorld!”\nResponse.Writetext\nMymessageis<%text%>\n-Clear:chophéptaxoábỏbấtcứvùngnhớbênngoàiHTML.\n-End:chophépngừngviệcxửlýtậptinASPvàdữliệuđệmhiệnthờiquaytrởvề\nbrowser.\n-Flush:chophépdữliệuđệmhiệnthờiquaytrởvềbrowservàgiảiphóngbộđệm.\n-Redirect:chophéptabỏquasựđiềukhiểncủatranghiệnthờinốikếtvàotrangweb\nkhác.\nvd:<%\nIf(NotSession(“LoggedOn”))Then\nResponse.Redirect“login.asp”\nEndIf%>\nNhữngđặctínhcủaResponseObject:\nBuffer:địnhrõtrang.\n-CacheControl:xácđịnhproxyserverđượcchophépphátsinhradoASP.\n-Charset:nốithêmtênkýtựvàođầucontent-type.\n-ContentType:HTTPcontenttypechophầntrảlời.\n-Expires:Sốlầnphátsinhgiưãlầnlưutrữvàphầnkếtthúcchomộttranglưutrữtrên\nbrowser.\n-ExpiresAbsolute:Ngàygiờđượcphátsinhtrênbrowser."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 125,
    "text": "125-IsClientConnected:clientngưngviệckếtnốitừserver.\n-Status:giátrịcủaHTTPstatusquaytrởvềserver.\nd)ApplicationObject:\nMỗiứngdụngđượctrìnhbàybởimộtApplicationobject.Đâylàđốitượngđượcchưá\ncácbiếnvàcácđốitượngchophạmviứngdụngcáchdùng.\nNhữngtậpcácApplicationobject:\n-Content:chứatấtcảcácmẫutinthêmvàoứngdụngthôngquacáclệnhscript.\n-StaticObjects:Chưátấtcảcácđốitượngthêmvàoứngdụngbằngthẻ<object>\nNhữngphươngthứccủaApplicationobject:\n-Lock:ngănchặncácclientkháctừviệccậpnhậtđặctínhứngdụng.\n-Unlock:chophépcácclientcậpnhậtđặctínhứngdụng.\nNhữngsựkiệncủaApplicationobject:\n-OnStart:xảyrakhitrangwebtrongứngdụngđượcthamchiếulầnđầu.\n-OnEnd:xảyrakhiứngdụngkếtthúc,khiwebserverngưnghoạtđộng\ne)SessionObject:\nĐượcdùngđểkiểmtratrìnhduyệtkhitrìnhduyệthướngquatrangweb.\nTậpcácSessionObject:\n-Content:chưátấtcảcácmẩutinthêmvàosessionthôngquacáclệnhscript.\n-StaticObject:chưátấtcảcácđốitượngthêmvàosessionbằngthẻ<object>.\nNhữngphươngthứccủaSessionObject:\n-Abandon:Huỷmộtsessionvàgiảiphóngsessionrakhỏinguồn.\nNhữngđặctínhcủaSessionObject:\n-CodePage:lấyđoạnmãsẽdùngchosymbolmapping.\n-LCID:lấynơiđịnhdanh.\n-SessionID:quaytrởvềđịnhdanhphiênlàmviệcchongườidùng.\n-Timeout:lấykhoảngthờigianchotrạngtháiphiênlàmviệcchoứngdụngtrongvài\nphút.\nNhữngsựkiệncủaSessionObject:\n-OnStart:xảyrakhiservertạomộtsessionmới.\n-OnEnd:xảyrakhimộtsessionđãgiảiphónghayhếtgiờlàmviệc.\nf)ServerObject:\nNhữngđặctínhcủaServerobject:\n-ScriptTimeOut:khoảngthờigiandàikhiscriptchạytrướckhixảyralỗi.\nNhữngphươngthứccủaServerobject:\n-CreateObject:Tạomộtđốitượnghayservercomponent.\n-HTMLEncode:ỨngdụngHTMLvàochuỗichỉđịnh.\n-MapPath:chuyểnđườngdẫnảovàođườngdẫnvậtlý.\n-URLEncode:ápdụngđịachỉURL."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 126,
    "text": "1268.1.1.5QuảnlýASPvàSession\nMộttrongnhữnglợiíchcủaASPlàcóphiênlàmviệc(Session)quảnlýtốt,đượcxây\ndựngtrongchươngtrình.ĐốitượngSessionlàduytrìthôngtinlưutrữchonhữngphiênlàm\nviệccủangườidùngtrongvùngnhớtrênServer.NgườidùngđượccungcấpmộtSession\nIDduynhấtmàASPsửdụngđểnốikếtcácyêucầucủangườidùngvớicácthôngtinđặc\nbiệtđếnSessioncủangườidùngđó.ĐiềunàychophépSessionnôíkếtcácyêucầucủa\nnhữngtrangWeb.\nCácthẻđịnhdạngcủaASP:\nCácđoạnmãchươngtrìnhđềuchưátrongthẻ<%và%>.Quiướcnàythườnglà\nquenthuộcđốivớichúngtanếutalàmviệcvơíbấtcứloạilệnhserver-sidenàotrongHTML.\nCácthẻnàythểhiệnphầnxửlýđoạnmãcủaASPthựcthivàchuyểnkếtquảtừserver.Thẻ\nđịnhdạngcủaASPcầndựavàomộtngônngữkịchbảnnàođóđểthểhiệnnhư:VBScript,\nJavaScript...\n8.1.1.6SơnétvềScriptingLanguage\nCungcấpnhiềucổngtruycậpvàochươngtrình.Việcdùngtrangweb\nclient-sidescriptpháttriểnđểcungcấptừtrangHTMLđộngđếntrangHTMLtĩnh.\nJavaScriptlàngônngữkịchbảnđầutiên.VBScriptdoMicrosoftpháttriểnvàdựavào\nngônngữVisualBasic.ScriptingchạytrêntrìnhduyệtInternetExplorer3.0vàtrongtrình\nNetscapeNavigator/Communication2.0.\nInternetExplorer4.0hổtrợcảhaingônngữ:JScriptvàVBScript.\nHìnhthứcngônngữkịchbảndựatrênnềntảngASP.ASPthựcthidowebserverhơn\nlàtrìnhduyệt.Ngônngữkịchbảncóthểđượcdùngđểtruycậpnhữngbitkhácnhauvà\nnhữngmảngmàASPcungcấplàobject.\nNhậnxét:\nKhônggiốngnhưCGI,ASPlàmộtngônngữlậptrìnhmáychủ,chươngtrìnhkếtnối\nvớiwebserverthôngquavàibiếnmôitrườngvàthamsố.ASPtươngthíchvớiviệcnâng\ncấpvớiwebservervàcảitạochươngtrình.ASPthíchhợpvớinhiềucáchthứckhácnhau,\ncókhảnăngquantrọngnhấttrongviệcxửlýcácđốitượngđượcxâydựngsẵn.\nCácưuđiểmcủaASPlà:\nCókhảnăngđọcđúngcáctrường(field)khicóyêucầuvàocủaHTML(Request)\nCókhảnăngxuấtracáctrường(field)Response.\nNhiềukỹthuậtlưutrữtrạngtháithôngtinthôngquacácbiếnứngdụngSession.\nKhảnăngtruycậpvùngtàinguyênvàcácđặcđiểmgiaotáccủaMTS(Microsoft\nTransactionServer).\nTruycậpvàihàmlinhtinhkháccóích.\nCókhảnănglàmrõràng,đơngiảncácHTMLvàmãScripttrongmộttậptinđơn.\n8.1.2LậptrìnhvớiASP"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 127,
    "text": "127TrongphầnnàychúngtasẽtìmhiểuvềngônngữVBScript,cũnglàngônngữmặc\nđịnhtrongASPđãđượcgiớithiệuởtrên.\n8.1.2.1Khaibáobiến.\n-Khôngbắtbuộcnhưngnênkhaibáođểkiểmsoátvàbắtlỗi.\n-Cúpháp:Dimbiến1,biến2…\n-Đểkhaibáomảng:\na)Dima(10):chỉsốchạytừ0->10dođócó11phầntử.\nb)Khikhaibáonênsửdụngcáctiềntố:\nBoolean Bln\nByte Byt\nDouble Dbl\nInteger Int\nLong Lng\nObject Obj\nString Str\nADOcommandCmd\nADOconnectionCnn\n8.1.2.2Khaibáohằngsố.\nCONSTtênhằng=giátrị\n8.1.2.3CácđốitượngxâydựngsẵntrongASP.\nTrongASPcó5đốitượngphụcvụchoviệcsửdụngtoàncục.\n+Request:LấythôngtintừUser\n+Response:GửithôngtintừServertớiUser.\n+Server:DùngđểđiềukhiểnIIS\n+Session:Dùngđểlưutrữcácthôngtinnhưcáccàiđặt,thayđổichomộtphiênlàm\nviệchiệnthờicủaUser.\n+Application:Dùngđểchiasẻcácthôngtincấpứngdụngvàđiềukhiểncácthiếtlập\nchotoànbộquátrìnhchạyứngdụng\n8.1.2.4CấutrúcđiềukhiểnlệnhvàHàm.\na)Cáccấutrúcđiềukhiển.\na.1)CấutrúcđiềukiệnIF..THEN..ELSE..IF\nCúpháp:\n<%\nIf<Điềukiện1>then\n<Cáccâulệnh>\nElse\nIf<Điềukiện2>then"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 128,
    "text": "128<Cáccâulệnh>\nEndif\nEndif\n%>\nNgoàiracóthểsửdụngcấutrúcIF..THEN....ELSEIF...ENDIF\n<%\nIf<Điềukiện1>then\n<Cáccâulệnh1>\nElseIf<Điềukiện2>then\n<Cáccâulệnh2>\nElse\n<Cáccâulệnh3>\nEndif\n%>\na.2)Cấutrúclựachọnselectcase…endselect\nCúpháp:\n<%\nSelectCase<tenbien>\nCase<giatri1>\n<Nhómlệnh1>\nCase<giatri2>\n<Nhómlệnh2>\nCase<giatrin>\n<Nhómlệnhn>\nCaseElse\n<Nhómlệnhn+1>\n%>\nVídụ:Hiệnngàygiờtrênmáychủvàchobiếthômnaylàthứmấy?\na.3)Cấutrúclặptuầntựfor…next.\nDùngđểlặpvớisốlầnđãbiết,tuynhiêntacóthểngắtbằnglệnhEXIT\nFOR.\nCúpháp:\n<%\nFOR<tenbien>=<giatridau>TO<Giatribien>STEP<Buocnhay>\nNEXT\n%>\na.4)CácCấutrúclặp.\na.4.1)DOWHILE….LOOP."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 129,
    "text": "129Cúpháp:\n<%\nDowhile<Dieukien>\n<Cáccaulenh>\nLoop\n%>\na.4.2)WHILE….wend.\nCúpháp:\n<%\nWhile<Dieukien>\n<Cáccaulenh>\nWend\n%>\na.4.3)DO….Loopuntil\nCúpháp:\n<%\nDO\n<Cáccaulenh>\nLoopuntil<Điềukiện>\n%>\nb)MộtsốhàmhữudụngtrongASP.\nb.1)CácHàmxửlývănbản\ni.TRIM(xâuasstring):Bỏkhoảngtrắnghaiđầukítự\nii.LEFT(Xâuasstring,nasinterger):Lấybêntráixâunkítự.\niii.RIGHT(Xâuasstring,nasinterger):Lấybênphảixâunkítự.\niv.LCASE(Xâuasstring):Chuyểnxâuvềchữthường\nv.UCASE(Xâuasstring):Chuyểnxâuvềchữhoa\nvi.MID(xâuasstring,n1,n2):Lấyn2kítựtrongxâubắtđầutừvịtrín1.\nvii.CSTR(Biến):Hàmchuyểnđổibiếnthànhkiểustring\nviii.HàmJOIN/SPLIT(Xâuasstring,kítựngăncách):SẽNối/Cắtxâuhànhmột/nhiều\nđoạnbằngcáchxácđịnhkítựngăncáchởtrênvàchocácđoạnđólầnlượtvàomộtmảng.\nVídu:\n<%\nx=”Hànội;Hảiphòng;TPHCM”\ny=split(x,”;”)\nResponse.writey(0)\n‘y(0)=”Hànội”\n%>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 130,
    "text": "130b.2)Cáchàmxửlýsố\ni.SQR(n):Cănbậchaicủan\nii.INT(n):Lấyphầnnguyênn\niii.MOD:Phépđồngdư\niv.Toántử\\:Chianguyên\nv.Round(số,n):Làmtrònsốvớinchữsốthậpphân\nvi.RND():Trảvềsốngẫunhiênbấtkìtrongkhoảng[0,1]\n8.2ĐưacácđoạnScriptvàotrongtrangWeb\nTrongASP,mặcđịnhngônngữscriptlàVbscript\nNếumuốndùngJavascripttaphảichỉđịnhtagsscriptlanguagelàJavascript.\n-Đốivớingônngữmặcđịnh,bạncóthểchỉdùngcặpdấu<%và%>đểchứađoạnlệnh\nScript.\n-VídụvềmộtđoạnlệnhVBScript:\n<%If(Time>=#12:00:00AM#)then%>\nGoodMorning!\n<%Else%>\nGoodAfternoon!\n<%EndIf%>\n-Hoặcbạncóthểchỉracụthểđangsửdụngngônngữnàobằngcáchsửdụngthẻ:\n<Scriptlanguage=“tên_ngôn_ngữ”>\n[lệnhviếtởđây]\n</Script>\n-ỞđâytênngônngữcóthếlàVBScripthoặcJavaScript(Jscript).\nVídụ:\n<Scriptlanguage=“VBScript”>\nResponse.Write(“Xinchàocácbạn!”)\n</Script>\n8.3Thiếtlậpcácthưviệnprocedure,functioncho1ứngdụngWEB\nThủtụcvàhàmtrongASPcóthểchèntạivịtríbấtkỳcủatrangWeb,tuynhiênđốivới\nmộtsốtrườnghợp,mộtsốhàmvàthủtụccóthểđượcdùngđidùnglạinhiềulầntrong\nnhiềutrangwebthìviệcđịnhnghĩalạicácthủtụcvàhàmnàysẽmấtnhiềuthờigianvà\ncôngsức.Vìvậybạnnênxâydựngmộtthưviệnhàmvàthủtụcchoriêngmìnhđểkhicần\nthìsẽdùngđến.Chẳnghạn,khibạnmuốnxâydựngmộtđềánwebcó10trang,mỗitrang\nđềuphảicóthủtụcđểkiểmtramậtkhẩuđăngnhập,nhưvậybạnnênđịnhnghĩathủtục\nnàytrongmộtthưviệnsẽthuậnlợirấtnhiềuchoviệcpháttriểnvàchỉnhsửa.\n8.3.1Địnhnghĩathủtục\nCúpháp:\nSub<tênthủtục>"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 131,
    "text": "131[Nộidungthủtục]\nEndSub\nVídụ:\nSubHienThi(hoten)\nResponse.Write(hoten)\nEndSub\n8.3.2Địnhnghĩahàm\nCúpháp:\nFuntion<tênthủtục>\n[xửlý]\n<kếtquảtrảvề>\nEndFuntion\nVídụ:\nFuntionTongDaySo(n)\nDimi,S\nS=0\nFori=1ton\nS=S+i\nNext\nTongDaySo=S\nEndFuntion\n8.3.3Sửdụngthưviệnhàm,thủtục\nSaukhiđịnhnghĩathưviệnhàmvàthủtụccủariêngbạn(lưuýlàtậptinthưviệnphải\ncódạngTextcóphầnmởrộngbấtkỳ),đểsửdụngđượcthưviệnhàmvàthủtụcnày,bạn\ndùngthẻ:\n<!--#includefile=tên_tập_tin_thư_viện-->\nđểchènthưviệntạivịtrínàotrongtrangwebmàbạnmuốn.\n8.4Mộtsốbàitậpứngdụngmẫu\nVídụ1:Giảihệphươngtrìnhbậcnhất 0 B(trongđócáchệsốA,Bđượclấyngẫy\nnhiên).Xuấtkếtquảratrìnhduyệt.\n%@Language=VBScript%>\n<HTML>\n<BODY>\n<%\nDimA,B\nRandomize"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 132,
    "text": "132A=Round(RND()*10)‘Tạosốnguyênngẫunhiêutrongkhoản[0,10]\nB=Round(RND()*10)‘Tạosốnguyênngẫunhiêutrongkhoản[0,10]\nIF(A=0)Then\nIF(B=0)Then\nResponse.Write(“Phuongtrinhcovosonghiem!”)\nELSE\nResponse.Write(“Phuongtrinhvonghiem!”)\nEndIF\nELSE\nResponse.Write(“Phuongtrinhco1nghiemla:”&B/A)\nEndIF\n</BODY>\n</HTML>\nVídụ2:Thưviệnhàmvàthủtục\n-Trướctiên,bạntạomộttậptintênlàthuvien.inccónộidungnhưsau:\nSubHienThi(hoten)\nResponse.Write(hoten)\nEndSub\nFuntionTongDaySo(n)\nDimi,S\nS=0\nFori=1ton\nS=S+i\nNext\nTongDaySo=S\nEndFuntion\n-Bâygiờtrongtậptinthứ2tênlàungdung.asp,tađưavàodònglệnhsau:\n%@Language=VBScript%>\n<HTML>\n<BODY>\n<STRONG>DAYLATRANGWEBSUDUNGTHUVIENHAM-THUTUC\nTIEN</STRONG><br>\n<!--#includefile=”thuvien.inc”-->\n<%\nDimten,n\nten=“NguyenVanA”"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 133,
    "text": "133CallHienThi(ten&“<br>”)\nn=10\nResponse.Write(“Tổngdãysố:”&TongDaySo(n))\n</BODY>\n</HTML>\nBàithựchànhsố8:\nTạomộtWebProject(đặttênlàDieuKhien)\n1)ThêmvàoprojectmộttrangBai1.aspcómộtđoạnlệnhđểthựchiệncôngviệcgán\nmộtgiátrịngẫunhiênchobiếnnguyênn.Nếunlàchẵnthìxuấtratrìnhduyệtgiátrị2*n,\nnếunlẽthìxuấtran*n.\n2)ThêmvàoprojecttrangBai2.aspcómộtđoạnlệnhđểthựchiệngánmộtdãysốngẫu\nnhiênchomộtmảngAgồm10phầntử,sauđóxuấtgiátrịcủacácphầntửcủamảngra\ntrìnhduyệt."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 134,
    "text": "134BÀI9:ỨNGDỤNGKỸTHUẬTLẬPTRÌNH\nXÂYDỰNGTRANGWEB\nMụctiêuthựchiện:\nHọcxongbàinàyhọcviênsẽcókhảnăng:\n-XâydựngmộttrangWebbằngcácphốihợpđược2kỹnăng:bằngcáchsửdụngmột\nphầnmềmứngdụngtạoWebvàdùngcácngônngữkịchbảntạohiệuứngchotrangWeb\nđápứngyêucầuthựctế.\n9.1NhắclạicáccâulệnhSQL\n9.1.1CREATETABLE:tạotablemới\nCREATETABLETableName(FieldName1FieldType[(nFieldWidth[,nPrecision])]\n[NULL|NOTNULL][,FieldName2FieldType[(nFieldWidth[,nPrecision])][NULL|NOT\nNULL]...)\nTableName:chuỗikhoảng30kýtự.\nFieldName1,FieldName2:têncộtkhoảng30kýtự.\nFieldType:Kiểucột.\nTênkiểu(FieldType) Diễngiải\nnumeric sốgồmphầnnguyênvàphầnthậpphân\nchar kiểukýtựcóđộdàitốiđa255kýtự\ndatetime kiểungàygiờ\nint kiểusốnguyên\nreal kiểusốthực\ntext kiểumemo,text\nimage kiểuhìnhảnh\nfloat kiểufloat\nNULL:Là1mụcvàokhôngcógiátrịrõràng.NULLkhôngphảilà0hoặctrống.\nVídụ:CREATETABLEVidu(\nsonumeric(10,2)NULL,\nchuoichar(255)NULL,\nngaydatetimeNULL,\nnguyenintNULL,\nthucrealNULL,\nvanbantextNULL,\nanhimageNULL,\nsofloatfloatNULL\n9.1.2SELECT:truyvấndữliệucáctable\nSELECT[Alias.]Select_Item[ASColumn_Name][,[Alias.]Select_Item[AS\nColumn_Name]...]\nFROM[DatabaseName!]Table[INNERJOINDatabaseName!]Table[ON\nJoinCondition…]"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 135,
    "text": "135[WHEREJoinCondition[ANDJoinCondition...][AND|ORFilterCondition[AND|OR\nFilterCondition...]]]\n[GROUPBYGroupColumn[,GroupColumn...]]\n[HAVINGFilterCondition]\n[UNION[ALL]SELECTCommand]\n[ORDERBYOrder_Item[ASC|DESC][,Order_Item[ASC|DESC]...]]\nThamsố:\nSELECTchỉđịnhtrường,hằngvàbiểuthứcxuấthiệntrongkếtquảtruyvấn.\nAlias.Bídanhtable.\nSelect_Itemchỉđịnh1mụcđượcbaogồmtrongkếtquảtruyvấn.Mụccóthểlà:\n-TêntrườngcủatabletrongmệnhđềFROM.\n-1hằngchỉđịnhcùng1giátrịchotấtcảcáchàngtrongkếtquảtruyvấn.\n-1biểuthứccóthểlàhàmtựtạo.\n-AVG(Select_Item),tínhtrungbìnhSelect_Item.\n-COUNT(Select_Item),đếmsốlầnxuấthiện.COUNT(*)đếmsốhàngtrongkếtquảtruy\nvấn.\n-MIN(Select_Item),tínhgiátrịnhỏnhất.\n-MAX(Select_Item),tínhgiátrịlớnnhất.\n-SUM(Select_Item),tínhtổngcácsố.\nASColumn_NameChỉđịnhtiêuđềcủa1cộttrongtablekếtquảtruyvấn.\nFROMLiệtkêcáctablechứadữliệucầntruyvấn.\nDatabaseName!chỉđịnhtêncủaCSDLchứatable.\nINNERJOINchỉđịnhkếtquảtruyvấnchỉchứacáchàngtừ1tabletrùngvới1hoặc\nnhiềutrongtablekia.\nONJoinConditionchỉđịnhcácđiềukiệnkểcáctablenốilại\nWHEREChỉcáchàngcóthỏamãnđiềukiệnđiliềnsauWHEREmớiđượcthựchiện\ntruyvấn.\nBạndùngtoántửAND/ORđểkếtnốicùnglúcnhiềuđiềukiệnkhácnhau.\nCáctoántửsosánh:\nKýhiệu Tươngđương\n= Bằng\n== Chínhxácbằng\nLIKE SQLLIKE\n<>,!=,# Khôngbằng\n> Lớnhơn\n>= Lớnhơnhoặcbằng\n< Nhỏhơn\n<= Nhỏhơnhoặcbằng\nGROUPBYGroupColumn[,GroupColumn...]Cácnhómhàngtrongcâutruyvấndựa\ntrêngiátrịtrên1hoặcnhiềucột.GroupColumndựtrênthứtựliệtkêra."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 136,
    "text": "136HAVINGFilterConditionChỉđịnhđiềukiệnlọcnhómtrongkếtquảtruyvấn.\n[UNION[ALL]SELECTCommand]Kếthợpkếtquảcuốicùngcủa1SELECTvới1\nSELECTkhác.\nALLngănUNIONghépnối2lầncáchàngtừkếtquảUNION.\nVídụ:\nSELECTcustomer.company,orders.order_id,orders.emp_id;\nFROMcustomer,orders;\nWHEREcustomer.cust_id=orders.cust_id;\nUNION;\nSELECTcustomer.company,\"\",\"\";\nFROMcustomer;\nWHEREcustomer.cust_idNOTIN;\n(SELECTorders.cust_idFROMorders)\nORDERBYOrder_ItemSắpxếpkếtquảtruyvấntheothứtựOrder_Item.\nASCsắpxếptăngdần\nDESCsắpxếpgiảmdần.\n9.1.3INSERT:thêmdữliệu(hàng)vàotable\nINSERTINTOdbf_name[(fname1[,fname2,...])]VALUES(eExpression1[,\neExpression2,...])\ndbf_name:têntablemàdữliệusẽthêmvào,lệnhnàytựthêm1hàngmớivàgángiátrị\nvào.\nfname1,fname2:têncáccộttrongtable\neExpression1,eExpression2:biểuthứcsaukhitínhthànhgiátrịsẽđưavàotừngcột\ntươngứngđãchỉđịnh.\nVídụ:\nR_Don_Vi=\"CtyÐB-ÐT\"\nR_Ho_Ten=\"LêThịThuHoài\"\nR_Username=\"thuhoai\"\nR_Password=\"thuhoai\"\nINSERTINTODHTT_Login(Don_Vi,Ho_Ten,Username,Password)VALUES\n(R_Don_Vi,R_Ho_Ten,R_Username,R_Password)\n9.1.4UPDATE:Gángiátrịmớicho1hoặcnhiềuhàngcủatable.\nUPDATE[DatabaseName!]TableNameSETColumn_Name1=eExpression1[,\nColumn_Name2=eExpression2...]WHEREFilterCondition1[AND|ORFilterCondition2...]]\n[DatabaseName!]TableName:tênCSDLvàTablethuộcCSDL.\nSETColumn_Name1=eExpression1,...:gángiátrịeExpression1cho\nColumn_Name1,...\nWHEREFilterCondition1[AND|ORFilterCondition2...]:chỉđịnhcáchàngthoảmãn\nđiềukiệnFilterCondition1và/hoặcFilterCondition2mớiđượcgángiátrịmới.\nVídụ:\nUPDATEDHTT.DHTT_LoginSETUsername=R_Username_Moi,Password="
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 137,
    "text": "137R_Password_MoiWHEREUsername=R_Username_CuANDPassword=\nR_Password_Cu\n9.1.5DELETE:\nDELETEFROM[DatabaseName!]TableName[WHEREFilterCondition1[AND|OR\nFilterCondition2...]]\n[DatabaseName!]TableName:tênCSDLvàTablethuộcCSDL.\nWHEREFilterCondition1[AND|ORFilterCondition2...]:chỉđịnhcáchàngthoảmãn\nđiềukiệnFilterCondition1và/hoặcFilterCondition2mớibịxoá.\nVídụ:\nDELETEFROMDHTT.DHTT_LoginWHEREDon_Vi=R_Don_Vi_XoaAND\nHo_Ten=R_Ho_Ten_Xoa\n9.2CáclệnhliênkếtCSDL\n9.2.1KếtnốicơsởdữliệuDSN(DataSourceName)quađốitượngRecordset\n+Hiểnthịthôngtinratrìnhduyện\nDimrs\nSetrs=Server.CreateObject(“ADODB.Recordset”)\nRs.Open“SINHVIEN”,“DSN=QLSV”\nRs.MoveFirst\nDoWhileNotrs.EOF\nResponse.Write(rs(“HoTen”)\nResponse.Write(…………….)\nRs.MoveNext\nLoop\nRs.Close\nSetrs=Nothing\n+Tìmkiếmđểcậpnhậtcácbảnghitrongcơsởdữliệu\nCONSTadOpenDynamic=2\nCONSTadLockPessimistic=2\nDimrs\nSetrs=Server.CreateObject(“ADODB.Recordset”)\nRs.Open“SINHVIEN”,“DSN=QLTV”,adOpenDynamic,adLockPessimistic\nRs.Find<điềukiện>\nIfNotrs.EOFthen\n<cậpnhậtthôngtin>\nElse"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 138,
    "text": "138<thôngbáokhôngtìmthấy>\nEndIf\nRs.Close\nSetrs=Nothing\n9.2.2KếtnốitrựctiếpđếncơsởdữliệubằngchuỗikếtnốiquađốitượngConnection:\n*VớiMicrosoftAccess:\nDimconn\nSetrs=Server.CreateObject(“ADODB.Connection”)\nconn.Open\"Provider=Microsoft.Jet.OleDB.4.0;Datasource=c:\\thuchanh\\qltv.mdb;\"\n*VớiMicrosoftSQLServer:\nDimconn\nSetrs=Server.CreateObject(“ADODB.Connection”)\nconn.Open\"Provider=SQLOLEDB;Datasource=servername_or_address;Initial\nCatalog=database_name;UserID=username;password=password\"\nCáccôngviệccònlạigiốngnhưkhikếtnốiquanđốitượngDSN.\n9.3Mộtsốbàitậpứngdụngmẫu\nVídụ1:MởcơsởdữliệuQuảnlýSinhviênvàbổsungvàobảngSINHVIENmộtbản\nghi,sửdụngđốitượngRecordset:\n<%@Language=VBScript%>\n<HTML>\n<BODY>\n<%\nconstadOpenDynamic=2\nconstadLockPessimistic=2\ndimrs\nsetrs=server.CreateObject(\"ADODB.Recordset\")\nrs.Open\"SINHVIEN\",\"DSN=QLSV\",adOpenDynamic,adLockPessimistic\nrs.AddNew\nrs(\"MaSV\")=\"12\"\nrs(\"TenSV\")=\"LeThanhThuy\"\nrs.Update\nrs.Close"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 139,
    "text": "139Setrs=Nothing\n%>\n</BODY>\n</HTML>\nVídụ2:MởcơsởdữliệuQuảnlýHọcviênvàbổsungvàobảngHOCVIENmộtbảnghi,\nsửdụngđốitượngConnection:\n<%@Language=VBScript%>\n<HTML>\n<BODY>\n<%dimconn\nsetconn=server.createobject(\"adodb.connection\")\nconn.Open\"Provider=SQLOLEDB;Datasource=localhost;Initialcatalog=QLHV;\nUserID=sa;password=\"\ndimstrSQL\nstrSQL=\"INSERTintoHOCVIEN(maHV,HotenHV,MaLop)”\nstrSQL=strSQL&“Values('006','NguyenVanTrinh','T01')\"\nconn.execute(strSQL)\nresponse.write(\"Bandathemmothocvien!\")\nconn.close\nsetconn=nothing\n%>\n</BODY>\n</HTML>\nVídụ3:HiểnthịtấtcảhọcviêncótênlàTrang.\n<%@Language=VBScript%>\n<HTML>\n<BODY>\n<%dimconn\nsetconn=server.createobject(\"adodb.connection\")\nconn.Open\"Provider=SQLOLEDB;Datasource=localhost;Initialcatalog=QLHV;"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 140,
    "text": "140UserID=sa;password=\"\ndimstrSQL\nstrSQL=\"SELECT*FROMHOCVIENWHEREHotenHVLike‘%Trang’”\nDimrs\nRs=conn.execute(strSQL)\nresponse.write(\"DanhsáchhọcviêntênTrang!<br>\")\nRs.MoveFirst\nDoWhileNotrs.EOF\nResponse.Write(“Mãhọcviên:”&rs(“MaHV”)&“<br>”)\nResponse.Write(“HọtênHV:”&rs(“HotenHV”)&“<br>”)\nRs.MoveNext\nLoop\nRs.Close\nSetrs=Nothing\nconn.close\nsetconn=nothing\n%>\n</BODY>\n</HTML>\nBàithựchànhsố9:\n1)ThiếtkếbiểumẫuchophépnhậpthôngtinthànhviênvàocơsởdữliệugồmHọvà\ntên,ngàysinh,địachỉ,tênsửdụng,mậtkhẩu.\n2)Thiếtkếbiểumẫuchophépnhậphọvàtênhọcviênđểtìmkiếmvàhiểnthịthôngtin\ntìmthấyratrìnhduyệt.\nBÀI10:LIÊNKẾTTRANGWEBĐẾNHỆCSDL"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 141,
    "text": "141XÂYDỰNGCÁCTRANGWEBĐỘNG\nBẰNGMACROMEDIADREAMWEAVERMX2004\nMụctiêuthựchiện:\nHọcxongbàinàyhọcviênsẽcókhảnăng:\n-NhúngđượccácformcótrongtrangWebđếnmộthệCSDL\n-ChuyểnthôngtintừgiaodiệnnhậpđếnhệCSDLđãđượcthiếtkế\nChuyểntảithôngtintừCSDLđếntrangWeb\n10.1Xâydựngtrangmaster(trangchính)vàdetail(chitiết)bằngchứcnăngDetailPage\nB1:Tạomớitrangvàđặttênmaster\nB2:Chènmộtsốtrườngcơsởdữliệu(field)\nB3:Tạoliênkếtxemtiến,lùi(RECORDSETNAVIGATIONBAR)\nhình1:Tạoliênkếtxemtiến,lùi\nB4:Tạotrangdetail\nB5:Lấytoànbộcácdữliệuliệuxuốngvùngthiếtkế\nB6:TrởlạitrangMastertạoliênkếtdetailnhưsau"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 142,
    "text": "142\nhình2:tạoliênkếtdetailpage\nhình3:detailpage\n(TrongđóPassURLparameterchínhlàtrườngtrunggiangiữa2trangcóthểthayđổi\ntuỳthích,chọnphươngpháptruyềndữliệuURLhoặcForm…)\nB7:MởlạitrangDetailthêmphầnFilternhưsau\nhình4:trangDetail"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 143,
    "text": "14310.2TạotrangmastervàdetailbằngchứcnăngMasterDetailPageSet\nB1:Tạomới2trangđặttênlầnlượtlà:mastervàdetail\nB2:TạitrangmastersửdụngchứcnăngMasterDetailPageSet.\nhình6:MasterDetailPageSet\n10.3Bàithựchànhcơsởdữliệu\n10.3.1Tạomộtsitemới\nBước1:\n-VàomenuSite\\Managesite\\New…\\Site\nhình7:AdvancedLocalInfo"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 144,
    "text": "144Bước2:\nTạokếtnốikhôngsửdụngODBC\n<%\ndimcn\nsetcn=server.createObject(\"ADODB.Connection\")\ncn.ConnectionString=\"Provider=Microsoft.Jet.OLEDB.4.0;DataSource=\"&\nServer.MapPath(\"Tracnghiem.mdb\")\ncn.open\ndimrs\nsetrs=server.createObject(\"ADODB.Recordset\")\n‘CopyfileadovbstừD:\\ProgramFiles\\CommonFiles\\System\\adosang\nD:\\InetPut\\wwwroot\n<!--includefile=\"adovbs.inc\"-->\nrs.open\"Select*FromCauHoi\",cn\nwhilenotrs.eof\nResponse.writers(\"Question\")&\"<br>\"\nrs.MoveNext\nwend\n%>\n10.3.2Chènthẻ<%Includevàotrang\nView\\Toolbars\\Insert\nTrênthanhinsert,chọnHTML\nKíchnútcuốicùng“Script….”\nChọn“Server–sideinclude..”\nhình8:chọnServer–sideinclude\n10.3.3Chènđốitượngvàtạokếtnốicơsởdữliệu\n1.TạodữliệuchoMenuList\noChènList/Menu:vàoInsert->Form->List/Menu\noChọnList/Menu\noVàomenuInsert\\ApplicationObjects\\DynamicData\\DynamicSelectlist"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 145,
    "text": "145\nhình9:TạodữliệuchoMenuList\noNhắpchọnRecordset\nhình10:DynamicList–menu-labels\noTừOptionsfromrecordset,hãychọntênRecordset1đãthiếtlậptrướcđó(lưuý\ntênđốitượngRecordsetcóthểkháctùythuộcvàoviệcbạnđặttên)\noValuesvàlabels:chọntrường->OK\n2.ChènTextField\no Kíchnút:BindToDynamicSource\no Chọntrườngdữliệu\nhình11:DynamicData-question"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 146,
    "text": "146Hoặc\n-Tạocáctext,list,….,kíchchọnđốitượngrồithựchiệntiếp..\n-VàomenuInsert\\ApplicationObjects\\DynamicData\\chọntrườngdữliệu\n3.TạoNavigationBar\nNavigationbar:làdạngliênkếtNext;Priview;Last;Firts\nKíchnútInsert\\ApplicationObjects\\RecordsetPaging\\RecordsetNavigationbar\nẤnOK.\nhình12:RecordsetNavigationbar\n4.TạoNavigationstatus\nLàthanhtrạngtháihiểnthịbảnghihiệnthờivàtổngsốbảnghi\nKíchnútInsert\\ApplicationObjects\\DisplayRecordCount\\RecordsetNavigation\nStatus.\n5.Tạobảnghiểnthịtoànbộdữliệucủacáctrường\nTạobảngsauđóchèntrườngvàotrongbảngdữliệu\nBảngchỉhiểnthịdữliệucủabảnghiđầutiên\nChọntab:Application\\ServerBehaviors\\\nKíchnút(+)chọntiếp:RepeatRegion->OK\nMuốnsửađổikíchđúpvàotênđốitượngtrongtabServerBehaviorscủacửasổ\nApplication\nhình13:reperatRegion\n10.3.4Tạotrangchènmớidữliệu\nTạomớimộtForm,chèncáctextbox,Submit,….\nTrongcửasốApplication,chọntab:ServerBehavior,kíchnút(+)chọnlệnh:Insert\nRecord\nConnection:chọnkếtnối\nInsertintotable:chọnbảngchứatrườngcầntạomớibảnghi\nFormelements:chọntextboxtrênform-columnchọntrườngcầncậpnhật->OK."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 147,
    "text": "147\nhình14:insertRecord\n10.3.5Tạotrangchèndữliệutựđộng\nVàomenuInsert\\ApplicationsObjects\\InsertRecord…\\InsertRecordFormWizard\nhình15:InsertRecordFormWizard\nConnections:chọnkếtnối\nInsertintotable:chọnbảngcầnchèndữliệu\nFormfields:chọncáctrườngcầncậpnhật(thêm/bớtbằngcáchkíchnút+hoặc-)\n10.3.6TạotrangDeletedữliệu\nTạokếtnốitớicơsởdữliệu\nChènFormvàcáctextbox,submitliênkếtdữliệutớicáctextbox\nVàomenuInsert\\ApplicationsObjects\\DeleteRecord…"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 148,
    "text": "148\nhình16:DeleteRecord\n->Luônxoácácbảnghiđầutiên;\n-SửađổitênmặcđịnhMM_recordIdthànhtêncủatextboxcầnxoá\nMM_recordId=“’”+Request.Form(“ten”)+“’”\n10.3.7Tạotrangđăngnhập(LogIn)\nTạotrangSucvàtrangError\nTạotrangLogbaogồm:mộtForm,haitextbox,mộtSubmit.\nVàomemuInsert\\ApplicationsObjects\\UserAuthentication\\LogInUser.\nhính17:Tạotrangđăngnhập\n10.3.8Tạotrangchỉnhsửa(cậpnhật)dữliệu\nĐiềukiện:CơsởdữliệukhôngcótrườngAutoNumber\nInsert\\ApplicationsObjects\\UpdateRecord\\RecordUpdateFormWizard->OK"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 149,
    "text": "14910.3.9Tạotrangtìmkiếmhiểnthịdữliệungaydướiformtìm\nhình18:giaodiệntrangtìmkiếmhiểnthịdữliệu\nTạomộttrangmớiRecordsettrongtabBindingsthiếtlậpnhưsau:\nhình19:RecordsettrongtabBindings\nBổxungthêmđoạnsauvàocodecủatrangdướicùng\ndimten\nifrecordset1.eofthen\nten=\"Khôngcó\"\nelse\nten=recordset1(\"ten\")\nendif"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 150,
    "text": "150\nhình20:đoạncodecầnthêm\n10.3.10Tạotrangtìmkiếmsửdụngapplicationobject\nTạoform,table,textbox,button,….\nChọntab:Bindingsthiếtlậpnhưsau:\nhình21:Chọntab\nKéocácfieldvàobảngđãtạo,bôiđenhàngchứafield:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 151,
    "text": "151\nhình22:Showifrecordsetnotempty\nMụcCheckNewUserName\nTạoforminsertRecordsửdụngnewusername->OK\nhình23:TạoforminsertRecordsửdụngnewusername\n10.3.11TạotrangMastervàtrangDetailkhikhôngcódữliệutạomớihoàntoàn(Kích\nvàoliênkếttrêntrangMasterchitiếthiểnthịtạitrangDetail)\nMở2tranglưulầnlượttênMastervàDetail\nTạitrangmastertạoRecordset\nKíchnút:MasterDetailpagesetđiềnnhưsau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 152,
    "text": "152hình24:MasterDetailpageset\n10.3.12Tạotrangmastervàdetailkhiđãcódữliệu\nTạo2trangđặttênlầnlượtlà:mastervàdetail\nTrangmasterchèndữliệuchomộtngười,dùnglệnhsau:\nhình25:dùnglệnhDeralpage\nhình26:gotodeailPage\nTrangdetailxácđịnhthuộctínhrecordsetnhưsausaođókéocáctrườngdữliệuxuống\nform."
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 153,
    "text": "153\nhình26:địnhthuộctínhrecordsetnhưtrên\nCóthểtruyềndữliệuquaphươngthứcParameterhoặcFormchỉcầnchọntươngứng\ncả2bên.\n10.3.13Tạokếtnốibằnglệnh\nTạoconnectionnhưbìnhthường\nCopyđoạncodenhúngfilekếtnốivàosauthẻlanguage\nhình27:đoạncodecầnnhúng\ncopyđoạncodebịbôiđenvàosauthẻhead\nhình28:copyđoạncodebịbôiđenvàosauthẻhead"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 154,
    "text": "154đóngkếtnối\nhình29:lệnhđóngkếtnối\n10.3.14CHÈNFLASH\n10.3.14.1TạonútFlash\nKíchnút:MediaFlash\nChọnFlashButton\nhình30:insertflashbotton\n10.3.14.2TạodòngtitlebằngFlash"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 155,
    "text": "155\nhình31:insertFlashText\n10.3.15TạokếtnốivớicơsởdữliệuAccess\n-Kíchnút(+)chọn:OLEDBConnection\n-KíchnútBuilt\\chọntiếpTab:Provider\n-Tìmđếndòngthứhai:‘MicrosoftJet4.0OLEDBProvider’\\Next\n-Kíchnút….ChọnfiledữliệuAccess\n-Đánhdấuthêmvàophần:ReadWrite\\OK.\n-Đặttênkếtnốitrongphần:ConnectionName:\\OK\nHoặcdùngchuỗikếtnối:\nProvider=Microsoft.Jet.OLEDB.4.0;DataSource=D:\\Inetpub\\wwwroot\\database\\bt1.mdb;\nCáchtạohộpthôngbáokhinạptrang\nẤnF9mởtab:Inpectorchọnthẻbehaviors\nKíchdấu+chọnpopupmessage\nGõnộidung->OK\n(KíchnútshowallEvents)"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 156,
    "text": "156\nhình32:popupmessenge\n10.3.16Viếtchữlênthanhtrạngthái(đáytrang)\nẤnF9chọnthẻBehaviorchọnsettextchọntiếpsettextofstatusbar\nNhậpchữ->OK"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 157,
    "text": "157hình33:settextofstatusbar\nTạoJumpMenu\nhình34:TạoJumpMenu\nhình35:JumpMenu\nPhầntexthiểnthịtêntrongmenu,urlđườngdẫntớitrangđượcmở(đểmặcphầntên\nmặcđịnhtrongphầntextkíchnútbrowsechọnfilecầnmởphầntextsẽtựđộnghiểnthịtên)\nMuốnhiểnthịnútgotheosaumenuđánhdấuvàolựachọn“Insertgobuttonaftermenu”\nSauđóấnShift+F4,kíchchuộttráivàojumpmenutrongcửasổBehaviorskíchvào\ndòngonchangekíchvàodấu–đểloạibỏdòngnày.Kíchnútgosẽthấythuộctínhonclick\ncủanútGo.\n10.3.17SửdụngFreemenubluestyle1cấp(thayđổichiềurộng)"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 158,
    "text": "158Bước1:\nChènfreemenutừmenucommands\nhình36:Chènfreemenu\nBước2:\nMởcửasổcodehoặcthanhPropertiessửathuộctínhwidthcủabảngthành9%\nhình37:sửathuộctínhwidthcủabảng\n10.3.18Thayđổimàusắc(chữ,màunền,OnmouseOver,textOver,…)\na.Đổimàuchữchomenu\nĐặtchuộtởmộttrongcácôbấtkỳ\nCtrl+F3bậtcửasổProperties\nPhầnstylecủaPropertieskíchchọnManagestyle"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 159,
    "text": "159\nhình38:chọnManagestyle\nChọntiếpcáithứ3tronghộpstylekíchnútEdit,colorđổimàuchữ\nhình39:colorđổimàuchữ\nCategorychọnBackgroundđổimàunền\nThunhỏkhoảngcáchtrên,dưới,trái,phảicủamenu,thayvìphảisửaởcửasổcode\nhình40:category-Box"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 160,
    "text": "160Category:Border->Top,Bottom:solidkhoảngcáchgiữacácmenu\nhình41:Category:Border->Top,Bottom\n10.3.19TạohiệuứngHover\nTrongcửasổManagechọncáithứ4\nMụcCategorychọntiếpmục4–Box:sửađổitopvàbottom;\nhình42:boxbottom\n10.3.20Tạomenuthunhỏ(cDaughterMenu)\nBấmvàođườngviềncủabảngCtrl+F3,phầnClasscDaughterMenu\nVàoManagestyle,chọncáithứ5->Edit\nMụcCategorychọnbox,sửađổiwidththành10%;\n10.3.21Tựtạomenufreemenustyle\nTạomớiCssStyles"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 161,
    "text": "161Đặttên:.Menua,chọn:Advance–lưucssvàoFolderCssriêng\nhình43:Tựtạomenufreemenustyle\nThiếtlập1thuộctínhchothẻanhưhìnhtrên\nTạotiếpthẻ:.Menua:link,.Menua:visited\nThiếtlậpcáctuỳchọn\nFont,đậm,màuchữ,màunền,Boxđườngbotrêndướitráiphảicủamenu\nBorder:Top,bottom,width=1,màuviền,…\nTạothẻ:.Menua:hover(khidichuyểnchuộtlênmenunàysẽxảyrabiếncốđổimàu\nchữvàmàuviềntrêndướicủamenu)\nĐổimàuchữđườngviền,màu,…\n10.3.22TạoPopUpmenu\nĐặtchuộttạihìnhảnh,mởbảngtagchọnBehaviors,kíchdấu+chọntiếpShowPopUp\nMenu\n10.3.23SửdụngCss\nA:link–loạibỏđườnggạchchândướiliênkết\nA:visited-loạibỏđườnggạchchânsaukhikíchvàoliênkết\nA:hover–thayđổihiệuứngkhiđưachuộtlênliênkết\nImg–huỷbỏviềnđốivớiliênkếtlàdạngảnh\n10.3.24Đổifontchữchocombobox…\nSELECT{FONT-SIZE:11px;COLOR:#000066;FONT-FAMILY:tahoma,verdana}\nINPUT{FONT-SIZE:11px;COLOR:#000066;FONT-FAMILY:tahoma,verdana}\nINPUT:unknown{FONT-SIZE:11px;COLOR:#000066;FONT-FAMILY:tahoma,\nverdana}\nTEXTAREA{FONT-SIZE:11px;COLOR:#000066;FONT-FAMILY:tahoma,verdana}\nBàithựchànhsố10:\n-Tạotrangwebtheomẫusau:"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 162,
    "text": "162\nhình44:hìnhminhhoạ\nTạomới1trangnềnthiếtlậpmàu:#E0E0E0,lềthiếtlập:0toànbộ;\nhình45:AppearanceBakgroundcolor\nTạomới1bảngvớithôngsốnhưsau,sauđóchọnalignCenter\nhình46:tabtablewidth\nChọncả2ôcủabảngchọnalignTop;tạomớitiếpmộtbảngnữadài184cao129ảnh"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 163,
    "text": "163nềnchọnlogo2ởôđầutiêncủabảng1;\nÔthứ2củabảng1tạomớibảngthứ3rộng100%gồm5hàng1cột;\nTrongbảngnàytạomớitiếpbảngthứ4gồm5cộtrộng100%,lầnlượtchèn5ảnhnút\n(Home,New,…vàotrong)\nHàngthứ2củabảng4thiếtlậpảnhnềnfon_top01,chiềucao37\nTạomớitiếpbảngthứ5với5cột1dònglầnlượtchènảnhchungeo1vào5ôđãtạo,áp\ndụngvàstylesau(size11;padding:bottom:1,Margin:Top:1,right=10,bottom=0,left=10)-\n>class;\nTạotrangleftCategories\nChènbảngdài165gồm3hàng,ảnhnềncủabảnglàfont_left02\nÔđầutiêncủabảngcao26,nềnlàleft01,sửdụngcss:font11,đậm\nhình47:Box\nchọncsstừstylegõchữ:categories\nÔthứ2củabảnggõlệnh:\n<%dowhilenotrecordset1.eof\nloop%>\nápdụngcssthứ2\nhình48:BoxMargin\nchènảnhmũitêneo2,chèntrường(namecategories),đóngthẻcss"
  },
  {
    "file": "LapTrinhWeb_CDN.pdf",
    "page": 164,
    "text": "164CÁCTHUẬTNGỮCHUYÊNMÔN\n-HTML(HyperTextMarkupLanguage):ngônngữđánhdấusiêuvănbản\n-Type:kiểu\n-Tag:thẻ\n-Multimedia:đaphươngtiện\n-Frame:khung\n-Table:bảng\nTÀILIỆUTHAMKHẢO\n-GiáotrìnhthiếtkếWeb–KhoaCNTT–TrườngĐạihọcCầnthơ\n-KỹthuậtlậptrìnhASP3.0–NhàxuấtbảnThốngkê\n-Websitehttp://www.asp.net\n-Websitehttp://www.vovisoft.com"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 1,
    "text": "WEB DEVELOPMENTLearning PHP, MySQL & JavaScript\nISBN: 978-1-491-91866-1US $49.99  CAN $52.99“\u0007This\u0007is\u0007a\u0007great \u0007beginner's \u0007\nbook\u0007 that\u0007introduces \u0007\u0007\nseveral \u0007crucial \u0007web\u0007\ndeveloper \u0007languages. \u0007\u0007\nIt's\u0007a\u0007quick-paced,\u0007 easy-\nto-read, \u0007information-\npacked\u0007 book\u0007 that\u0007will\u0007\nsoon\u0007 have\u0007 you\u0007creating \u0007\ndynamically \u0007driven \u0007web-\nsites, \u0007including \u0007a\u0007basic \u0007\nsocial\u0007 networking\u0007 site.”\n—Albert Wiersch\ndeveloper of CSE HTML Validator\nTwitter: @oreillymedia\nfacebook.com/oreillyBuild interactive, data-driven websites with the potent combination of \nopen-source technologies and web standards, even if you have only basic \nHTML knowledge. With this popular hands-on guide, you’ll tackle dynamic \nweb programming with the help of today’s core technologies: PHP , MySQL, \nJavaScript, jQuery, CSS, and HTML5. \nExplore each technology separately, learn how to use them together, and \npick up valuable web programming practices along the way. At the end of \nthe book, you’ll put everything together to build a fully functional social \nnetworking site, using XAMPP or any development stack you choose.\n ■Learn PHP in-depth, along with the basics of object-oriented \nprogramming\n ■ Explore MySQL, from database structure to complex queries\n ■ Use the MySQLi Extension, PHP’s improved MySQL interface \n ■ Create dynamic PHP web pages that tailor themselves to  \nthe user\n ■ Manage cookies and sessions, and maintain a high level  \nof security\n ■ Master the JavaScript language—and enhance it with jQuery\n ■ Use Ajax calls for background browser/server communication \n ■ Acquire CSS2 & CSS3 skills for professionally styling your  \nweb pages\n ■ Implement all of the new HTML5 features, including \ngeolocation, audio, video, and the canvas\nRobin Nixon , an IT journalist who has written hundreds of articles and several \nbooks on computing, has developed numerous websites using open source tools, \nspecializing in the technologies featured in this book. Robin has worked with and \nwritten about computers since the early 1980s.\nRobin NixonLearning\n P H P,  M y S Q L\n& JavaScript\nWITH JQUERY, CSS & HTML5\n4th Edition\nwith jQuery\nLearning PHP,  \nMySQL & JavaScript\nFOURTH EDITIONNixon"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 2,
    "text": "WEB DEVELOPMENTLearning PHP, MySQL & JavaScript\nISBN: 978-1-491-91866-1US $49.99  CAN $52.99“\u0007This\u0007is\u0007a\u0007great \u0007beginner's \u0007\nbook\u0007 that\u0007introduces \u0007\u0007\nseveral \u0007crucial \u0007web\u0007\ndeveloper \u0007languages. \u0007\u0007\nIt's\u0007a\u0007quick-paced,\u0007 easy-\nto-read, \u0007information-\npacked\u0007 book\u0007 that\u0007will\u0007\nsoon\u0007 have\u0007 you\u0007creating \u0007\ndynamically \u0007driven \u0007web-\nsites, \u0007including \u0007a\u0007basic \u0007\nsocial\u0007 networking\u0007 site.”\n—Albert Wiersch\ndeveloper of CSE HTML Validator\nTwitter: @oreillymedia\nfacebook.com/oreillyBuild interactive, data-driven websites with the potent combination of \nopen-source technologies and web standards, even if you have only basic \nHTML knowledge. With this popular hands-on guide, you’ll tackle dynamic \nweb programming with the help of today’s core technologies: PHP , MySQL, \nJavaScript, jQuery, CSS, and HTML5. \nExplore each technology separately, learn how to use them together, and \npick up valuable web programming practices along the way. At the end of \nthe book, you’ll put everything together to build a fully functional social \nnetworking site, using XAMPP or any development stack you choose.\n ■Learn PHP in-depth, along with the basics of object-oriented \nprogramming\n ■ Explore MySQL, from database structure to complex queries\n ■ Use the MySQLi Extension, PHP’s improved MySQL interface \n ■ Create dynamic PHP web pages that tailor themselves to  \nthe user\n ■ Manage cookies and sessions, and maintain a high level  \nof security\n ■ Master the JavaScript language—and enhance it with jQuery\n ■ Use Ajax calls for background browser/server communication \n ■ Acquire CSS2 & CSS3 skills for professionally styling your  \nweb pages\n ■ Implement all of the new HTML5 features, including \ngeolocation, audio, video, and the canvas\nRobin Nixon , an IT journalist who has written hundreds of articles and several \nbooks on computing, has developed numerous websites using open source tools, \nspecializing in the technologies featured in this book. Robin has worked with and \nwritten about computers since the early 1980s.\nRobin NixonLearning\n P H P,  M y S Q L\n& JavaScript\nWITH JQUERY, CSS & HTML5\n4th Edition\nwith jQuery\nLearning PHP,  \nMySQL & JavaScript\nFOURTH EDITIONNixon"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 3,
    "text": "Robin NixonLearning PHP , MySQL & JavaScript\nWith jQuery, CSS & HTML5FOURTH EDITION"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 4,
    "text": "978-1-491-91866-1\n[LSI]Learning PHP , MySQL & JavaScript\nWith jQuery, CSS & HTML5\nby Robin Nixon\nCopyright © 2015 Robin Nixon. All rights reserved.\nPrinted in the United States of America.\nPublished by O’Reilly Media, Inc., 1005 Gravenstein Highway North, Sebastopol, CA 95472.\nO’Reilly books may be purchased for educational, business, or sales promotional use. Online editions are\nalso available for most titles ( http://safaribooksonline.com ). For more information, contact our corporate/\ninstitutional sales department: 800-998-9938 or corporate@oreilly.com .\nEditor:  Andy Oram\nProduction Editor:  Nicole Shelby\nCopyeditor:  Rachel Monaghan\nProofreader:  Sharon WilkeyIndexer:  Ellen Troutman\nInterior Designer:  David Futato\nCover Designer:  Randy Comer\nIllustrator:  Rebecca Demarest\nDecember 2014:  Fourth Edition\nRevision History for the Fourth Edition\n2014-11-21: First Release\nSee http://oreilly.com/catalog/errata.csp?isbn=9781491918661  for release details.\nThe O’Reilly logo is a registered trademark of O’Reilly Media, Inc. Learning PHP , MySQL & JavaScript , the\ncover image, and related trade dress are trademarks of O’Reilly Media, Inc.\nWhile the publisher and the author have used good faith efforts to ensure that the information and\ninstructions contained in this work are accurate, the publisher and the author disclaim all responsibility\nfor errors or omissions, including without limitation responsibility for damages resulting from the use of\nor reliance on this work. Use of the information and instructions contained in this work is at your own\nrisk. If any code samples or other technology this work contains or describes is subject to open source\nlicenses or the intellectual property rights of others, it is your responsibility to ensure that your use\nthereof complies with such licenses and/or rights."
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 5,
    "text": "For Julie"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 6,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 7,
    "text": "Table of Contents\nPreface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  xxiii\n1.Introduction to Dynamic Web Content. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  1\nHTTP and HTML: Berners-Lee’s Basics                                                                         2\nThe Request/Response Procedure                                                                                   2\nThe Benefits of PHP , MySQL, JavaScript, CSS, and HTML5                                      5\nUsing PHP                                                                                                                       6\nUsing MySQL                                                                                                                  7\nUsing JavaScript                                                                                                              8\nUsing CSS                                                                                                                        9\nAnd Then There’s HTML5                                                                                             10\nThe Apache Web Server                                                                                                  11\nAbout Open Source                                                                                                         12\nBringing It All Together                                                                                                  12\nQuestions                                                                                                                          14\n2.Setting Up a Development Server. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  15\nWhat Is a W AMP , MAMP , or LAMP?                                                                           16\nInstalling XAMPP on Windows                                                                                    16\nTesting the Installation                                                                                                24\nInstalling XAMPP on Mac OS X                                                                                   27\nAccessing the Document Root                                                                                   27\nInstalling a LAMP on Linux                                                                                           28\nWorking Remotely                                                                                                           28\nLogging In                                                                                                                     28\nUsing FTP                                                                                                                      29\nUsing a Program Editor                                                                                                  30\nUsing an IDE                                                                                                                    31\nv"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 8,
    "text": "Questions                                                                                                                          33\n3.Introduction to PHP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  35\nIncorporating PHP Within HTML                                                                               35\nThis Book’s Examples                                                                                                      37\nThe Structure of PHP                                                                                                      38\nUsing Comments                                                                                                          38\nBasic Syntax                                                                                                                   39\nVariables                                                                                                                        40\nOperators                                                                                                                       45\nVariable Assignment                                                                                                    48\nMultiple-Line Commands                                                                                           50\nVariable Typing                                                                                                             52\nConstants                                                                                                                       53\nPredefined Constants                                                                                                   54\nThe Difference Between the echo and print Commands                                       55\nFunctions                                                                                                                       55\nVariable Scope                                                                                                               56\nQuestions                                                                                                                          62\n4.Expressions and Control Flow in PHP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  63\nExpressions                                                                                                                       63\nTRUE or FALSE?                                                                                                          63\nLiterals and Variables                                                                                                   65\nOperators                                                                                                                          66\nOperator Precedence                                                                                                   67\nAssociativity                                                                                                                  69\nRelational Operators                                                                                                    70\nConditionals                                                                                                                     74\nThe if Statement                                                                                                            75\nThe else Statement                                                                                                        76\nThe elseif Statement                                                                                                     78\nThe switch Statement                                                                                                   79\nThe ? Operator                                                                                                              82\nLooping                                                                                                                             83\nwhile Loops                                                                                                                   84\ndo...while Loops                                                                                                            86\nfor Loops                                                                                                                        86\nBreaking Out of a Loop                                                                                               88\nThe continue Statement                                                                                               89\nImplicit and Explicit Casting                                                                                          90\nPHP Dynamic Linking                                                                                                    91\nvi | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 9,
    "text": "Dynamic Linking in Action                                                                                            92\nQuestions                                                                                                                          93\n5.PHP Functions and Objects. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  95\nPHP Functions                                                                                                                 96\nDefining a Function                                                                                                     98\nReturning a Value                                                                                                         98\nReturning an Array                                                                                                    100\nDo Not Pass Arguments by Reference                                                                    100\nReturning Global Variables                                                                                       102\nRecap of Variable Scope                                                                                            103\nIncluding and Requiring Files                                                                                     103\nThe include Statement                                                                                               104\nUsing include_once                                                                                                    104\nUsing require and require_once                                                                              105\nPHP Version Compatibility                                                                                          105\nPHP Objects                                                                                                                   106\nTerminology                                                                                                                106\nDeclaring a Class                                                                                                        107\nCreating an Object                                                                                                     108\nAccessing Objects                                                                                                       109\nCloning Objects                                                                                                          110\nConstructors                                                                                                               111\nPHP 5 Destructors                                                                                                     112\nWriting Methods                                                                                                        112\nStatic Methods in PHP 5                                                                                           113\nDeclaring Properties                                                                                                  114\nDeclaring Constants                                                                                                  115\nProperty and Method Scope in PHP 5                                                                    115\nStatic Properties and Methods                                                                                 116\nInheritance                                                                                                                  118\nQuestions                                                                                                                        121\n6.PHP Arrays. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  123\nBasic Access                                                                                                                    123\nNumerically Indexed Arrays                                                                                     123\nAssociative Arrays                                                                                                      125\nAssignment Using the array Keyword                                                                     126\nThe foreach...as Loop                                                                                                    127\nMultidimensional Arrays                                                                                              129\nUsing Array Functions                                                                                                  132\nis_array                                                                                                                        132\nTable of Contents | vii"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 10,
    "text": "count                                                                                                                            132\nsort                                                                                                                                133\nshuffle                                                                                                                           133\nexplode                                                                                                                         133\nextract                                                                                                                          134\ncompact                                                                                                                       135\nreset                                                                                                                              136\nend                                                                                                                                136\nQuestions                                                                                                                        137\n7.Practical PHP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  139\nUsing printf                                                                                                                     139\nPrecision Setting                                                                                                         140\nString Padding                                                                                                            142\nUsing sprintf                                                                                                                143\nDate and Time Functions                                                                                             143\nDate Constants                                                                                                           146\nUsing checkdate                                                                                                          146\nFile Handling                                                                                                                  147\nChecking Whether a File Exists                                                                               147\nCreating a File                                                                                                             147\nReading from Files                                                                                                     149\nCopying Files                                                                                                              150\nMoving a File                                                                                                              150\nDeleting a File                                                                                                             151\nUpdating Files                                                                                                             151\nLocking Files for Multiple Accesses                                                                         152\nReading an Entire File                                                                                               154\nUploading Files                                                                                                           155\nSystem Calls                                                                                                                    160\nXHTML or HTML5?                                                                                                     162\nQuestions                                                                                                                        162\n8.Introduction to MySQL. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  165\nMySQL Basics                                                                                                                 165\nSummary of Database Terms                                                                                       166\nAccessing MySQL via the Command Line                                                                 166\nStarting the Command-Line Interface                                                                    167\nUsing the Command-Line Interface                                                                        171\nMySQL Commands                                                                                                   172\nData Types                                                                                                                   177\nIndexes                                                                                                                            186\nviii | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 11,
    "text": "Creating an Index                                                                                                       186\nQuerying a MySQL Database                                                                                   192\nJoining Tables Together                                                                                             202\nUsing Logical Operators                                                                                            204\nMySQL Functions                                                                                                          204\nAccessing MySQL via phpMyAdmin                                                                          205\nQuestions                                                                                                                        206\n9.Mastering MySQL. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  209\nDatabase Design                                                                                                             209\nPrimary Keys: The Keys to Relational Databases                                                  210\nNormalization                                                                                                                211\nFirst Normal Form                                                                                                     212\nSecond Normal Form                                                                                                214\nThird Normal Form                                                                                                   217\nWhen Not to Use Normalization                                                                             219\nRelationships                                                                                                                  219\nOne-to-One                                                                                                                 219\nOne-to-Many                                                                                                              220\nMany-to-Many                                                                                                            221\nDatabases and Anonymity                                                                                        222\nTransactions                                                                                                                    223\nTransaction Storage Engines                                                                                    223\nUsing BEGIN                                                                                                              224\nUsing COMMIT                                                                                                         225\nUsing ROLLBACK                                                                                                     225\nUsing EXPLAIN                                                                                                             226\nBacking Up and Restoring                                                                                            227\nUsing mysqldump                                                                                                      227\nCreating a Backup File                                                                                               229\nRestoring from a Backup File                                                                                   231\nDumping Data in CSV Format                                                                                231\nPlanning Y our Backups                                                                                             232\nQuestions                                                                                                                        232\n10. Accessing MySQL Using PHP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  233\nQuerying a MySQL Database with PHP                                                                    233\nThe Process                                                                                                                 233\nCreating a Login File                                                                                                  234\nConnecting to a MySQL Database                                                                           235\nA Practical Example                                                                                                      240\nThe $_POST Array                                                                                                     243\nTable of Contents | ix"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 12,
    "text": "Deleting a Record                                                                                                       244\nDisplaying the Form                                                                                                  245\nQuerying the Database                                                                                              246\nRunning the Program                                                                                                247\nPractical MySQL                                                                                                            248\nCreating a Table                                                                                                          248\nDescribing a Table                                                                                                      249\nDropping a Table                                                                                                        250\nAdding Data                                                                                                                250\nRetrieving Data                                                                                                           251\nUpdating Data                                                                                                             251\nDeleting Data                                                                                                              252\nUsing AUTO_INCREMENT                                                                                    252\nPerforming Additional Queries                                                                               254\nPreventing Hacking Attempts                                                                                      255\nSteps Y ou Can Take                                                                                                    256\nUsing Placeholders                                                                                                     257\nPreventing HTML Injection                                                                                     259\nUsing mysqli Procedurally                                                                                            261\nQuestions                                                                                                                        263\n11. Form Handling. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  265\nBuilding Forms                                                                                                               265\nRetrieving Submitted Data                                                                                           267\nregister_globals: An Old Solution Hangs On                                                         268\nDefault Values                                                                                                             269\nInput Types                                                                                                                 270\nSanitizing Input                                                                                                          277\nAn Example Program                                                                                                    279\nWhat’s New in HTML5?                                                                                               281\nThe autocomplete Attribute                                                                                      282\nThe autofocus Attribute                                                                                            282\nThe placeholder Attribute                                                                                         282\nThe required Attribute                                                                                              282\nOverride Attributes                                                                                                    283\nThe width and height Attributes                                                                              283\nFeatures Awaiting Full Implementation                                                                     283\nThe form Attribute                                                                                                     283\nThe list Attribute                                                                                                        284\nThe min and max Attributes                                                                                    284\nThe step Attribute                                                                                                      284\nThe color Input Type                                                                                                 285\nx | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 13,
    "text": "The number and range Input Types                                                                        285\nDate and Time Pickers                                                                                               285\nQuestions                                                                                                                        285\n12. Cookies, Sessions, and Authentication. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  287\nUsing Cookies in PHP                                                                                                   287\nSetting a Cookie                                                                                                          289\nAccessing a Cookie                                                                                                     290\nDestroying a Cookie                                                                                                  290\nHTTP Authentication                                                                                                   290\nStoring Usernames and Passwords                                                                          294\nSalting                                                                                                                          294\nUsing Sessions                                                                                                                298\nStarting a Session                                                                                                        299\nEnding a Session                                                                                                         302\nSetting a Time-Out                                                                                                     303\nSession Security                                                                                                          303\nQuestions                                                                                                                        307\n13. Exploring JavaScript. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  309\nJavaScript and HTML Text                                                                                           310\nUsing Scripts Within a Document Head                                                                311\nOlder and Nonstandard Browsers                                                                           311\nIncluding JavaScript Files                                                                                          312\nDebugging JavaScript Errors                                                                                    313\nUsing Comments                                                                                                           315\nSemicolons                                                                                                                      315\nVariables                                                                                                                          316\nString Variables                                                                                                           316\nNumeric Variables                                                                                                      317\nArrays                                                                                                                           317\nOperators                                                                                                                        318\nArithmetic Operators                                                                                                318\nAssignment Operators                                                                                               318\nComparison Operators                                                                                              319\nLogical Operators                                                                                                       319\nVariable Incrementing and Decrementing                                                             320\nString Concatenation                                                                                                 320\nEscaping Characters                                                                                                   320\nVariable Typing                                                                                                              321\nFunctions                                                                                                                         322\nGlobal Variables                                                                                                             322\nTable of Contents | xi"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 14,
    "text": "Local Variables                                                                                                               323\nThe Document Object Model                                                                                      324\nBut It’s Not That Simple                                                                                            326\nUsing the DOM                                                                                                          327\nAbout document.write                                                                                                  328\nUsing console.log                                                                                                       328\nUsing alert                                                                                                                   328\nWriting into Elements                                                                                               329\nUsing document.write                                                                                               329\nQuestions                                                                                                                        329\n14. Expressions and Control Flow in JavaScript. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  331\nExpressions                                                                                                                     331\nLiterals and Variables                                                                                                    332\nOperators                                                                                                                        333\nOperator Precedence                                                                                                 334\nAssociativity                                                                                                                334\nRelational Operators                                                                                                  335\nThe with Statement                                                                                                        338\nUsing onerror                                                                                                                 339\nUsing try...catch                                                                                                              340\nConditionals                                                                                                                   341\nThe if Statement                                                                                                         341\nThe else Statement                                                                                                     341\nThe switch Statement                                                                                                 342\nThe ? Operator                                                                                                            344\nLooping                                                                                                                           344\nwhile Loops                                                                                                                 344\ndo...while Loops                                                                                                          345\nfor Loops                                                                                                                      346\nBreaking Out of a Loop                                                                                             346\nThe continue Statement                                                                                            347\nExplicit Casting                                                                                                              348\nQuestions                                                                                                                        348\n15. JavaScript Functions, Objects, and Arrays. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  351\nJavaScript Functions                                                                                                      351\nDefining a Function                                                                                                   351\nReturning a Value                                                                                                       353\nReturning an Array                                                                                                    355\nJavaScript Objects                                                                                                          356\nDeclaring a Class                                                                                                        356\nxii | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 15,
    "text": "Creating an Object                                                                                                     357\nAccessing Objects                                                                                                       358\nThe prototype Keyword                                                                                            358\nJavaScript Arrays                                                                                                            361\nNumeric Arrays                                                                                                          361\nAssociative Arrays                                                                                                      362\nMultidimensional Arrays                                                                                          363\nUsing Array Methods                                                                                                364\nQuestions                                                                                                                        369\n16. JavaScript and PHP Validation and Error Handling. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  371\nValidating User Input with JavaScript                                                                         371\nThe validate.html Document (Part 1)                                                                     372\nThe validate.html Document (Part 2)                                                                     374\nRegular Expressions                                                                                                      377\nMatching Through Metacharacters                                                                         378\nFuzzy Character Matching                                                                                        378\nGrouping Through Parentheses                                                                               379\nCharacter Classes                                                                                                       380\nIndicating a Range                                                                                                     380\nNegation                                                                                                                      380\nSome More-Complicated Examples                                                                        381\nSummary of Metacharacters                                                                                     383\nGeneral Modifiers                                                                                                      385\nUsing Regular Expressions in JavaScript                                                                386\nUsing Regular Expressions in PHP                                                                          386\nRedisplaying a Form After PHP Validation                                                               387\nQuestions                                                                                                                        393\n17. Using Ajax. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  395\nWhat Is Ajax?                                                                                                                  395\nUsing XMLHttpRequest                                                                                               396\nY our First Ajax Program                                                                                           398\nUsing Get Instead of Post                                                                                          403\nSending XML Requests                                                                                             406\nUsing Frameworks for Ajax                                                                                      411\nQuestions                                                                                                                        411\n18. Introduction to CSS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  413\nImporting a Style Sheet                                                                                                 414\nImporting CSS from Within HTML                                                                       414\nEmbedded Style Settings                                                                                           415\nTable of Contents | xiii"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 16,
    "text": "Using IDs                                                                                                                         415\nUsing Classes                                                                                                                  415\nUsing Semicolons                                                                                                           416\nCSS Rules                                                                                                                        416\nMultiple Assignments                                                                                                416\nUsing Comments                                                                                                        417\nStyle Types                                                                                                                      418\nDefault Styles                                                                                                              418\nUser Styles                                                                                                                   418\nExternal Style Sheets                                                                                                  419\nInternal Styles                                                                                                             419\nInline Styles                                                                                                                 420\nCSS Selectors                                                                                                                  420\nThe Type Selector                                                                                                       420\nThe Descendant Selector                                                                                           420\nThe Child Selector                                                                                                      421\nThe ID Selector                                                                                                           422\nThe Class Selector                                                                                                      423\nThe Attribute Selector                                                                                               423\nThe Universal Selector                                                                                               424\nSelecting by Group                                                                                                     425\nThe CSS Cascade                                                                                                            425\nStyle Sheet Creators                                                                                                   426\nStyle Sheet Methods                                                                                                   426\nStyle Sheet Selectors                                                                                                   426\nCalculating Specificity                                                                                               427\nThe Difference Between Div and Span Elements                                                  429\nMeasurements                                                                                                                431\nFonts and Typography                                                                                                   432\nfont-family                                                                                                                   433\nfont-style                                                                                                                      433\nfont-size                                                                                                                       434\nfont-weight                                                                                                                  434\nManaging Text Styles                                                                                                     435\nDecoration                                                                                                                   435\nSpacing                                                                                                                         435\nAlignment                                                                                                                    436\nTransformation                                                                                                           436\nIndenting                                                                                                                     436\nCSS Colors                                                                                                                      437\nShort Color Strings                                                                                                    438\nGradients                                                                                                                     438\nxiv | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 17,
    "text": "Positioning Elements                                                                                                     439\nAbsolute Positioning                                                                                                  440\nRelative Positioning                                                                                                   440\nFixed Positioning                                                                                                        440\nPseudoclasses                                                                                                                  442\nShorthand Rules                                                                                                             444\nThe Box Model and Layout                                                                                          445\nSetting Margins                                                                                                           445\nApplying Borders                                                                                                       447\nAdjusting Padding                                                                                                      448\nObject Contents                                                                                                          450\nQuestions                                                                                                                        450\n19. Advanced CSS with CSS3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  451\nAttribute Selectors                                                                                                         451\nMatching Parts of Strings                                                                                          452\nThe box-sizing Property                                                                                               453\nCSS3 Backgrounds                                                                                                         453\nThe background-clip Property                                                                                 454\nThe background-origin Property                                                                             456\nThe background-size Property                                                                                 456\nUsing the auto Value                                                                                                  457\nMultiple Backgrounds                                                                                                   457\nCSS3 Borders                                                                                                                  459\nThe border-color Property                                                                                        459\nThe border-radius Property                                                                                      459\nBox Shadows                                                                                                                   462\nElement Overflow                                                                                                          463\nMulticolumn Layout                                                                                                      463\nColors and Opacity                                                                                                        465\nHSL Colors                                                                                                                  465\nHSLA Colors                                                                                                               466\nRGB Colors                                                                                                                 466\nRGBA Colors                                                                                                              467\nThe opacity Property                                                                                                 467\nText Effects                                                                                                                      467\nThe text-shadow Property                                                                                        467\nThe text-overflow Property                                                                                      468\nThe word-wrap Property                                                                                          469\nWeb Fonts                                                                                                                       469\nGoogle Web Fonts                                                                                                          470\nTransformations                                                                                                             472\nTable of Contents | xv"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 18,
    "text": "3D Transformations                                                                                                      473\nTransitions                                                                                                                      474\nProperties to Transition                                                                                            474\nTransition Duration                                                                                                   475\nTransition Delay                                                                                                         475\nTransition Timing                                                                                                      475\nShorthand Syntax                                                                                                       476\nQuestions                                                                                                                        477\n20. Accessing CSS from JavaScript. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  479\nRevisiting the getElementById Function                                                                    479\nThe O function                                                                                                           479\nThe S Function                                                                                                           480\nThe C Function                                                                                                           481\nIncluding the Functions                                                                                            482\nAccessing CSS Properties from JavaScript                                                                 482\nSome Common Properties                                                                                       483\nOther Properties                                                                                                         484\nInline JavaScript                                                                                                             486\nThe this Keyword                                                                                                       486\nAttaching Events to Objects in a Script                                                                   487\nAttaching to Other Events                                                                                        488\nAdding New Elements                                                                                                   489\nRemoving Elements                                                                                                   490\nAlternatives to Adding and Removing Elements                                                  491\nUsing Interrupts                                                                                                             492\nUsing setTimeout                                                                                                       492\nCancelling a Time-Out                                                                                              493\nUsing setInterval                                                                                                         493\nUsing Interrupts for Animation                                                                               495\nQuestions                                                                                                                        497\n21. Introduction to jQuery. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  499\nWhy jQuery?                                                                                                                   500\nIncluding jQuery                                                                                                            500\nChoosing the Right Version                                                                                      500\nDownloading                                                                                                              501\nUsing a Content Delivery Network                                                                         502\nAlways Using the Latest Version                                                                              503\nCustomizing jQuery                                                                                                  503\njQuery Syntax                                                                                                                 503\nA Simple Example                                                                                                      504\nxvi | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 19,
    "text": "Avoiding Library Conflict                                                                                         505\nSelectors                                                                                                                           505\nThe css Method                                                                                                           506\nThe Element Selector                                                                                                 506\nThe ID Selector                                                                                                           507\nThe Class Selector                                                                                                      507\nCombining Selectors                                                                                                  507\nHandling Events                                                                                                             508\nWaiting Until the Document Is Ready                                                                        509\nEvent Functions and Properties                                                                                   510\nThe blur and focus Events                                                                                         511\nThe this Keyword                                                                                                       512\nThe click and dblclick Events                                                                                   512\nThe keypress Event                                                                                                    513\nConsiderate Programming                                                                                       515\nThe mousemove Event                                                                                              515\nOther Mouse Events                                                                                                   518\nAlternative Mouse Methods                                                                                     519\nThe submit Event                                                                                                       520\nSpecial Effects                                                                                                                 521\nHiding and Showing                                                                                                  522\nThe toggle Method                                                                                                     523\nFading In and Out                                                                                                      524\nSliding Elements Up and Down                                                                               525\nAnimations                                                                                                                  526\nStopping Animations                                                                                                 529\nManipulating the DOM                                                                                                530\nThe Difference Between The text and html Methods                                           531\nThe val and attr Methods                                                                                          531\nAdding and Removing Elements                                                                             533\nDynamically Applying Classes                                                                                     535\nModifying Dimensions                                                                                                 535\nThe width and height Methods                                                                                536\nThe innerWidth and innerHeight Methods                                                           538\nThe outerWidth and OuterHeight Methods                                                          538\nDOM Traversal                                                                                                               539\nParent Elements                                                                                                          539\nChild Elements                                                                                                           543\nSibling Elements                                                                                                         543\nSelecting the Next and Previous Elements                                                             545\nTraversing jQuery Selections                                                                                    546\nThe is Method                                                                                                             548\nTable of Contents | xvii"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 20,
    "text": "Using jQuery Without Selectors                                                                                  549\nThe $.each Method                                                                                                    550\nThe $.map Method                                                                                                     551\nUsing Ajax                                                                                                                       551\nUsing the Post Method                                                                                              551\nUsing the Get Method                                                                                               552\nPlug-Ins                                                                                                                           553\nThe jQuery User Interface                                                                                        553\nOther Plug-Ins                                                                                                            553\njQuery Mobile                                                                                                             554\nQuestions                                                                                                                        555\n22. Introduction to HTML5. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  557\nThe Canvas                                                                                                                     558\nGeolocation                                                                                                                     559\nAudio and Video                                                                                                            561\nForms                                                                                                                               562\nLocal Storage                                                                                                                  563\nWeb Workers                                                                                                                  563\nWeb Applications                                                                                                           563\nMicrodata                                                                                                                        564\nSummary                                                                                                                         564\nQuestions                                                                                                                        564\n23. The HTML5 Canvas. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  565\nCreating and Accessing a Canvas                                                                                565\nThe toDataURL Function                                                                                         567\nSpecifying an Image Type                                                                                         569\nThe fillRect Method                                                                                                   569\nThe clearRect Method                                                                                               569\nThe strokeRect Method                                                                                             570\nCombining These Commands                                                                                 570\nThe createLinearGradient Method                                                                          571\nThe addColorStop Method in Detail                                                                       573\nThe createRadialGradient Method                                                                          574\nUsing Patterns for Fills                                                                                              576\nWriting Text to the Canvas                                                                                           578\nThe strokeText Method                                                                                             578\nThe textBaseLine Property                                                                                        579\nThe font Property                                                                                                       579\nThe textAlign Property                                                                                              579\nThe fillText Method                                                                                                   580\nxviii | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 21,
    "text": "The measureText Method                                                                                         581\nDrawing Lines                                                                                                                581\nThe lineWidth Property                                                                                            581\nThe lineCap and lineJoin Properties                                                                       581\nThe miterLimit Property                                                                                           584\nUsing Paths                                                                                                                     584\nThe moveTo and LineTo Methods                                                                           584\nThe stroke Method                                                                                                     585\nThe rect Method                                                                                                         585\nFilling Areas                                                                                                                    586\nThe clip Method                                                                                                             587\nThe isPointInPath Method                                                                                           590\nWorking with Curves                                                                                                    591\nThe arc Method                                                                                                          591\nThe arcTo Method                                                                                                      594\nThe quadraticCurveTo Method                                                                               595\nThe bezierCurveTo Method                                                                                      596\nManipulating Images                                                                                                     597\nThe drawImage Method                                                                                            597\nResizing an Image                                                                                                      598\nSelecting an Image Area                                                                                            598\nCopying from a Canvas                                                                                             600\nAdding Shadows                                                                                                         600\nEditing at the Pixel Level                                                                                              602\nThe getImageData Method                                                                                       602\nThe data Array                                                                                                            603\nThe putImageData Method                                                                                      605\nThe createImageData Method                                                                                  605\nAdvanced Graphical Effects                                                                                         606\nThe globalCompositeOperation Property                                                              606\nThe globalAlpha Property                                                                                         609\nTransformations                                                                                                             609\nThe scale Method                                                                                                       609\nThe save and restore Methods                                                                                  610\nThe rotate Method                                                                                                     611\nThe translate Method                                                                                                 612\nThe transform Method                                                                                              613\nThe setTransform Method                                                                                        615\nSummary                                                                                                                         615\nQuestions                                                                                                                        616\nTable of Contents | xix"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 22,
    "text": "24. HTML5 Audio and Video. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  617\nAbout Codecs                                                                                                                 618\nThe <audio> Element                                                                                                    619\nSupporting Non-HTML5 Browsers                                                                            621\nThe <video> Element                                                                                                    623\nThe Video Codecs                                                                                                      623\nSupporting Older Browsers                                                                                      627\nSummary                                                                                                                         629\nQuestions                                                                                                                        629\n25. Other HTML5 Features. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  631\nGeolocation and the GPS Service                                                                                631\nOther Location Methods                                                                                               632\nGeolocation and HTML5                                                                                             632\nLocal Storage                                                                                                                  636\nUsing Local Storage                                                                                                    637\nThe localStorage Object                                                                                            637\nWeb Workers                                                                                                                  639\nOffline Web Applications                                                                                             641\nDrag and Drop                                                                                                               643\nCross-Document Messaging                                                                                        645\nMicrodata                                                                                                                        648\nOther HTML5 Tags                                                                                                       651\nSummary                                                                                                                         652\nQuestions                                                                                                                        652\n26. Bringing It All Together. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  653\nDesigning a Social Networking Site                                                                            653\nOn the Website                                                                                                               654\nfunctions.php                                                                                                                  654\nThe Functions                                                                                                             654\nheader.php                                                                                                                       656\nsetup.php                                                                                                                         658\nindex.php                                                                                                                        660\nsignup.php                                                                                                                       661\nChecking for Username Availability                                                                       661\nLogging In                                                                                                                   662\ncheckuser.php                                                                                                                 665\nlogin.php                                                                                                                         665\nprofile.php                                                                                                                       667\nAdding the “ About Me” Text                                                                                     668\nAdding a Profile Image                                                                                              668\nxx | Table of Contents"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 23,
    "text": "Processing the Image                                                                                                 668\nDisplaying the Current Profile                                                                                 669\nmembers.php                                                                                                                  672\nViewing a User’s Profile                                                                                             672\nAdding and Dropping Friends                                                                                 672\nListing All Members                                                                                                  672\nfriends.php                                                                                                                      675\nmessages.php                                                                                                                  678\nlogout.php                                                                                                                       681\nstyles.css                                                                                                                          682\njavascript.js                                                                                                                      685\nA. Solutions to the Chapter Questions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  687\nB. Online Resources. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  707\nC. MySQL’s FULLTEXT Stopwords. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  711\nD. MySQL Functions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  715\nE. jQuery Selectors, Objects, and Methods. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  725\nIndex. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  747\nTable of Contents | xxi"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 24,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 25,
    "text": "Preface\nThe combination of PHP and MySQL is the most convenient approach to dynamic,\ndatabase-driven web design, holding its own in the face of challenges from integrated\nframeworks—such as Ruby on Rails—that are harder to learn. Due to its open source\nroots (unlike the competing Microsoft .NET Framework), it is free to implement and\nis therefore an extremely popular option for web development.\nAny would-be developer on a Unix/Linux or even a Windows/Apache platform will\nneed to master these technologies. And, combined with the partner technologies of\nJavaScript, jQuery, CSS, and HTML5, you will be able to create websites of the caliber\nof industry standards like Facebook, Twitter, and Gmail.\nAudience\nThis book is for people who wish to learn how to create effective and dynamic web‐\nsites. This may include webmasters or graphic designers who are already creating\nstatic websites but wish to take their skills to the next level, as well as high school and\ncollege students, recent graduates, and self-taught individuals.\nIn fact, anyone ready to learn the fundamentals behind the Web 2.0 technology\nknown as Ajax will obtain a thorough grounding in all of these core technologies:\nPHP , MySQL, JavaScript, CSS, and HTML5, and learn the basics of the jQuery library\ntoo.\nAssumptions This Book Makes\nThis book assumes that you have a basic understanding of HTML and can at least put\ntogether a simple, static website, but does not assume that you have any prior knowl‐\nedge of PHP , MySQL, JavaScript, CSS, or HTML5—although if you do, your progress\nthrough the book will be even quicker.\nxxiii"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 26,
    "text": "Organization of This Book\nThe chapters in this book are written in a specific order, first introducing all of the\ncore technologies it covers and then walking you through their installation on a web\ndevelopment server so that you will be ready to work through the examples.\nIn the first section, you will gain a grounding in the PHP programming language,\ncovering the basics of syntax, arrays, functions, and object-oriented programming.\nThen, with PHP under your belt, you will move on to an introduction to the MySQL\ndatabase system, where you will learn everything from how MySQL databases are\nstructured to how to generate complex queries.\nAfter that, you will learn how you can combine PHP and MySQL to start creating\nyour own dynamic web pages by integrating forms and other HTML features. Follow‐\ning that, you will get down to the nitty-gritty practical aspects of PHP and MySQL\ndevelopment by learning a variety of useful functions and how to manage cookies\nand sessions, as well as how to maintain a high level of security.\nIn the next few chapters, you will gain a thorough grounding in JavaScript, from sim‐\nple functions and event handling to accessing the Document Object Model and in-\nbrowser validation and error handling, plus a comprehensive primer on using the\npopular jQuery library for JavaScript.\nWith an understanding of all three of these core technologies, you will then learn how\nto make behind-the-scenes Ajax calls and turn your websites into highly dynamic\nenvironments.\nNext, you’ll spend two chapters learning all about using CSS to style and lay out your\nweb pages, before moving on to the final section on the new features built into\nHTML5, including geolocation, audio, video, and the canvas. After this, you’ll put\ntogether everything you’ve learned in a complete set of programs that together consti‐\ntute a fully functional social networking website.\nAlong the way, you’ll find plenty of advice on good programming practices and tips\nthat could help you find and solve hard-to-detect programming errors. There are also\nplenty of links to websites containing further details on the topics covered.\nSupporting Books\nOnce you have learned to develop using PHP , MySQL, JavaScript, CSS, and HTML5,\nyou will be ready to take your skills to the next level using the following O’Reilly ref‐\nerence books. To learn more about any of these titles, simply enter the ISBN shown\nnext to it into the search box at http://oreilly.com  or at any good online book seller’s\nwebsite.\nxxiv | Preface"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 27,
    "text": "•Dynamic HTML: The Definitive  Reference  (9780596527402) by Danny Goodman\n•PHP in a Nutshell  (9780596100674) by Paul Hudson\n•MySQL in a Nutshell  (9780596514334) by Russell Dyer\n•JavaScript: The Definitive  Guide  (9780596805524) by David Flanagan\n•CSS: The Definitive  Guide  (9780596527334) by Eric A. Myer\n•HTML5: The Missing Manual  (9781449363260) by Matthew MacDonald\nConventions Used in This Book\nThe following typographical conventions are used in this book:\nPlain text\nIndicates menu titles, options, and buttons.\nItalic\nIndicates new terms, URLs, email addresses, filenames, file extensions, pathnames,\ndirectories, and Unix utilities.\nConstant width\nIndicates command-line options, variables and other code elements, HTML tags,\nmacros, and the contents of files.\nConstant width bold\nShows program output or highlighted sections of code that are discussed in the text.\nConstant width italic\nShows text that should be replaced with user-supplied values.\nThis element signifies a tip, suggestion, or general note.\nThis element indicates a warning or caution.\nUsing Code Examples\nThis book is here to help you get your job done. In general, if example code is offered\nwith this book, you may use it in your programs and documentation. Y ou do not\nPreface | xxv"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 28,
    "text": "need to contact us for permission unless you’re reproducing a significant portion of\nthe code. For example, writing a program that uses several chunks of code from this\nbook does not require permission. Selling or distributing a CD-ROM of examples\nfrom O’Reilly books does require permission. Answering a question by citing this\nbook and quoting example code does not require permission. Incorporating a signifi‐\ncant amount of example code from this book into your product’s documentation does\nrequire permission. There is a companion website to this book at http://lpmj.net ,\nwhere you can download all the examples from this book in a single zip file.\nWe appreciate, but do not require, attribution. An attribution usually includes the\ntitle, author, publisher, and ISBN. For example: “ Learning PHP , MySQL & JavaScript,\n4th Edition  by Robin Nixon (O’Reilly). Copyright 2015 Robin Nixon,\n978-1-4919-1866-1. ”\nIf you feel your use of code examples falls outside fair use or the permission given\nabove, feel free to contact us at permissions@oreilly.com .\nSafari® Books Online\nSafari Books Online  is an on-demand digital library that deliv‐\ners expert content  in both book and video form from the\nworld’s leading authors in technology and business.\nTechnology professionals, software developers, web designers, and business and crea‐\ntive professionals use Safari Books Online as their primary resource for research,\nproblem solving, learning, and certification training.\nSafari Books Online offers a range of plans and pricing  for enterprise , government ,\neducation , and individuals.\nMembers have access to thousands of books, training videos, and prepublication\nmanuscripts in one fully searchable database from publishers like O’Reilly Media,\nPrentice Hall Professional, Addison-Wesley Professional, Microsoft Press, Sams, Que,\nPeachpit Press, Focal Press, Cisco Press, John Wiley & Sons, Syngress, Morgan Kauf‐\nmann, IBM Redbooks, Packt, Adobe Press, FT Press, Apress, Manning, New Riders,\nMcGraw-Hill, Jones & Bartlett, Course Technology, and hundreds more . For more\ninformation about Safari Books Online, please visit us online .\n \nxxvi | Preface"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 29,
    "text": "How to Contact Us\nPlease address comments and questions concerning this book to the publisher:\nO’Reilly Media, Inc.\n1005 Gravenstein Highway North\nSebastopol, CA 95472\n(800) 998-9938 (in the United States or Canada)\n(707) 829-0515 (international or local)\n(707) 829-0104 (fax)\nWe have a web page for this book, where we list errata, examples, and any additional\ninformation. Y ou can access this page at http://bit.ly/lpmjch_4e .\nTo comment or ask technical questions about this book, send email to bookques‐\ntions@oreilly.com .\nFor more information about our books, courses, conferences, and news, see our web‐\nsite at http://www.oreilly.com .\nFind us on Facebook: http://facebook.com/oreilly\nFollow us on Twitter: http://twitter.com/oreillymedia\nWatch us on Y ouTube: http://www.youtube.com/oreillymedia\nAcknowledgments\nI would like to once again thank my editor, Andy Oram, and everyone who worked\nso hard on this book, including Albert Wiersch for his comprehensive technical\nreview, Nicole Shelby for overseeing production, Rachel Monaghan for her copy edit‐\ning, Sharon Wilkey for proofreading, Robert Romano for his original illustrations,\nRebecca Demarest for her new illustrations, David Futato for interior design, Lucie\nHaskins for creating the index, Karen Montgomery for the original sugar glider front\ncover design, Randy Comer for the latest book cover, and everyone else too numer‐\nous to name who submitted errata and offered suggestions for this new edition.\nPreface | xxvii"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 30,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 31,
    "text": "CHAPTER 1\nIntroduction to Dynamic Web Content\nThe World Wide Web is a constantly evolving network that has already traveled far\nbeyond its conception in the early 1990s, when it was created to solve a specific prob‐\nlem. State-of-the-art experiments at CERN (the European Laboratory for Particle\nPhysics—now best known as the operator of the Large Hadron Collider) were pro‐\nducing incredible amounts of data—so much that the data was proving unwieldy to\ndistribute to the participating scientists who were spread out across the world.\nAt this time, the Internet was already in place, with several hundred thousand com‐\nputers connected to it, so Tim Berners-Lee (a CERN fellow) devised a method of nav‐\nigating between them using a hyperlinking framework, which came to be known as\nHypertext Transfer Protocol, or HTTP . He also created a markup language called\nHypertext Markup Language, or HTML. To bring these together, he wrote the first\nweb browser and web server, tools that we now take for granted.\nBut back then, the concept was revolutionary. The most connectivity so far experi‐\nenced by at-home modem users was dialing up and connecting to a bulletin board\nthat was hosted by a single computer, where you could communicate and swap data\nonly with other users of that service. Consequently, you needed to be a member of\nmany bulletin board systems in order to effectively communicate electronically with\nyour colleagues and friends.\nBut Berners-Lee changed all that in one fell swoop, and by the mid-1990s, there were\nthree major graphical web browsers competing for the attention of 5 million users. It\nsoon became obvious, though, that something was missing. Y es, pages of text and\ngraphics with hyperlinks to take you to other pages was a brilliant concept, but the\nresults didn’t reflect the instantaneous potential of computers and the Internet to\nmeet the particular needs of each user with dynamically changing content. Using the\nWeb was a very dry and plain experience, even if we did now have scrolling text and\nanimated GIFs!\n1"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 32,
    "text": "Shopping carts, search engines, and social networks have clearly altered how we use\nthe Web. In this chapter, we’ll take a brief look at the various components that make\nup the Web, and the software that helps make it a rich and dynamic experience.\nIt is necessary to start using some acronyms more or less right\naway. I have tried to clearly explain them before proceeding. But\ndon’t worry too much about what they stand for or what these\nnames mean, because the details will become clear as you read on.\nHTTP and HTML: Berners-Lee’s Basics\nHTTP is a communication standard governing the requests and responses that take\nplace between the browser running on the end user’s computer  and the web server.\nThe server’s job is to accept a request from the client and attempt to reply to it in a\nmeaningful way, usually by serving up a requested web page—that’s why the term\nserver  is used. The natural counterpart to a server is a client , so that term is applied\nboth to the web browser and the computer on which it’s running.\nBetween the client and the server there can be several other devices, such as routers,\nproxies, gateways, and so on. They serve different roles in ensuring that the requests\nand responses are correctly transferred between the client and server. Typically, they\nuse the Internet to send this information.\nA web server can usually handle multiple simultaneous connections and—when not\ncommunicating with a client—spends its time listening for an incoming connection.\nWhen one arrives, the server sends back a response to confirm its receipt.\nThe Request/Response Procedure\nAt its most basic level, the request/response process consists of a web browser asking\nthe web server to send it a web page and the server sending back the page. The\nbrowser then takes care of displaying the page (see Figure 1-1 ).\n2 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 33,
    "text": "Figure 1-1. The basic client/server request/response sequence\nEach step in the request and response sequence is as follows:\n1.Y ou enter http://server.com  into your browser’s address bar.\n2.Y our browser looks up the IP address for server.com .\n3.Y our browser issues a request for the home page at server.com .\n4.The request crosses the Internet and arrives at the server.com  web server.\n5.The web server, having received the request, looks for the web page on its disk.\n6.The web page is retrieved by the server and returned to the browser.\n7.Y our browser displays the web page.\nFor an average web page, this process takes place once for each object within the\npage: a graphic, an embedded video or Flash file, and even a CSS template.\nIn step 2, notice that the browser looked up the IP address of server.com . Every\nmachine attached to the Internet has an IP address—your computer included. But we\ngenerally access web servers by name, such as google.com . As you probably know, the\nbrowser consults an additional Internet service called the Domain Name Service\nThe Request/Response Procedure | 3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 34,
    "text": "(DNS) to find its associated IP address and then uses it to communicate with the\ncomputer.\nFor dynamic web pages, the procedure is a little more involved, because it may bring\nboth PHP and MySQL into the mix (see Figure 1-2 ).\nFigure 1-2. A dynamic client/server request/response sequence\n1.Y ou enter http://server.com into your browser’s address bar.\n2.Y our browser looks up the IP address for server.com .\n3.Y our browser issues a request to that address for the web server’s home page.\n4.The request crosses the Internet and arrives at the server.com  web server.\n5.The web server, having received the request, fetches the home page from its hard\ndisk.\n4 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 35,
    "text": "6.With the home page now in memory, the web server notices that it is a file incor‐\nporating PHP scripting and passes the page to the PHP interpreter.\n7.The PHP interpreter executes the PHP code.\n8.Some of the PHP contains MySQL statements, which the PHP interpreter now\npasses to the MySQL database engine.\n9.The MySQL database returns the results of the statements to the PHP interpreter.\n10.The PHP interpreter returns the results of the executed PHP code, along with the\nresults from the MySQL database, to the web server.\n11.The web server returns the page to the requesting client, which displays it.\nAlthough it’s helpful to be aware of this process so that you know how the three ele‐\nments work together, in practice you don’t really need to concern yourself with these\ndetails, because they all happen automatically.\nHTML pages returned to the browser in each example may well  contain JavaScript,\nwhich will be interpreted locally by the client, and which could initiate another\nrequest—the same way embedded objects such as images would.\nThe Benefits  of PHP , MySQL, JavaScript, CSS, and HTML5\nAt the start of this chapter, I introduced the world of Web 1.0, but it wasn’t long\nbefore the rush was on to create Web 1.1, with the development of such browser\nenhancements as Java, JavaScript, JScript (Microsoft’s slight variant of JavaScript), and\nActiveX. On the server side, progress was being made on the Common Gateway\nInterface (CGI) using scripting languages such as Perl (an alternative to the PHP lan‐\nguage) and server-side scripting —inserting  the contents of one file (or the output of a\nsystem call) into another one dynamically.\nOnce the dust had settled, three main technologies stood heads and shoulders above\nthe others. Although Perl was still a popular scripting language with a strong follow‐\ning, PHP’s simplicity and built-in links to the MySQL database program had earned it\nmore than double the number of users. And JavaScript, which  had become an essen‐\ntial part of the equation for dynamically manipulating Cascading Style Sheets (CSS)\nand HTML, now took on the even more muscular task of handling the client side of\nthe Ajax process. Under Ajax, web pages perform data handling and send requests to\nweb servers in the background—without the web user being aware that this is going\non.\nNo doubt the symbiotic nature of PHP and MySQL helped propel  them both for‐\nward, but what attracted developers to them in the first place? The simple answer has\nto be the ease with which you can use them to quickly create dynamic elements on\nwebsites. MySQL is a fast and powerful, yet easy-to-use, database system that offers\nThe Benefits  of PHP , MySQL, JavaScript, CSS, and HTML5 | 5"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 36,
    "text": "just about anything a website would need in order to find and serve up data to brows‐\ners. When PHP allies with MySQL to store and retrieve this data, you have the funda‐\nmental parts required for the development of social networking sites and the\nbeginnings of Web 2.0.\nAnd when you bring JavaScript and CSS into the mix too, you have a recipe for build‐\ning highly dynamic and interactive websites.\nUsing PHP\nWith PHP , it’s a simple matter to embed dynamic activity in web pages. When you\ngive pages the .php extension, they have instant access to the scripting language. From\na developer’s point of view, all you have to do is write code such as the following:\n<?php\n  echo \" Today is \" . date(\"l\") . \". \";\n?>\nHere's the latest news.\nThe opening <?php  tells the web server to allow the PHP program to interpret all the\nfollowing code up to the ?> tag. Outside of this construct, everything is sent to the\nclient as direct HTML. So the text Here's the latest news.  is simply output to the\nbrowser; within the PHP tags, the built-in date  function displays the current day of\nthe week according to the server’s system time.\nThe final output of the two parts looks like this:\nToday is Wednesday. Here's the latest news.\nPHP is a flexible language, and some people prefer to place the PHP construct\ndirectly next to PHP code, like this:\nToday is <?php echo date(\"l\"); ?>. Here's the latest news.\nThere are also other ways of formatting and outputting information, which I’ll\nexplain in the chapters on PHP . The point is that with PHP , web developers have a\nscripting language that, although not as fast as compiling your code in C or a similar\nlanguage, is incredibly speedy and also integrates seamlessly with HTML markup.\nIf you intend to enter the PHP examples in this book to work along\nwith me, you must remember to add <?php  in front and ?> after\nthem to ensure that the PHP interpreter processes them. To facili‐\ntate this, you may wish to prepare a file called example.php  with\nthose tags in place.\nUsing PHP , you have unlimited control over your web server. Whether you need to\nmodify HTML on the fly, process a credit card, add user details to a database, or fetch\n6 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 37,
    "text": "information from a third-party website, you can do it all from within the same PHP\nfiles in which the HTML itself resides.\nUsing MySQL\nOf course, there’s not a lot of point to being able to change HTML output dynami‐\ncally unless you also have a means to track the changes that users make as they use\nyour website. In the early days of the Web, many sites used “flat” text files to store\ndata such as usernames and passwords. But this approach could cause problems if the\nfile wasn’t correctly locked against corruption from multiple simultaneous accesses.\nAlso, a flat file can get only so big before it becomes unwieldy to manage—not to\nmention the difficulty of trying to merge files and perform complex searches in any\nkind of reasonable time.\nThat’s where relational databases with structured querying become essential. And\nMySQL, being free to use and installed on vast numbers of Internet web servers, rises\nsuperbly to the occasion. It is a robust and exceptionally fast database management\nsystem that uses English-like commands.\nThe highest level of MySQL structure is a database, within  which you can have one\nor more tables that contain your data. For example, let’s suppose you are working on\na table called users , within which you have created columns for surname , firstname ,\nand email , and you now wish to add another user. One command that you might use\nto do this is as follows:\nINSERT INTO users VALUES('Smith', 'John', 'jsmith@mysite.com');\nOf course, as mentioned earlier, you will have issued other commands to create the\ndatabase and table and to set up all the correct fields, but the INSERT  command here\nshows how simple it can be to add new data to a database. INSERT  is an example of\nStructured Query Language (SQL), a language designed in the early 1970s and remi‐\nniscent of one of the oldest programming languages, COBOL. It is well suited, how‐\never, to database queries, which is why it is still in use after all this time.\nIt’s equally easy to look up data. Let’s assume that you have an email address for a user\nand need to look up that person’s name. To do this, you could issue a MySQL query\nsuch as the following:\nSELECT surname,firstname FROM users WHERE email='jsmith@mysite.com';\nMySQL will then return Smith, John  and any other pairs of names that may be asso‐\nciated with that email address in the database.\nAs you’ d expect, there’s quite a bit more that you can do with MySQL than just simple\nINSERT  and SELECT  commands. For example, you can join multiple tables according\nto various criteria, ask for results in a variety of orders, make partial matches when\nThe Benefits  of PHP , MySQL, JavaScript, CSS, and HTML5 | 7"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 38,
    "text": "you know only part of the string that you are searching for, return only the nth result,\nand a lot more.\nUsing PHP , you can make all these calls directly  to MySQL without having to run the\nMySQL program yourself or use its command-line interface. This means you can save\nthe results in arrays for processing and perform multiple lookups, each dependent on\nthe results returned from earlier ones, to drill down to the item of data you need.\nFor even more power, as you’ll see later, there are additional functions built right into\nMySQL that you can call up for common operations and extra speed.\nUsing JavaScript\nThe oldest of the three core technologies in this book, JavaScript,  was created to\nenable scripting access to all the elements of an HTML document. In other words, it\nprovides a means for dynamic user interaction such as checking email address valid‐\nity in input forms, and displaying prompts such as “Did you really mean that?”\n(although it cannot be relied upon for security, which should always be performed on\nthe web server).\nCombined with CSS (see the following section), JavaScript is the power behind\ndynamic web pages that change in front of your eyes rather than when a new page is\nreturned by the server.\nHowever, JavaScript can also be tricky to use, due to some major differences in the\nways different browser designers have chosen to implement it. This mainly came\nabout when some manufacturers tried to put additional functionality into their\nbrowsers at the expense of compatibility with their rivals.\nThankfully, the developers have mostly now come to their senses and have realized\nthe need for full compatibility with one another, so they don’t have to write multi-\nexception code. But there remain millions of legacy browsers that will be in use for a\ngood many years to come. Luckily, there are solutions for the incompatibility prob‐\nlems, and later in this book we’ll look at libraries and techniques that enable you to\nsafely ignore these differences.\nFor now, let’s take a look at how to use basic JavaScript, accepted by all browsers:\n<script type=\"text/javascript\">\n  document.write(\"Today is \" + Date() );\n</script>\nThis code snippet tells the web browser to interpret everything within  the script  tags\nas JavaScript, which the browser then does by writing the text Today is  to the current\ndocument, along with the date, by using the JavaScript function Date . The result will\nlook something like this:\nToday is Sun Jan 01 2017 01:23:45\n8 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 39,
    "text": "Unless you need to specify an exact version of JavaScript, you can\nnormally omit the type=\"text/javascript\"  and just use <script>\nto start the interpretation of the JavaScript.\nAs previously mentioned, JavaScript was originally developed to offer dynamic con‐\ntrol over the various elements within an HTML document, and that is still its main\nuse. But more and more, JavaScript is being used for Ajax.  This is a term for the pro‐\ncess of accessing the web server in the background. (It originally meant Asynchronous\nJavaScript and XML , but that phrase is already a bit outdated.)\nAjax is the main process behind what is now known as Web 2.0 (a term popularized\nby Tim O’Reilly, the founder and CEO of this book’s publishing company), in which\nweb pages have started to resemble standalone programs, because they don’t have to\nbe reloaded in their entirety. Instead, a quick Ajax call can pull in and update a single\nelement on a web page, such as changing your photograph on a social networking site\nor replacing a button that you click with the answer to a question. This subject is fully\ncovered in Chapter 17 .\nThen, in Chapter 21 , we take a good look at the jQuery framework, which you can\nuse to save reinventing the wheel when you need fast, cross-browser code to manipu‐\nlate your web pages. Of course, there are other frameworks available too, but jQuery\nis by far the most popular and, due to continuous maintenance, is extremely reliable,\nand a major tool in the utility kit of many seasoned web developers.\nUsing CSS\nWith the emergence of the CSS3 standard in recent  years, CSS now offers a level of\ndynamic interactivity previously supported only by JavaScript. For example, not only\ncan you style any HTML element to change its dimensions, colors, borders, spacing,\nand so on, but now you can also add animated transitions and transformations to\nyour web pages, using only a few lines of CSS.\nUsing CSS can be as simple as inserting a few rules between <style>  and </style>\ntags in the head of a web page, like this:\n<style>\n  p {\n    text-align:justify;\n    font-family:Helvetica;\n  }\n</style>\nThese rules will change the default text alignment of the <p> tag so that paragraphs\ncontained in it will be fully justified and will use the Helvetica font.\nThe Benefits  of PHP , MySQL, JavaScript, CSS, and HTML5 | 9"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 40,
    "text": "As you’ll learn in Chapter 18 , there are many different ways you can lay out CSS rules,\nand you can also include them directly within tags or save a set of rules to an external\nfile to be loaded in separately. This flexibility not only lets you style your HTML pre‐\ncisely, but it can also (for example) provide built-in hover functionality to animate\nobjects as the mouse passes over them. Y ou will also learn how to access all of an ele‐\nment’s CSS properties from JavaScript as well as HTML.\nAnd Then There’s HTML5\nAs useful as all these additions to the web standards became, they were not enough\nfor ever more ambitious developers. For example, there was still no simple way to\nmanipulate graphics in a web browser without resorting to plug-ins such as Flash.\nAnd the same went for inserting audio and video into web pages. Plus, several annoy‐\ning inconsistencies had crept into HTML during its evolution.\nSo, to clear all this up and take the Internet beyond Web 2.0 and into its next itera‐\ntion, a new standard for HTML was created to address all these shortcomings. It was\ncalled HTML5  and it began development as long ago as 2004, when the first draft was\ndrawn up by the Mozilla Foundation and Opera Software (developers of two popular\nweb browsers). But it wasn’t until the start of 2013 that the final draft was submitted\nto the World Wide Web Consortium (W3C), the international governing body for\nweb standards. \nWith nine years for it to develop, you might think that would be the end of the speci‐\nfication, but that’s not how things work on the Internet. Although websites come and\ngo at great speed, the underlying software is developed slowly and carefully, and so\nthe stable recommendation for HTML5 is expected only after this edition of the book\nhas been published—in late 2014. And then guess what? Work will move on to ver‐\nsions 5.1 and higher, beginning in 2015. It’s a never-ending cycle of development.\nHowever, while HTML5.1 is planned to bring some handy improvements (mainly to\nthe canvas), basic HTML5 is the new standard web developers now need to work to,\nand it will remain in place for many years to come. So learning everything you can\nabout it now will stand you in very good stead.\nThere’s actually a great deal of new stuff in HTML (and quite a few things that have\nbeen changed or removed), but in summary, here’s what you get:\nMarkup\nIncluding new elements such as <nav>  and <footer> , and deprecated elements like\n<font>  and <center> .\nNew APIs\nSuch as the <canvas>  element for writing and drawing on a graphics canvas, <audio>\nand <video>  elements, offline web applications, microdata, and local storage.\n10 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 41,
    "text": "Applications\nIncluding two new rendering technologies: MathML (Math Markup Language) for\ndisplaying mathematical formulae and SVG (Scalable Vector Graphics) for creating\ngraphical elements outside of the new <canvas>  element. However, MathML and\nSVG are somewhat specialist, and are so feature-packed they would need a book of\ntheir own, so I don’t cover them here.\nAll these things (and more) are covered in detail starting in Chapter 22 .\nOne of the little things I like about the HTML5 specification is that\nXHTML syntax is no longer required for self-closing elements. In\nthe past, you could display a line break using the <br>  element.\nThen, to ensure future compatibility with XHTML (the planned\nreplacement for HTML that never happened), this was changed to\n<br /> , in which a closing / character was added (since all ele‐\nments were expected to include a closing tag featuring this charac‐\nter). But now things have gone full circle, and you can use either\nversion of these types of element. So, for the sake of brevity and\nfewer keystrokes, in this book I have reverted to the former style of\n<br> , <hr> , and so on.\nThe Apache Web Server\nIn addition to PHP , MySQL, JavaScript, CSS, and HTML5, there’s a sixth hero in the\ndynamic Web: the web server. In the case of this book, that means the Apache web\nserver.  We’ve discussed a little of what a web server does during the HTTP server/\nclient exchange, but it does much more behind the scenes.\nFor example, Apache doesn’t serve up just HTML files—it handles a wide range of\nfiles from images and Flash files to MP3 audio files, RSS (Really Simple Syndication)\nfeeds, and so on. To do this, each element a web client encounters in an HTML page\nis also requested from the server, which then serves it up.\nBut these objects don’t have to be static files such as GIF images. They can all be gen‐\nerated by programs such as PHP scripts. That’s right: PHP can even create images and\nother files for you, either on the fly or in advance to serve up later.\nTo do this, you normally have modules either precompiled into Apache or PHP or\ncalled up at runtime. One such module is the GD (Graphics Draw) library, which\nPHP uses to create and handle graphics.\nApache also supports a huge range of modules of its own. In addition to the PHP\nmodule, the most important for your purposes as a web programmer are the modules\nthat handle security. Other examples are the Rewrite module, which enables the web\nserver to handle a varying range of URL types and rewrite them to its own internal\nThe Apache Web Server | 11"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 42,
    "text": "requirements, and the Proxy module, which you can use to serve up often-requested\npages from a cache to ease the load on the server.\nLater in the book, you’ll see how to use some of these modules to enhance the fea‐\ntures provided by the three core technologies.\nAbout Open Source\nWhether or not being open source  is the reason these technologies are so popular has\noften been debated, but PHP , MySQL, and Apache are the three most commonly used\ntools in their categories. What can be said definitively, though, is that their being\nopen source means that they have been developed in the community by teams of pro‐\ngrammers writing the features they themselves want and need, with the original code\navailable for all to see and change. Bugs can be found and security breaches can be\nprevented before they happen.\nThere’s another benefit: all these programs are free to use. There’s no worrying about\nhaving to purchase additional licenses if you have to scale up your website and add\nmore servers. And you don’t need to check the budget before deciding whether to\nupgrade to the latest versions of these products.\nBringing It All Together\nThe real beauty of PHP , MySQL, JavaScript (sometimes aided by jQuery or other\nframeworks), CSS, and HTML5  is the  wonderful way in which they all work together\nto produce dynamic web content: PHP handles all the main work on the web server,\nMySQL manages all the data, and the combination of CSS and JavaScript looks after\nweb page presentation. JavaScript can also talk with your PHP code on the web server\nwhenever it needs to update something (either on the server or on the web page).\nAnd with the powerful new features in HTML5, such as the canvas, audio and video,\nand geolocation, you can make your web pages highly dynamic, interactive, and\nmultimedia-packed.\nWithout using program code, let’s summarize the contents of this chapter by looking\nat the process of combining some of these technologies into an everyday Ajax feature\nthat many websites use: checking whether a desired username already exists on the\nsite when a user is signing up for a new account. A good example of this can be seen\nwith Gmail (see Figure 1-3 ).\n12 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 43,
    "text": "Figure 1-3. Gmail uses Ajax to check the availability of usernames\nThe steps involved in this Ajax process would be similar to the following:\n1.The server outputs the HTML to create the web form, which asks for the neces‐\nsary details, such as username, first name, last name, and email address.\n2.At the same time, the server attaches some JavaScript to the HTML to monitor\nthe username input box and check for two things: (a) whether some text has been\ntyped into it, and (b) whether the input has been deselected because the user has\nclicked on another input box.\n3.Once the text has been entered and the field deselected, in the background the\nJavaScript code passes the username that was entered back to a PHP script on the\nweb server and awaits a response.\n4.The web server looks up the username and replies back to the JavaScript regard‐\ning whether that name has already been taken.\n5.The JavaScript then places an indication next to the username input box to show\nwhether the name is one available to the user—perhaps a green checkmark or a\nred cross graphic, along with some text.\n6.If the username is not available and the user still submits the form, the JavaScript\ninterrupts the submission and reemphasizes (perhaps with a larger graphic\nand/or an alert box) that the user needs to choose another username.\n7.Optionally, an improved version of this process could even look at the username\nrequested by the user and suggest an alternative that is currently available.\nBringing It All Together | 13"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 44,
    "text": "All of this takes place quietly in the background and makes for a comfortable and\nseamless user experience. Without Ajax, the entire form would have to be submitted\nto the server, which would then send back HTML, highlighting any mistakes. It\nwould be a workable solution, but nowhere near as tidy or pleasurable as on-the-fly\nform-field processing.\nAjax can be used for a lot more than simple input verification and processing,\nthough; we’ll explore many additional things that you can do with it in the Ajax chap‐\nters later in this book.\nIn this chapter, you have read a good introduction to the core technologies of PHP ,\nMySQL, JavaScript, CSS, and HTML5 (as well as Apache), and have learned how they\nwork together. In Chapter 2 , we’ll look at how you can install your own web develop‐\nment server on which to practice everything that you will be learning.\nQuestions\n1.What four components (at the minimum) are needed to create a fully dynamic\nweb page?\n2.What does HTML  stand for?\n3.Why does the name MySQL  contain the letters SQL?\n4.PHP and JavaScript are both programming languages that generate dynamic\nresults for web pages. What is their main difference, and why would you use both\nof them?\n5.What does CSS stand for?\n6.List three major new elements introduced in HTML5.\n7.If you encounter a bug (which is rare) in one of the open source tools, how do\nyou think you could get it fixed?\nSee Chapter 1 Answers  in Appendix A  for the answers to these questions.\n14 | Chapter 1: Introduction to Dynamic Web Content"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 45,
    "text": "CHAPTER 2\nSetting Up a Development Server\nIf you wish to develop Internet applications but don’t have your own development\nserver, you will have to upload every modification you make to a server somewhere\nelse on the Web before you can test it.\nEven on a fast broadband connection, this can still represent a significant slowdown\nin development time. On a local computer, however, testing can be as easy as saving\nan update (usually just a matter of clicking once on an icon) and then hitting the\nRefresh button in your browser.\nAnother advantage of a development server is that you don’t have to worry about\nembarrassing errors or security problems while you’re writing and testing, whereas\nyou need to be aware of what people may see or do with your application when it’s on\na public website. It’s best to iron everything out while you’re still on a home or small\noffice system, presumably protected by firewalls and other safeguards.\nOnce you have your own development server, you’ll wonder how you ever managed\nwithout one, and it’s easy to set one up. Just follow the steps in the following sections,\nusing the appropriate instructions for a PC, a Mac, or a Linux system.\nIn this chapter, we cover just the server side of the web experience, as described in\nChapter 1 . But to test the results of your work—particularly when we start using Java‐\nScript, CSS, and HTML5 later in this book—you should also have an instance of\nevery major web browser running on some system convenient to you.  Whenever pos‐\nsible, the list of browsers should include at least Internet Explorer, Mozilla Firefox, \nOpera, Safari, and Google Chrome. If you plan to ensure that your sites look good on\nmobile devices too, you should try to arrange access to a wide range of Apple iOS and\nGoogle Android phones and tablets.\n15"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 46,
    "text": "What Is a WAMP , MAMP , or LAMP?\nW AMP , MAMP ,  and LAMP  are abbreviations for “Windows, Apache, MySQL, and\nPHP , ” “Mac, Apache, MySQL, and PHP , ” and “Linux, Apache, MySQL, and PHP . ”  \nThese abbreviations describe a fully functioning setup used for developing dynamic\nInternet web pages.\nW AMPs, MAMPs, and LAMPs come in the form of a package that binds the bundled\nprograms together so that you don’t have to install and set them up separately. This\nmeans you can simply download and install a single program, and follow a few easy\nprompts, to get your web development server up and running in the quickest time\nwith a minimum hassle.\nDuring installation, several default settings are created for you. The security configu‐\nrations of such an installation will not be as tight as on a production web server,\nbecause it is optimized for local use. For these reasons, you should never install such a\nsetup as a production server.\nBut for developing and testing websites and applications, one of these installations\nshould be entirely sufficient.\nIf you choose not to go the W AMP/MAMP/LAMP route for build‐\ning your own development system, you should know that down‐\nloading and integrating the various parts yourself can be very time-\nconsuming and may require a lot of research in order to configure\neverything fully. But if you already have all the components\ninstalled and integrated with one another, they should work with\nthe examples in this book.\nInstalling XAMPP on Windows\nThere are several available W AMP servers, each offering slightly different configura‐\ntions,  but out of the various open source and free options, the best is probably\nXAMPP . Y ou can download it at http://apachefriends.org , as shown in Figure 2-1 .\n16 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 47,
    "text": "Figure 2-1. The XAMPP website\nI recommend that you always download the latest stable release (in this instance, it’s\n1.8.3), and there is a direct download link for Windows, OS X, and Linux on the main\npage.\nDuring the lifetime of this edition, some of the screens and options\nshown in the following walk-through may change. If so, just use\nyour common sense to proceed in as similar a manner as possible\nto the sequence of actions described.\nOnce you’ve downloaded the installer, run it to bring up the window shown in\nFigure 2-2 . Before arriving at that window, though, if you use an anti-virus program\nor have User Account Control activated on Windows, you may first be shown one or\nmore advisory notices, and will have to click Y es and/or OK to continue installation.\nInstalling XAMPP on Windows | 17"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 48,
    "text": "Figure 2-2. The initial installation window of the installer\nClick Next and then uncheck any of the components shown in Figure 2-3  that you\ndon’t need. For example, at the minimum for this book you will want to keep Apache,\nMySQL, PHP , and PHPMyAdmin checked. The other features are not covered in this\nbook, but you can get more details on all of these, plus the core XAMPP technologies,\nat http://apachefriends.org/faq_windows.html .\nClicking Next brings up the screen in Figure 2-4 , in which you should choose a folder\nfor the installation. Y ou are recommended to accept the default provided unless you\nhave a good reason to choose a different one. In this book, the default location is\nassumed. If the folder you choose exists and is not empty, you will be unable to use it.\n18 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 49,
    "text": "Figure 2-3. Select the components to install\nFigure 2-4. Choose a folder for the installation\nClicking Next brings up the screen in Figure 2-5  with a checkbox already checked\n(which you can uncheck) for supplying information on adding free installers for\nrelated products in a new web browser window or tab. After you choose whether or\nnot to receive this information, click the Next button.\nInstalling XAMPP on Windows | 19"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 50,
    "text": "Figure 2-5. Information on related free products is available\nHaving supplied the basic information required by the installer, you will arrive at the\nscreen in Figure 2-6 . Setup is ready to start, so click the Next button.\nFigure 2-6. Accept the default values offered  for the ports\n20 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 51,
    "text": "When you click the Next button, installation will begin, and you will see the screen in\nFigure 2-7  while it progresses. During installation, you can click any of the icons to\nopen up a web browser window displaying information on the product shown. The\nwhole process should take only a few minutes on most computers.\nFigure 2-7. Installation is in progress\nOnce installation is complete, the screen in Figure 2-8  will be displayed with a check‐\nbox already checked for starting the XAMPP control panel. I recommend you leave\nthis checked and then click Finish.\nNow you are ready to start using XAMPP by configuring it from the control panel, as\nshown in Figure 2-9 . The panel is automatically displayed if you kept the checkbox\nchecked on completing installation. Or you can call it up from the Start menu or or\nstart screen.\nInstalling XAMPP on Windows | 21"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 52,
    "text": "Figure 2-8. Click Finish to complete installation\nFigure 2-9. The control panel\nThe first thing I recommend you do is click the Config button at the top-right corner\nto call up the window shown in Figure 2-10 . In particular, if they are not already\n22 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 53,
    "text": "checked, I recommend you check the Apache and MySQL boxes to ensure they autos‐\ntart. Or, you can simply click the Start buttons for Apache and MySQL to have them\nrun for this session only.\nFigure 2-10. Choose your editor, autostart components and more\nWhile on that screen, you may find that you also wish to alter the port settings used\nby clicking Service and Port Settings to call up the window in Figure 2-11 .\nFigure 2-11. Click Save to complete setup\nThe default ports assigned will normally be port 80 for the Apache web server, 443 for\nSSL, and 3306 for MySQL. If you change these values, make sure you insert these\nchanged values in place of any defaults used later in this book.\nInstalling XAMPP on Windows | 23"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 54,
    "text": "The control panel is where you can conduct most of the actions required for manag‐\ning XAMPP , including editing and viewing the various configuration files, and look‐\ning at access, error, and other log files, all with a simple interface. For example, in\nFigure 2-12 , the Apache Log button has been clicked, and the folder of log files\nopened.\nFigure 2-12. Opening the Apache log file folder\nTesting the Installation\nThe first thing to do at this point is verify that everything is working correctly. To do\nthis, you are going to try to display the default web page, which will have been saved\nin the server’s document root folder (see Figure 2-13 ). Enter either of the following\ntwo URLs into the address bar of your browser:\nlocalhost\n127.0.0.1\n24 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 55,
    "text": "Figure 2-13. How the XAMPP home page should look by default\nThe word localhost  is used in URLs to specify the local computer, which will also\nrespond to the  IP address of 127.0.0.1, so you can use either method of calling up the\ndocument root of your web server.\nIf you chose a server port other than 80 using the control panel (for\nexample 8080), then you must place a colon followed by that value\nafter either of the preceding URLs—like this: localhost:8080 . Y ou\nwill have to do the same for all example files in this book. So,\ninstead of entering the URL localhost/example.php  into the address\nbar, you should enter localhost:8080/example.php  (or whatever\nvalue you chose).\nAccessing the document root\nThe document root  is the directory that contains the main web documents for a\ndomain. This is the one that is entered when a basic URL without a path is typed into\na browser, such as http://yahoo.com  or, for your local server, http://localhost.\nBy default, XAMP uses the following location for this directory:\nC:/xampp/htdocs\nTo ensure that you have everything correctly configured, you should now create the\nobligatory “Hello World” file. So create a small HTML file along the following lines\nusing Windows Notepad or any other program or text editor, but not a rich word\nprocessor such as Microsoft Word (unless you save as plain text):\nInstalling XAMPP on Windows | 25"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 56,
    "text": "<html>\n  <head>\n    <title>A quick test</title>\n  </head>\n  <body>\n    Hello World!\n  </body>\n</html>\nOnce you have typed this, save the file into the document root directory previously\ndiscussed, using the filename test.htm . If you are using Notepad, make sure that the\n“Save as type” box is changed from “Text Documents (*.txt)” to “ All Files (*.*)” . Or, if\nyou prefer, you can save the file using the .html  file extension; either is acceptable.\nY ou can now call this page up in your browser by entering one of the following URLs\n(according to the extension you used) in its address bar (see Figure 2-14 ):\nhttp://localhost/test.htm\nhttp://localhost/test.html\nFigure 2-14. Your first web page\nAlternative WAMPs\nWhen software  is updated, it sometimes  works differently than you’ d expected, and\nbugs can even be introduced. So if you encounter difficulties that you cannot resolve,\nyou may prefer to choose one of the other solutions available on the Web instead.\nY ou will still be able to make use of all the examples in this book, but you’ll have to\nfollow the instructions supplied with each W AMP , which may not be as easy to follow\nas the preceding guide.\nHere’s a selection of some of the best, in my opinion:\n•EasyPHP: easyphp.org\n•W AMPServer: wampserver.com/en\n•Glossword W AMP: glossword.biz/glosswordwamp\n26 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 57,
    "text": "Installing XAMPP on Mac OS X\nXAMPP is also available on OS X, and you can download it from http://apache\nfriends.org , as shown previously in Figure 2-1 .\nDouble-click the .dmg  file once downloaded, and then double-click the installer and\nfollow the same sequence of instructions as for Windows (although you may also be\ngiven checkbox options to choose whether to load the core files, developer files, or\nboth).\nThe installation process is similar to Windows, but with XAMPP being installed in\nthe following location: /Applications/XAMPP\nUpon successful installation, the XAMPP Manager window will open. To ensure\nXAMP can take proper control of web serving on your Mac, first you may need to\nturn off any Apache web server your Mac is already running, by entering the follow‐\ning in a Terminal window:\nsudo apachectl stop\nNow you can click the middle tab (entitled Manage Servers) at the top of the window,\nand then click Start All to get the XAMPP servers running. After this, click the Wel‐\ncome tab to return to the main Manager screen, and then click the Go to Application\nbutton, which will call up the web page shown in Figure 2-13 . Y ou are now all set to\nuse the software suite.\nFor more information on installing and using Mac XAMPP , please refer to apache\nfriends.org/faq_osx.html\nIn the future, to call up the Manager, open your Applications  folder\nand then locate the XAMPP  folder, and run manager-osx .\nAccessing the Document Root\nOn Macs, the XAMPP document root (in which web documents are stored and\nserved from) can be found at\n/Applications/XAMPP/htdocs\nTo test your new installation, type some HTML such as the following into TextEdit\n(or any editor that can save as plain text) and then save it in the document root as\ntest.html . If you then type localhost/test.html  into the address bar of your browser, the\nresult should be the same as shown previously in Figure 2-14 :\n<html>\n  <head>\nInstalling XAMPP on Mac OS X | 27"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 58,
    "text": "<title>A quick test</title>\n  </head>\n  <body>\n    Hello World!\n  </body>\n</html>\nInstalling a LAMP on Linux\nThis book is aimed mostly at PC and Mac users, but its contents will work equally\nwell on a Linux computer. However, there are dozens of popular flavors of Linux, and\neach of them may require installing a LAMP in a slightly different way, so I can’t\ncover them all in this book.\nHowever, many Linux versions come preinstalled with a web server and MySQL, and\nthe chances are that you may already be all set to go. To find out, try entering the\nfollowing into a browser and see whether you get a default document root web page:\nhttp://localhost\nIf this works, you probably have the Apache server installed and may well have\nMySQL up and running too; check with your system administrator to be sure.\nIf you don’t yet have a web server installed, however, there’s a  version of XAMPP\navailable that you can download at apachefriends.org .\nInstallation is similar to the sequence shown in the Windows section, and if you need\nfurther assistance on using the suite, please refer to apachefriends.org/faq_linux.html\nWorking Remotely\nIf you have access to a web server already configured with PHP and MySQL, you can\nalways use that for your web development.  But unless you have a high-speed connec‐\ntion, it is not always your best option. Developing locally allows you to test modifica‐\ntions with little or no upload delay.\nAccessing MySQL remotely may not be easy either. Y ou may have to Telnet or SSH\ninto your server to manually create databases and set permissions from the command\nline. Y our web-hosting company will advise you on how best to do this and provide\nyou with any password it has set for your MySQL access (as well as, of course, for\ngetting into the server in the first place).\nLogging In\nI recommend that, at minimum, Windows  users should  install a program such as\nPuTTY , available at http://putty.org , for Telnet and  SSH access (remember that SSH is\nmuch more secure than Telnet).  \n28 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 59,
    "text": "On a Mac, you already have SSH available.  Just select the Applications  folder, followed\nby Utilities , and then launch Terminal. In the terminal window, log in to a server\nusing SSH as follows:\nssh mylogin@server.com\nwhere server.com  is the name of the server you wish to log into and mylogin  is the\nusername you will log in under. Y ou will then be prompted for the correct password\nfor that username and, if you enter it correctly, you will be logged in.\nUsing FTP\nTo transfer files to and from your web server, you will need an FTP program. If you\ngo searching the Web for a good one, you’ll find so many that it could take you quite\na while to come across one with all the right features for you.\nNowadays I always recommend FireFTP , because of these advantages:\n•It is an add-on for the Firefox web browser, and will therefore work on any plat‐\nform on which Firefox runs.\n•Calling it up can be as simple as selecting a bookmark.\n•It is one of the fastest and easiest-to-use FTP programs that I have encountered.\nY ou may say, “But I use only Microsoft Internet Explorer, and\nFireFTP is not available for it, ” but I would counter that if you are\ngoing to develop web pages, you need a copy of each of the main\nbrowsers installed on your PC anyway, as suggested at the start of\nthis chapter.\nTo install FireFTP , visit http://fireftp.mozdev.org  using Firefox and click the Down‐\nload FireFTP link. It’s about half a megabyte in size and installs very quickly. Once it’s\ninstalled, restart Firefox; you can then access FireFTP from the Tools menu (see\nFigure 2-15 ).\nAnother excellent FTP program is the open source FileZilla, available from http://\nfilezilla-project.org , for Windows, Linux, and Mac OS X 10.5 or newer.\nOf course, if you already have an FTP program, all the better—stick with what you\nknow.\nWorking Remotely | 29"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 60,
    "text": "Figure 2-15. FireFTP offers  full FTP access from within Firefox\nUsing a Program Editor\nAlthough a plain-text editor works for editing HTML, PHP , and JavaScript, there\nhave been some tremendous improvements in dedicated  program editors, which now\nincorporate very handy features such as colored syntax highlighting. Today’s program\neditors are smart and can show you where you have syntax errors before you even\nrun a program. Once you’ve used a modern editor, you’ll wonder how you ever man‐\naged without one.\nThere are a number of good programs available, but I have settled on Editra, because\nit’s free and available on Mac, Windows, and Linux/Unix. Y ou can download a copy\nby visiting http://editra.org  and selecting the Download link toward the top left of the\npage, where you can also find the documentation for it.\nAs you can see from Figure 2-16 , Editra highlights the syntax appropriately, using\ncolors to help clarify what’s going on. What’s more, you can place the cursor next to\nbrackets or braces, and Editra will highlight the matching pair so that you can check\nwhether you have too many or too few. In fact, Editra does a lot more in addition,\nwhich you will discover and enjoy as you use it.\n30 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 61,
    "text": "Figure 2-16. Program editors are superior to plain-text editors\nAgain, if you have a different preferred program editor, use that; it’s always a good\nidea to use programs you’re already familiar with.\nUsing an IDE\nAs good as dedicated program editors can be for your programming productivity,\ntheir utility pales into insignificance when compared to integrated development envi‐\nronments  (IDEs), which offer many additional features such as in-editor debugging\nand program testing, as well as function descriptions and much more.\nFigure 2-17  shows the popular phpDesigner IDE with a PHP program loaded into the\nmain frame, and the righthand Code Explorer listing the various classes, functions,\nand variables that it uses.\nUsing an IDE | 31"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 62,
    "text": "Figure 2-17. When you’re using an IDE such as phpDesigner, PHP development becomes\nmuch quicker and easier\nWhen developing with an IDE, you can set breakpoints and then run all (or portions)\nof your code, which will then stop at the breakpoints and provide you with informa‐\ntion about the program’s current state.\nAs an aid to learning programming, the examples in this book can be entered into an\nIDE and run there and then, without the need to call up your web browser. There are\nseveral IDEs available for different platforms, most of which are commercial, but\nthere are some free ones too. Table 2-1  lists some of the most popular PHP IDEs,\nalong with their download URLs.\nChoosing an IDE can be a very personal thing, so if you intend to use one, I advise\nyou to download a couple or more to try them out first; they all either have trial ver‐\nsions or are free to use, so it won’t cost you anything.\n32 | Chapter 2: Setting Up a Development Server"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 63,
    "text": "Table 2-1. A selection of PHP IDEs\nIDE Download URL Cost Win Mac Lin\nEclipse PDT http://eclipse.org/pdt/downloads/ Free✓✓✓\nKomodo IDE http://activestate.com/Products/komodo_ide $245✓✓✓\nNetBeans http://www.netbeans.org Free✓✓✓\nphpDesigner http://mpsoftware.dk $39✓   \nPHPEclipse http://phpeclipse.de Free✓✓✓\nPhpED http://nusphere.com $119✓  ✓\nPHPEdit http://www.phpedit.com $119✓   \nY ou should take the time to install a program editor or IDE you are comfortable with\nand you’ll then be ready to try out the examples in the coming chapters.\nArmed with these tools, you are now ready to move on to Chapter 3 , where we’ll start\nexploring PHP in further depth and find out how to get HTML and PHP to work\ntogether, as well as how the PHP language itself is structured. But before moving on, I\nsuggest you test your new knowledge with the following questions.\nQuestions\n1.What is the difference between a W AMP , a MAMP , and a LAMP?\n2.What do the IP address 127.0.0.1 and the URL http://localhost  have in common?\n3.What is the purpose of an FTP program?\n4.Name the main disadvantage of working on a remote web server.\n5.Why is it better to use a program editor instead of a plain-text editor?\nSee Chapter 2 Answers  in Appendix A  for the answers to these questions.\nQuestions | 33"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 64,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 65,
    "text": "CHAPTER 3\nIntroduction to PHP\nIn Chapter 1 , I explained that PHP is the language that you use to make the server\ngenerate dynamic output—output that is potentially different each time a browser\nrequests a page. In this chapter, you’ll start learning this simple but powerful lan‐\nguage; it will be the topic of the following chapters up through Chapter 7 .\nI encourage you to develop your PHP code in one of the IDEs listed in Chapter 2 . It\nwill help you catch typos and speed up learning tremendously in comparison to less\nfeature-rich editors.\nMany of these development environments let you run the PHP code and see the out‐\nput discussed in this chapter. I’ll also show you how to embed the PHP in an HTML\nfile so that you can see what the output looks like in a web page (the way your users\nwill ultimately see it). But that step, as thrilling as it may be at first, isn’t really impor‐\ntant at this stage.\nIn production, your web pages will be a combination of PHP , HTML, and JavaScript,\nand some MySQL statements laid out using CSS, and possibly utilizing various\nHTML5 elements. Furthermore, each page can lead to other pages to provide users\nwith ways to click through links and fill out forms. We can avoid all that complexity\nwhile learning each language, though. Focus for now on just writing PHP code and\nmaking sure that you get the output you expect—or at least that you understand the\noutput you actually get!\nIncorporating PHP Within HTML\nBy default, PHP documents end with the extension .php. When a web server encoun‐\nters this extension in a requested file, it automatically passes it to the PHP processor.\nOf course, web servers are highly configurable, and some web developers choose to\n35"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 66,
    "text": "force files ending with .htm  or .html  to also get parsed by the PHP processor, usually\nbecause they want to hide the fact that they are using PHP .\nY our PHP program is responsible for passing back a clean file suitable for display in a\nweb browser. At its very simplest, a PHP document will output only HTML. To prove\nthis, you can take any normal HTML document such as an index.html  file and save it\nas index.php , and it will display identically to the original.\nTo trigger the PHP commands, you need to learn a new tag. Here is the first part:\n<?php\nThe first thing you may notice is that the tag has not been closed. This is because\nentire sections of PHP can be placed inside this tag, and they finish only when the\nclosing part is encountered, which looks like this:\n?>\nA small PHP “Hello World” program might look like Example 3-1 .\nExample 3-1. Invoking PHP\n<?php\n  echo \"Hello world\";\n?>\nThe way you use this tag is quite flexible. Some programmers open the tag at the start\nof a document and close it right at the end, outputting any HTML directly from PHP\ncommands. Others, however, choose to insert only the smallest possible fragments of\nPHP within these tags wherever dynamic scripting is required, leaving the rest of the\ndocument in standard HTML.\nThe latter type of programmer generally argues that their style of coding results in\nfaster code, while the former say that the speed increase is so minimal that it doesn’t\njustify the additional complexity of dropping in and out of PHP many times in a sin‐\ngle document.\nAs you learn more, you will surely discover your preferred style of PHP development,\nbut for the sake of making the examples in this book easier to follow, I have adopted\nthe approach of keeping the number of transfers between PHP and HTML to a mini‐\nmum—generally only once or twice in a document.\nBy the way, there is a slight variation to the PHP syntax. If you browse the Internet for\nPHP examples, you may also encounter code where the opening and closing syntax\nlooks like this:\n<?\n  echo \"Hello world\";\n?>\n36 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 67,
    "text": "Although it’s not as obvious that the PHP parser is being called, this is a valid, alter‐\nnative syntax that also usually works, but should be discouraged, as it is incompatible\nwith XML and its use is now deprecated (meaning that it is no longer recommended\nand could be removed in future versions).\nIf you have only PHP code in a file, you may omit the closing ?>.\nThis can be a good practice, as it will ensure that you have no\nexcess whitespace leaking from your PHP files (especially impor‐\ntant when you’re writing object-oriented code).\nThis Book’s Examples\nTo save you the time  it would take to type them all in, all the examples  from this book\nhave been archived onto the website at http://lpmj.net , which you can download to\nyour computer by clicking the Download Examples link in the heading section (see\nFigure 3-1 ).\nFigure 3-1. Viewing examples from this book at http://lpmj.net\nThis Book’s Examples | 37"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 68,
    "text": "As well as having all the examples saved by chapter and example number (such as\nexample3-1.php ), the provided archive also contains an additional directory called\nnamed_examples , in which you’ll find all the examples I suggest you save using a spe‐\ncific filename (such as the upcoming Example 3-4 , which should be saved as\ntest1.php ).\nThe Structure of PHP\nWe’re going to cover quite a lot of ground in this section. It’s not too difficult, but I\nrecommend that you work your way through it carefully, as it sets the foundation for\neverything else in this book. As always, there are some useful questions at the end of\nthe chapter that you can use to test how much you’ve learned.\nUsing Comments\nThere are two ways in which you can add comments to your PHP code.  The first\nturns a single line into a comment by preceding it with a pair of forward slashes:\n// This is a comment\nThis version of the comment feature is a great way to temporarily remove a line of\ncode from a program that is giving you errors. For example, you could use such a\ncomment to hide a debugging line of code until you need it, like this:\n// echo \"X equals $x\";\nY ou can also use this type of comment directly after a line of code to describe its\naction, like this:\n$x += 10; // Increment $x by 10\nWhen you need multiple-line comments, there’s a second type of comment, which\nlooks like Example 3-2 .\nExample 3-2. A multiline comment\n<?php\n/* This is a section\n   of multiline comments\n   which will not be\n   interpreted */\n?>\nY ou can use the /* and */ pairs of characters to open and close comments almost\nanywhere you like inside your code. Most, if not all, programmers use this construct\nto temporarily comment out entire sections of code that do not work or that, for one\nreason or another, they do not wish to be interpreted.\n38 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 69,
    "text": "A common error is to use /* and */ to comment out a large section\nof code that already contains a commented-out section that uses\nthose characters. Y ou can’t nest comments this way; the PHP inter‐\npreter won’t know where a comment ends and will display an error\nmessage. However, if you use a program editor or IDE with syntax\nhighlighting, this type of error is easier to spot.\nBasic Syntax\nPHP is quite a simple language  with roots in C and Perl, yet it looks more like Java. It\nis also very flexible, but there are a few rules that you need to learn about its syntax\nand structure.\nSemicolons\nY ou may have noticed in the previous examples that the PHP commands ended with\na semicolon, like this:\n$x += 10;\nProbably the most common cause of errors you will encounter with PHP is forgetting\nthis semicolon. This causes PHP to treat multiple statements like one statement,\nwhich it is unable to understand, prompting it to produce a Parse error  message.\nThe $ symbol\nThe $ symbol has come to be used in many different ways by different programming\nlanguages. For example, if you have ever written in the BASIC language, you will have\nused the $ to terminate variable names to denote them as strings.\nIn PHP , however, you must place a $ in front of all variables. This is required to make\nthe PHP parser faster, as it instantly knows whenever it comes across a variable.\nWhether your variables are numbers, strings, or arrays, they should all look some‐\nthing like those in Example 3-3 .\nExample 3-3. Three  different  types of variable assignment\n<?php\n  $mycounter = 1;\n  $mystring  = \"Hello\";\n  $myarray   = array(\"One\", \"Two\", \"Three\");\n?>\nAnd really that’s pretty much all the syntax that you have to remember. Unlike lan‐\nguages such as Python, which are very strict about how you indent and lay out our\ncode, PHP leaves you completely free to use (or not use) all the indenting and spacing\nyou like. In fact, sensible use of whitespace  is generally encouraged (along with com‐\nThe Structure of PHP | 39"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 70,
    "text": "prehensive commenting) to help you understand your code when you come back to\nit. It also helps other programmers when they have to maintain your code.\nVariables\nThere’s a simple metaphor that will help you understand what PHP variables are all\nabout. Just think of them as little (or big) matchboxes! That’s right—matchboxes that\nyou’ve painted over and written names on.\nString variables\nImagine you have a matchbox on which you have written the word username . Y ou\nthen write Fred Smith  on a piece of paper and place it into the box (see Figure 3-2 ).\nWell, that’s the same process as assigning a string value to a variable, like this:\n$username = \"Fred Smith\";\nFigure 3-2. You can think of variables as matchboxes containing items\nThe quotation marks indicate that “Fred Smith” is a string  of characters. Y ou must\nenclose each string in either quotation marks or apostrophes (single quotes),\nalthough there is a subtle difference between the two types of quote, which is\nexplained later. When you want to see what’s in the box, you open it, take the piece of\npaper out, and read it. In PHP , doing so looks like this:\necho $username;\nOr you can assign it to another variable (photocopy the paper and place the copy in\nanother matchbox), like this:\n$current_user = $username;\n40 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 71,
    "text": "If you are keen to start trying out PHP for yourself, you could enter the examples in\nthis chapter into an IDE (as recommended at the end of Chapter 2 ) to see instant\nresults, or you could enter the code in Example 3-4  into a program editor and save it\nto your server’s document root directory (also discussed in Chapter 2 ) as test1.php .\nExample 3-4. Your first PHP program\n<?php // test1.php\n  $username = \"Fred Smith\";\n  echo $username;\n  echo \"<br>\";\n  $current_user = $username;\n  echo $current_user;\n?>\nNow you can call it up by entering the following into your browser’s address bar:\nhttp://localhost/test1.php\nIf during installation of your web server (as detailed in Chapter 2 )\nyou changed the port assigned to the server to anything other than\n80, then you must place that port number within the URL in this\nand all other examples in this book. So, for example, if you changed\nthe port to 8080, the preceding URL becomes this:\nhttp://localhost:8080/test1.php\nI won’t mention this again, so just remember to use the port num‐\nber if required when trying examples or writing your own code.\nThe result of running this code should be two occurrences of the name Fred Smith ,\nthe first of which is the result of the echo $username  command, and the second of\nthe echo $current_user  command.\nNumeric variables\nVariables don’t contain just strings—they can contain numbers too. If we return to\nthe matchbox analogy, to store the number 17 in the variable $count , the equivalent\nwould be placing, say, 17 beads in a matchbox on which you have written the word\ncount :\n$count = 17;\nY ou could also use a floating-point number (containing a decimal point); the syntax is\nthe same:\n$count = 17.5;\nThe Structure of PHP | 41"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 72,
    "text": "To read the contents of the matchbox, you would simply open it and count the beads.\nIn PHP , you would assign the value of $count  to another variable or perhaps just echo\nit to the web browser.\nArrays\nSo what are arrays? Well, you can  think of them as several matchboxes glued together.\nFor example, let’s say we want to store the player names for a five-person soccer team\nin an array called $team . To do this, we could glue five matchboxes side by side and\nwrite down the names of all the players on separate pieces of paper, placing one in\neach matchbox.\nAcross the whole top of the matchbox assembly we would write the word team  (see\nFigure 3-3 ). The equivalent of this in PHP would be the following:\n$team = array('Bill', 'Mary', 'Mike', 'Chris', 'Anne');\nThis syntax is more complicated than the ones I’ve explained so far. The array-\nbuilding code consists of the following construct:\narray();\nwith five strings inside. Each string is enclosed in apostrophes.\nIf we then wanted to know who player 4 is, we could use this command:\necho $team[3]; // Displays the name Chris\nFigure 3-3. An array is like several matchboxes glued together\n42 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 73,
    "text": "The reason the previous statement has the number 3, not 4, is because the first ele‐\nment of a PHP array is actually the zeroth element, so the player numbers will there‐\nfore be 0 through 4.\nTwo-dimensional arrays\nThere’s a lot more you can do  with arrays. For example, instead of being single-\ndimensional lines of matchboxes, they can be two-dimensional matrixes or can even\nhave three or more dimensions.\nAs an example of a two-dimensional array, let’s say we want to keep track of a game of\ntic-tac-toe, which requires a data structure of nine cells arranged in a 3×3 square. To\nrepresent this with matchboxes, imagine nine of them glued to each other in a matrix\nof three rows by three columns (see Figure 3-4 ).\nFigure 3-4. A multidimensional array simulated with matchboxes\nY ou can now place a piece of paper with either an x or an o in the correct matchbox\nfor each move played. To do this in PHP code, you have to set up an array containing\nthree more arrays, as in Example 3-5 , in which the array is set up with a game already\nin progress.\nExample 3-5. Defining  a two-dimensional array\n<?php\n  $oxo = array(array('x', ' ', 'o'),\n               array('o', 'o', 'x'),\n               array('x', 'o', ' '));\n?>\nThe Structure of PHP | 43"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 74,
    "text": "Once again, we’ve moved up a step in complexity, but it’s easy to understand if you\ngrasp the basic array syntax. There are three array()  constructs nested inside the\nouter array()  construct.\nTo then return the third element in the second row of this array, you would use the\nfollowing PHP command, which will display an x:\necho $oxo[1][2];\nRemember that array indexes (pointers at elements within an\narray) start from zero, not one, so the [1] in the previous com‐\nmand refers to the second of the three arrays, and the [2] refer‐\nences the third position within that array. It will return the contents\nof the matchbox three along and two down.\nAs mentioned, we can support arrays with even more dimensions by simply creating\nmore arrays within arrays. However, we will not be covering arrays of more than two\ndimensions in this book.\nAnd don’t worry if you’re still having difficulty coming to grips with using arrays, as\nthe subject is explained in detail in Chapter 6 .\nVariable-naming rules\nWhen creating PHP variables, you must follow these four rules:\n•Variable names must start with a letter of the alphabet or the _ (underscore)\ncharacter.\n•Variable names can contain only the characters a-z, A-Z, 0-9, and _ (underscore).\n•Variable names may not contain spaces. If a variable must comprise more than\none word, it should be separated with the _ (underscore ) character (e.g.,\n$user_name ).\n•Variable names are case-sensitive. The variable $High_Score  is not the same as\nthe variable $high_score .\nTo allow extended ASCII characters that include accents, PHP also\nsupports the bytes from 127 through 255 in variable names. But\nunless your code will be maintained only by programmers who are\nused to those characters, it’s probably best to avoid them, because\nprogrammers using English keyboards will have difficulty access‐\ning them.\n44 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 75,
    "text": "Operators\nOperators  are the mathematical, string, comparison, and logical commands such as\nplus, minus, multiply, and divide. PHP looks a lot like plain arithmetic; for instance,\nthe following statement outputs 8:\necho 6 + 2;\nBefore moving on to learn what PHP can do for you, take a moment to learn about\nthe various operators it provides.\nArithmetic operators\nArithmetic operators do what you would expect.  They are used to perform mathe‐\nmatics. Y ou can use them for the main four operations (plus, minus, times, and \ndivide) as well as to find a modulus (the remainder after a division) and  to increment\nor  decrement a value (see Table 3-1 ).\nTable 3-1. Arithmetic operators\nOperator Description Example\n+ Addition $j + 1\n- Subtraction $j - 6\n* Multiplication $j * 11\n/ Division $j / 4\n% Modulus (division remainder) $j % 9\n++ Increment ++$j\n-- Decrement --$j\nAssignment operators\nThese operators are used to assign values to variables. They start with the very simple\n= and move on to +=, -=, and so on (see Table 3-2 ). The operator += adds the value on\nthe right side to the variable on the left, instead of totally replacing the value on the\nleft. Thus, if $count  starts with the value 5, the statement\n$count += 1;\nsets $count  to 6, just like the more familiar assignment statement:\n$count = $count + 1;\nStrings have their own operator, the period ( .), detailed in the section “String concat‐\nenation” on page 49 .\nThe Structure of PHP | 45"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 76,
    "text": "Table 3-2. Assignment operators\nOperator Example Equivalent to\n= $j = 15$j = 15\n+= $j += 5$j = $j + 5\n-= $j -= 3$j = $j - 3\n*= $j *= 8$j = $j * 8\n/= $j /= 16$j = $j / 16\n.= $j .= $k$j = $j . $k\n%= $j %= 4$j = $j % 4\nComparison operators\nComparison operators are generally  used inside a construct such as an if statement\nin which you need to compare two items. For example, you may wish to know\nwhether a variable you have been incrementing has reached a specific value, or\nwhether another variable is less than a set value, and so on (see Table 3-3 ).\nNote the difference between = and ==. The first is an assignment operator, and the\nsecond is a  comparison operator. Even more-advanced programmers can sometimes  \ntranspose the two when coding hurriedly, so be careful.\nTable 3-3. Comparison operators\nOperator Description Example\n== Is equal  to $j == 4\n!= Is not equal  to $j != 21\n> Is greater than $j > 3\n< Is less than $j < 100\n>= Is greater than or equal  to$j >= 15\n<= Is less than or equal  to$j <= 8\nLogical operators\nIf you haven’t used them before, logical operators may at first seem a little daunting.\nBut just think of them the way you would use logic in English. For example, you\nmight say to yourself, “If the time is later than 12 p.m. and earlier than 2 p.m., then\nhave lunch. ” In PHP , the code for this might look something like the following (using\nmilitary timing):\nif ($hour > 12 && $hour < 14) dolunch();\n46 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 77,
    "text": "Here we have moved the set of instructions for actually going to lunch into a function\nthat we will have to create later called dolunch . The then  of the statement is left out,\nbecause it is implied and therefore unnecessary.\nAs the previous example shows, you generally use a logical operator to combine the\nresults of two of the comparison operators shown in the previous section. A logical\noperator can also be input to another logical operator: “If the time is later than 12\np.m. and earlier than 2 p.m., or if the smell of a roast is permeating the hallway and\nthere are plates on the table. ” As a rule, if something has a TRUE  or FALSE  value, it can\nbe input  to a logical  operator. A logical operator takes two true-or-false inputs and\nproduces a true-or-false result.\nTable 3-4  shows the logical operators.\nTable 3-4. Logical operators\nOperator Description Example\n&& And $j == 3 && $k == 2\nand Low-precedence and$j == 3 and $k == 2\n|| Or $j < 5 || $j > 10\nor Low-precedence or$j < 5 or $j > 10\n! Not ! ($j == $k)\nxor Exclusive or $j xor $k\nNote that && is usually interchangeable with and; the same is true for || and or. But\nand and or have a lower precedence, so in some cases, you may need extra parenthe‐\nses to force the required precedence. On the other hand, there are times when only\nand or or are acceptable, as in the following statement, which uses an or operator:\n$html = file_get_contents($site) or die(\"Cannot download from $site\");\nThe most unusual of these operators is xor, which stands for exclusive or  and returns\na TRUE  value if either value is TRUE , but a FALSE  value if both inputs are TRUE  or both\ninputs are FALSE . To understand this, imagine that you want to concoct your own\ncleaner for household items. Ammonia makes a good cleaner, and so does bleach, so\nyou want your cleaner to have one of these. But the cleaner must not have both,\nbecause the combination is hazardous. In PHP , you could represent this as follows:\n$ingredient = $ammonia xor $bleach;\nIn the example, if either $ammonia  or $bleach  is TRUE , $ingredient  will also be set to\nTRUE . But if both are TRUE  or both are FALSE , $ingredient  will be set to FALSE .\nThe Structure of PHP | 47"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 78,
    "text": "Variable Assignment\nThe syntax to assign a value to a variable is always variable = value . Or, to reassign the\nvalue to another variable, it is other variable = variable .\nThere are also a couple of other assignment operators that you will find useful. For\nexample, we’ve already seen\n$x += 10;\nwhich tells the PHP parser to add the value on the right (in this instance, the value\n10) to the variable $x. Likewise, we could subtract as follows:\n$y -= 10;\nVariable incrementing and decrementing\nAdding or subtracting 1 is such a common operation that PHP provides special oper‐\nators for it. Y ou can use one of the following in place of the += and -= operators:\n++$x;\n--$y;\nIn conjunction with a test (an if statement), you could use the following code:\nif (++$x == 10) echo $x;\nThis tells PHP to first increment the value of $x and then test whether it has the value\n10; if it does, output its value. But you can also require PHP to increment (or, in the\nfollowing example, decrement) a variable after  it has tested the value, like this:\nif ($y-- == 0) echo $y;\nwhich gives a subtly different result. Suppose $y starts out as 0 before the statement is\nexecuted. The comparison will return a TRUE  result, but $y will be set to –1 after the\ncomparison is made. So what will the echo  statement display: 0 or –1? Try to guess,\nand then try out the statement in a PHP processor to confirm. Because this combina‐\ntion of statements is confusing, it should be taken as just an educational example and\nnot as a guide to good programming style.\nIn short, whether a variable is incremented or decremented before or after testing\ndepends on whether the increment or decrement operator is placed before or after\nthe variable.\nBy the way, the correct answer to the previous question is that the echo  statement will\ndisplay the result –1, because $y was decremented right after it was accessed in the if\nstatement, and before the echo  statement.\n48 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 79,
    "text": "String concatenation\nString  concatenation uses the period ( .) to append one string of characters to\nanother. The simplest way to do this is as follows:\necho \"You have \" . $msgs . \" messages.\";\nAssuming that the variable $msgs  is set to the value 5, the output from this line of\ncode will be the following:\nYou have 5 messages.\nJust as you can add a value to a numeric variable with the += operator, you can\nappend one string to another using .=, like this:\n$bulletin .= $newsflash;\nIn this case, if $bulletin  contains a news bulletin and $newsflash  has a news flash,\nthe command appends the news flash to the news bulletin so that $bulletin  now\ncomprises both strings of text.\nString types\nPHP supports two types of strings that are denoted by the type of quotation mark\nthat you use. If you wish to assign a literal string, preserving the exact contents, you\nshould use the single quotation mark (apostrophe), like this:\n$info = 'Preface variables with a $ like this: $variable';\nIn this case, every character within the single-quoted string is assigned to $info . If\nyou had used double quotes, PHP would have attempted to evaluate $variable  as a\nvariable.\nOn the other hand, when you want to include the value of a variable inside a string,\nyou do so by using double-quoted strings:\necho \"This week $count people have viewed your profile\";\nAs you will realize, this syntax also offers a simpler form of concatenation in which\nyou don’t need to use a period, or close and reopen quotes, to append one string to\nanother. This is called variable substitution , and you will notice some applications\nusing it extensively and others not using it at all.\nEscaping characters\nSometimes a string needs to contain characters with special meanings that might be\ninterpreted incorrectly. For example, the following line of code will not work, because\nthe second quotation mark encountered in the word spelling’s  will tell the PHP parser\nthat the string end has been reached. Consequently, the rest of the line will be rejected\nas an error:\nThe Structure of PHP | 49"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 80,
    "text": "$text = 'My spelling's atroshus'; // Erroneous syntax\nTo correct this, you can add a backslash directly before the offending quotation mark\nto tell PHP to treat the character literally and not to interpret it:\n$text = 'My spelling\\'s still atroshus';\nAnd you can perform this trick in almost all situations in which PHP would other‐\nwise return an error by trying to interpret a character. For example, the following\ndouble-quoted string will be correctly assigned:\n$text = \"She wrote upon it, \\\"Return to sender\\\".\";\nAdditionally, you can use escape characters to insert various special characters into\nstrings such as tabs, newlines, and carriage returns.  These are represented, as you\nmight  guess,  by \\t, \\n, and \\r. Here is an example using tabs to lay out a heading; it\nis included here merely to illustrate escapes, because in web pages there are always\nbetter ways to do layout:\n$heading = \"Date\\tName\\tPayment\";\nThese special backslash-preceded characters work only in double-quoted strings. In\nsingle-quoted strings, the preceding string would be displayed with the ugly \\t\nsequences instead of tabs. Within single-quoted strings, only the escaped apostrophe\n(\\') and escaped backslash itself ( \\\\) are recognized as escaped characters.\nMultiple-Line Commands\nThere are times when you need to output quite a lot of text from PHP , and using sev‐\neral echo  (or print ) statements would be time-consuming and messy. To overcome\nthis, PHP offers two conveniences. The first is just to put multiple lines between\nquotes, as in Example 3-6 . Variables can also be assigned, as in Example 3-7 .\nExample 3-6. A multiline string echo statement\n<?php\n  $author = \"Steve Ballmer\";\n  echo \"Developers, Developers, developers, developers, developers,\n  developers, developers, developers, developers!\n  - $author.\";\n?>\nExample 3-7. A multiline string assignment\n<?php\n  $author = \"Bill Gates\";\n  $text = \"Measuring programming progress by lines of code is like\n50 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 81,
    "text": "Measuring aircraft building progress by weight.\n  - $author.\";\n?>\nPHP also offers a multiline sequence using the <<< operator—commonly referred to\nas a here-document  or heredoc —as  a way of specifying a string literal, preserving the\nline breaks and other whitespace (including indentation) in the text. Its use can be\nseen in Example 3-8 .\nExample 3-8. Alternative multiline echo statement\n<?php\n  $author = \"Brian W. Kernighan\";\n  echo <<<_END\n  Debugging is twice as hard as writing the code in the first place.\n  Therefore, if you write the code as cleverly as possible, you are,\n  by definition, not smart enough to debug it.\n  - $author.\n_END;\n?>\nThis code tells PHP to  output everything between the two _END  tags as if it were a\ndouble-quoted string (except that quotes in a heredoc do not need to be escaped).\nThis means it’s possible, for example, for a developer to write entire sections of\nHTML directly into PHP code and then just replace specific dynamic parts with PHP\nvariables.\nIt is important to remember that the closing _END;  tag must  appear right at the start\nof a new line and it must be the only thing on that line—not even a comment is\nallowed to be added after it (nor even a single space). Once you have closed a multi‐\nline block, you are free to use the same tag name again.\nRemember: using the <<<_END..._END;  heredoc construct, you\ndon’t have to add \\n linefeed characters to send a linefeed—just\npress Return and start a new line. Also, unlike either a double-\nquote- or single-quote-delimited string, you are free to use all the \nsingle and double quotes you like within a heredoc, without escap‐\ning them by preceding them with a slash ( \\).\nExample 3-9  shows how to use the same syntax to assign multiples lines to a variable.\nThe Structure of PHP | 51"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 82,
    "text": "Example 3-9. A multiline string variable assignment\n<?php\n  $author = \"Scott Adams\";\n  $out = <<<_END\n  Normal people believe that if it ain't broke, don't fix it.\n  Engineers believe that if it ain't broke, it doesn't have enough\n  features yet.\n  - $author.\n_END;\n?>\nThe variable $out  will then be populated with the contents between the two tags. If\nyou were appending, rather than assigning, you could also have used .= in place of =\nto append the string to $out .\nBe careful not to place a semicolon directly after the first occurrence of _END , as that\nwould terminate the multiline block before it had even started and cause a Parse\nerror  message. The only place for the semicolon is after the terminating _END  tag,\nalthough it is safe to use semicolons within the block as normal text characters.\nBy the way, the _END  tag is simply one I  chose for these examples because it is unlikely\nto be used anywhere else in PHP code and is therefore unique. But you can use any\ntag you like, such as _SECTION1  or _OUTPUT  and so on. Also, to help differentiate tags\nsuch as this from variables or functions, the general practice is to preface them with\nan underscore, but you don’t have to use one if you choose not to.\nLaying out text over multiple lines is usually just a convenience to\nmake your PHP code easier to read, because once it is displayed in\na web page, HTML formatting rules take over and whitespace is\nsuppressed (but $author  is still replaced with the variable’s value).\nSo, for example, if you load these multiline output examples into a\nbrowser, they will not display over several lines, because all brows‐\ners treat newlines just like spaces. However, if you use the browser’s\nView Source feature, you will find that the newlines are correctly\nplaced, and the output does appear over several lines.\nVariable Typing\nPHP is a very loosely typed language.  This means  that variables do not have to be\ndeclared before they are used, and that PHP always converts variables to the type\nrequired by their context when they are accessed.\nFor example, you can  create a multiple-digit number and extract the nth digit from it\nsimply by assuming it to be a string. In the following snippet of code, the numbers\n52 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 83,
    "text": "12345 and 67890 are multiplied together, returning a result of 838102050, which is\nthen placed in the variable $number , as shown in Example 3-10 .\nExample 3-10. Automatic conversion from a number to a string\n<?php\n  $number = 12345 * 67890;\n  echo substr($number, 3, 1);\n?>\nAt the point of the assignment, $number  is a numeric variable. But on the second line,\na call is placed to the PHP function substr , which asks for one character to be\nreturned from $number , starting at the fourth position (remembering that PHP offsets\nstart from zero). To do this, PHP turns $number  into a nine-character string, so that\nsubstr  can access it and return the character, which in this case is 1.\nThe same goes for turning a string into a number, and so on. In Example 3-11 , the\nvariable $pi is set to a string value, which is then automatically turned into a floating-\npoint number in the third line by the equation for calculating a circle’s area, which\noutputs the value 78.5398175.\nExample 3-11. Automatically converting a string to a number\n<?php\n  $pi     = \"3.1415927\";\n  $radius = 5;\n  echo $pi * ($radius * $radius);\n?>\nIn practice, what this all means is that you don’t have to worry too much about your\nvariable types. Just assign them values that make sense to you, and PHP will convert\nthem if necessary. Then, when you want to retrieve values, just ask for them—for\nexample, with an echo  statement.\nConstants\nConstants  are similar to variables, holding information to be accessed later, except\nthat they are what they sound like—constant. In other words, once you have defined\none, its value is set for the remainder of the program and cannot be altered.\nOne example of a use for a constant is to hold the location of your server root (the\nfolder with the main files of your website). Y ou would define such a constant like this:\ndefine(\"ROOT_LOCATION\", \"/usr/local/www/\");\nThen, to read the contents of the variable, you just refer to it like a regular variable\n(but it isn’t preceded by a dollar sign):\nThe Structure of PHP | 53"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 84,
    "text": "$directory = ROOT_LOCATION;\nNow, whenever you need to run your PHP code on a different server with a different\nfolder configuration, you have only a single line of code to change.\nThe main two things you have to remember about constants are\nthat they must not be prefaced with a $ (as with regular variables),\nand that you can define them only using the define  function.\nIt is generally considered a good practice to use only uppercase for constant variable\nnames, especially if other people will also read your code.\nPredefined  Constants\nPHP comes ready-made with dozens of predefined constants that you generally will\nbe unlikely to use as a beginner to PHP . However, there are a few—known as the\nmagic constants —that  you will find useful. The names of the magic constants always\nhave two underscores at the beginning and two at the end, so that you won’t acciden‐\ntally try to name one of your own constants with a name that is already taken. They\nare detailed in Table 3-5 . The concepts referred to in the table will be introduced in\nfuture chapters.\nTable 3-5. PHP’s magic constants\nMagic constant Description\n__LINE__ The current line number of the file.\n__FILE__ The full path and filename  of the file.  If used inside an include , the name of the included file is\nreturned. In PHP 4.0.2, __FILE__  always contains an absolute path with symbolic links resolved,\nwhereas in older versions it might contain a relative path under some circumstances.\n__DIR__ The directory of the file.  If used inside an include , the directory of the included file is returned. This\nis equivalent to dirname(__FILE__) . This directory name does not have a trailing slash unless it is\nthe root directory. (Added in PHP 5.3.0.)\n__FUNCTION__ The function name. (Added in PHP 4.3.0.) As of PHP 5, returns the function name as it was declared\n(case-sensitive). In PHP 4, its value is always lowercase.\n__CLASS__ The class name. (Added in PHP 4.3.0.) As of PHP 5, returns the class name as it was declared (case-\nsensitive). In PHP 4, its value is always lowercased.\n__METHOD__ The class method name. (Added in PHP 5.0.0.) The method name is returned as it was declared (case-\nsensitive).\n__NAMESPACE__ The name of the current namespace (case-sensitive). This constant is defined  at compile time. (Added in\nPHP 5.3.0.)\nOne handy use of these variables is for debugging purposes, when you need to insert\na line of code to see whether the program flow reaches it:\n54 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 85,
    "text": "echo \"This is line \" . __LINE__ . \" of file \" . __FILE__;\nThis causes the current program line in the current file (including the path) being\nexecuted to be output to the web browser.\nThe Difference  Between the echo and print Commands\nSo far, you have seen the echo  command used in a number of different ways to output\ntext from the server to your browser. In some cases, a string literal has been output.\nIn others, strings have first been concatenated or variables have been evaluated. I’ve\nalso shown output spread over multiple lines.\nBut there is also an alternative to echo  that you can use: print . The two commands\nare quite similar, but print  is a function-like construct that takes a single parameter\nand has a return value (which is always 1), whereas echo  is purely a PHP language\nconstruct. Since both commands are constructs, neither requires parentheses.\nBy and large, the echo  command will be a tad faster than print  in general text out‐\nput, because it doesn’t set a return value. On the other hand, because it isn’t imple‐\nmented like a function, echo  cannot be used as part of a more complex expression,\nwhereas print  can. Here’s an example to output whether the value of a variable is\nTRUE  or FALSE  using print , something you could not perform in the same manner\nwith echo , because it would display a Parse error  message:\n$b ? print \"TRUE\" : print \"FALSE\";\nThe question mark is simply a way of interrogating whether variable $b is TRUE  or\nFALSE . Whichever command is on the left of the following colon is executed if $b is\nTRUE , whereas the command to the right is executed if $b is FALSE .\nGenerally, though, the examples in this book use echo , and I recommend that you do\nso as well until you reach such a point in your PHP development that you discover\nthe need for using print .\nFunctions\nFunctions  are used to separate  out sections of code that perform a particular task. For\nexample, maybe you often need to look up a date and return it in a certain format.\nThat would be a good example to turn into a function. The code doing it might be\nonly three lines long, but if you have to paste it into your program a dozen times,\nyou’re making your program unnecessarily large and complex, unless you use a func‐\ntion. And if you decide to change the data format later, putting it in a function means\nhaving to change it in only one place.\nPlacing it into a function not only shortens your source code and makes it more read‐\nable, but also adds extra functionality (pun intended), because functions can be\nThe Structure of PHP | 55"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 86,
    "text": "passed parameters to make them perform differently. They can also return values to\nthe calling code.\nTo create a function, declare it in the manner shown in Example 3-12 .\nExample 3-12. A simple function declaration\n<?php\n  function longdate($timestamp)\n  {\n    return date(\"l F jS Y\", $timestamp);\n  }\n?>\nThis function takes a Unix timestamp (an integer number representing a date and\ntime based on the number of seconds since 00:00 a.m. on January 1, 1970) as its input\nand then calls the PHP date  function  with the correct format string to return a date\nin the format Tuesday May 2nd 2017 . Any number of parameters can be passed\nbetween the initial parentheses; we have chosen to accept just one. The curly braces\nenclose all the code that is executed when you later call the function.\nTo output today’s date using this function, place the following call in your code:\necho longdate(time());\nThis call uses the built-in PHP time  function  to fetch the current  Unix timestamp\nand passes it to the new longdate  function, which then returns the appropriate string\nto the echo  command for display. If you need to print out the date 17 days ago, you\nnow just have to issue the following call:\necho longdate(time() - 17 * 24 * 60 * 60);\nwhich passes to longdate  the current Unix timestamp less the number of seconds\nsince 17 days ago (17 days × 24 hours × 60 minutes × 60 seconds).\nFunctions can also accept multiple parameters and return multiple results, using\ntechniques that I’ll develop over the following chapters.\nVariable Scope\nIf you have a very long program, it’s quite  possible that you could start to run out of\ngood variable names, but with PHP you can decide the  scope  of a variable. In other\nwords, you can, for example, tell it that you want the variable $temp  to be used only\ninside a particular function and to forget it was ever used when the function returns.\nIn fact, this is the default scope for PHP variables.\nAlternatively, you could inform PHP that a variable is global in scope and thus can be\naccessed by every other part of your program.\n56 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 87,
    "text": "Local variables\nLocal variables  are variables that are created within, and can be accessed only by, a\nfunction. They are generally temporary variables that are used to store partially pro‐\ncessed results prior to the function’s return.\nOne set of local variables is the list of arguments to a function. In the previous sec‐\ntion, we defined a function that accepted a parameter named $timestamp . This is\nmeaningful only in the body of the function; you can’t get or set its value outside the\nfunction.\nFor another example of a local variable, take another look at the longdate  function,\nwhich is modified slightly in Example 3-13 .\nExample 3-13. An expanded version of the longdate function\n<?php\n  function longdate($timestamp)\n  {\n    $temp = date(\"l F jS Y\", $timestamp);\n    return \"The date is $temp\";\n  }\n?>\nHere we have assigned the value returned by the date  function to the temporary vari‐\nable $temp , which is then inserted into the string returned by the function. As soon as\nthe function returns, the value of $temp  is cleared, as if it had never been used at all.\nNow, to see the effects of variable scope, let’s look at some similar code in\nExample 3-14 . Here $temp  has been created before  we call the longdate  function.\nExample 3-14. This attempt to access $temp in function longdate will fail\n<?php\n  $temp = \"The date is \";\n  echo longdate(time());\n  function longdate($timestamp)\n  {\n    return $temp . date(\"l F jS Y\", $timestamp);\n  }\n?>\nHowever, because $temp  was neither created within the longdate  function nor passed\nto it as a parameter, longdate  cannot access it. Therefore, this code snippet outputs\nonly the date, not the preceding text. In fact, it will first display the error message\nNotice: Undefined variable: temp .\nThe Structure of PHP | 57"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 88,
    "text": "The reason for this is that, by default, variables created within a function are local to\nthat function, and variables created outside of any functions can be accessed only by\nnonfunction code.\nSome ways to repair Example 3-14  appear in Example 3-15  and Example 3-16 .\nExample 3-15. Rewriting to refer to $temp within its local scope fixes  the problem\n<?php\n  $temp = \"The date is \";\n  echo $temp . longdate(time());\n  function longdate($timestamp)\n  {\n    return date(\"l F jS Y\", $timestamp);\n  }\n?>\nExample 3-15  moves the reference to $temp  out of the function. The reference\nappears in the same scope where the variable was defined.\nExample 3-16. An alternative solution: passing $temp as an argument\n<?php\n  $temp = \"The date is \";\n  echo longdate($temp, time());\n  function longdate($text, $timestamp)\n  {\n    return $text . date(\"l F jS Y\", $timestamp);\n  }\n?>\nThe solution in Example 3-16  passes $temp  to the longdate  function as an extra argu‐\nment. longdate  reads it into a temporary variable that it creates called $text  and out‐\nputs the desired result.\nForgetting the scope of a variable is a common programming error,\nso remembering how variable scope works will help you debug\nsome quite obscure problems. Suffice it to say that unless you have\ndeclared a variable otherwise, its scope is limited to being local:\neither to the current function, or to the code outside of any func‐\ntions, depending on whether it was first created or accessed inside\nor outside a function.\n58 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 89,
    "text": "Global variables\nThere are cases when you need a variable to have global  scope, because you want all\nyour code to be able to access it. Also, some data may be large and complex, and you\ndon’t want to keep passing it as arguments to functions.\nTo declare a variable as having global scope, use the keyword global . Let’s assume\nthat you have a way of logging your users into your website and want all your code to\nknow whether it is interacting with a logged-in user or a guest. One way to do this is\nto create a global variable such as $is_logged_in :\nglobal $is_logged_in;\nNow your login function simply has to set that variable to 1 upon a successful login\nattempt, or 0 upon its failure. Because the scope of the variable is global, every line of\ncode in your program can access it.\nY ou should use global variables with caution, though. I recommend that you create\nthem only when you absolutely cannot find another way of achieving the result you\ndesire. In general, programs that are broken into small parts and segregated data are\nless buggy and easier to maintain. If you have a thousand-line program (and some\nday you will) in which you discover that a global variable has the wrong value at some\npoint, how long will it take you to find the code that set it incorrectly?\nAlso, if you have too many global variables, you run the risk of using one of those\nnames again locally, or at least thinking you have used it locally, when in fact it has\nalready been declared as global. All manner of strange bugs can arise from such situa‐\ntions.\nSometimes I adopt the convention of making all global variable\nnames uppercase (just as it’s recommended that constants should\nbe uppercase) so that I can see at a glance the scope of a variable.\nStatic variables\nIn the section “Local variables” on page 57, I mentioned  that the value of the variable\nis wiped out when the function ends. If a function runs many times, it starts with a\nfresh copy of the variable and the previous setting has no effect.\nHere’s an interesting case. What if you have a local variable inside a function that you\ndon’t want any other parts of your code to have access to, but you would also like to\nkeep its value for the next time the function is called? Why? Perhaps because you\nwant a counter to track how many times a function is called. The solution is to\ndeclare a static  variable, as shown in Example 3-17 .\nThe Structure of PHP | 59"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 90,
    "text": "Example 3-17. A function using a static variable\n<?php\n  function test()\n  {\n    static $count = 0;\n    echo $count;\n    $count++;\n  }\n?>\nHere the very first line of function test  creates a static variable called $count  and ini‐\ntializes it to a value of 0. The next line outputs the variable’s value; the final one incre‐\nments it.\nThe next time the function is called, because $count  has already been declared, the\nfirst line of the function is skipped. Then the previously incremented value of $count\nis displayed before the variable is again incremented.\nIf you plan to use static variables, you should note that you cannot assign the result of\nan expression in their definitions. They can be initialized only with predetermined\nvalues (see Example 3-18 ).\nExample 3-18. Allowed and disallowed static variable declarations\n<?php\n  static $int = 0;         // Allowed\n  static $int = 1+2;       // Disallowed (will produce a Parse error)\n  static $int = sqrt(144); // Disallowed\n?>\nSuperglobal variables\nStarting with PHP 4.1.0, several predefined variables are available. These are known\nas superglobal variables , which means that they are provided by the PHP environment\nbut are global within the program, accessible absolutely everywhere.\nThese superglobals contain lots of useful information about the currently running\nprogram and its environment (see Table 3-6 ). They are structured as associative\narrays, a topic discussed in Chapter 6 .\nTable 3-6. PHP’s superglobal variables\nSuperglobal name Contents\n$GLOBALS All variables that are currently defined  in the global scope of the script. The variable names are the keys\nof the array.\n$_SERVER Information such as headers, paths, and script locations. The entries in this array are created by the web\nserver, and there is no guarantee that every web server will provide any or all of these.\n60 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 91,
    "text": "Superglobal name Contents\n$_GET Variables passed to the current script via the HTTP Get method.\n$_POST Variables passed to the current script via the HTTP Post method.\n$_FILES Items uploaded to the current script via the HTTP Post method.\n$_COOKIE Variables passed to the current script via HTTP cookies.\n$_SESSION Session variables available to the current script.\n$_REQUEST Contents of information passed from the browser; by default, $_GET , $_POST , and $_COOKIE .\n$_ENV Variables passed to the current script via the environment method.\nAll of the superglobals (except for $GLOBALS ) are named with a single initial under‐\nscore and only capital letters; therefore, you should avoid naming your own variables\nin this manner to avoid potential confusion.\nTo illustrate how you use them, let’s look at a bit of information that many sites\nemploy. Among the many nuggets of information supplied by superglobal variables is\nthe URL of the page that referred the user to the current web page. This referring\npage information can be accessed like this:\n$came_from = $_SERVER['HTTP_REFERER'];\nIt’s that simple. Oh, and if the user came straight to your web page, such as by typing\nits URL directly into a browser, $came_from  will be set to an empty string.\nSuperglobals and security\nA word of caution is in order before you start using superglobal variables, because\nthey are often used by hackers trying to find exploits to break into your website.\nWhat they do is load up $_POST , $_GET , or other superglobals with malicious code,\nsuch as Unix or MySQL commands that can damage or display sensitive data if you\nnaïvely access them.\nTherefore, you should always sanitize superglobals before using them. One way to do\nthis is via the PHP htmlentities  function. It converts all characters into HTML enti‐\nties. For example, less-than and greater-than characters ( < and >) are transformed\ninto the strings &lt;  and &gt;  so that they are rendered harmless, as are all quotes\nand backslashes, and so on.\nTherefore, here is a much better way to access $_SERVER  (and other superglobals) is:\n$came_from = htmlentities($_SERVER['HTTP_REFERER']);\nUsing the htmlentities  function  for sanitization is an important\npractice in any circumstance where user or other third-party data is\nbeing processed for output, not just with superglobals.\nThe Structure of PHP | 61"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 92,
    "text": "This chapter has provided you with a solid background in using PHP . In Chapter 4 ,\nwe’ll start using what you’ve learned to build expressions and control program flow—\nin other words, do some actual programming.\nBut before moving on, I recommend that you test yourself with some (if not all) of\nthe following questions to ensure that you have fully digested the  contents of this\nchapter.\nQuestions\n1.What tag is used to cause PHP to start interpreting program code? And what is\nthe short form of the tag?\n2.What are the two types of comment tags?\n3.Which character must be placed at the end of every PHP statement?\n4.Which symbol is used to preface all PHP variables?\n5.What can a variable store?\n6.What is the difference between $variable = 1  and $variable == 1 ?\n7.Why do you suppose that an underscore is allowed in variable names\n($current_user ), whereas hyphens are not ( $current-user )?\n8.Are variable names case-sensitive?\n9.Can you use spaces in variable names?\n10.How do you convert one variable type to another (say, a string to a number)?\n11.What is the difference between ++$j  and $j++ ?\n12.Are the operators && and and interchangeable?\n13.How can you create a multiline echo  or assignment?\n14.Can you redefine a constant?\n15.How do you escape a quotation mark?\n16.What is the difference between the echo  and print  commands?\n17.What is the purpose of functions?\n18.How can you make a variable accessible to all parts of a PHP program?\n19.If you generate data within a function, what are a couple of ways to convey the\ndata to the rest of the program?\n20.What is the result of combining a string with a number?\nSee Chapter 3 Answers  in Appendix A  for the answers to these questions.\n62 | Chapter 3: Introduction to PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 93,
    "text": "CHAPTER 4\nExpressions and Control Flow in PHP\nThe previous chapter  introduced several topics in passing that this chapter covers\nmore fully, such as making choices (branching) and creating complex expressions. In\nthe previous chapter, I wanted to focus on the most basic syntax and operations in\nPHP , but I couldn’t avoid touching on more-advanced topics. Now I can fill in the\nbackground that you need to use these powerful PHP features properly.\nIn this chapter, you will get a thorough grounding in how PHP programming works\nin practice and in how to control the flow of the program.\nExpressions\nLet’s start with the most fundamental part of any programming language: expressions .\nAn expression is a combination of values, variables, operators, and functions that\nresults in a value. It’s familiar to anyone who has taken high-school algebra:\ny = 3(abs(2 x) + 4)\nwhich in PHP would be\n$y = 3 * (abs(2 * $x) + 4);\nThe value returned ( y, or $y in this case) can be a number, a string, or a Boolean value\n(named after George Boole, a 19th-century English mathematician and philosopher).\nBy now, you should be familiar with the first two value types, but I’ll explain the\nthird.\nTRUE or FALSE?\nA basic Boolean value  can be either TRUE  or FALSE . For example, the expression 20 >\n9 (20 is greater than 9) is TRUE , and the expression 5 == 6  (5 is equal to 6) is FALSE .\n63"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 94,
    "text": "(Y ou can combine Boolean operations using operators such as AND, OR, and XOR,\nwhich are covered later in this chapter.)\nNote that I am using uppercase letters for the names TRUE  and\nFALSE . This is because they are predefined constants in PHP . Y ou\ncan also use the lowercase versions, if you prefer, as they are also\npredefined. In fact, the lowercase versions are more stable, because\nPHP does not allow you to redefine them; the uppercase ones may\nbe redefined—something you should bear in mind if you import\nthird-party code.\nExample 4-1  shows some simple expressions: the two I just mentioned, plus a couple\nmore. For each line, it prints out a letter between a and d, followed by a colon and the\nresult of the expressions. The <br>  tag is there to create a line break and thus separate\nthe output into four lines in HTML.\nNow that we are fully into the age of HTML5, and XHTML is no\nlonger being planned to supersede HTML, you do not need to use\nthe self-closing <br />  form of the <br>  tag, or any void elements\n(ones without closing tags), because the / is now optional. There‐\nfore, I have chosen to use the simpler style in this book. If you ever\nmade HTML nonvoid tags self-closing (such as <div /> ), they will\nnot work in HTML5 because the / will be ignored, and you will\nneed to replace them with (for example) <div> ...</div> . However,\nyou must still use the <br />  form of HTML syntax when using\nXHTML.\nExample 4-1. Four simple Boolean expressions\n<?php\n  echo \"a: [\" . (20 > 9) . \"]<br>\";\n  echo \"b: [\" . (5 == 6) . \"]<br>\";\n  echo \"c: [\" . (1 == 0) . \"]<br>\";\n  echo \"d: [\" . (1 == 1) . \"]<br>\";\n?>\nThe output from this code is as follows:\na: [1]\nb: []\nc: []\nd: [1]\nNotice that both expressions a: and d: evaluate to TRUE , which has a value of 1. But\nb: and c:, which evaluate to FALSE , do not show any value, because in PHP the\n64 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 95,
    "text": "constant  FALSE  is defined as NULL , or nothing. To verify this for yourself, you could\nenter the code in Example 4-2 .\nExample 4-2. Outputting the values of TRUE and FALSE\n<?php // test2.php\n  echo \"a: [\" . TRUE  . \"]<br>\";\n  echo \"b: [\" . FALSE . \"]<br>\";\n?>\nthat outputs the following:\na: [1]\nb: []\nBy the way, in some languages FALSE  may be defined as 0 or even –1, so it’s worth\nchecking on its definition in each language.\nLiterals and Variables\nThe simplest form of an expression is a literal , which simply  means something that\nevaluates to itself, such as the number 73 or the string \"Hello\" . An expression could\nalso simply be a variable, which evaluates to the value that has been assigned to it.\nThey are both types of expressions, because they return a value.\nExample 4-3  shows three literals and two variables, all of which return values, albeit\nof different types.\nExample 4-3. Literals and variables\n<?php\n  $myname = \"Brian\";\n  $myage  = 37;\n  echo \"a: \" . 73      . \"<br>\"; // Numeric literal\n  echo \"b: \" . \"Hello\" . \"<br>\"; // String literal\n  echo \"c: \" . FALSE   . \"<br>\"; // Constant literal\n  echo \"d: \" . $myname . \"<br>\"; // String variable\n  echo \"e: \" . $myage  . \"<br>\"; // Numeric variable\n?>\nAnd, as you’ d expect, you see a return value from all of these with the exception of c:,\nwhich evaluates to FALSE , returning nothing in the following output:\na: 73\nb: Hello\nc:\nd: Brian\ne: 37\nExpressions | 65"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 96,
    "text": "In conjunction with operators, it’s possible to create more-complex expressions that\nevaluate to useful results.\nWhen you combine assignment or control-flow constructs with expressions, the\nresult is a statement . Example 4-4  shows one of each. The first assigns the result of the\nexpression 366 - $day_number  to the variable $days_to_new_year , and the second\noutputs a friendly message only if the expression $days_to_new_year < 30  evaluates\nto TRUE .\nExample 4-4. An expression and a statement\n<?php\n  $days_to_new_year = 366 - $day_number; // Expression\n  if ($days_to_new_year < 30)\n  {\n     echo \"Not long now till new year\";  // Statement\n  }\n?>\nOperators\nPHP offers a lot of powerful operators that range from arithmetic, string, and logical\noperators to assignment, comparison, and more (see Table 4-1 ).\nTable 4-1. PHP operator types\nOperator Description Example\nArithmetic Basic mathematics $a + $b\nArray Array union $a + $b\nAssignment Assign values $a = $b + 23\nBitwise Manipulate bits within bytes 12 ^ 9\nComparison Compare two values $a < $b\nExecution Execute contents of back ticks `ls -al`\nIncrement/decrement Add or subtract 1 $a++\nLogical Boolean $a and $b\nString Concatenation $a . $b\nEach operator takes a different number of operands:\n•Unary  operators, such as incrementing ( $a++ ) or negation ( -$a), which take a\nsingle operand.\n66 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 97,
    "text": "•Binary  operators, which represent the bulk of PHP operators, including addition,\nsubtraction, multiplication, and division.\n•One ternary  operator, which takes the form ? x : y . It’s a terse, single-line if\nstatement that chooses between two expressions, depending on the result of a\nthird one.\nOperator Precedence\nIf all operators had the same precedence, they would be processed in the order in\nwhich they are encountered.  In fact, many  operators do have the same precedence, so\nlet’s look at a few in Example 4-5 .\nExample 4-5. Three  equivalent expressions\n1 + 2 + 3 - 4 + 5\n2 - 4 + 5 + 3 + 1\n5 + 2 - 4 + 1 + 3\nHere you will see that although the numbers (and their preceding operators) have\nbeen moved, the result of each expression is the value 7, because the plus and minus\noperators have the same precedence. We can try the same thing with multiplication \nand division (see Example 4-6 ).\nExample 4-6. Three  expressions that are also equivalent\n1 * 2 * 3 / 4 * 5\n2 / 4 * 5 * 3 * 1\n5 * 2 / 4 * 1 * 3\nHere the resulting value is always 7.5. But things change when we mix operators with\ndifferent  precedencies in an expression, as in Example 4-7 .\nExample 4-7. Three  expressions using operators of mixed precedence\n1 + 2 * 3 - 4 * 5\n2 - 4 * 5 * 3 + 1\n5 + 2 - 4 + 1 * 3\nIf there were no operator precedence, these three expressions would evaluate to 25, –\n29, and 12, respectively. But because multiplication and division take precedence over\naddition and subtraction, there are implied parentheses around these parts of the\nexpressions, which would look like Example 4-8  if they were visible.\nOperators | 67"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 98,
    "text": "Example 4-8. Three  expressions showing implied parentheses\n1 + (2 * 3) - (4 * 5)\n2 - (4 * 5 * 3) + 1\n5 + 2 - 4 + (1 * 3)\nClearly, PHP must evaluate the subexpressions within parentheses first to derive the\nsemi-completed expressions in Example 4-9 .\nExample 4-9. After  evaluating the subexpressions in parentheses\n1 + (6) - (20)\n2 - (60) + 1\n5 + 2 - 4 + (3)\nThe final results of these expressions are –13, –57, and 6, respectively (quite different\nfrom the results of 25, –29, and 12 that we would have seen had there been no opera‐\ntor precedence).\nOf course, you can override the default operator precedence by inserting your own\nparentheses and forcing the original results that we would have seen had there been\nno operator precedence (see Example 4-10 ).\nExample 4-10. Forcing left-to-right  evaluation\n((1 + 2) * 3 - 4) * 5\n(2 - 4) * 5 * 3 + 1\n(5 + 2 - 4 + 1) * 3\nWith parentheses correctly inserted, we now see the values 25, –29, and 12, respec‐\ntively.\nTable 4-2  lists PHP’s operators in order of prece dence from high to low.\nTable 4-2. The precedence of PHP operators (high to low)\nOperator(s) Type\n() Parentheses\n++ -- Increment/decrement\n! Logical\n* / % Arithmetic\n+ - . Arithmetic and string\n<< >> Bitwise\n< <= > >= <> Comparison\n== != === !== Comparison\n68 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 99,
    "text": "Operator(s) Type\n& Bitwise (and references)\n^ Bitwise\n| Bitwise\n&& Logical\n|| Logical\n? : Ternary\n= += -= *= /= .= %= &= != ^= <<= >>= Assignment\nand Logical\nxor Logical\nor Logical\nAssociativity\nWe’ve been looking at processing expressions from left to right, except where opera‐\ntor precedence is in effect. But some operators require processing from right to left,\nand this direction of processing is called the operator’s associativity . For some opera‐\ntors, there is no associativity.\nAssociativity becomes important in cases in which you do not explicitly force prece‐\ndence, so you need to be aware of the default actions of operators, as detailed in\nTable 4-3 , which lists operators and their associativity.\nTable 4-3. Operator associativity\nOperator Description Associativity\nCLONE NEW Create a new object None\n< <= >= == != === !== <> Comparison None\n! Logical NOT Right\n~ Bitwise NOT Right\n++ -- Increment and decrement Right\n(int) Cast to an integer Right\n(double) (float) (real) Cast to a floating-point  number Right\n(string) Cast to a string Right\n(array) Cast to an array Right\n(object) Cast to an object Right\n@ Inhibit error reporting Right\n= += -= *= /= Assignment Right\n.= %= &= |= ^= <<= >>= Assignment Right\n+ Addition and unary plus Left\nOperators | 69"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 100,
    "text": "Operator Description Associativity\n- Subtraction and negation Left\n* Multiplication Left\n/ Division Left\n% Modulus Left\n. String concatenation Left\n<< >> & ^ | Bitwise Left\n?: Ternary Left\n|| && and or xor Logical Left\n, Separator Left\nFor example, let’s take a look at the assignment operator in Example 4-11 , where three\nvariables are all set to the value 0.\nExample 4-11. A multiple-assignment statement\n<?php\n  $level = $score = $time = 0;\n?>\nThis multiple assignment is possible only if the rightmost part of the expression is\nevaluated first, and then processing continues in a right-to-left direction.\nAs a beginner to PHP , you should avoid the potential pitfalls of\noperator associativity by always nesting your subexpressions within\nparentheses to force the order of evaluation. This will also help\nother programmers who may have to maintain your code to under‐\nstand what is happening.\nRelational Operators\nRelational operators test two operands and return a Boolean result of either TRUE  or\nFALSE . There are three types of relational operators: equality , comparison , and logical .\nEquality\nAs we’ve already encountered a few times in this chapter, the equality operator is ==\n(two equals signs). It is important not to confuse it with the = (single equals sign)\nassignment operator. In Example 4-12 , the first statement assigns a value and the sec‐\nond tests it for equality.\n70 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 101,
    "text": "Example 4-12. Assigning a value and testing for equality\n<?php\n  $month = \"March\";\n  if ($month == \"March\") echo \"It's springtime\";\n?>\nAs you see, by returning either TRUE  or FALSE , the equality operator enables you to\ntest for conditions using, for example, an if statement. But that’s not the whole story,\nbecause PHP is a loosely typed language. If the two operands of an equality expres‐\nsion are of different types, PHP will convert them to whatever type makes the best\nsense to it.\nFor example, any strings composed entirely of numbers will be converted to numbers\nwhenever compared with a number.  In Example 4-13 , $a and $b are two different\nstrings, and we would therefore expect neither of the if statements to output a result.\nExample 4-13. The equality and identity operators\n<?php\n  $a = \"1000\";\n  $b = \"+1000\";\n  if ($a == $b)  echo \"1\";\n  if ($a === $b) echo \"2\";\n?>\nHowever, if you run the example, you will see that it outputs the number 1, which\nmeans that the first if statement evaluated to TRUE . This is because both strings were\nfirst converted to numbers, and 1000  is the same numerical value as +1000 .\nIn contrast, the second if statement uses the identity  operator—three equals signs in\na row—which prevents PHP from automatically converting types. $a and $b are\ntherefore compared as strings and are found to be different, so nothing is output.\nAs with forcing operator precedence, whenever you have any doubt about how PHP\nwill convert operand types, you can use the identity operator to turn this behavior off.\nIn the same way that you can use the equality operator to test for operands being\nequal, you can test for them not being equal using !=, the inequality operator. Take a\nlook  at Example 4-14 , which is a rewrite of Example 4-13 , in which the equality and\nidentity operators have been replaced with their inverses.\nOperators | 71"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 102,
    "text": "Example 4-14. The inequality and not-identical operators\n<?php\n  $a = \"1000\";\n  $b = \"+1000\";\n  if ($a != $b)  echo \"1\";\n  if ($a !== $b) echo \"2\";\n?>\nAnd, as you might expect, the first if statement does not output the number 1,\nbecause the code is asking whether $a and $b are not equal to each other numerically.\nInstead, it outputs the number 2, because the second if statement is asking whether\n$a and $b are not identical to each other in their present operand types, and the\nanswer is TRUE ; they are not the same.\nComparison operators\nUsing comparison operators, you can test for more than just equality and inequality.\nPHP also gives you > (is greater than), < (is less than), >= (is greater than or equal to),\nand <= (is less than or equal to) to play with. Example 4-15  shows these in use.\nExample 4-15. The four comparison operators\n<?php\n  $a = 2; $b = 3;\n  if ($a > $b)  echo \"$a is greater than $b<br>\";\n  if ($a < $b)  echo \"$a is less than $b<br>\";\n  if ($a >= $b) echo \"$a is greater than or equal to $b<br>\";\n  if ($a <= $b) echo \"$a is less than or equal to $b<br>\";\n?>\nIn this example, where $a is 2 and $b is 3, the following is output:\n2 is less than 3\n2 is less than or equal to 3\nTry this example yourself, altering the values of $a and $b, to see the results. Try set‐\nting them to the same value and see what happens.\nLogical operators\nLogical operators produce true-or-false results, and therefore are also known as\nBoolean operators . There are four of them (see Table 4-4 ).\n72 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 103,
    "text": "Table 4-4. The logical operators\nLogical operator Description\nAND TRUE  if both operands are TRUE\nOR TRUE  if either operand is TRUE\nXOR TRUE  if one of the two operands is TRUE\nNOT TRUE  if the operand is FALSE , or FALSE  if the operand is TRUE\nY ou can see these operators used in Example 4-16 . Note that the ! symbol is required\nby PHP in place of NOT. Furthermore, the operators can be lower- or uppercase.\nExample 4-16. The logical operators in use\n<?php\n  $a = 1; $b = 0;\n  echo ($a AND $b) . \"<br>\";\n  echo ($a or $b)  . \"<br>\";\n  echo ($a XOR $b) . \"<br>\";\n  echo !$a         . \"<br>\";\n?>\nThis example outputs NULL , 1, 1, NULL , meaning that only the second and third echo\nstatements evaluate as TRUE . (Remember that NULL —or nothing—represents a value\nof FALSE .) This is because the AND statement requires both operands to be TRUE  if it is\ngoing to return a value of TRUE , while the fourth statement performs a NOT on the\nvalue of $a, turning it from TRUE  (a value of 1) to FALSE . If you wish to experiment\nwith this, try out the code, giving $a and $b varying values of 1 and 0.\nWhen coding, remember that AND and OR have lower precedence \nthan the other  versions of the operators, && and ||. In complex\nexpressions, it may be safer to use && and || for this reason.\nThe OR operator can cause unintentional problems in if statements, because the sec‐\nond operand will not be evaluated if the first is evaluated as TRUE . In Example 4-17 ,\nthe function getnext  will never be called if $finished  has a value of 1.\nExample 4-17. A statement using the OR operator\n<?php\n  if ($finished == 1 OR getnext() == 1) exit;\n?>\nOperators | 73"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 104,
    "text": "If you need getnext  to be called at each if statement, you could rewrite the code as\nhas been done in Example 4-18 .\nExample 4-18. The “if...OR” statement modified  to ensure calling of getnext\n<?php\n  $gn = getnext();\n  if ($finished == 1 OR $gn == 1) exit;\n?>\nIn this case, the code in function getnext  will be executed and the value returned\nstored in $gn before the if statement.\nAnother solution is to switch the two clauses to make sure that get\nnext  is executed, as it will then appear first in the expression.\nTable 4-5  shows all the possible variations of using the logical operators. Y ou should\nalso note that !TRUE  equals FALSE , and !FALSE  equals TRUE .\nTable 4-5. All possible PHP logical expressions\nInputs Operators and results    \na b AND OR XOR\nTRUETRUE TRUETRUEFALSE\nTRUEFALSE FALSETRUETRUE\nFALSETRUE FALSETRUETRUE\nFALSEFALSE FALSEFALSEFALSE\nConditionals\nConditionals  alter  program flow. They enable you to ask questions about certain\nthings and respond to the answers you get in different ways. Conditionals are central\nto dynamic web pages—the goal of using PHP in the first place—because they make\nit easy to create different output each time a page is viewed.\nThere are three types of nonlooping conditionals: the if statement, the switch  state‐\nment, and the ? operator. By nonlooping , I mean that the actions initiated by the state‐\nment take place and program flow then moves on, whereas looping conditionals\n(which we’ll get to shortly) execute code over and over until a condition is met.\n74 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 105,
    "text": "The if Statement\nOne way of thinking about program flow is to imagine it as a single-lane highway that\nyou are driving along. It’s pretty much a straight line, but now and then you\nencounter various signs telling you where to go.\nIn the case of an if statement, you could imagine coming across a detour sign that\nyou have to follow if a certain condition is TRUE . If so, you drive off and follow the\ndetour until you return to where it started and then continue on your way in your\noriginal direction. Or, if the condition isn’t TRUE , you ignore the detour and carry on\ndriving (see Figure 4-1 ).\nFigure 4-1. Program flow is like a single-lane highway\nThe contents of the if condition can be any valid PHP expression, including equality,\ncomparison, tests for 0 and NULL , and even the values returned by functions (either\nbuilt-in functions or ones that you write).\nThe actions to take when an if condition is TRUE  are generally placed inside curly\nbraces, { }. However, you can ignore the braces if you have only a single statement to\nexecute. But if you always use curly braces, you’ll avoid having to hunt down difficult-\nto-trace bugs, such as when you add an extra line to a condition and it doesn’t get\nevaluated due to lack of braces. (Note that for space and clarity, many of the examples\nin this book ignore this suggestion and omit the braces for single statements.)\nIn Example 4-19 , imagine that it is the end of the month and all your bills have been\npaid, so you are performing some bank account maintenance.\nConditionals | 75"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 106,
    "text": "Example 4-19. An if statement with curly braces\n<?php\n  if ($bank_balance < 100)\n  {\n    $money         = 1000;\n    $bank_balance += $money;\n  }\n?>\nIn this example, you are checking your balance to see whether it is less than 100 dol‐\nlars (or whatever your currency is). If so, you pay yourself 1,000 dollars and then add\nit to the balance. (If only making money were that simple!)\nIf the bank balance is 100 dollars or greater, the conditional statements are ignored\nand program flow skips to the next line (not shown).\nIn this book, opening curly braces generally start on a new line. Some people like to\nplace the first curly brace to the right of the conditional expression; others start a new\nline with it. Either of these is fine, because PHP allows you to set out your whitespace\ncharacters (spaces, newlines, and tabs) any way you choose. However, you will find\nyour code easier to read and debug if you indent each level of conditionals with a tab.\nThe else Statement\nSometimes when a conditional is not TRUE , you may not want to continue on to the\nmain program code immediately but might wish to do something else instead. This is\nwhere the else  statement comes in. With it, you can set up a second detour on your\nhighway, as in Figure 4-2 .\nWith an if...else  statement, the first conditional statement is executed if the condi‐\ntion is TRUE . But if it’s FALSE , the second one is executed. One of the two choices must\nbe executed. Under no circumstance can both (or neither) be executed. Example 4-20\nshows the use of the if...else  structure.\n76 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 107,
    "text": "Figure 4-2. The highway now has an if detour and an else detour\nExample 4-20. An if...else statement with curly braces\n<?php\n  if ($bank_balance < 100)\n  {\n    $money         = 1000;\n    $bank_balance += $money;\n  }\n  else\n  {\n    $savings      += 50;\n    $bank_balance -= 50;\n  }\n?>\nIn this example, now that you’ve ascertained that you have $100 or more in the bank,\nthe else  statement is executed, by which you place some of this money into your sav‐\nings account.\nConditionals | 77"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 108,
    "text": "As with if statements, if your else  has only one conditional statement, you can opt\nto leave out the curly braces. (Curly braces are always recommended, though. First,\nthey make the code easier to understand. Second, they let you easily add more state‐\nments to the branch later.)\nThe elseif Statement\nThere are also times when you want a number of different possibilities to occur, based\nupon a sequence of conditions. Y ou can achieve this using the elseif  statement. As\nyou might imagine, it is like an else  statement, except that you place a further condi‐\ntional expression prior to the conditional code. In Example 4-21 , you can see a com‐\nplete if...elseif...else  construct.\nExample 4-21. An if...elseif...else statement with curly braces\n<?php\n  if ($bank_balance < 100)\n  {\n    $money         = 1000;\n    $bank_balance += $money;\n  }\n  elseif ($bank_balance > 200)\n  {\n    $savings      += 100;\n    $bank_balance -= 100;\n  }\n  else\n  {\n    $savings      += 50;\n    $bank_balance -= 50;\n  }\n?>\nIn the example, an elseif  statement has been inserted between the if and else  state‐\nments. It checks whether your bank balance exceeds $200 and, if so, decides that you\ncan afford to save $100 of it this month.\nAlthough I’m starting to stretch the metaphor a bit too far, you can imagine this as a\nmultiway set of detours (see Figure 4-3 ).\n78 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 109,
    "text": "Figure 4-3. The highway with if, elseif, and else detours\nAn else  statement closes either an if...else  or an\nif...elseif...else  statement. Y ou can leave out a final else  if it\nis not required, but you cannot have one before an elseif ; neither\ncan you have an elseif  before an if statement.\nY ou may have as many elseif  statements as you like. But as the number of elseif\nstatements increases, you would probably be better advised to consider a switch\nstatement if it fits your needs. We’ll look at that next.\nThe switch Statement\nThe switch  statement is useful in cases in which one variable or the result of an\nexpression can have multiple values, which should each trigger a different function.\nFor example, consider a PHP-driven menu system that passes a single string to the\nmain menu code according to what the user requests. Let’s say the options are Home,\nConditionals | 79"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 110,
    "text": "About, News, Login, and Links, and we set the variable $page  to one of these, accord‐\ning to the user’s input.\nIf we write the code for this using if...elseif...else , it might look like\nExample 4-22 .\nExample 4-22. A multiple-line if...elseif...statement\n<?php\n  if     ($page == \"Home\")  echo \"You selected Home\";\n  elseif ($page == \"About\") echo \"You selected About\";\n  elseif ($page == \"News\")  echo \"You selected News\";\n  elseif ($page == \"Login\") echo \"You selected Login\";\n  elseif ($page == \"Links\") echo \"You selected Links\";\n?>\nIf we use a switch  statement, the code might look like Example 4-23 .\nExample 4-23. A switch statement\n<?php\n  switch ($page)\n  {\n    case \"Home\":\n        echo \"You selected Home\";\n        break;\n    case \"About\":\n        echo \"You selected About\";\n        break;\n    case \"News\":\n        echo \"You selected News\";\n        break;\n    case \"Login\":\n        echo \"You selected Login\";\n        break;\n    case \"Links\":\n        echo \"You selected Links\";\n        break;\n  }\n?>\nAs you can see, $page  is mentioned only once at the start of the switch  statement.\nThereafter, the case  command  checks for matches. When one occurs, the matching\nconditional statement is executed. Of course, in a real program you would have code\nhere to display or jump to a page, rather than simply telling the user what was\nselected.\n80 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 111,
    "text": "With switch  statements, you do not use curly braces inside case\ncommands.  Instead, they commence with a colon and end with\nthe break  statement. The entire list of cases in the switch  state‐\nment is enclosed in a set of curly braces, though.\nBreaking out\nIf you wish to break out of the switch  statement  because a condition has been fulfil‐\nled, use the break  command.  This command tells PHP to break out of the switch\nand jump to the following statement.\nIf you were to leave out the break  commands in Example 4-23  and the case  of Home\nevaluated to be TRUE , all five cases would then be executed. Or if $page  had the value\nNews , all the case  commands from then on would execute. This is deliberate and\nallows for some advanced programming, but generally you should always remember\nto issue a break  command every time a set of case  conditionals has finished execut‐\ning. In fact, leaving out the break  statement is a common error.\nDefault action\nA typical requirement in switch  statements is to fall back on a default action if none\nof the case  conditions  are met. For example, in the case of the menu code in\nExample 4-23 , you could add the code in Example 4-24  immediately before the final\ncurly brace.\nExample 4-24. A default statement to add to Example 4-23\ndefault:\n    echo \"Unrecognized selection\";\n    break;\nAlthough a break  command is not required here because the default is the final sub-\nstatement, and program flow will automatically continue to the closing curly brace,\nshould you decide to place the default  statement higher up, it would definitely need\na break  command to prevent program flow from dropping into the following state‐\nments. Generally, the safest practice is to always include the break  command.\nAlternative syntax\nIf you prefer, you may  replace the first curly brace in a switch  statement with a single\ncolon, and the final curly brace with an endswitch  command, as in Example 4-25 .\nHowever, this approach is not commonly used and is mentioned here only in case\nyou encounter it in third-party code.\nConditionals | 81"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 112,
    "text": "Example 4-25. Alternate switch statement syntax\n<?php\n  switch ($page):\n    case \"Home\":\n        echo \"You selected Home\";\n        break;\n    // etc...\n    case \"Links\":\n        echo \"You selected Links\";\n        break;\n  endswitch;\n?>\nThe ? Operator\nOne way of  avoiding the verbosity of if and else  statements is to use the more com‐\npact ternary operator, ?, which is unusual in that it takes three operands rather than\nthe typical two.\nWe briefly came across this in Chapter 3  in the discussion about the difference\nbetween the print  and echo  statements as an example of an operator type that works\nwell with print  but not echo .\nThe ? operator is passed an expression that it must evaluate, along with two state‐\nments to execute: one for when the expression evaluates to TRUE , the other for when it\nis FALSE . Example 4-26  shows code we might use for writing a warning about the fuel\nlevel of a car to its digital dashboard.\nExample 4-26. Using the ? operator\n<?php\n  echo $fuel <= 1 ? \"Fill tank now\" : \"There's enough fuel\";\n?>\nIn this statement, if there is one gallon or less of fuel (in other words, $fuel  is set to 1\nor less), the string Fill tank now  is returned to the preceding echo  statement.\nOtherwise, the string There's enough fuel  is returned. Y ou can also assign the value\nreturned in a ? statement to a variable (see Example 4-27 ).\nExample 4-27. Assigning a ? conditional result to a variable\n<?php\n  $enough = $fuel <= 1 ? FALSE : TRUE;\n?>\n82 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 113,
    "text": "Here $enough  will be assigned the value TRUE  only when there is more than a gallon\nof fuel; otherwise, it is assigned the value FALSE .\nIf you find the ? operator confusing, you are free to stick to if statements, but you\nshould be familiar with it, because you’ll see it in other people’s code. It can be hard to\nread, because it often mixes multiple occurrences of the same variable. For instance,\ncode such as the following is quite popular:\n$saved = $saved >= $new ? $saved : $new;\nIf you take it apart carefully, you can figure out what this code does:\n$saved =                // Set the value of $saved to...\n        $saved >= $new  // Check $saved against $new\n    ?                   // Yes, comparison is true ...\n        $saved          // ... so assign the current value of $saved\n    :                   // No, comparison is false ...\n        $new;           // ... so assign the value of $new\nIt’s a concise way to keep track of the largest value that you’ve seen as a program pro‐\ngresses. Y ou save the largest value in $saved  and compare it to $new  each time you get\na new value. Programmers familiar with the ? operator find it more convenient than\nif statements for such short comparisons. When not used for writing compact code,\nit is typically used to make some decision inline, such as when you are testing\nwhether a variable is set before passing it to a function.\nLooping\nOne of the great things about computers is that they can repeat calculating tasks\nquickly and tirelessly. Often you may want a program to repeat the same sequence of\ncode again and again until something happens, such as a user inputting a value or\nreaching a natural end. PHP’s loop structures provide the perfect way to do this.\nTo picture how this works, look at Figure 4-4 . It is much the same as the highway\nmetaphor used to illustrate if statements, except the detour also has a loop section\nthat—once a vehicle has entered—can be exited only under the right program\nconditions.\nLooping | 83"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 114,
    "text": "Figure 4-4. Imagining a loop as part of a program highway layout\nwhile Loops\nLet’s turn the digital car dashboard in Example 4-26  into a loop that continuously\nchecks the fuel level as you drive, using a while  loop ( Example 4-28 ).\nExample 4-28. A while loop\n<?php\n  $fuel = 10;\n  while ($fuel > 1)\n  {\n    // Keep driving ...\n    echo \"There's enough fuel\";\n  }\n?>\nActually, you might prefer to keep a green light lit rather than output text, but the\npoint is that whatever positive indication you wish to make about the level of fuel is\nplaced inside the while  loop. By the way, if you try this example for yourself, note\nthat it will keep printing the string until you click the Stop button in your browser.\nAs with if statements, you will notice that curly braces are\nrequired to hold the statements inside the while  statements, unless\nthere’s only one.\nFor another example of a while  loop that displays the 12 times table, see\nExample 4-29 .\n84 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 115,
    "text": "Example 4-29. A while loop to print the 12 times table\n<?php\n  $count = 1;\n  while ($count <= 12)\n  {\n    echo \"$count times 12 is \" . $count * 12 . \"<br>\";\n    ++$count;\n  }\n?>\nHere the variable $count  is initialized to a value of 1, and then a while  loop is started\nwith the comparative expression $count <= 12 . This loop will continue executing\nuntil the variable is greater than 12. The output from this code is as follows:\n1 times 12 is 12\n2 times 12 is 24\n3 times 12 is 36\nand so on...\nInside the loop, a string is printed along with the value of $count  multiplied by 12.\nFor neatness, this is followed with a <br>  tag to force a new line. Then $count  is\nincremented, ready for the final curly brace that tells PHP to return to the start of the\nloop.\nAt this point, $count  is again tested to see whether it is greater than 12. It isn’t, but it\nnow has the value 2, and after another 11 times around the loop, it will have the value\n13. When that happens, the code within the while  loop is skipped and execution\npasses to the code following the loop, which, in this case, is the end of the program.\nIf the ++$count  statement (which could equally have been $count++ ) had not been\nthere, this loop would be like the first one in this section. It would never end, and\nonly the result of 1 * 12  would be printed over and over.\nBut there is a much neater way this loop can be written, which I think you will like.\nTake a look at Example 4-30 .\nExample 4-30. A shortened version of Example 4-29\n<?php\n  $count = 0;\n  while (++$count <= 12)\n    echo \"$count times 12 is \" . $count * 12 . \"<br>\";\n?>\nIn this example, it was possible to remove the ++$count  statement from inside the\nwhile  loop and place it directly into the conditional expression of the loop. What\nLooping | 85"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 116,
    "text": "now happens is that PHP encounters the variable $count  at the start of each iteration\nof the loop and, noticing that it is prefaced with the increment operator, first incre‐\nments the variable and only then compares it to the value 12. Y ou can therefore see\nthat $count  now has to be initialized to 0, not 1, because it is incremented as soon as\nthe loop is entered. If you keep the initialization at 1, only results between 2 and 12\nwill be output.\ndo...while Loops\nA slight variation to the while  loop is the do...while  loop, used when you want a\nblock of code to be executed at least once and made conditional only after that.\nExample 4-31  shows a modified version of the code for the 12 times table that uses\nsuch a loop.\nExample 4-31. A do...while loop for printing the times table for 12\n<?php\n  $count = 1;\n  do\n    echo \"$count times 12 is \" . $count * 12 . \"<br>\";\n  while (++$count <= 12);\n?>\nNotice how we are back to initializing $count  to 1 (rather than 0) because the code is\nbeing executed immediately, without an opportunity to increment the variable. Other\nthan that, though, the code looks pretty similar.\nOf course, if you have more than a single statement inside a do...while  loop,\nremember to use curly braces, as in Example 4-32 .\nExample 4-32. Expanding Example 4-31  to use curly braces\n<?php\n  $count = 1;\n  do {\n    echo \"$count times 12 is \" . $count * 12;\n    echo \"<br>\";\n  } while (++$count <= 12);\n?>\nfor Loops\nThe final kind of loop statement, the for loop, is also the most powerful, as it com‐\nbines the abilities to set up variables as you enter the loop, test for conditions while\niterating loops, and modify variables after each iteration.\n86 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 117,
    "text": "Example 4-33  shows how to write the multiplication table program with a for loop.\nExample 4-33. Outputting the times table for 12 from a for loop\n<?php\n  for ($count = 1 ; $count <= 12 ; ++$count)\n    echo \"$count times 12 is \" . $count * 12 . \"<br>\";\n?>\nSee how the code has been reduced to a single for statement containing a single con‐\nditional statement? Here’s what is going on. Each for statement takes three parame‐\nters:\n•An initialization expression\n•A condition expression\n•A modification expression\nThese are separated by semicolons like this: for (expr1  ; expr2  ; expr3). At the\nstart of the first iteration of the loop, the initialization expression is executed. In the\ncase of the times table code, $count  is initialized to the value 1. Then, each time\naround the loop, the condition expression (in this case, $count <= 12 ) is tested, and\nthe loop is entered only if the condition is TRUE . Finally, at the end of each iteration,\nthe modification expression is executed. In the case of the times table code, the vari‐\nable $count  is incremented.\nAll this structure neatly removes any requirement to place the controls for a loop\nwithin its body, freeing it up just for the statements you want the loop to perform.\nRemember to use curly braces with a for loop if it will contain more than one state‐\nment, as in Example 4-34 .\nExample 4-34. The for loop from Example 4-33  with added curly braces\n<?php\n  for ($count = 1 ; $count <= 12 ; ++$count)\n  {\n    echo \"$count times 12 is \" . $count * 12;\n    echo \"<br>\";\n  }\n?>\nLet’s compare when to use for and while  loops. The for loop is explicitly designed\naround a single value that changes on a regular basis. Usually you have a value that\nincrements, as when you are passed a list of user choices and want to process each\nchoice in turn. But you can transform the variable any way you like. A more complex\nLooping | 87"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 118,
    "text": "form of the for statement even lets you perform multiple operations in each of the\nthree parameters:\nfor ($i = 1, $j = 1 ; $i + $j < 10 ; $i++ , $j++)\n{\n  // ...\n}\nThat’s complicated and not recommended for first-time users. The key is to distin‐\nguish commas from semicolons. The three parameters must be separated by semico‐\nlons. Within each parameter, multiple statements can be separated by commas. Thus,\nin the previous example, the first and third parameters each contain two statements:\n$i = 1, $j = 1  // Initialize $i and $j\n$i + $j < 10    // Terminating condition\n$i++ , $j++     // Modify $i and $j at the end of each iteration\nThe main thing to take from this example is that you must separate the three parame‐\nter sections with semicolons, not commas (which should be used only to separate\nstatements within a parameter section).\nSo, when is a while  statement more appropriate than a for statement? When your\ncondition doesn’t depend on a simple, regular change to a variable. For instance, if\nyou want to check for some special input or error and end the loop when it occurs,\nuse a while  statement.\nBreaking Out of a Loop\nJust as you saw how to break out of a switch  statement, you can also break out of a\nfor loop using the same break  command.  This step can be necessary when, for\nexample, one of your statements returns an error and the loop cannot continue exe‐\ncuting safely.\nOne case in which this might occur is when writing a file returns an error, possibly\nbecause the disk is full (see Example 4-35 ).\nExample 4-35. Writing a file using a for loop with error trapping\n<?php\n  $fp = fopen(\"text.txt\", 'wb');\n  for ($j = 0 ; $j < 100 ; ++$j)\n  {\n    $written = fwrite($fp, \"data\");\n    if ($written == FALSE) break;\n  }\n88 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 119,
    "text": "fclose($fp);\n?>\nThis is the most complicated piece of code that you have seen so far, but you’re ready\nfor it. We’ll look into the file-handling commands in a later chapter, but for now all\nyou need to know is that the first line opens the file text.txt  for writing in binary\nmode, and then returns a pointer to the file in the variable $fp, which is used later to\nrefer to the open file.\nThe loop then iterates 100 times (from 0 to 99), writing the string data  to the file.\nAfter each write, the variable $written  is assigned a value by the fwrite  function\nrepresenting the number of characters correctly written. But if there is an error, the\nfwrite  function assigns the value FALSE .\nThe behavior of fwrite  makes it easy for the code to check the variable $written  to\nsee whether it is set to FALSE  and, if so, to break out of the loop to the following state‐\nment closing the file.\nIf you are looking to improve the code, the line\nif ($written == FALSE) break;\ncan be simplified using the NOT operator, like this:\nif (!$written) break;\nIn fact, the pair of inner loop statements can be shortened to a single statement:\nif (!fwrite($fp, \"data\")) break;\nThe break  command is even more powerful than you might think, because if you\nhave code nested more than one layer deep that you need to break out of, you can\nfollow the break  command with a number to indicate how many levels to break out\nof:\nbreak 2;\nThe continue Statement\nThe continue  statement is a little like a break  statement, except that it instructs PHP\nto stop processing the current loop and to move right to its next iteration. So, instead\nof breaking out of the whole loop, PHP exits only the current iteration.\nThis approach can be useful in cases where you know there is no point continuing\nexecution within the current loop and you want to save processor cycles or prevent\nan error from occurring by moving right along to the next iteration of the loop. In\nExample 4-36 , a continue  statement is used to prevent a division-by-zero error from\nbeing issued when the variable $j has a value of 0.\nLooping | 89"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 120,
    "text": "Example 4-36. Trapping division-by-zero errors using continue\n<?php\n  $j = 10;\n  while ($j > -10)\n  {\n    $j--;\n    if ($j == 0) continue;\n    echo (10 / $j) . \"<br>\";\n  }\n?>\nFor all values of $j between 10 and –10, with the exception of 0, the result of calculat‐\ning 10 divided by $j is displayed. But for the case of $j being 0, the statement con\ntinue  is issued and execution skips immediately to the next iteration of the loop.\nImplicit and Explicit Casting\nPHP is a loosely typed language that allows you to  declare a variable and its type sim‐\nply by using it. It also automatically converts values from one type to another when‐\never required. This is called implicit casting .\nHowever, at times PHP’s implicit casting may not be what you want. In Example 4-37 ,\nnote that the inputs to the division are integers. By default, PHP converts the output\nto floating point so it can give the most precise value—4.66 recurring.\nExample 4-37. This expression returns a floating-point  number\n<?php\n  $a = 56;\n  $b = 12;\n  $c = $a / $b;\n  echo $c;\n?>\nBut what if we had wanted $c to be an integer instead? There are various ways in\nwhich we could achieve this, one of which is to force the result of $a/$b to be cast to\nan integer value using the integer cast type (int) , like this:\n$c = (int) ($a / $b);\nThis is called explicit  casting.  Note that in order to ensure that the value of the entire\nexpression is cast to an integer, we place the expression within parentheses.\n90 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 121,
    "text": "Otherwise,  only the variable $a would have been cast to an integer—a pointless exer‐\ncise, as the division by $b would still have returned a floating-point number.\nY ou can explicitly cast to the types shown in Table 4-6 , but you can\nusually avoid having to use a cast by calling one of PHP’s built-in\nfunctions. For example, to obtain an integer value, you could use\nthe intval  function. As with some other sections in this book, this\none is mainly here to help you understand third-party code that\nyou may encounter.\nTable 4-6. PHP’s cast types\nCast type Description\n(int) (integer) Cast to an integer by dropping the decimal portion\n(bool) (boolean) Cast to a Boolean\n(float) (double) (real) Cast to a floating-point  number\n(string) Cast to a string\n(array) Cast to an array\n(object) Cast to an object\nPHP Dynamic Linking\nBecause PHP is a programming language, and the output from it can be completely\ndifferent for each user, it’s possible for an entire website to run from a single PHP web\npage. Each time the user clicks on something, the details can be sent back to the same\nweb page, which decides what to do next according to the various cookies and/or\nother session details it may have stored.\nBut although it is possible to build an entire website this way, it’s not recommended,\nbecause your source code will grow and grow and start to become unwieldy, as it has\nto account for every possible action a user could take.\nInstead, it’s much more sensible to split your website development into different\nparts. For example, one distinct process is signing up for a website, along with all the\nchecking this entails to validate an email address, determine whether a username is\nalready taken, and so on.\nA second module might well be one for logging users in before handing them off to\nthe main part of your website. Then you might have a messaging module with the\nfacility for users to leave comments, a module containing links and useful informa‐\ntion, another to allow uploading of images, and more.\nAs long as you have created a way to track your user through your website by means\nof cookies or session variables (both of which we’ll look at more closely in later\nPHP Dynamic Linking | 91"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 122,
    "text": "chapters ), you can split up your website into sensible sections of PHP code, each one\nself-contained, and therefore treat yourself to a much easier future, developing each\nnew feature and maintaining old ones.\nDynamic Linking in Action\nOne of the more popular PHP-driven applications on the Web today is the blogging\nplatform WordPress (see Figure 4-5 ). As a blogger or a blog reader, you might not\nrealize it, but every major section has been given its own main PHP file, and a whole\nraft of generic, shared functions have been placed in separate files that are included\nby the main PHP pages as necessary.\nFigure 4-5. The WordPress blogging platform is written in PHP\nThe whole platform is held together with behind-the-scenes session tracking, so that\nyou hardly know when you are transitioning from one subsection to another. So, as a\nweb developer, if you want to tweak WordPress, it’s easy to find the particular file you\nneed, modify it, and test and debug it without messing around with unconnected\nparts of the program. Next time you use WordPress, keep an eye on your browser’s\naddress bar, particularly if you are managing a blog, and you’ll notice some of the dif‐\nferent PHP files that it uses.\n92 | Chapter 4: Expressions and Control Flow in PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 123,
    "text": "This chapter has covered quite a lot of ground, and by now you should be able to put\ntogether your own small PHP programs. But before you do, and before proceeding\nwith the following chapter on functions and objects, you may wish to test your new\nknowledge on the following questions. \nQuestions\n1.What actual underlying values are represented by TRUE  and FALSE ?\n2.What are the simplest two forms of expressions?\n3.What is the difference between unary, binary, and ternary operators?\n4.What is the best way to force your own operator precedence?\n5.What is meant by operator associativity ?\n6.When would you use the === (identity) operator?\n7.Name the three conditional statement types.\n8.What command can you use to skip the current iteration of a loop and move on\nto the next one?\n9.Why is a for loop more powerful than a while  loop?\n10.How do if and while  statements interpret conditional expressions of different\ndata types?\nSee Chapter 4 Answers  in Appendix A  for the answers to these questions.\nQuestions | 93"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 124,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 125,
    "text": "CHAPTER 5\nPHP Functions and Objects\nThe basic requirements of any programming language include somewhere to store\ndata, a means of directing program flow, and a few bits and pieces such as expression\nevaluation, file management, and text output. PHP has all these, plus tools like else\nand elseif  to make life easier. But even with all these in our toolkit, programming\ncan be clumsy and tedious, especially if you have to rewrite portions of very similar\ncode each time you need them.\nThat’s where functions and objects come in. As you might guess, a function  is a set of\nstatements that performs a particular function and—optionally—returns a value. Y ou\ncan pull out a section of code that you have used more than once, place it into a func‐\ntion, and call the function by name when you want the code.\nFunctions have many advantages over contiguous, inline code. For example, they:\n•Involve less typing\n•Reduce syntax and other programming errors\n•Decrease the loading time of program files\n•Decrease execution time, because each function is compiled only once, no matter\nhow often you call it\n•Accept arguments and can therefore be used for general as well as specific cases\nObjects take this concept a step further. An object  incorporates one or more func‐\ntions, and the data they use, into a single structure called a class .\nIn this chapter, you’ll learn all about using functions, from defining and calling them\nto passing arguments back and forth. With that knowledge under your belt, you’ll\nstart creating functions and using them in your own objects (where they will be\nreferred to as methods ).\n95"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 126,
    "text": "PHP Functions\nPHP comes with hundreds of ready-made, built-in functions, making it a very rich\nlanguage. To use a function, call it by name. For example, you can see the print  func‐\ntion in action here:\nprint(\"print is a pseudo-function\");\nThe parentheses tell PHP that you’re referring to a function.  Otherwise, it thinks\nyou’re referring to a constant. Y ou may see a warning such as this:\nNotice: Use of undefined constant fname - assumed 'fname'\nfollowed by the text string fname , under the assumption that you must have wanted to\nput a literal string in your code. (Things are even more confusing if there is actually a\nconstant named fname , in which case PHP uses its value.)\nStrictly speaking, print  is a pseudofunction, commonly called a\nconstruct . The difference is that you can omit the parentheses:\nprint \"print doesn't require parentheses\";\nY ou do have to put parentheses after any other functions you call,\neven if they’re empty (that is, if you’re not passing any argument to\nthe function).\nFunctions can take any number of arguments, including zero. For example, phpinfo ,\nas shown next, displays lots of information about the current installation of PHP and\nrequires no argument. The result of calling this function can be seen in Figure 5-1 .\nphpinfo();\nThe phpinfo  function is extremely useful for obtaining informa‐\ntion about your current PHP installation, but that information\ncould also be very useful to potential hackers. Therefore, never\nleave a call to this function in any web-ready code.\n96 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 127,
    "text": "Figure 5-1. The output of PHP’s built-in phpinfo function\nSome of the built-in functions that use one or more arguments appear in\nExample 5-1 .\nExample 5-1. Three  string functions\n<?php\n  echo strrev(\" .dlrow olleH\"); // Reverse string\n  echo str_repeat(\"Hip \", 2);   // Repeat string\n  echo strtoupper(\"hooray!\");   // String to uppercase\n?>\nThis example uses three string functions to output the following text:\nHello world. Hip Hip HOORAY!\nAs you can see, the strrev  function reversed the order of characters in the string,\nstr_repeat  repeated the string \"Hip \"  twice (as required by a second argument),  and\nstrtoupper  converted \"hooray!\"  to uppercase.\nPHP Functions | 97"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 128,
    "text": "Defining  a Function\nThe general syntax for a function is as follows:\nfunction function_name ([parameter  [, ...]])\n{\n  // Statements\n}\nI’ll explain all the square brackets, in case you find them confusing. The first line of\nthe syntax indicates the following:\n•A definition starts with the word function .\n•A name follows, which must start with a letter or underscore, followed by any\nnumber of letters, numbers, or underscores.\n•The parentheses are required.\n•One or more parameters, separated by commas, are optional.\nFunction names are case-insensitive, so all of the following  strings can refer to the\nprint  function: PRINT , Print , and PrInT .\nThe opening curly brace starts the statements that will execute when you call the\nfunction; a matching curly brace must close it. These statements may include one or\nmore return  statements,  which force the function to cease execution and return to\nthe calling code. If a value is attached to the return  statement, the calling code can\nretrieve it, as we’ll see next.\nReturning a Value\nLet’s take a look at a simple function to convert a person’s full name to lowercase and\nthen capitalize the first letter of each name.\nWe’ve already seen an example of PHP’s built-in strtoupper  function in\nExample 5-1 . For our current function, we’ll use its counterpart, strtolower :\n$lowered = strtolower(\"aNY # of Letters and Punctuation you WANT\");\necho $lowered;\nThe output of this experiment is as follows:\nany # of letters and punctuation you want\nWe don’t want names all lowercase, though; we want the first letter of each name cap‐\nitalized. (We’re not going to deal with subtle cases such as Mary-Ann or Jo-En-Lai for\nthis example.) Luckily, PHP also provides a ucfirst  function that sets the first char‐\nacter of a string to uppercase:\n$ucfixed = ucfirst(\"any # of letters and punctuation you want\");\n98 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 129,
    "text": "echo $ucfixed;\nThe output is as follows:\nAny # of letters and punctuation you want\nNow we can do our first bit of program design: to get a word with its initial letter\ncapitalized, we call strtolower  on a string first, and then ucfirst . The way to do this\nis to nest a call to strtolower  within ucfirst . Let’s see why, because it’s important to\nunderstand the order in which code is evaluated.\nSay you make a simple call to the print  function:\nprint(5-8);\nThe expression 5-8 is evaluated first, and the output is –3. (As you saw in the previ‐\nous chapter, PHP converts the result to a string in order to display it.) If the expres‐\nsion contains a function, that function is evaluated first as well:\nprint(abs(5-8));\nPHP is doing several things in executing that short statement:\n1.Evaluate 5-8 to produce –3.\n2.Use the abs function to turn –3 into 3.\n3.Convert the result to a string and output it using the print  function.\nIt all works, because PHP evaluates each element from the inside out. The same pro‐\ncedure is in operation when we call the following:\nucfirst(strtolower(\"aNY # of Letters and Punctuation you WANT\"))\nPHP passes our string to strtolower  and then to ucfirst , producing (as we’ve\nalready seen when we played with the functions separately):\nAny # of letters and punctuation you want\nNow let’s define a function (shown in Example 5-2 ) that takes three names and makes\neach one lowercased with an initial capital letter.\nExample 5-2. Cleaning up a full name\n<?php\n  echo fix_names(\"WILLIAM\", \"henry\", \"gatES\");\n  function fix_names($n1, $n2, $n3)\n  {\n    $n1 = ucfirst(strtolower($n1));\n    $n2 = ucfirst(strtolower($n2));\n    $n3 = ucfirst(strtolower($n3));\nPHP Functions | 99"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 130,
    "text": "return $n1 . \" \" . $n2 . \" \" . $n3;\n  }\n?>\nY ou may well find yourself writing this type of code, because users often leave their\nCaps Lock key on, accidentally insert capital letters in the wrong places, and even for‐\nget capitals altogether. The output from this example is shown here:\nWilliam Henry Gates\nReturning an Array\nWe just saw a function returning a single value. There are also ways of getting multi‐\nple values from a function.\nThe first method is to return them  within an array. As you saw in Chapter 3 , an array\nis like a bunch of variables stuck together in a row. Example 5-3  shows how you can\nuse an array to return function values.\nExample 5-3. Returning multiple values in an array\n<?php\n  $names = fix_names(\"WILLIAM\", \"henry\", \"gatES\");\n  echo $names[0] . \" \" . $names[1] . \" \" . $names[2];\n  function fix_names($n1, $n2, $n3)\n  {\n    $n1 = ucfirst(strtolower($n1));\n    $n2 = ucfirst(strtolower($n2));\n    $n3 = ucfirst(strtolower($n3));\n    return array($n1, $n2, $n3);\n  }\n?>\nThis method has the benefit of keeping all three names separate, rather than concate‐\nnating them into a single string, so you can refer to any user simply by first or last\nname, without having to extract either name from the returned string.\nDo Not Pass Arguments by Reference\nIn PHP versions prior to 5.3.0, you used to be able to preface a variable  with the &\nsymbol to tell the parser to pass a reference to the variable, not the variable’s value. \nThis  granted a function access to the variable (allowing different values to be written\nback to it) and could be a security risk, and also a cause of tricky-to-track bugs. It is\nalso the antithesis of object oriented programming (OOP).\n100 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 131,
    "text": "Passing by reference was deprecated in PHP 5.3.0 and was removed\nin PHP 5.4.0. Y ou should therefore not use this feature other than\non legacy websites, and even there you are recommended to\nrewrite code that passes by reference, because it will halt with a\nfatal error on newer versions of PHP .\nIn case you are called upon to maintain legacy code you need to know how this used\nto work so that you can build replacement routines where necessary. This concept\ncan be hard to get your head around, though, so let’s go back to the matchbox meta‐\nphor from Chapter 3 .\nImagine that, instead of taking a piece of paper out of a matchbox, reading it, copying\nit to another piece of paper, putting the original back, and passing the copy to a func‐\ntion (phew!), you simply attach a piece of thread to the original piece of paper and\npass one end of it to the function (see Figure 5-2 ).\nFigure 5-2. Imagining a reference as a thread attached to a variable\nNow the function can follow the thread to find the data to be accessed. This avoids all\nthe overhead of creating a copy of the variable just for the function’s use. What’s\nmore, the function can now modify the variable’s value.\nThis means you can rewrite Example 5-3  to pass references to all the parameters, and\nthen the function can modify these directly (see Example 5-4 ).\nExample 5-4. Returning values from a function by reference\n<?php\n  $a1 = \"WILLIAM\";\n  $a2 = \"henry\";\n  $a3 = \"gatES\";\n  echo $a1 . \" \" . $a2 . \" \" . $a3 . \"<br>\";\nPHP Functions | 101"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 132,
    "text": "fix_names($a1, $a2, $a3);\n  echo $a1 . \" \" . $a2 . \" \" . $a3;\n  function fix_names(&$n1, &$n2, &$n3)\n  {\n    $n1 = ucfirst(strtolower($n1));\n    $n2 = ucfirst(strtolower($n2));\n    $n3 = ucfirst(strtolower($n3));\n  }\n?>\nRather than passing strings directly to the function, you first assign them to variables\nand print them out to see their “before” values. Then you call the function as before,\nbut put a & symbol in front of each parameter, which tells PHP to pass the variables’\nreferences only.\nNow the variables $n1, $n2, and $n3 are attached to “threads” that lead to the values of\n$a1, $a2, and $a3. In other words, there is one group of values, but two sets of vari‐\nable names are allowed to access them.\nTherefore, the function fix_names  only has to assign new values to $n1, $n2, and $n3\nto update the values of $a1, $a2, and $a3. The output from this code is:\nWILLIAM henry gatES\nWilliam Henry Gates\nAs you see, both of the echo  statements use only the values of $a1, $a2, and $a3.\nI must reemphasize that this is no longer supported programming practice in PHP ,\nand you should therefore convert any code that relies on passing by reference. Some‐\ntimes it’s as simple as removing the & symbols, because often they were not required\nin the first place. Or, as in the following example, you can use global variables instead.\nReturning Global Variables\nThe better way to give a function access to an externally created variable, is by declar‐\ning it a global variable from within the function. The global keyword followed by the\nvariable name gives every part of your code full access to it (see Example 5-5 ).\nExample 5-5. Returning values in global variables\n<?php\n  $a1 = \"WILLIAM\";\n  $a2 = \"henry\";\n  $a3 = \"gatES\";\n  echo $a1 . \" \" . $a2 . \" \" . $a3 . \"<br>\";\n  fix_names();\n  echo $a1 . \" \" . $a2 . \" \" . $a3;\n102 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 133,
    "text": "function fix_names()\n  {\n    global $a1; $a1 = ucfirst(strtolower($a1));\n    global $a2; $a2 = ucfirst(strtolower($a2));\n    global $a3; $a3 = ucfirst(strtolower($a3));\n  }\n?>\nNow you don’t have to pass parameters to the function, and it doesn’t have to accept\nthem. Once declared, these variables remain global and available to the rest of your\nprogram, including its functions.\nIn order to retain as much local scope as possible, you should try\nreturning arrays or using variables by association. Otherwise, you\nwill begin to lose some of the benefits of functions.\nRecap of Variable Scope\nA quick reminder of what you know from Chapter 3 :\n•Local variables  are accessible just from the part of code where you define them. If\nthey’re outside of a function, they can be accessed by all code outside of func‐\ntions, classes, and so on. If a variable is inside a function, only that function can\naccess the variable, and its value is lost when the function returns.\n•Global variables  are accessible from all parts of your code.\n•Static variables  are accessible only within the function that declared them but\nretain their value over multiple calls.\nIncluding and Requiring Files\nAs you progress in your use of PHP programming, you are likely to start building a\nlibrary of functions that you think you will need again. Y ou’ll also probably start\nusing libraries created by other programmers.\nThere’s no need to copy and paste these functions into your code. Y ou can save them\nin separate files and use commands to pull them in. There are two types of command\nto perform this action: include  and require .\nIncluding and Requiring Files | 103"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 134,
    "text": "The include Statement\nUsing include , you can tell PHP to fetch  a particular file and load all its contents.  It’s\nas if you pasted the included file into the current file at the insertion point.\nExample 5-6  shows how you would include a file called library.php .\nExample 5-6. Including a PHP file\n<?php\n  include \"library.php\";\n  // Your code goes here\n?>\nUsing include_once\nEach time you issue the include  directive, it includes the requested file again, even if\nyou’ve already inserted it. For instance, suppose that library.php  contains a lot of use‐\nful functions, so you include it in your file, but also include another library that\nincludes library.php . Through nesting, you’ve inadvertently included library.php\ntwice. This will produce error messages, because you’re trying to define the same con‐\nstant or function multiple times. So you should use include_once  instead (see\nExample 5-7 ).\nExample 5-7. Including a PHP file only once\n<?php\n  include_once \"library.php\";\n  // Your code goes here\n?>\nThen, whenever another include  or include_once  is encountered, if it has already\nbeen executed, it will be completely ignored. To determine whether the file has\nalready been executed, the absolute file path is matched after all relative paths are\nresolved and the file is found in your include  path.\nIn general, it’s probably best to stick with include_once  and ignore\nthe basic include  statement. That way, you will never have the\nproblem of files being included multiple times.\n104 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 135,
    "text": "Using require and require_once\nA potential problem with include  and include_once  is that PHP will only attempt  to\ninclude the requested file. Program execution continues even if the file is not found.\nWhen it is absolutely essential to include a file, require  it. For the same reasons I\ngave for using include_once , I recommend that you generally stick with\nrequire_once  whenever you need to require  a file (see Example 5-8 ).\nExample 5-8. Requiring a PHP file only once\n<?php\n  require_once \"library.php\";\n  // Your code goes here\n?>\nPHP Version Compatibility\nPHP is in an ongoing process of development, and  there are multiple versions.  If you\nneed to check whether a particular function is available to your code, you can use the\nfunction_exists  function, which checks all predefined and user-created functions.\nExample 5-9  checks for array_combine , a function specific to PHP version 5.\nExample 5-9. Checking for a function’s existence\n<?php\n  if (function_exists(\"array_combine\"))\n  {\n    echo \"Function exists\";\n  }\n  else\n  {\n    echo \"Function does not exist - better write our own\";\n  }\n?>\nUsing code such as this, you can take advantage of features in newer versions of PHP\nand yet still have your code run on earlier versions, as long as you replicate any fea‐\ntures that are missing. Y our functions may be slower than the built-in ones, but at\nleast your code will be much more portable.\nY ou can also use the phpversion  function  to determine which version of PHP your\ncode is running on. The returned result will be similar to the following, depending on\nthe version:\n5.5.11\nPHP Version Compatibility | 105"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 136,
    "text": "PHP Objects\nIn much the same way that functions represent a huge increase in programming\npower over the early days of computing, where sometimes the best program naviga‐\ntion available was a very basic GOTO  or GOSUB  statement, object-oriented programming\n(OOP) takes the use of functions to a whole new level.\nOnce you get the hang of condensing reusable bits of code into functions, it’s not that\ngreat a leap to consider bundling the functions and their data into objects.\nLet’s take a social networking site that has many parts. One handles all user functions;\nthat is, code to enable new users to sign up and existing users to modify their details.\nIn standard PHP , you might create a few functions to handle this and embed some\ncalls to the MySQL database to keep track of all the users.\nImagine how much easier it would be to create an object to represent the current user.\nTo do this, you could create a class, perhaps called User , that would contain all the\ncode required for handling users and all the variables needed for manipulating the\ndata within the class. Then, whenever you need to manipulate a user’s data, you could\nsimply create a new object with the User  class.\nY ou could treat this new object as if it were the actual user. For example, you could\npass the object a name, password, and email address; ask it whether such a user\nalready exists; and, if not, have it create a new user with those attributes. Y ou could\neven have an instant messaging object, or one for managing whether two users are\nfriends.\nTerminology\nWhen creating a program to use objects, you need to design a composite of data and\ncode called a class . Each new object based on this class is called an instance  (or occur‐\nrence ) of that class.\nThe data associated with an object is called its properties ; the functions it uses are\ncalled methods . In defining a class, you supply the names of its properties and the\ncode for its methods. See Figure 5-3  for a jukebox metaphor for an object. Think of\nthe CDs that it holds in the carousel as its properties; the method of playing them is\nto press buttons on the front panel. There is also the slot for inserting coins (the\nmethod used to activate the object), and the laser disc reader (the method used to\nretrieve the music, or properties, from the CDs).\nWhen you’re creating objects, it is best to use encapsulation , or writing a class in such\na way that only its methods can be used to manipulate its properties. In other words,\nyou deny outside code direct access to its data. The methods you supply are known as\nthe object’s interface .\n106 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 137,
    "text": "This approach makes debugging easy: you have to fix faulty code only within a class.\nAdditionally, when you want to upgrade a program, if you have used proper encapsu‐\nlation and maintained the same interface, you can simply develop new replacement\nclasses, debug them fully, and then swap them in for the old ones. If they don’t work,\nyou can swap the old ones back in to immediately fix the problem before further\ndebugging the new classes.\nOnce you have created a class, you may find that you need another class that is simi‐\nlar to it but not quite the same. The quick and easy thing to do is to define a new class\nusing inheritance . When you do this, your new class has all the properties of the one\nit has inherited from. The original class is now called the superclass , and  the new one\nis the subclass  (or derived  class).\nFigure 5-3. A jukebox: a great example of a self-contained object\nIn our jukebox example, if you invent a new jukebox that can play a video along with\nthe music, you can inherit all the properties and methods from the original jukebox\nsuperclass and add some new properties (videos) and new methods (a movie player).\nAn excellent benefit of this system is that if you improve the speed or any other aspect\nof the superclass, its subclasses will receive the same benefit.\nDeclaring a Class\nBefore you can use an object, you must define a class with the class  keyword. Class\ndefinitions contain the class name (which is case-sensitive), its properties, and its\nmethods. Example 5-10  defines the class User  with two properties, which are: $name\nand $password  (indicated by the public  keyword—see “Property and Method Scope\nin PHP 5” on page 115 ). It also creates a new instance (called $object ) of this class.\nPHP Objects | 107"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 138,
    "text": "Example 5-10. Declaring a class and examining an object\n<?php\n  $object = new User;\n  print_r($object);\n  class User\n  {\n    public $name, $password;\n    function save_user()\n    {\n      echo \"Save User code goes here\";\n    }\n  }\n?>\nHere I have also used an invaluable function called print_r . It asks PHP to display\ninformation about a variable in human-readable form. The _r stands for in human-\nreadable format . In the case of the new object $object , it prints the following:\nUser Object\n(\n  [name]     =>\n  [password] =>\n)\nHowever, a browser compresses all the whitespace, so the output in a browser is\nslightly harder to read:\nUser Object ( [name] => [password] => )\nIn any case, the output says that $object  is a user-defined object that has the proper‐\nties name  and password .\nCreating an Object\nTo create an object with a specified class, use the new keyword,  like this: object =\nnew Class . Here are a couple of ways in which we could do this:\n$object = new User;\n$temp   = new User('name', 'password');\nOn the first line, we simply assign an object to the User  class. In the second, we pass\nparameters to the call.\nA class may require or prohibit arguments; it may also allow arguments but not\nrequire them.\n108 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 139,
    "text": "Accessing Objects\nLet’s add a few lines to Example 5-10  and check the results. Example 5-11  extends the\nprevious code by setting object properties and calling a method.\nExample 5-11. Creating and interacting with an object\n<?php\n  $object = new User;\n  print_r($object); echo \"<br>\";\n  $object->name     = \"Joe\";\n  $object->password = \"mypass\";\n  print_r($object); echo \"<br>\";\n  $object->save_user();\n  class User\n  {\n    public $name, $password;\n    function save_user()\n    {\n      echo \"Save User code goes here\";\n    }\n  }\n?>\nAs you can see, the syntax for accessing an object’s property is $object->property .\nLikewise, you call a method like this: $object->method() .\nY ou should note that the example property  and method  do not have $ signs in front\nof them. If you were to preface them with $ signs, the code would not work, as it\nwould try to reference the value inside a variable. For example, the expression\n$object->$property  would attempt to look up the value assigned to a variable\nnamed $property  (let’s say that value is the string brown ) and then attempt to refer‐\nence the property $object->brown . If $property  is undefined, an attempt to refer‐\nence $object->NULL  would occur and cause an error.\nWhen looked at using a browser’s View Source facility, the output from Example 5-11\nis as follows:\nUser Object\n(\n  [name]     =>\n  [password] =>\n)\nUser Object\n(\n  [name]     => Joe\nPHP Objects | 109"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 140,
    "text": "[password] => mypass\n)\nSave User code goes here\nAgain, print_r  shows its utility by providing the contents of $object  before and\nafter property assignment. From now on, I’ll omit print_r  statements, but if you are\nworking along with this book on your development server, you can put some in to see\nexactly what is happening.\nY ou can also see that the code in the method save_user  was executed via the call to\nthat method. It printed the string reminding us to create some code.\nY ou can place functions and class definitions anywhere in your\ncode, before or after statements that use them. Generally, though, it\nis considered good practice to place them toward the end of a file.\nCloning Objects\nOnce you have created an object, it is passed by reference when you pass it as a\nparameter. In the matchbox metaphor, this is like keeping several threads attached to\nan object stored in a matchbox, so that you can follow any attached thread to access\nit.\nIn other words, making object assignments does not copy objects in their entirety.\nY ou’ll see how this works in Example 5-12 , where we define a very simple User  class\nwith no methods and only the property name .\nExample 5-12. Copying an object?\n<?php\n  $object1       = new User();\n  $object1->name = \"Alice\";\n  $object2       = $object1;\n  $object2->name = \"Amy\";\n  echo \"object1 name = \" . $object1->name . \"<br>\";\n  echo \"object2 name = \" . $object2->name;\n  class User\n  {\n    public $name;\n  }\n?>\nWe’ve created the object $object1  and assigned the value Alice  to the name  property.\nThen we create $object2 , assigning it the value of $object1 , and assign the value Amy\n110 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 141,
    "text": "just to the name  property of $object2 —or so we might think. But this code outputs\nthe following:\nobject1 name = Amy\nobject2 name = Amy\nWhat has happened? Both $object1  and $object2  refer to the same  object, so chang‐\ning the name property of $object2  to Amy also sets that property for $object1 .\nTo avoid this confusion, you can use the clone  operator, which creates a new instance\nof the class and copies the property values from the original instance to the new\ninstance. Example 5-13  illustrates this usage.\nExample 5-13. Cloning an object\n<?php\n  $object1       = new User();\n  $object1->name = \"Alice\";\n  $object2       = clone $object1;\n  $object2->name = \"Amy\";\n  echo \"object1 name = \" . $object1->name . \"<br>\";\n  echo \"object2 name = \" . $object2->name;\n  class User\n  {\n    public $name;\n  }\n?>\nVoilà! The output from this code is what we initially wanted:\nobject1 name = Alice\nobject2 name = Amy\nConstructors\nWhen creating a new object, you can  pass a list of arguments to the class being called.\nThese are passed to a special method within the class, called the constructor , which\ninitializes various properties.\nIn the past, you would normally give this method the same name as the class, as in\nExample 5-14 .\nExample 5-14. Creating a constructor method\n<?php\n  class User\n  {\n    function User($param1, $param2)\nPHP Objects | 111"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 142,
    "text": "{\n      // Constructor statements go here\n      public $username = \"Guest\";\n    }\n  }\n?>\nHowever, PHP 5 provides a more logical approach to naming the constructor, which\nis to use the function name __construct  (that is, construct  preceded by two under‐\nscore characters), as in Example 5-15 .\nExample 5-15. Creating a constructor method in PHP 5\n<?php\n  class User\n  {\n    function __construct($param1, $param2)\n    {\n      // Constructor statements go here\n      public $username = \"Guest\";\n    }\n  }\n?>\nPHP 5 Destructors\nAlso new in PHP 5 is the ability to create destructor  methods.  This ability is useful\nwhen code has made the last reference to an object or when a script reaches the end.\nExample 5-16  shows how to create a destructor method.\nExample 5-16. Creating a destructor method in PHP 5\n<?php\n  class User\n  {\n    function __destruct()\n    {\n      // Destructor code goes here\n    }\n  }\n?>\nWriting Methods\nAs you have seen, declaring a method is similar to declaring  a function, but there are\na few differences. For example, method names beginning with a double underscore\n(__) are reserved, and you should not create any of this form.\n112 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 143,
    "text": "Y ou also have access to a special variable called $this , which can be used to access the\ncurrent object’s properties. To see how it works, take a look at Example 5-17 , which\ncontains a different method from the User  class definition called get_password .\nExample 5-17. Using the variable $this in a method\n<?php\n  class User\n  {\n    public $name, $password;\n    function get_password()\n    {\n      return $this->password;\n    }\n  }\n?>\nget_password  uses the $this  variable to access the current object and then return the\nvalue of that object’s password  property. Note how the preceding $ of the property\n$password  is omitted  when we use the -> operator. Leaving the $ in place is a typical\nerror you may run into, particularly when you first use this feature.\nHere’s how you would use the class defined in Example 5-17 :\n$object           = new User;\n$object->password = \"secret\";\necho $object->get_password();\nThis code prints the password secret .\nStatic Methods in PHP 5\nIf you are using PHP 5, you can also define a method as static , which  means that it is\ncalled on a class, not on an object. A static method has no access to any object prop‐\nerties and is created and accessed as in Example 5-18 .\nExample 5-18. Creating and accessing a static method\n<?php\n  User::pwd_string();\n  class User\n  {\n    static function pwd_string()\n    {\n      echo \"Please enter your password\";\n    }\nPHP Objects | 113"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 144,
    "text": "}\n?>\nNote how we call the class itself, along with the static method, using a double colon\n(also known as the scope resolution  operator), not ->. Static functions are useful for\nperforming actions relating to the class itself, but not to specific instances of the class.\nY ou can see another example of a static method in Example 5-21 .\nIf you try to access $this->property , or other object properties\nfrom within a static function, you will receive an error message.\nDeclaring Properties\nIt is not necessary to explicitly declare  properties within classes, as they can be\nimplicitly defined when first used. To illustrate this, in Example 5-19  the class User\nhas no properties and no methods but is legal code.\nExample 5-19. Defining  a property implicitly\n<?php\n  $object1       = new User();\n  $object1->name = \"Alice\";\n  echo $object1->name;\n  class User {}\n?>\nThis code correctly outputs the string Alice  without a problem, because PHP implic‐\nitly declares the variable $object1->name  for you. But this kind of programming can\nlead to bugs that are infuriatingly difficult to discover, because name  was declared\nfrom outside the class.\nTo help yourself and anyone else who will maintain your code, I advise that you get\ninto the habit of always declaring your properties explicitly within classes. Y ou’ll be\nglad you did.\nAlso, when you declare a property within a class, you may assign a default value to it.\nThe value you use must be a constant and not the result of a function or expression.\nExample 5-20  shows a few valid and invalid assignments.\n114 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 145,
    "text": "Example 5-20. Valid and invalid property declarations\n<?php\n  class Test\n  {\n    public $name  = \"Paul Smith\"; // Valid\n    public $age   = 42;           // Valid\n    public $time  = time();       // Invalid - calls a function\n    public $score = $level * 2;   // Invalid - uses an expression\n  }\n?>\nDeclaring Constants\nIn the same way that you can create a global constant with the define  function, you\ncan define constants inside classes. The generally accepted practice is to use upper‐\ncase letters to make them stand out, as in Example 5-21 .\nExample 5-21. Defining  constants within a class\n<?php\n  Translate::lookup();\n  class Translate\n  {\n    const ENGLISH = 0;\n    const SPANISH = 1;\n    const FRENCH  = 2;\n    const GERMAN  = 3;\n    // ...\n    static function lookup()\n    {\n      echo self::SPANISH;\n    }\n  }\n?>\nY ou can reference constants directly,  using the self  keyword and double colon oper‐\nator. Note that this code calls the class directly, using the double colon operator at line\n1, without creating an instance of it first. As you would expect, the value printed\nwhen you run this code is 1.\nRemember that once you define a constant, you can’t change it.\nProperty and Method Scope in PHP 5\nPHP 5 provides three keywords for controlling the scope of properties and methods:\nPHP Objects | 115"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 146,
    "text": "public\nThese properties are the default when you are declaring a variable using the var or\npublic  keywords, or when a variable is implicitly declared the first time it is used.\nThe keywords var and public  are interchangeable because, although deprecated, var\nis retained for compatibility with previous versions of PHP . Methods are assumed to\nbe public  by default.\nprotected\nThese properties and methods ( members ) can be referenced only by the object’s class\nmethods and those of any subclasses.\nprivate\nThese members can be referenced only by methods within the same class—not by\nsubclasses.\nHere’s how to decide which you need to use:\n•Use public  when outside code should  access this member and extending classes\nshould  also inherit it.\n•Use protected  when outside code should not  access this member but extending\nclasses should  inherit it.\n•Use private  when outside code should not  access this member and extending\nclasses also should not  inherit it.\nExample 5-22  illustrates the use of these keywords.\nExample 5-22. Changing property and method scope\n<?php\n  class Example\n  {\n    var $name   = \"Michael\"; // Same as public but deprecated\n    public $age = 23;        // Public property\n    protected $usercount;    // Protected property\n    private function admin() // Private method\n    {\n      // Admin code goes here\n    }\n  }\n?>\nStatic Properties and Methods\nMost data and methods apply to instances of a class.  For example, in a User  class, you\nwant to do such things as set a particular user’s password or check when the user has\n116 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 147,
    "text": "been registered. These facts and operations apply separately to each user and there‐\nfore use instance-specific properties and methods.\nBut occasionally you’ll want to maintain data about a whole class. For instance, to\nreport how many users are registered, you will store a variable that applies to the\nwhole User  class. PHP provides static properties and methods for such data.\nAs shown briefly in Example 5-18 , declaring members of a class static  makes them\naccessible without an instantiation of the class. A property declared static  cannot be\ndirectly accessed within an instance of a class, but a static method can.\nExample 5-23  defines a class called Test  with a static property and a public method.\nExample 5-23. Defining  a class with a static property\n<?php\n  $temp = new Test();\n  echo \"Test A: \" . Test::$static_property . \"<br>\";\n  echo \"Test B: \" . $temp->get_sp()        . \"<br>\";\n  echo \"Test C: \" . $temp->static_property . \"<br>\";\n  class Test\n  {\n    static $static_property = \"I'm static\";\n    function get_sp()\n    {\n       return self::$static_property;\n    }\n  }\n?>\nWhen you run this code, it returns the following output:\nTest A: I'm static\nTest B: I'm static\nNotice: Undefined property: Test::$static_property\nTest C:\nThis example shows that the property $static_property  could be directly referenced\nfrom the class itself via the double colon operator in Test A. Also, Test B could obtain\nits value by calling the get_sp  method of the object $temp , created from class Test .\nBut Test C failed, because the static property $static_property  was not accessible to\nthe object $temp .\nNote how the method get_sp  accesses $static_property  using the keyword self .\nThis is how a static property or constant can be directly accessed within a class.\nPHP Objects | 117"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 148,
    "text": "Inheritance\nOnce you have written a class, you can  derive subclasses from it. This can save lots of\npainstaking code rewriting: you can take a class similar to the one you need to write,\nextend it to a subclass, and just modify the parts that are different. Y ou achieve this\nusing the extends  operator.\nIn Example 5-24 , the class Subscriber  is declared a subclass of User  by means of the\nextends  operator.\nExample 5-24. Inheriting and extending a class\n<?php\n  $object           = new Subscriber;\n  $object->name     = \"Fred\";\n  $object->password = \"pword\";\n  $object->phone    = \"012 345 6789\";\n  $object->email    = \"fred@bloggs.com\";\n  $object->display();\n  class User\n  {\n    public $name, $password;\n    function save_user()\n    {\n      echo \"Save User code goes here\";\n    }\n  }\n  class Subscriber extends User\n  {\n    public $phone, $email;\n    function display()\n    {\n      echo \"Name:  \" . $this->name     . \"<br>\";\n      echo \"Pass:  \" . $this->password . \"<br>\";\n      echo \"Phone: \" . $this->phone    . \"<br>\";\n      echo \"Email: \" . $this->email;\n    }\n  }\n?>\nThe original User  class has two properties, $name  and $password , and a method to\nsave the current user to the database. Subscriber  extends this class by adding an\nadditional two properties, $phone  and $email , and includes a method of displaying\nthe properties of the current object using the variable $this , which refers to the cur‐\nrent values of the object being accessed. The output from this code is as follows:\n118 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 149,
    "text": "Name:  Fred\nPass:  pword\nPhone: 012 345 6789\nEmail: fred@bloggs.com\nThe parent operator\nIf you write a method in a subclass with the same name as one in its parent class, its\nstatements will override those of the parent class. Sometimes this is not the behavior\nyou want, and you need to access the parent’s method. To do this, you can use the\nparent  operator, as in Example 5-25 .\nExample 5-25. Overriding a method and using the parent operator\n<?php\n  $object = new Son;\n  $object->test();\n  $object->test2();\n  class Dad\n  {\n    function test()\n    {\n      echo \"[Class Dad] I am your Father<br>\";\n    }\n  }\n  class Son extends Dad\n  {\n    function test()\n    {\n      echo \"[Class Son] I am Luke<br>\";\n    }\n    function test2()\n    {\n      parent::test();\n    }\n  }\n?>\nThis code creates a class called Dad and then a subclass called Son that inherits its\nproperties and methods, and then overrides the method test . Therefore, when line 2\ncalls the method test , the new method is executed. The only way to execute the over‐\nridden test  method in the Dad class is to use the parent  operator, as shown in func‐\ntion test2  of class Son. The code outputs the following:\n[Class Son] I am Luke\n[Class Dad] I am your Father\nPHP Objects | 119"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 150,
    "text": "If you wish to ensure that your code calls a method from the current class, you can\nuse the self  keyword, like this:\nself::method();\nSubclass constructors\nWhen you extend a class and declare  your own constructor, you should be aware that\nPHP will not automatically call the constructor method of the parent class. If you\nwant to be certain that all initialization code is executed, subclasses should always call\nthe parent constructors, as in Example 5-26 .\nExample 5-26. Calling the parent class constructor\n<?php\n  $object = new Tiger();\n  echo \"Tigers have...<br>\";\n  echo \"Fur: \" . $object->fur . \"<br>\";\n  echo \"Stripes: \" . $object->stripes;\n  class Wildcat\n  {\n    public $fur; // Wildcats have fur\n    function __construct()\n    {\n      $this->fur = \"TRUE\";\n    }\n  }\n  class Tiger extends Wildcat\n  {\n    public $stripes; // Tigers have stripes\n    function __construct()\n    {\n      parent::__construct(); // Call parent constructor first\n      $this->stripes = \"TRUE\";\n    }\n  }\n?>\nThis example takes advantage of inheritance in the typical manner. The Wildcat  class\nhas created the property $fur , which we’ d like to reuse, so we create the Tiger  class to\ninherit $fur  and additionally create another property, $stripes . To verify that both\nconstructors have been called, the program outputs the following:\n120 | Chapter 5: PHP Functions and Objects"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 151,
    "text": "Tigers have...\nFur: TRUE\nStripes: TRUE\nFinal methods\nWhen you wish to prevent a subclass from overriding a superclass method, you can\nuse the final  keyword. Example 5-27  shows how.\nExample 5-27. Creating a final  method\n<?php\n  class User\n  {\n    final function copyright()\n    {\n      echo \"This class was written by Joe Smith\";\n    }\n  }\n?>\nOnce you have digested the contents of this chapter, you should have a strong feel for\nwhat PHP can do for you. Y ou should be able to use functions with ease and, if you\nwish, write object-oriented code. In Chapter 6 , we’ll finish off our initial exploration\nof PHP by looking at the workings of PHP arrays.\nQuestions\n1.What is the main benefit of using a function? This is a second sentence in the list.\n2.How many values can a function return?\n3.What is the difference between accessing a variable by name and by reference?\nThis is a second sentence in the list.\n4.What is the meaning of scope  in PHP?\n5.How can you incorporate one PHP file within another? This is a second sentence\nin the list.\n6.How is an object different from a function?\n7.How do you create a new object in PHP?\n8.What syntax would you use to create a subclass from an existing one?\n9.How can you call an initializing piece of code when an object is created?\n10.Why is it a good idea to explicitly declare properties within a class? This is a sec‐\nond sentence in the list.\nSee Chapter 5 Answers  in Appendix A  for the answers to these questions.\nQuestions | 121"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 152,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 153,
    "text": "CHAPTER 6\nPHP Arrays\nIn Chapter 3 , I gave  a very brief introduction to PHP’s arrays—just enough for a little\ntaste of their power. In this chapter, I’ll show you many more things that you can do\nwith arrays, some of which—if you have ever used a strongly typed language such as\nC—may surprise you with their elegance and simplicity.\nArrays are an example of what has made PHP so popular. Not only do they remove\nthe tedium of writing code to deal with complicated data structures, but they also\nprovide numerous ways to access data while remaining amazingly fast.\nBasic Access\nWe’ve already looked at arrays as if they were clusters of matchboxes glued together.\nAnother way to think of an array is like a string of beads, with the beads representing\nvariables that can be numeric, strings, or even other arrays. They are like bead strings,\nbecause each element has its own location and (with the exception of the first and last\nones) each has other elements on either side.\nSome arrays are referenced by numeric indices; others allow alphanumeric identifiers.\nBuilt-in functions let you sort them, add or remove sections, and walk through them\nto handle each item through a special kind of loop. And by placing one or more\narrays inside another, you can create arrays of two, three, or any number of dimen‐\nsions.\nNumerically Indexed Arrays\nLet’s assume that you’ve been tasked with creating a simple website for a local office-\nsupply company and you’re currently working on the section devoted to paper. One\nway to manage the various items of stock in this category would be to place them in a\nnumeric array. Y ou can see the simplest way of doing so in Example 6-1 .\n123"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 154,
    "text": "Example 6-1. Adding items to an array\n<?php\n  $paper[] = \"Copier\";\n  $paper[] = \"Inkjet\";\n  $paper[] = \"Laser\";\n  $paper[] = \"Photo\";\n  print_r($paper);\n?>\nIn this example, each time you assign a value to the array $paper , the first empty\nlocation within that array is used to store the value, and a pointer internal to PHP is\nincremented to point to the next free location, ready for future insertions. The famil‐\niar print_r  function (which prints out the contents of a variable, array, or object) is\nused to verify that the array has been correctly populated. It prints out the following:\nArray\n(\n  [0] => Copier\n  [1] => Inkjet\n  [2] => Laser\n  [3] => Photo\n)\nThe previous code could also have been written as shown in Example 6-2 , where the\nexact location of each item within the array is specified. But, as you can see, that\napproach requires extra typing and makes your code harder to maintain if you want\nto insert or remove supplies from the array. So unless you wish to specify a different\norder, it’s usually better to simply let PHP handle the actual location numbers.\nExample 6-2. Adding items to an array using explicit locations\n<?php\n  $paper[0] = \"Copier\";\n  $paper[1] = \"Inkjet\";\n  $paper[2] = \"Laser\";\n  $paper[3] = \"Photo\";\n  print_r($paper);\n?>\nThe output from these examples is identical, but you are not likely to use print_r  in a\ndeveloped website, so Example 6-3  shows how you might print out the various types\nof paper the website offers using a for loop.\n124 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 155,
    "text": "Example 6-3. Adding items to an array and retrieving them\n<?php\n  $paper[] = \"Copier\";\n  $paper[] = \"Inkjet\";\n  $paper[] = \"Laser\";\n  $paper[] = \"Photo\";\n  for ($j = 0 ; $j < 4 ; ++$j)\n    echo \"$j: $paper[$j]<br>\";\n?>\nThis example prints out the following:\n0: Copier\n1: Inkjet\n2: Laser\n3: Photo\nSo far, you’ve seen a couple of ways in which you can add items to an array and one\nway of referencing them, but PHP offers many more—which I’ll get to shortly. But\nfirst, we’ll look at another type of array.\nAssociative Arrays\nKeeping track of array elements  by index works just fine, but can require extra work\nin terms of remembering which number refers to which product. It can also make\ncode hard for other programmers to follow.\nThis is where associative arrays come into their own. Using them, you can reference\nthe items in an array by name rather than by number. Example 6-4  expands on the\nprevious code by giving each element in the array an identifying name and a longer,\nmore explanatory string value.\nExample 6-4. Adding items to an associative array and retrieving them\n<?php\n  $paper['copier'] = \"Copier & Multipurpose\";\n  $paper['inkjet'] = \"Inkjet Printer\";\n  $paper['laser']  = \"Laser Printer\";\n  $paper['photo']  = \"Photographic Paper\";\n  echo $paper['laser'];\n?>\nIn place of a number (which doesn’t convey any useful information, aside from the\nposition of the item in the array), each item now has a unique name that you can use\nto reference it elsewhere, as with the echo  statement—which simply prints out Laser\nBasic Access | 125"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 156,
    "text": "Printer . The names ( copier , inkjet , and so on) are called indexes  or keys, and  the\nitems assigned to them (such as Laser Printer ) are called values .\nThis very powerful feature of PHP is often used when you are extracting information\nfrom XML and HTML. For example, an HTML parser such as those used by a search\nengine could place all the elements of a web page into an associative array whose\nnames reflect the page’s structure:\n$html['title'] = \"My web page\";\n$html['body']  = \"... body of web page ...\";\nThe program would also probably break down all the links found within a page into\nanother array, and all the headings and subheadings into another. When you use\nassociative rather than numeric arrays, the code to refer to all of these items is easy to\nwrite and debug.\nAssignment Using the array Keyword\nSo far, you’ve seen how to assign values to arrays by just adding new items one at a\ntime. Whether you specify keys, specify numeric identifiers, or let PHP assign\nnumeric identifiers implicitly, this is a long-winded approach. A more compact and\nfaster assignment method uses the array  keyword. Example 6-5  shows both a\nnumeric and an associative array assigned using this method.\nExample 6-5. Adding items to an array using the array keyword\n<?php\n  $p1 = array(\"Copier\", \"Inkjet\", \"Laser\", \"Photo\");\n  echo \"p1 element: \" . $p1[2] . \"<br>\";\n  $p2 = array('copier' => \"Copier & Multipurpose\",\n              'inkjet' => \"Inkjet Printer\",\n              'laser'  => \"Laser Printer\",\n              'photo'  => \"Photographic Paper\");\n  echo \"p2 element: \" . $p2['inkjet'] . \"<br>\";\n?>\nThe first half of this snippet assigns the old, shortened product descriptions to the\narray $p1. There are four items, so they will occupy slots 0 through 3. Therefore, the\necho  statement prints out the following:\np1 element: Laser\nThe second half assigns associative identifiers and accompanying longer product\ndescriptions to the array $p2 using the format index  => value . The use of => is similar\nto the regular = assignment operator, except that you are assigning a value to an index\n126 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 157,
    "text": "and not to a variable . The index is then inextricably linked with that value, unless it is\nassigned a new value. The echo  command therefore prints out this:\np2 element: Inkjet Printer\nY ou can verify that $p1 and $p2 are different types of array, because both of the fol‐\nlowing commands, when appended to the code, will cause an Undefined index  or\nUndefined offset  error, as the array identifier for each is incorrect:\necho $p1['inkjet']; // Undefined index\necho $p2[3];        // Undefined offset\nThe foreach...as Loop\nThe creators of PHP have gone to great lengths to make the language easy to use. So,\nnot content with the loop structures already provided, they added another one espe‐\ncially for arrays: the foreach...as  loop. Using it, you can step through all the items\nin an array, one at a time, and do something with them.\nThe process starts with the first item and ends with the last one, so you don’t even\nhave to know how many items there are in an array. Example 6-6  shows how fore\nach...as  can be used to rewrite Example 6-3 .\nExample 6-6. Walking through a numeric array using foreach...as\n<?php\n  $paper = array(\"Copier\", \"Inkjet\", \"Laser\", \"Photo\");\n  $j = 0;\n  foreach($paper as $item)\n  {\n    echo \"$j: $item<br>\";\n    ++$j;\n  }\n?>\nWhen PHP encounters a foreach  statement, it takes the first item of the array and\nplaces it in the variable following the as keyword; and each time control flow returns\nto the foreach , the next array element is placed in the as keyword. In this case, the\nvariable $item  is set to each of the four values in turn in the array $paper . Once all\nvalues have been used, execution of the loop ends. The output from this code is\nexactly the same as Example 6-3 .\nNow let’s see how foreach  works with an associative array by taking a look at\nExample 6-7 , which is a rewrite of the second half of Example 6-5 .\nThe foreach...as Loop | 127"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 158,
    "text": "Example 6-7. Walking through an associative array using foreach...as\n<?php\n  $paper = array('copier' => \"Copier & Multipurpose\",\n                 'inkjet' => \"Inkjet Printer\",\n                 'laser'  => \"Laser Printer\",\n                 'photo'  => \"Photographic Paper\");\n  foreach($paper as $item => $description)\n    echo \"$item: $description<br>\";\n?>\nRemember that associative arrays do not require numeric indexes, so the variable $j\nis not used in this example. Instead, each item of the array $paper  is fed into the key/\nvalue pair of variables $item  and $description , from which they are printed out.\nThe displayed result of this code is as follows:\ncopier: Copier & Multipurpose\ninkjet: Inkjet Printer\nlaser: Laser Printer\nphoto: Photographic Paper\nAs an alternative syntax to foreach...as , you can use the list  function in conjunc‐\ntion with the each  function, as in Example 6-8 .\nExample 6-8. Walking through an associative array using each and list\n<?php\n  $paper = array('copier' => \"Copier & Multipurpose\",\n                 'inkjet' => \"Inkjet Printer\",\n                 'laser'  => \"Laser Printer\",\n                 'photo'  => \"Photographic Paper\");\n  while (list($item, $description) = each($paper))\n    echo \"$item: $description<br>\";\n?>\nIn this example, a while  loop is set up and will continue looping until each  returns a\nvalue of FALSE . The each  function acts like foreach : it returns an array containing a\nkey/value pair from the array $paper  and then moves its built-in pointer to the next\npair in that array. When there are no more pairs to return, each  returns FALSE .\nThe list  function takes an array as its argument (in this case, the key/value pair\nreturned by the function each ) and then assigns the values of the array to the vari‐\nables listed within parentheses.\nY ou can see how list  works a little more clearly in Example 6-9 , where an array is\ncreated out of the two strings Alice  and Bob and then passed to the list  function,\nwhich assigns those strings as values to the variables $a and $b.\n128 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 159,
    "text": "Example 6-9. Using the list function\n<?php\n  list($a, $b) = array('Alice', 'Bob');\n  echo \"a=$a b=$b\";\n?>\nThe output from this code is as follows:\na=Alice b=Bob\nSo you can take your pick when walking through arrays. Use foreach...as  to create\na loop that extracts values to the variable following the as, or use the each  function\nand create your own looping system.\nMultidimensional Arrays\nA simple design feature in PHP’s array syntax  makes it possible to create arrays of\nmore than one dimension. In fact, they can be as many dimensions as you like\n(although it’s a rare application that goes further than three).\nThat feature is the ability to include an entire array as a part of another one, and to be\nable to keep doing so, just like the old rhyme: “Big fleas have little fleas upon their\nbacks to bite ’ em. Little fleas have lesser fleas, add flea, ad infinitum. ”\nLet’s look at how this works by taking the associative array in the previous example\nand extending it; see Example 6-10 .\nExample 6-10. Creating a multidimensional associative array\n<?php\n  $products = array(\n    'paper' => array(\n      'copier' => \"Copier & Multipurpose\",\n      'inkjet' => \"Inkjet Printer\",\n      'laser'  => \"Laser Printer\",\n      'photo'  => \"Photographic Paper\"),\n    'pens' => array(\n      'ball'   => \"Ball Point\",\n      'hilite' => \"Highlighters\",\n      'marker' => \"Markers\"),\n    'misc' => array(\n      'tape'   => \"Sticky Tape\",\n      'glue'   => \"Adhesives\",\nMultidimensional Arrays | 129"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 160,
    "text": "'clips'  => \"Paperclips\"\n    )\n  );\n  echo \"<pre>\";\n  foreach($products as $section => $items)\n    foreach($items as $key => $value)\n      echo \"$section:\\t$key\\t($value)<br>\";\n  echo \"</pre>\";\n?>\nTo make things clearer now that the code is starting to grow, I’ve renamed some of\nthe elements. For example, because the previous array $paper  is now just a subsection\nof a larger array, the main array is now called $products . Within this array, there are\nthree items— paper , pens , and misc —each of which contains another array with key/\nvalue pairs.\nIf necessary, these subarrays could have contained even further arrays. For example,\nunder ball  there might be many different types and colors of ballpoint pens available\nin the online store. But for now, I’ve restricted the code to a depth of just two.\nOnce the array data has been assigned, I use a pair of nested foreach...as  loops to\nprint out the various values. The outer loop extracts the main sections from the top\nlevel of the array, and the inner loop extracts the key/value pairs for the categories\nwithin each section.\nAs long as you remember that each level of the array works the same way (it’s a key/\nvalue pair), you can easily write code to access any element at any level.\nThe echo  statement makes use of the PHP escape character \\t, which outputs a tab. \nAlthough tabs are not normally significant to the web browser, I let them be used for\nlayout by  using the <pre>...</pre>  tags, which tell the web browser to format the\ntext as preformatted and monospaced, and not to ignore whitespace characters such\nas tabs and line feeds. The output from this code looks like the following:\npaper:  copier  (Copier & Multipurpose)\npaper:  inkjet  (Inkjet Printer)\npaper:  laser   (Laser Printer)\npaper:  photo   (Photographic Paper)\npens:   ball    (Ball Point)\npens:   hilite  (Highlighters)\npens:   marker  (Markers)\nmisc:   tape    (Sticky Tape)\nmisc:   glue    (Adhesives)\nmisc:   clips   (Paperclips)\nY ou can directly access a particular element of the array by using square brackets:\n130 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 161,
    "text": "echo $products['misc']['glue'];\nThis outputs the value Adhesives .\nY ou can also create numeric multidimensional arrays that are accessed directly by\nindexes rather than by alphanumeric identifiers. Example 6-11  creates the board for a\nchess game with the pieces in their starting positions.\nExample 6-11. Creating a multidimensional numeric array\n<?php\n  $chessboard = array(\n    array('r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'),\n    array('p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'),\n    array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '),\n    array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '),\n    array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '),\n    array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '),\n    array('P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'),\n    array('R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R')\n  );\n  echo \"<pre>\";\n  foreach($chessboard as $row)\n  {\n    foreach ($row as $piece)\n      echo \"$piece \";\n    echo \"<br>\";\n  }\n  echo \"</pre>\";\n?>\nIn this example, the lowercase letters represent black pieces, and the uppercase white.\nThe key is r = rook, n = knight, b = bishop, k = king, q = queen, and p = pawn. Again,\na pair of nested foreach...as  loops walks through the array and displays its con‐\ntents. The outer loop processes each row into the variable $row , which itself is an\narray, because the $chessboard  array uses a subarray for each row. This loop has two\nstatements within it, so curly braces enclose them.\nThe inner loop then processes each square in a row, outputting the character\n($piece ) stored in it, followed by a space (to square up the printout). This loop has a\nsingle statement, so curly braces are not required to enclose it. The <pre>  and </pre>\ntags ensure that the output displays correctly, like this:\nr n b q k b n r\np p p p p p p p\nMultidimensional Arrays | 131"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 162,
    "text": "P P P P P P P P\nR N B Q K B N R\nY ou can also directly access any element within this array by using square brackets:\necho $chessboard[7][3];\nThis statement outputs the uppercase letter Q, the eighth element down and the\nfourth along (remembering that array indexes start at 0, not 1).\nUsing Array Functions\nY ou’ve already seen the list  and each  functions, but PHP comes with numerous\nother functions for handling arrays. The full list is at http://tinyurl.com/arraysinphp .\nHowever, some of these functions are so fundamental that it’s worth taking the time\nto look at them here.\nis_array\nArrays and variables share the same namespace.  This means that you cannot have a\nstring variable called $fred  and an array also called $fred . If you’re in doubt and\nyour code needs to check whether a variable is an array, you can use the is_array\nfunction, like this:\necho (is_array($fred)) ? \"Is an array\" : \"Is not an array\";\nNote that if $fred  has not yet been assigned a value, an Undefined variable  message\nwill be generated.\ncount\nAlthough the each  function and foreach...as  loop  structure are excellent ways to\nwalk through an array’s contents, sometimes you need to know exactly how many ele‐\nments there are in your array, particularly if you will be referencing them directly. To\ncount all the elements in the top level of an array, use a command such as this:\necho count($fred);\nShould you wish to know how many elements there are altogether in a multidimen‐\nsional array, you can use a statement such as the following:\necho count($fred, 1);\nThe second parameter is optional and sets the mode to use. It should be either a 0 to\nlimit counting to only the top level, or 1 to force recursive counting of all subarray\nelements too.\n132 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 163,
    "text": "sort\nSorting is so common that PHP provides a built-in function.  In its simplest form, you\nwould use it like this:\nsort($fred);\nUnlike some other functions, sort  will act directly on the supplied array rather than\nreturning a new array of sorted elements. Instead, it returns TRUE  on success and\nFALSE  on error and also supports a few flags, but the main two that you might wish to\nuse force sorting to be made either numerically or as strings, like this:\nsort($fred, SORT_NUMERIC);\nsort($fred, SORT_STRING);\nY ou can also sort an array in reverse order using the rsort  function, like this:\nrsort($fred, SORT_NUMERIC);\nrsort($fred, SORT_STRING);\nshuffle\nThere may be times when you need the elements of an array to be put in random\norder, such as when you’re creating a game of playing cards:\nshuffle($cards);\nLike sort , shuffle  acts directly on the supplied array and returns TRUE  on success or\nFALSE  on error.\nexplode\nThis is a very useful function with which you can take a string containing several\nitems separated by a single character (or string of characters) and then place each of\nthese items into an array. One handy example is to split up a sentence into an array\ncontaining all its words, as in Example 6-12 .\nExample 6-12. Exploding a string into an array using spaces\n<?php\n  $temp = explode(' ', \"This is a sentence with seven words\");\n  print_r($temp);\n?>\nThis example prints out the following (on a single line when viewed in a browser):\nArray\n(\n  [0] => This\n  [1] => is\n  [2] => a\nUsing Array Functions | 133"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 164,
    "text": "[3] => sentence\n  [4] => with\n  [5] => seven\n  [6] => words\n)\nThe first parameter, the delimiter, need not be a space or even a single character.\nExample 6-13  shows a slight variation.\nExample 6-13. Exploding a string delimited with *** into an array\n<?php\n  $temp = explode('***', \"A***sentence***with***asterisks\");\n  print_r($temp);\n?>\nThe code in Example 6-13  prints out the following:\nArray\n(\n  [0] => A\n  [1] => sentence\n  [2] => with\n  [3] => asterisks\n)\nextract\nSometimes it can be convenient to turn the key/value pairs from an array into PHP\nvariables. One such time might be when you are processing the $_GET  or $_POST  vari‐\nables as sent to a PHP script by a form.\nWhen a form is submitted over the Web, the web server unpacks the variables into a\nglobal array for the PHP script. If the variables were sent using the Get method, they\nwill be placed in an associative array called $_GET ; if they were sent using Post, they\nwill be placed in an associative array called $_POST .\nY ou could, of course, walk through such associative arrays in the manner shown in\nthe examples so far. However, sometimes you just want to store the values sent into\nvariables for later use. In this case, you can have PHP do the job automatically:\nextract($_GET);\nSo, if the query string parameter q is sent to a PHP script along with the associated\nvalue Hi there , a new variable called $q will be created and assigned that value.\nBe careful with this approach, though, because if any extracted variables conflict with\nones that you have already defined, your existing values will be overwritten. To avoid\nthis possibility, you can use one of the many additional parameters available to this\nfunction, like this:\n134 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 165,
    "text": "extract($_GET, EXTR_PREFIX_ALL, 'fromget');\nIn this case, all the new variables will begin with the given prefix string followed by an\nunderscore, so $q will become $fromget_q . I strongly recommend that you use this\nversion of the function when handling the $_GET  and $_POST  arrays, or any other\narray whose keys could be controlled by the user, because malicious users could sub‐\nmit keys chosen deliberately to overwrite commonly used variable names and com‐\npromise your website.\ncompact\nAt times you may want to use compact , the inverse of extract , to create an array\nfrom variables and their values. Example 6-14  shows how you might use this func‐\ntion.\nExample 6-14. Using the compact function\n<?php\n  $fname         = \"Doctor\";\n  $sname         = \"Who\";\n  $planet        = \"Gallifrey\";\n  $system        = \"Gridlock\";\n  $constellation = \"Kasterborous\";\n  $contact = compact('fname', 'sname', 'planet', 'system', 'constellation');\n  print_r($contact);\n?>\nThe result of running Example 6-14  is as follows:\nArray\n(\n  [fname] => Doctor\n  [sname] => Who\n  [planet] => Gallifrey\n  [system] => Gridlock\n  [constellation] => Kasterborous\n)\nNote how compact  requires the variable names to be supplied in quotes, not preceded\nby a $ symbol. This is because compact  is looking for a list of variable names.\nAnother use of this function is for debugging, when you wish to quickly view several\nvariables and their values, as in Example 6-15 .\nUsing Array Functions | 135"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 166,
    "text": "Example 6-15. Using compact to help with debugging\n<?php\n  $j       = 23;\n  $temp    = \"Hello\";\n  $address = \"1 Old Street\";\n  $age     = 61;\n  print_r(compact(explode(' ', 'j temp address age')));\n?>\nThis works by using the explode  function to extract all the words from the string into\nan array, which is then passed to the compact  function, which in turn returns an array\nto print_r , which finally shows its contents.\nIf you copy and paste the print_r  line of code, you only need to alter the variables\nnamed there for a quick printout of a group of variables’ values. In this example, the\noutput is shown here:\nArray\n(\n  [j] => 23\n  [temp] => Hello\n  [address] => 1 Old Street\n  [age] => 61\n)\nreset\nWhen the foreach...as  construct  or the each  function  walks through an array, it\nkeeps an internal PHP pointer that makes a note of which element of the array it\nshould return next. If your code ever needs to return to the start of an array, you can\nissue reset , which also returns the value of that element. Examples of how to use this\nfunction are as follows:\nreset($fred);         // Throw away return value\n$item = reset($fred); // Keep first element of the array in $item\nend\nAs with reset , you can move PHP’s internal array pointer to the final element in an\narray using the end function, which also returns the value of the element, and can be\nused as in these examples:\nend($fred);\n$item = end($fred);\nThis chapter concludes your basic introduction to PHP , and you should now be able\nto write quite complex programs using the skills you have learned. In the next chap‐\nter, we’ll look at using PHP for common, practical tasks.\n136 | Chapter 6: PHP Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 167,
    "text": "Questions\n1.What is the difference between a numeric and an associative array?\n2.What is the main benefit of the array  keyword?\n3.What is the difference between foreach  and each ?\n4.How can you create a multidimensional array?\n5.How can you determine the number of elements in an array?\n6.What is the purpose of the explode  function?\n7.How can you set PHP’s internal pointer into an array back to the first element of\nthe array?\nSee Chapter 6 Answers  in Appendix A  for the answers to these questions.\nQuestions | 137"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 168,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 169,
    "text": "CHAPTER 7\nPractical PHP\nPrevious chapters went over the elements of the PHP language. This chapter builds\non your new programming skills to teach you some common but important practical\ntasks. Y ou will learn the best ways to manage string handling to achieve clear and\nconcise code that displays in web browsers exactly how you want it to, including\nadvanced date and time management. Y ou’ll also find out how to create and other‐\nwise modify files, including those uploaded by users.\nUsing printf\nY ou’ve already seen the print  and echo  functions, which simply output text to the\nbrowser. But a much more powerful function, printf , controls the format of the out‐\nput by letting you put special formatting characters in a string. For each formatting\ncharacter, printf  expects you to pass an argument that it will display using that for‐\nmat. For instance, the following example uses the %d conversion specifier to display\nthe value 3 in decimal:\nprintf(\"There are %d items in your basket\", 3);\nIf you replace the %d with %b, the value 3 would be displayed in binary ( 11). Table 7-1\nshows the conversion specifiers supported.\nTable 7-1. The printf conversion specifiers\nSpecifier Conversion action on argument arg Example (for an arg of 123)\n% Display a % character (no arg  required) %\nb Display arg  as a binary integer 1111011\nc Display ASCII character for the arg {\nd Display arg  as a signed decimal integer 123\n139"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 170,
    "text": "Specifier Conversion action on argument arg Example (for an arg of 123)\ne Display arg  using scientific  notation 1.23000e+2\nf Display arg  as floating  point 123.000000\no Display arg  as an octal integer 173\ns Display arg  as a string 123\nu Display arg  as an unsigned decimal 123\nx Display arg  in lowercase hexadecimal 7b\nX Display arg  in uppercase hexadecimal 7B\nY ou can have as many specifiers as you like in a printf  function, as long as you pass a\nmatching number of arguments, and as long as each specifier is prefaced by a % sym‐\nbol. Therefore, the following code is valid, and will output \"My name is Simon. I'm\n33 years old, which is 21 in hexadecimal\" :\nprintf(\"My name is %s. I'm %d years old, which is %X in hexadecimal\",\n  'Simon', 33, 33);\nIf you leave out any arguments, you will receive a parse error informing you that a\nright bracket, ), was unexpectedly encountered.\nA more practical example of printf  sets colors in HTML using decimal. For example,\nsuppose you know you want a color that has a triplet value of 65 red, 127 green, and\n245 blue, but don’t want to convert this to hexadecimal yourself. Here’s an easy solu‐\ntion is:\nprintf(\"<span style='color:#%X%X%X'>Hello</span>\", 65, 127, 245);\nCheck the format of the color specification between the apostrophes ( '') carefully.\nFirst comes the pound, or hash, sign ( #) expected by the color specification. Then\ncome three %X format specifiers, one for each of your numbers. The resulting output\nfrom this command is as follows:\n<span style='color:#417FF5'>Hello</span>\nUsually, you’ll find it convenient to use variables or expressions as arguments to\nprintf . For instance, if you stored values for your colors in the three variables $r, $g,\nand $b, you could create a darker color with this:\nprintf(\"<span style='color:#%X%X%X'>Hello</span>\", $r-20, $g-20, $b-20);\nPrecision Setting\nNot only can you specify a conversion type, but you can also set the precision of the\ndisplayed result. For example, amounts of currency are usually displayed with only\ntwo digits of precision. However, after a calculation, a value may have a greater preci‐\nsion than this, such as 123.42 / 12, which results in 10.285. To ensure that such values\n140 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 171,
    "text": "are correctly stored internally, but displayed with only two digits of precision, you can\ninsert the string \".2\"  between the % symbol and the conversion specifier:\nprintf(\"The result is: $%.2f\", 123.42 / 12);\nThe output from this command is as follows:\nThe result is $10.29\nBut you actually have even more control than that, because you can also specify\nwhether to pad output with either zeros or spaces by prefacing the specifier with cer‐\ntain values. Example 7-1  shows four possible combinations.\nExample 7-1. Precision setting\n<?php\n  echo \"<pre>\"; // Enables viewing of the spaces\n  // Pad to 15 spaces\n  printf(\"The result is $%15f\\n\", 123.42 / 12);\n  // Pad to 15 spaces, fill with zeros\n  printf(\"The result is $%015f\\n\", 123.42 / 12);\n  // Pad to 15 spaces, 2 decimal places precision\n  printf(\"The result is $%15.2f\\n\", 123.42 / 12);\n  // Pad to 15 spaces, 2 decimal places precision, fill with zeros\n  printf(\"The result is $%015.2f\\n\", 123.42 / 12);\n  // Pad to 15 spaces, 2 decimal places precision, fill with # symbol\n  printf(\"The result is $%'#15.2f\\n\", 123.42 / 12);\n?>\nThe output from this example looks like this:\nThe result is $      10.285000\nThe result is $00000010.285000\nThe result is $          10.29\nThe result is $000000000010.29\nThe result is $##########10.29\nThe way it works is simple if you go from right to left (see Table 7-2 ). Notice that:\n•The rightmost character is the conversion specifier: in this case, f for floating\npoint.\n•Just before the conversion specifier, if there is a period and a number together,\nthen the precision of the output is specified as the value of the number.\n•Regardless of whether there’s a precision specifier, if there is a number, then that\nrepresents the number of characters to which the output should be padded. In\nUsing printf | 141"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 172,
    "text": "the previous example, this is 15 characters. If the output is already equal to or\ngreater than the padding length, then this argument is ignored.\n•The leftmost parameter allowed after the % symbol is a 0, which is ignored unless\na padding value has been set, in which case the output is padded with zeros\ninstead of spaces. If a pad character other than zero or a space is required, you\ncan use any one of your choices as long as you preface it with a single quotation\nmark, like this: '#.\n•On the left is the % symbol, which starts the conversion.\nTable 7-2. Conversion specifier  components\nStart conversion Pad character Number of pad\ncharactersDisplay precision Conversion\nspecifierExamples\n%  15  f 10.285000\n% 0 15 .2 f 000000000010.29\n% '# 15 .4 f ########10.2850\nString Padding\nY ou can also pad strings to required lengths (as you can with numbers), select differ‐\nent padding characters, and even choose between left and right justification.\nExample 7-2  shows various examples.\nExample 7-2. String padding\n<?php\n  echo \"<pre>\"; // Enables viewing of the spaces\n  $h = 'Rasmus';\n  printf(\"[%s]\\n\",         $h); // Standard string output\n  printf(\"[%12s]\\n\",       $h); // Right justify with spaces to width 12\n  printf(\"[%-12s]\\n\",      $h); // Left justify with spaces\n  printf(\"[%012s]\\n\",      $h); // Zero padding\n  printf(\"[%'#12s]\\n\\n\",   $h); // Use the custom padding character '#'\n  $d = 'Rasmus Lerdorf';        // The original creator of PHP\n  printf(\"[%12.8s]\\n\",     $d); // Right justify, cutoff of 8 characters\n  printf(\"[%-12.12s]\\n\",   $d); // Left justify, cutoff of 12 characters\n  printf(\"[%-'@12.10s]\\n\", $d); // Left justify, pad '@', cutoff 10 chars\n?>\n142 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 173,
    "text": "Note how for purposes of layout in a web page, I’ve  used the <pre>  HTML tag to pre‐\nserve all the spaces and the \\n newline character after each of the lines to be dis‐\nplayed. The output from this example is as follows:\n[Rasmus]\n[      Rasmus]\n[Rasmus      ]\n[000000Rasmus]\n[######Rasmus]\n[    Rasmus L]\n[Rasmus Lerdo]\n[Rasmus Ler@@]\nWhen you are specifying a padding value, if a string is already of equal or greater\nlength than that value, it will be ignored, unless  a cutoff value is given that shortens\nthe string back to less than the padding value.\nTable 7-3  shows the components available to string conversion specifiers.\nTable 7-3. String conversion specifier  components\nStart conversion Left/right\njustifyPadding\ncharacterNumber of pad\ncharactersCutoff Conversion\nspecifierExamples\n(using “Rasmus”)\n%     s [Rasmus]\n% -  10  s [Rasmus    ]\n%  '# 8 .4s [####Rasm]\nUsing sprintf\nOften, you don’t want to output the result of a conversion but need it to use elsewhere\nin your code. This is where the sprintf  function comes in.  With it, you can send the\noutput to another variable rather than to the browser.\nY ou might use it to make a conversion, as in the following example, which returns the\nhexadecimal string value for the RGB color group 65, 127, 245 in $hexstring :\n$hexstring = sprintf(\"%X%X%X\", 65, 127, 245);\nOr you may wish to store output ready to display later on:\n$out = sprintf(\"The result is: $%.2f\", 123.42 / 12);\necho $out;\nDate and Time Functions\nTo keep track of the date and time, PHP uses standard Unix timestamps, which are\nsimply the number of seconds since the start of January 1, 1970. To determine the\ncurrent timestamp, you can use the time  function:\nDate and Time Functions | 143"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 174,
    "text": "echo time();\nBecause the value is stored as seconds, to obtain the timestamp for this  time next\nweek, you would use the following, which adds 7 days times 24 hours times 60\nminutes times 60 seconds to the returned value:\necho time() + 7 * 24 * 60 * 60;\nIf you wish to create a timestamp for a given date, you can use the mktime  function.\nIts output is the timestamp 946684800  for the first second of the first minute of the\nfirst hour of the first day of the year 2000:\necho mktime(0, 0, 0, 1, 1, 2000);\nThe parameters to pass are, in order from left to right:\n•The number of the hour (0–23)\n•The number of the minute (0–59)\n•The number of seconds (0–59)\n•The number of the month (1–12)\n•The number of the day (1–31)\n•The year (1970–2038, or 1901–2038 with PHP 5.1.0+ on 32-bit signed systems)\nY ou may ask why you are limited to the years 1970 through 2038.\nWell, it’s because the original developers of Unix chose the start of\nthe year 1970 as the base date that no programmer should need to\ngo before!\nLuckily, because (as of version 5.1.0) PHP supports systems using a\nsigned 32-bit integer for the timestamp, dates from 1901 to 2038\nare allowed on them. However, that introduces a problem even\nworse than the original because the Unix designers also decided\nthat nobody would be using Unix after about 70 years or so, and\ntherefore believed they could get away with storing the timestamp\nas a 32-bit value—which will run out on January 19, 2038!\nThis will create what has come to be known as the Y2K38 bug\n(much like the millennium bug, which was caused by storing years\nas two-digit values, and which also had to be fixed). PHP intro‐\nduced  the DateTime  class in version 5.2 to overcome this issue, but\nit will work only on 64-bit architecture.\nTo display the date, use the date  function, which supports a plethora of formatting\noptions, enabling you to display the date any way you wish. The format is as follows:\ndate($format, $timestamp);\n144 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 175,
    "text": "The parameter $format  should be a string containing formatting specifiers as detailed\nin Table 7-4 , and $timestamp  should be a Unix timestamp.  For the complete list of\nspecifiers, please see http://php.net/manual/en/function.date.php . The following com‐\nmand will output the current date and time in the format \"Thursday July 6th,\n2017 - 1:38pm\" :\necho date(\"l F jS, Y - g:ia\", time());\nTable 7-4. The major date function format specifiers\nFormat Description Returned value\nDay specifiers\nd Day of month, two digits, with leading zeros 01 to 31\nD Day of the week, three letters Mon  to Sun\nj Day of the month, no leading zeros 1 to 31\nl Day of week, full names Sunday  to Saturday\nN Day of week, numeric, Monday to Sunday 1 to 7\nS Suffix  for day of month (useful with specifier  j)st, nd, rd, or th\nw Day of week, numeric, Sunday to Saturday 0 to 6\nz Day of year 0 to 365\nWeek specifier\nW Week number of year 01 to 52\nMonth specifiers\nF Month name January  to December\nm Month number with leading zeros 01 to 12\nM Month name, three letters Jan  to Dec\nn Month number, no leading zeros 1 to 12\nt Number of days in given month 28 to 31\nYear specifiers\nL Leap year 1 = Yes, 0 = No\ny Year, 2 digits 00 to 99\nY Year, 4 digits 0000  to 9999\nTime specifiers\na Before or after midday, lowercase am or pm\nA Before or after midday, uppercase AM or PM\ng Hour of day, 12-hour format, no leading zeros 1 to 12\nG Hour of day, 24-hour format, no leading zeros 00 to 23\nh Hour of day, 12-hour format, with leading zeros 01 to 12\nH Hour of day, 24-hour format, with leading zeros 00 to 23\nDate and Time Functions | 145"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 176,
    "text": "Format Description Returned value\ni Minutes, with leading zeros 00 to 59\ns Seconds, with leading zeros 00 to 59\nDate Constants\nThere are a number of useful constants that you can use with the date  command to\nreturn the date in specific formats.  For example, date(DATE_RSS)  returns the current\ndate and time in the valid format for an RSS feed. Some of the more commonly used\nconstants are as follows:\nDATE_ATOM\nThis is the format for Atom feeds. The PHP format is \"Y-m-d\\TH:i:sP\"  and example\noutput is \"2018-08-16T12:00:00+00:00\" .\nDATE_COOKIE\nThis is the format for cookies set from a web server or JavaScript. The PHP format is\n\"l, d-M-y H:i:s T\"  and example output is \"Thursday, 16-Aug-18 12:00:00\nUTC\" .\nDATE_RSS\nThis is the format for RSS feeds. The PHP format is \"D, d M Y H:i:s O\"  and exam‐\nple output is \"Thu, 16 Aug 2018 12:00:00 UTC\" .\nDATE_W3C\nThis is the format for the World Wide Web Consortium. The PHP format is \"Y-m-d\n\\TH:i:sP\"  and example output is \"2018-08-16T12:00:00+00:00\" .\nThe complete list can be found at http://php.net/manual/en/class.datetime.php .\nUsing checkdate\nY ou’ve seen how to display a valid date in a variety of formats. But how can you check\nwhether a user has submitted a valid date to your program? The answer is to pass the\nmonth, day, and year to the checkdate  function, which returns a value of TRUE  if the\ndate is valid, or FALSE  if it is not.\nFor example, if February 30 of any year is input, it will always be an invalid date.\nExample 7-3  shows code that you could use for this. As it stands, it will find the given\ndate invalid.\nExample 7-3. Checking for the validity of a date\n<?php\n  $month = 9;    // September (only has 30 days)\n  $day   = 31;   // 31st\n146 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 177,
    "text": "$year  = 2018; // 2018\n  if (checkdate($month, $day, $year)) echo \"Date is valid\";\n  else echo \"Date is invalid\";\n?>\nFile Handling\nPowerful as it is, MySQL is not the only (or necessarily the best) way to store all data\non a web server. Sometimes it can be quicker and more convenient to directly access\nfiles on the hard disk. Cases in which you might need to do this are modifying images\nsuch as uploaded user avatars, or log files that you wish to process.\nFirst, though, a note about file naming: if you are writing code that may be used on\nvarious PHP installations, there is no way of knowing whether these systems are case-\nsensitive.  For example, Windows and Mac OS X filenames are not case-sensitive, but\nLinux and Unix ones are. Therefore, you should always assume that the system is\ncase-sensitive and stick to a convention such as all lowercase filenames.\nChecking Whether a File Exists\nTo determine whether a file already exists, you can use the file_exists  function,\nwhich returns either TRUE  or FALSE , and is used like this:\nif (file_exists(\"testfile.txt\")) echo \"File exists\";\nCreating a File\nAt this point, testfile.txt  doesn’t exist, so let’s create it and write a few lines to it. Type\nExample 7-4  and save it as testfile.php .\nExample 7-4. Creating a simple text file\n<?php // testfile.php\n  $fh = fopen(\"testfile.txt\", 'w') or die(\"Failed to create file\");\n  $text = <<<_END\nLine 1\nLine 2\nLine 3\n_END;\n  fwrite($fh, $text) or die(\"Could not write to file\");\n  fclose($fh);\n  echo \"File 'testfile.txt' written successfully\";\n?>\nFile Handling | 147"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 178,
    "text": "When you run this in a browser, all being well, you will receive the message File\n'testfile.txt' written successfully . If you receive an error message, your hard\ndisk may be full or, more likely, you may not have permission to create or write to the\nfile, in which case you should modify the attributes of the destination folder accord‐\ning to your operating system. Otherwise, the file testfile.txt  should now be residing in\nthe same folder in which you saved the testfile.php  program. Try opening the file in a\ntext or program editor—the contents will look like this:\nLine 1\nLine 2\nLine 3\nThis simple example shows the sequence that all file handling takes:\n1.Always start by opening the file. Y ou do this through a call to fopen .\n2.Then you can call other functions; here we write  to the file ( fwrite ), but you can\nalso read from an existing file ( fread  or fgets ) and do other things.\n3.Finish by closing the file ( fclose ). Although the program does this for you when\nit ends, you should clean up by closing the file when you’re finished.\nEvery open file requires a file resource so that PHP can access and manage it. The\npreceding example sets the variable $fh (which I chose to stand for file handle ) to the\nvalue returned by the fopen  function. Thereafter, each file-handling function that\naccesses the opened file, such as fwrite  or fclose , must be passed $fh as a parameter\nto identify the file being accessed. Don’t worry about the content of the $fh variable;\nit’s a number PHP uses to refer to internal information about the file—you just pass\nthe variable to other functions.\nUpon failure, FALSE  will be returned by fopen . The previous example shows a simple\nway to capture and respond to the failure: it calls the die function to end the program\nand give the user an error message. A web application would never abort in this crude\nway (you would create a web page with an error message instead), but this is fine for\nour testing purposes.\nNotice the second parameter to the fopen  call. It is simply the character w, which tells\nthe function to open the file for writing. The function creates the file if it doesn’t\nalready exist. Be careful when playing around with these functions: if the file already\nexists, the w mode parameter causes the fopen  call to delete the old contents (even if\nyou don’t write anything new!).\nThere are several different mode parameters that can be used here, as detailed in\nTable 7-5 .\n148 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 179,
    "text": "Table 7-5. The supported fopen modes\nMode Action Description\n'r' Read from file start Open for reading only; place the file pointer at the beginning of the file.  Return FALSE\nif the file doesn’t already exist.\n'r+' Read from file start and\nallow writingOpen for reading and writing; place the file pointer at the beginning of the file.  Return\nFALSE  if the file doesn’t already exist.\n'w' Write from file start and\ntruncate fileOpen for writing only; place the file pointer at the beginning of the file and truncate the\nfile to zero length. If the file doesn’t exist, attempt to create it.\n'w+' Write from file start,\ntruncate file,  and allow\nreadingOpen for reading and writing; place the file pointer at the beginning of the file and\ntruncate the file to zero length. If the file doesn’t exist, attempt to create it.\n'a' Append to file end Open for writing only; place the file pointer at the end of the file.  If the file doesn’t exist,\nattempt to create it.\n'a+' Append to file end and\nallow readingOpen for reading and writing; place the file pointer at the end of the file.  If the file\ndoesn’t exist, attempt to create it.\nReading from Files\nThe easiest way to read from a text file is to grab a whole line through fgets  (think of\nthe final s as standing for string ), as in Example 7-5 .\nExample 7-5. Reading a file with fgets\n<?php\n  $fh = fopen(\"testfile.txt\", 'r') or\n    die(\"File does not exist or you lack permission to open it\");\n  $line = fgets($fh);\n  fclose($fh);\n  echo $line;\n?>\nIf you created the file as shown in Example 7-4 , you’ll get the first line:\nLine 1\nOr you can retrieve multiple lines or portions of lines through the fread  function, as\nin Example 7-6 .\nExample 7-6. Reading a file with fread\n<?php\n  $fh = fopen(\"testfile.txt\", 'r') or\n    die(\"File does not exist or you lack permission to open it\");\n  $text = fread($fh, 3);\n  fclose($fh);\nFile Handling | 149"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 180,
    "text": "echo $text;\n?>\nI’ve requested three characters in the fread  call, so the program displays this:\nLin\nThe fread  function is commonly used with binary data. But if you use it on text data\nthat spans more than one line, remember to count newline characters.\nCopying Files\nLet’s try out the PHP copy  function to create a clone of testfile.txt . Type Example 7-7\nand save it as copyfile.php , and then call up the program in your browser.\nExample 7-7. Copying a file\n<?php // copyfile.php\n  copy('testfile.txt', 'testfile2.txt') or die(\"Could not copy file\");\n  echo \"File successfully copied to 'testfile2.txt'\";\n?>\nIf you check your folder again, you’ll see that you now have the new file testfile2.txt  in\nit. By the way, if you don’t want your programs to exit on a failed copy attempt, you\ncould try the alternate syntax in Example 7-8 .\nExample 7-8. Alternate syntax for copying a file\n<?php // copyfile2.php\n  if (!copy('testfile.txt', 'testfile2.txt')) echo \"Could not copy file\";\n  else echo \"File successfully copied to 'testfile2.txt'\";\n?>\nMoving a File\nTo move a file, rename it with the rename  function, as in Example 7-9 .\nExample 7-9. Moving a file\n<?php // movefile.php\n  if (!rename('testfile2.txt', 'testfile2.new'))\n    echo \"Could not rename file\";\n  else echo \"File successfully renamed to 'testfile2.new'\";\n?>\nY ou can use the rename  function on directories, too. To avoid any warning messages,\nif the original file doesn’t exist, you can call the file_exists  function first to check.\n150 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 181,
    "text": "Deleting a File\nDeleting a file is just a matter of using the unlink  function to  remove it from the file\nsystem, as in Example 7-10 .\nExample 7-10. Deleting a file\n<?php // deletefile.php\n  if (!unlink('testfile2.new')) echo \"Could not delete file\";\n  else echo \"File 'testfile2.new' successfully deleted\";\n?>\nWhenever you access files on your hard disk directly, you must also\nalways ensure that it is impossible for your file system to be com‐\npromised. For example, if you are deleting a file based on user\ninput, you must make absolutely certain it is a file that can be safely\ndeleted and that the user is allowed to delete it.\nAs with moving a file, a warning message will be displayed if the file doesn’t exist,\nwhich you can avoid by using file_exists  to first check for its existence before call‐\ning unlink .\nUpdating Files\nOften, you will want to add more data to a saved file, which you can do in many ways.\nY ou can use one of the append write modes (see Table 7-5 ), or you can simply open a\nfile for reading and writing with one of the other modes that supports writing, and\nmove the file pointer to the correct place within the file that you wish to write to or\nread from.\nThe file pointer  is the position within a file at which the next file access will take place,\nwhether it’s a read or a write. It is not the same as the file handle  (as stored in the\nvariable $fh in Example 7-4 ), which contains details about the file being accessed.\nY ou can see this in action by typing Example 7-11  and saving it as update.php . Then\ncall it up in your browser.\nExample 7-11. Updating a file\n<?php // update.php\n  $fh   = fopen(\"testfile.txt\", 'r+') or die(\"Failed to open file\");\n  $text = fgets($fh);\n  fseek($fh, 0, SEEK_END);\n  fwrite($fh, \"$text\") or die(\"Could not write to file\");\n  fclose($fh);\nFile Handling | 151"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 182,
    "text": "echo \"File 'testfile.txt' successfully updated\";\n?>\nThis program opens testfile.txt  for both reading and writing by setting the mode with\n'r+' , which puts the file pointer right at the start. It then uses the fgets  function  to\nread in a single line from the file (up to the first line feed). After that, the fseek  func‐\ntion is called to move the file pointer right to the file end, at which point the line of\ntext that was extracted from the start of the file (stored in $text ) is then appended to\nfile’s end and the file is closed. The resulting file now looks like this:\nLine 1\nLine 2\nLine 3\nLine 1\nThe first line has successfully been copied and then appended to the file’s end.\nAs used here, in addition to the $fh file handle, the fseek  function was passed two\nother  parameters, 0 and SEEK_END . SEEK_END  tells the function to move the file\npointer to the end of the file, and 0 tells it how many positions it should then be\nmoved backward from that point. In the case of Example 7-11 , a value of 0 is used,\nbecause the pointer is required to remain at the file’s end.\nThere are two other seek options available to the fseek  function: SEEK_SET  and\nSEEK_CUR . The SEEK_SET  option tells the function to set the file pointer to the exact\nposition given by the preceding parameter. Thus, the following example moves the\nfile pointer to position 18:\nfseek($fh, 18, SEEK_SET);\nSEEK_CUR  sets the file pointer to the current position plus the value of the given offset.\nTherefore, if the file pointer is currently at position 18, the following call will move it\nto position 23:\nfseek($fh, 5, SEEK_CUR);\nAlthough this is not recommended unless you have very specific reasons for it, it is\neven possible to use text files such as this (but with fixed line lengths) as simple flat\nfile databases. Y our program can then use fseek  to move back and forth within such\na file to retrieve, update, and add new records. Y ou can also delete records by over‐\nwriting them with zero characters, and so on.\nLocking Files for Multiple Accesses\nWeb programs are often called by many users at the same time.  If more than one per‐\nson tries to write to a file simultaneously, it can become corrupted. And if one person\nwrites to it while another is reading from it, the file is all right, but the person reading\nit can get odd results. To handle simultaneous users, you must use the file-locking\n152 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 183,
    "text": "flock  function. This function queues up all other requests to access a file until your\nprogram releases the lock. So, whenever your programs use write access on files that\nmay be accessed concurrently by multiple users, you should also add file locking to\nthem, as in Example 7-12 , which is an updated version of Example 7-11 .\nExample 7-12. Updating a file with file locking\n<?php\n  $fh   = fopen(\"testfile.txt\", 'r+') or die(\"Failed to open file\");\n  $text = fgets($fh);\n  if (flock($fh, LOCK_EX))\n  {\n    fseek($fh, 0, SEEK_END);\n    fwrite($fh, \"$text\") or die(\"Could not write to file\");\n    flock($fh, LOCK_UN);\n  }\n  fclose($fh);\n  echo \"File 'testfile.txt' successfully updated\";\n?>\nThere is a trick to file locking to preserve the best possible response time for your\nwebsite visitors: perform it directly before a change you make to a file, and then\nunlock it immediately afterward. Having a file locked for any longer than this will\nslow down your application unnecessarily. This is why the calls to flock  in\nExample 7-12  are directly before and after the fwrite  call.\nThe first call to flock  sets an exclusive file lock on the file referred to by $fh using the\nLOCK_EX  parameter:\nflock($fh, LOCK_EX);\nFrom this point onward, no other processes can write to (or even read from) the file\nuntil you release the lock by using the LOCK_UN  parameter, like this:\nflock($fh, LOCK_UN);\nAs soon as the lock is released, other processes are again allowed access to the file.\nThis is one reason why you should re-seek to the point you wish to access in a file\neach time you need to read or write data, because another process could have\nchanged the file since the last access.\nHowever, did you notice that the call to request an exclusive lock is nested as part of\nan if statement? This is because flock  is not supported on all systems; thus, it is wise\nto check whether you successfully secured a lock, just in case one could not be\nobtained.\nFile Handling | 153"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 184,
    "text": "Something else you must consider is that flock  is what is known as an advisory  lock.\nThis means that it locks out only other processes that call the function. If you have\nany code that goes right in and modifies files without implementing flock  file lock‐\ning, it will always override the locking and could wreak havoc on your files.\nBy the way, implementing file locking and then accidentally leaving it out in one sec‐\ntion of code can lead to an extremely hard-to-locate bug.\nflock  will not work on NFS and many other networked file sys‐\ntems. Also, when using a multithreaded server like ISAPI, you may\nnot be able to rely on flock  to protect files against other PHP\nscripts running in parallel threads of the same server instance.\nAdditionally, flock  is not supported on any system using the old\nFAT file system, such as older versions of Windows.\nReading an Entire File\nA handy function for reading in an entire file without having to use file handles is\nfile_get_contents . It’s very easy to use, as you can see in Example 7-13 .\nExample 7-13. Using file_get_contents\n<?php\n  echo \"<pre>\";  // Enables display of line feeds\n  echo file_get_contents(\"testfile.txt\");\n  echo \"</pre>\"; // Terminates pre tag\n?>\nBut the function is actually a lot more useful than that, because you can also use it to\nfetch a file from a server across the Internet, as in Example 7-14 , which requests the\nHTML from the O’Reilly home page, and then displays it as if the user had surfed to\nthe page itself. The result will be similar to Figure 7-1 .\nExample 7-14. Grabbing the O’Reilly home page\n<?php\n  echo file_get_contents(\"http://oreilly.com\");\n?>\n154 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 185,
    "text": "Figure 7-1. The O’Reilly home page grabbed with file_get_contents\nUploading Files\nUploading files to a web server is a subject  that seems daunting to many people, but it\nactually couldn’t be much easier. All you need to do to upload a file from a form is\nchoose a special type of encoding called multipart/form-data , and your browser will\nhandle the rest. To see how this works, type the program in Example 7-15  and save it\nas upload.php . When you run it, you’ll see a form in your browser that lets you upload\na file of your choice.\nExample 7-15. Image uploader upload.php\n<?php // upload.php\n  echo <<<_END\n    <html><head><title>PHP Form Upload</title></head><body>\n    <form method='post' action='upload.php' enctype='multipart/form-data'>\n    Select File: <input type='file' name='filename' size='10'>\n    <input type='submit' value='Upload'>\n    </form>\n_END;\n  if ($_FILES)\n  {\n    $name = $_FILES['filename']['name'];\n    move_uploaded_file($_FILES['filename']['tmp_name'], $name);\n    echo \"Uploaded image '$name'<br><img src='$name'>\";\n  }\nFile Handling | 155"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 186,
    "text": "echo \"</body></html>\";\n?>\nLet’s examine this program a section at a time. The first line of the multiline echo\nstatement starts an HTML document, displays the title, and then starts the docu‐\nment’s body.\nNext we come to the form that selects the Post method of form submission, sets the\ntarget for posted data to the program upload.php  (the program itself), and tells the\nweb browser that the data posted should be encoded via the content MIME type of\nmultipart/form-data .\nWith the form set up, the next lines display the prompt Select File: and then request\ntwo inputs. The first request is for a file; it uses an input type of file , a name of\nfilename , and an input field with a width of 10 characters. The second requested\ninput is just a Submit button that is given the label Upload (which replaces the default\nbutton text of Submit Query). And then the form is closed.\nThis short program shows a common technique in web programming in which a sin‐\ngle program is called twice: once when the user first visits a page, and again when the\nuser presses the Submit button.\nThe PHP code to receive the uploaded data is fairly simple, because all uploaded files\nare placed into the associative system  array $_FILES . Therefore, a quick check to see\nwhether $_FILES  contains anything is sufficient to determine whether the user has\nuploaded a file. This is done with the statement if ($_FILES) .\nThe first time the user visits the page, before uploading a file, $_FILES  is empty, so the\nprogram skips this block of code. When the user uploads a file, the program runs\nagain and discovers an element in the $_FILES  array.\nOnce the program realizes that a file was uploaded, the actual name, as read from the\nuploading computer, is retrieved and placed into the variable $name . Now all that’s\nnecessary is to move the file from the temporary location in which PHP stored the\nuploaded file to a more permanent one. We do this using the move_uploaded_file\nfunction,  passing it the original name of the file, with which it is saved to the current\ndirectory.\nFinally, the uploaded image is displayed within an IMG tag, and the result should look\nlike Figure 7-2 .\nIf you run this program and receive warning messages such as Per\nmission denied  for the move_uploaded_file  function call, then\nyou may not have the correct permissions set for the folder in\nwhich the program is running.\n156 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 187,
    "text": "Figure 7-2. Uploading an image as form data\nUsing $_FILES\nFive things are stored in the $_FILES  array  when a file is uploaded, as shown in\nTable 7-6  (where file  is the file upload field name supplied by the submitting form).\nTable 7-6. The contents of the $_FILES array\nArray element Contents\n$_FILES[' file']['name'] The name of the uploaded file (e.g., smiley.jpg )\n$_FILES[' file']['type'] The content type of the file (e.g., image/jpeg )\n$_FILES[' file']['size'] The file’s  size in bytes\n$_FILES[' file']['tmp_name '] The name of the temporary file stored on the server\n$_FILES[' file']['error'] The error code resulting from the file upload\nContent types used to be known as MIME (Multipurpose Internet Mail Extension)\ntypes, but because their use later expanded to the whole Internet, now they are often\ncalled Internet media types . Table 7-7  shows some of the more frequently used types\nthat turn up in $_FILES[' file']['type'].\nTable 7-7. Some common Internet media content types\napplication/pdf image/gif multipart/form-data text/xml\napplication/zip image/jpeg text/css video/mpeg\naudio/mpeg image/png text/html video/mp4\naudio/x-wav image/tiff text/plain video/quicktime\nFile Handling | 157"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 188,
    "text": "Validation\nI hope it now goes without saying (although I’ll do so anyway) that form data valida‐\ntion is of the utmost importance, due to the possibility of users attempting to hack\ninto your server.\nIn addition to maliciously formed input data, some of the things you also have to\ncheck are whether a file was actually received and, if so, whether the right type of data\nwas sent.\nTaking all these things into account, Example 7-16 , upload2.php , is a more secure\nrewrite of upload.php .\nExample 7-16. A more secure version of upload.php\n<?php // upload2.php\n  echo <<<_END\n    <html><head><title>PHP Form Upload</title></head><body>\n    <form method='post' action='upload2.php' enctype='multipart/form-data'>\n    Select a JPG, GIF, PNG or TIF File:\n    <input type='file' name='filename' size='10'>\n    <input type='submit' value='Upload'></form>\n_END;\n  if ($_FILES)\n  {\n    $name = $_FILES['filename']['name'];\n    switch($_FILES['filename']['type'])\n    {\n      case 'image/jpeg': $ext = 'jpg'; break;\n      case 'image/gif':  $ext = 'gif'; break;\n      case 'image/png':  $ext = 'png'; break;\n      case 'image/tiff': $ext = 'tif'; break;\n      default:           $ext = '';    break;\n    }\n    if ($ext)\n    {\n      $n = \"image.$ext\";\n      move_uploaded_file($_FILES['filename']['tmp_name'], $n);\n      echo \"Uploaded image '$name' as '$n':<br>\";\n      echo \"<img src='$n'>\";\n    }\n    else echo \"'$name' is not an accepted image file\";\n  }\n  else echo \"No image has been uploaded\";\n  echo \"</body></html>\";\n?>\n158 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 189,
    "text": "The non-HTML section of code has been expanded from the half-dozen lines of\nExample 7-15  to more than 20 lines, starting at if ($_FILES) .\nAs with the previous version, this if line checks whether any data was actually pos‐\nted, but there is now a matching else  near the bottom of the program that echoes a\nmessage to screen when nothing has been uploaded.\nWithin the if statement, the variable $name  is assigned the value of the filename as\nretrieved from the uploading computer (just as before), but this time we won’t rely on\nthe user having sent us valid data. Instead a switch  statement is used to check the\nuploaded content type against the four types of image this program supports. If a\nmatch is made, the variable $ext  is set to the three-letter file extension for that type.\nShould no match be found, the file uploaded was not of an accepted type and the\nvariable $ext  is set to the empty string \"\".\nThe next section of code then checks the variable $ext  to see whether it contains a\nstring and, if so, creates a new filename called $n with the base name image  and the\nextension stored in $ext . This means that the program is in full control over the\nname of the file to be created, as it can be only one of image.jpg , image.gif , image.png ,\nor image.tif .\nSafe in the knowledge that the program has not been compromised, the rest of the\nPHP code is much the same as in the previous version. It moves the uploaded tempo‐\nrary image to its new location and then displays it, while also displaying the old and\nnew image names.\nDon’t worry about having to delete the temporary file that PHP\ncreates during the upload process, because if the file has not been\nmoved or renamed, it will be automatically removed when the pro‐\ngram exits.\nAfter the if statement, there is a matching else , which is executed only if an unsup‐\nported image type was uploaded, in which case it displays an appropriate error mes‐\nsage.\nWhen you write your own file-uploading routines, I strongly advise you to use a sim‐\nilar approach and have pre-chosen names and locations for uploaded files. That way,\nno attempts to add pathnames and other malicious data to the variables you use can\nget through. If this means that more than one user could end up having a file uploa‐\nded with the same name, you could prefix such files with their user’s name, or save\nthem to individually created folders for each user.\nFile Handling | 159"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 190,
    "text": "But if you must use a supplied filename, you should sanitize it by allowing only\nalphanumeric characters and the period, which you can do with the following com‐\nmand, using a regular expression (see Chapter 17 ) to perform a search and replace on\n$name :\n$name = preg_replace(\"/[^A-Za-z0-9.]/\", \"\", $name);\nThis leaves only the characters A–Z, a–z, 0–9, and periods in the string $name , and\nstrips out everything else.\nEven better, to ensure that your program will work on all systems, regardless of\nwhether they are case-sensitive or case-insensitive, you should probably use the fol‐\nlowing command instead, which changes all uppercase characters to lowercase at the\nsame time:\n$name = strtolower(ereg_replace(\"[^A-Za-z0-9.]\", \"\", $name));\nSometimes you may encounter the media type of image/pjpeg ,\nwhich indicates a progressive JPEG, but you can safely add this to\nyour code as an alias of image/jpeg , like this:\ncase 'image/pjpeg':\ncase 'image/jpeg': $ext = 'jpg'; break;\nSystem Calls\nSometimes PHP will not have  the function you need to perform a certain action, but\nthe operating system it is running on may. In such cases, you can use the exec  system\ncall to do the job.\nFor example, to quickly view the contents of the current directory, you can use a pro‐\ngram such as Example 7-17 . If you are on a Windows system, it will run as is using\nthe Windows dir command. On Linux, Unix, or Mac OS X, comment out or remove\nthe first line and uncomment the second to use the ls system command. Y ou may\nwish to type this program, save it as exec.php , and call it up in your browser.\nExample 7-17. Executing a system command\n<?php // exec.php\n  $cmd = \"dir\";   // Windows\n  // $cmd = \"ls\"; // Linux, Unix & Mac\n  exec(escapeshellcmd($cmd), $output, $status);\n  if ($status) echo \"Exec command failed\";\n  else\n  {\n    echo \"<pre>\";\n160 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 191,
    "text": "foreach($output as $line) echo htmlspecialchars(\"$line\\n\");\n    echo \"</pre>\";\n?>\nThe htmlspecialchars  function  is called to turn any special characters returned by\nthe system into ones that HTML can understand and properly display, neatening the\noutput. Depending on the system you are using, the result of running this program\nwill look something like this (from a Windows dir command):\nVolume in drive C is Hard Disk\n Volume Serial Number is DC63-0E29\n Directory of C:\\xampp\\htdocs\n09/07/2014  10:06    <DIR>          .\n09/07/2014  10:06    <DIR>          ..\n08/07/2014  09:16    <DIR>          forbidden\n08/07/2014  09:16    <DIR>          img\n30/03/2013  12:28               202 index.html\n30/03/2013  12:28               267 index.php\n08/07/2014  09:16    <DIR>          restricted\n08/07/2014  09:56               110 test.html\n09/07/2014  08:46    <DIR>          xampp\n              3 File(s)             579 bytes\n               6 Dir(s)  1,793,430,867,968 bytes free\nexec  takes three arguments:\n•The command itself (in the previous case, $cmd )\n•An array in which the system will put the output from the command (in the pre‐\nvious case, $output )\n•A variable to contain the returned status of the call (which, in the previous case,\nis $status )\nIf you wish, you can omit the $output  and $status  parameters, but you will not\nknow the output created by the call or even whether it completed successfully.\nY ou should also note the use of the escapeshellcmd  function. It is a good habit to\nalways use this when issuing an exec  call, because it sanitizes the command string,\npreventing the execution of arbitrary commands, should you supply user input to the\ncall.\nSystem Calls | 161"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 192,
    "text": "The system calling functions are typically disabled on shared web\nhosts, as they pose a security risk. Y ou should always try to solve\nyour problems within PHP if you can, and go to the system directly\nonly if it is really necessary. Also, going to the system is relatively\nslow, and you need to code two implementations if your applica‐\ntion is expected to run on both Windows and Linux/Unix systems.\nXHTML or HTML5?\nBecause XHTML documents need to be well formed, you can parse them using stan‐\ndard XML parsers—unlike HTML, which requires a lenient HTML-specific parser.\nFor this reason, XHTML never really caught on, and when the time came to devise a\nnew standard, the World Wide Web Consortium chose to support HTML5 rather\nthan the newer XHTML2 standard.\nHTML5 has some of the features of both HTML4 and XHTML, but is much simpler\nto use and less strict to validate and, happily, there is now just a single document type\nyou need to place at the head of an HTML5 document (instead of the variety of strict,\ntransitional, and frameset types previously required), namely:\n<!DOCTYPE html>\nJust the simple word html  is sufficient to tell the browser that your web page is\ndesigned for HTML5 and, because all the latest versions of the most popular browsers\nhave been supporting most of the HTML5 specification since 2011 or so, this docu‐\nment type is generally the only one you need, unless you choose to cater to older\nbrowsers.\nFor all intents and purposes, when writing HTML documents, web developers can\nsafely ignore the old XHTML document types and syntax (such as using <br />\ninstead of the simpler <br>  tag). But if you find yourself having to cater to a very old\nbrowser or an unusual application that relies on XHTML, then you can get more\ninformation on how to do that at http://xhtml.com .\nQuestions\n1.Which printf  conversion specifier would you use to display a floating-point\nnumber?\n2.What printf  statement could be used to take the input string \"Happy Birthday\"\nand output the string \"**Happy\" ?\n3.To send the output from printf  to a variable instead of to a browser, what alter‐\nnative function would you use?\n4.How would you create a Unix timestamp for 7:11 a.m. on May 2, 2016?\n162 | Chapter 7: Practical PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 193,
    "text": "5.Which file access mode would you use with fopen  to open a file in write and read\nmode, with the file truncated and the file pointer at the start?\n6.What is the PHP command for deleting the file file.txt ?\n7.Which PHP function is used to read in an entire file in one go, even from across\nthe Web?\n8.Which PHP superglobal variable holds the details on uploaded files?\n9.Which PHP function enables the running of system commands?\n10.Which of the following tag styles is preferred in HTML5: <hr>  or <hr /> ?\nSee Chapter 7 Answers  in Appendix A  for the answers to these questions.\nQuestions | 163"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 194,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 195,
    "text": "CHAPTER 8\nIntroduction to MySQL\nWith well over 10 million installations, MySQL is probably the most popular database\nmanagement system for web servers. Developed in the mid-1990s, it’s now a mature\ntechnology that powers many of today’s most-visited Internet destinations.\nOne reason for its success must be the fact that, like PHP , it’s free to use. But it’s also\nextremely powerful and exceptionally fast—it can run on even the most basic of\nhardware, and it hardly puts a dent in system resources.\nMySQL is also highly scalable, which means that it can grow with your website (for\nthe latest benchmarks, see http://mysql.com/why-mysql/benchmarks ).\nMySQL Basics\nA database  is a structured collection of records or data stored in a computer system\nand organized in such a way that it can be quickly searched and information can be\nrapidly retrieved.\nThe SQL in MySQL stands for Structured Query Language . This  language is loosely\nbased on English and also used in other databases such as Oracle and Microsoft SQL\nServer. It is designed to allow simple requests from a database via commands such as\nSELECT title FROM publications WHERE author = 'Charles Dickens';\nA MySQL database contains one or more tables , each  of which contains records  or\nrows . Within these rows are various columns  or fields  that contain the data itself.\nTable 8-1  shows the contents of an example database of five publications detailing the\nauthor, title, type, and year of publication.\n165"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 196,
    "text": "Table 8-1. Example of a simple database\nAuthor Title Type Year\nMark Twain The Adventures of Tom Sawyer Fiction 1876\nJane Austen Pride and Prejudice Fiction 1811\nCharles Darwin The Origin of Species Nonfiction 1856\nCharles Dickens The Old Curiosity Shop Fiction 1841\nWilliam Shakespeare Romeo and Juliet Play 1594\nEach row in the table is the same as a row in a MySQL table, and each element within\na row is the same as a MySQL field.\nTo uniquely identify this database, I’ll refer to it as the publications  database in the\nexamples that follow. And, as you will have observed, all these publications are con‐\nsidered to be classics of literature, so I’ll call the table within the database that holds\nthe details classics .\nSummary of Database Terms\nThe main terms you need to acquaint yourself with for now are as follows:\nDatabase\nThe overall container for a collection of MySQL data\nTable\nA subcontainer within a database that stores the actual data\nRow\nA single record within a table, which may contain several fields\nColumn\nThe name of a field within a row\nI should note that I’m not trying to reproduce the precise terminology used in aca‐\ndemic literature about relational databases, but just to provide simple, everyday terms\nto help you quickly grasp basic concepts and get started with a database.\nAccessing MySQL via the Command Line\nThere are three main  ways in which you can interact with MySQL: using a command\nline, via a web interface such as phpMyAdmin, and through a programming language\nlike PHP . We’ll start doing the third of these in Chapter 10 , but for now, let’s look at\nthe first two.\n166 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 197,
    "text": "Starting the Command-Line Interface\nThe following sections describe relevant instructions for Windows, OS X, and Linux.\nWindows users\nIf you installed XAMPP (as explained in Chapter 2 ), you will be able to access the\nMySQL executable from the following directory:\nC:\\xampp\\mysql\\bin\nIf you installed XAMPP in a place other than \\xampp , you will\nneed to use that directory instead.\nBy default, the initial MySQL user will be root and will not have had a password set.\nSeeing as this is a development server that only you should be able to access, we won’t\nworry about creating one yet.\nSo, to enter MySQL ’s command-line interface, select Start→Run, enter CMD into the\nRun box, and press Return. This will call up a Windows command prompt. From\nthere, enter one the following (making any appropriate changes as just discussed):\nC:\\xampp\\mysql\\bin\\mysql -u root\nThis command tells MySQL to log you in as user root, without a password. Y ou will\nnow be logged into MySQL and can start entering commands. So, to be sure every‐\nthing is working as it should be, enter the following; the results should be similar to\nFigure 8-1 :\nSHOW databases;\nAccessing MySQL via the Command Line | 167"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 198,
    "text": "Figure 8-1. Accessing MySQL from a Windows command prompt\nY ou are now ready to move on to the next section, “Using the Command-Line Inter‐\nface” on page 171 .\nOS X users\nTo proceed with this chapter, you should have installed XAMPP as detailed in Chap‐\nter 2 . Y ou should also have the web server running and the MySQL server started.\nTo enter the MySQL command-line interface, start the Terminal program (which\nshould be available in Finder→Utilities). Then call up the MySQL program, which\nwill have been installed in the directory /Applications/xampp/bin .\nBy default, the initial MySQL user is root, and it will have a password of root too. So,\nto start the program, type the following:\n/Applications/xampp/bin/mysql -u root\nThis command tells MySQL to log you in as user root and not to request your pass‐\nword. To verify that all is well, type the following; Figure 8-2  should be the result:\nSHOW databases;\n168 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 199,
    "text": "Figure 8-2. Accessing MySQL from the OS X Terminal program\nIf you receive an error such as “Can’t connect to local MySQL server through socket, ”\nyou will need to first start the MySQL server as described in Chapter 2 .\nY ou should now be ready to move on to the next section, “Using the Command-Line\nInterface” on page 171 .\nLinux users\nOn a system running a Unix-like operating system such as Linux, you will almost cer‐\ntainly already have PHP and MySQL installed and running, and you will be able to\nenter the examples in the next section (if not, you can follow the procedure outlined\nin Chapter 2  to install XAMPP). First you should type the following to log into your\nMySQL system:\nmysql -u root -p\nThis tells MySQL to log you in as the user root and to request your password. If you\nhave a password, enter it; otherwise, just press Return.\nOnce you are logged in, type the following to test the program; you should see some‐\nthing like Figure 8-3  in response:\nSHOW databases;\nAccessing MySQL via the Command Line | 169"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 200,
    "text": "Figure 8-3. Accessing MySQL using Linux\nIf this procedure fails at any point, please refer to Chapter 2  to ensure that you have\nMySQL properly installed. Otherwise, you should now be ready to move on to the\nnext section, “Using the Command-Line Interface” on page 171 .\nMySQL on a remote server\nIf you are accessing MySQL on a remote server, you should Telnet (or preferably, for\nsecurity, use SSH) into the remote machine, which will probably be a Linux/FreeBSD/\nUnix type of box. Once in there, you might find that things are a little different,\ndepending on how the system administrator has set the server up, especially if it’s a\nshared hosting server. Therefore, you need to ensure that you have been given access\nto MySQL and that you have your username and password. Armed with these, you\ncan then type the following, where username  is the name supplied:\nmysql -u username  -p\nEnter your password when prompted. Y ou can then try the following command,\nwhich should result in something like Figure 8-3 :\nSHOW databases;\nThere may be other databases already created, and the test database may not be there.\nBear in mind also that system administrators have ultimate control over everything\nand that you can encounter some unexpected setups. For example, you may find that\nyou are required to preface all database names that you create with a unique identify‐\ning string to ensure that you do not conflict with databases created by other users.\nTherefore, if you have any problems, talk with your system administrator, who will\nget you sorted out. Just let the sysadmin know that you need a username and\n170 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 201,
    "text": "password.  Y ou should also ask for the ability to create new databases or, at a mini‐\nmum, to have at least one database created for you ready to use. Y ou can then create\nall the tables you require within that  database.\nUsing the Command-Line Interface\nFrom here on out, it makes no difference whether you are using Windows, Mac OS\nX, or Linux to access MySQL directly, as all the commands used (and errors you may\nreceive) are identical.\nThe semicolon\nLet’s start with the basics. Did you notice the semicolon ( ;) at the end of the SHOW\ndatabases;  command that you typed? The semicolon is used by MySQL to separate\nor end commands. If you forget to enter it, MySQL will issue a prompt and wait for\nyou to do so. The required semicolon was made part of the syntax to let you enter\nmultiple-line commands, which can be convenient because some commands get quite\nlong. It also allows you to issue more than one command at a time by placing a semi‐\ncolon after each one. The interpreter gets them all in a batch when you press the\nEnter (or Return) key and executes them in order.\nIt’s very common to receive a MySQL prompt instead of the results\nof your command; it means that you forgot the final semicolon.\nJust enter the semicolon and press the Enter key, and you’ll get\nwhat you want.\nThere are six different prompts that MySQL may present you with (see Table 8-2 ), so\nyou will always know where you are during a multiline input.\nTable 8-2. MySQL ’s six command prompts\nMySQL prompt Meaning\nmysql> Ready and waiting for a command\n    -> Waiting for the next line of a command\n    '> Waiting for the next line of a string started with a single quote\n    \"> Waiting for the next line of a string started with a double quote\n    `> Waiting for the next line of a string started with a back tick\n   /*> Waiting for the next line of a comment started with /*\nAccessing MySQL via the Command Line | 171"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 202,
    "text": "Canceling a command\nIf you are partway through entering a  command and decide you don’t wish to execute\nit after all, whatever you do, don’t press Control-C ! That will close the program.\nInstead, you can enter \\c and press Return. Example 8-1  shows how to use it.\nExample 8-1. Canceling a line of input\nmeaningless gibberish to mysql \\c\nWhen you type that line, MySQL will ignore everything you typed and issue a new\nprompt. Without the \\c, it would have displayed an error message. Be careful,\nthough: if you have opened a string or comment, close it first before using the \\c or\nMySQL will think the \\c is just part of the string. Example 8-2  shows the right way to\ndo this.\nExample 8-2. Canceling input from inside a string\nthis is \"meaningless gibberish to mysql\" \\c\nAlso note that using \\c after a semicolon will not work, as it is then a new statement.\nMySQL Commands\nY ou’ve already seen the SHOW  command, which lists tables, databases, and many other\nitems. The commands you’ll use most often are listed in Table 8-3 .\nTable 8-3. Common MySQL commands\nCommand Action\nALTER Alter a database or table\nBACKUP Back up a table\n\\c Cancel input\nCREATE Create a database\nDELETE Delete a row from a table\nDESCRIBE Describe a table’s columns\nDROP Delete a database or table\nEXIT (CTRL-C) Exit\nGRANT Change user privileges\nHELP (\\h, \\?) Display help\nINSERT Insert data\nLOCK Lock table(s)\nQUIT (\\q) Same as EXIT\n172 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 203,
    "text": "Command Action\nRENAME Rename a table\nSHOW List details about an object\nSOURCE Execute a file\nSTATUS (\\s) Display the current status\nTRUNCATE Empty a table\nUNLOCK Unlock table(s)\nUPDATE Update an existing record\nUSE Use a database\nI’ll cover most of these as we proceed, but first, you need to remember a couple of\npoints about MySQL commands:\n•SQL commands and keywords are case-insensitive. CREATE , create , and CrEaTe\nall mean the same thing. However, for the sake of clarity, the recommended style\nis to use uppercase.\n•Table names are case-sensitive on Linux and OS X, but case-insensitive on Win‐\ndows. So for portability purposes, you should always choose a case and stick to it.\nThe recommended style is to use lowercase for tables.\nCreating a database\nIf you are  working on a remote server  and have only a single user account and access\nto a single database that was created for you, move on to the section “Creating a table”\non page 175. Otherwise, get the ball rolling by issuing the following command to cre‐\nate a new database called publications :\nCREATE DATABASE publications;\nA successful command will return a message that doesn’t mean much yet— Query OK,\n1 row affected (0.00 sec) —but will make sense soon. Now that you’ve created\nthe database, you want to work with it, so issue the following:\nUSE publications;\nY ou should now see the message Database changed  and will then be set to proceed\nwith the following examples.\nCreating users\nNow that you’ve seen how easy it is to  use MySQL, and created your first database, it’s\ntime to look at how you create users, as you probably won’t want to grant your PHP\nscripts root access to MySQL; it could cause a real headache should you get hacked.\nAccessing MySQL via the Command Line | 173"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 204,
    "text": "To create a user, issue the GRANT  command, which takes the following form (don’t\ntype this in; it’s not an actual working command):\nGRANT PRIVILEGES ON database.object TO 'username'@'hostname'\n  IDENTIFIED BY 'password';\nThis should be pretty straightforward, with the possible exception of the data\nbase.object  part, which refers to the database itself and the objects it contains, such\nas tables (see Table 8-4 ).\nTable 8-4. Example parameters for the GRANT command\nArguments Meaning\n*.* All databases and all their objects\ndatabase .* Only the database called database  and all its objects\ndatabase .object Only the database called database  and its object called object\nSo let’s create a user who can access just the new publications  database and all its\nobjects, by entering the following (replacing the username jim and also the password\nmypasswd  with ones of your choosing):\nGRANT ALL ON publications.* TO 'jim'@'localhost'\n  IDENTIFIED BY 'mypasswd';\nWhat this does is allow the user jim@localhost  full access to the publications  database\nusing the password mypasswd . Y ou can test whether this step has worked by entering\nquit  to exit and then rerunning MySQL the way you did before, but instead of enter‐\ning -u root -p , type -u jim -p , or whatever username you created. See Table 8-5  for\nthe correct command for your operating system. Modify it as necessary if the mysql\nclient program is installed in a different directory on your system.\nTable 8-5. Starting MySQL and logging in as jim@localhost\nOS Example command\nWindows C:\\xampp\\mysql\\bin\\mysql -u jim -p\nMac OS X /Applications/xampp/bin/mysql -u jim -p\nLinux mysql -u jim –p\nAll you have to do now is enter your password when prompted and you will be log‐\nged in. If you prefer, you can place your password immediately following the -p\n(without any spaces) to avoid having to enter it when prompted. But this is consid‐\nered a poor practice, because if other people are logged into your system, there may\nbe ways for them to look at the command you entered and find out your password.\n174 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 205,
    "text": "Y ou can grant only privileges that you already have, and you must\nalso have the privilege to issue GRANT  commands. There are a whole\nrange of privileges you can choose to grant if you are not granting\nall privileges. For further details, please visit the following site,\nwhich also covers the REVOKE  command,  which can remove privi‐\nleges once granted: http://tinyurl.com/mysqlgrant . Also be aware\nthat if you create a new user but do not specify an IDENTIFIED BY\nclause, the user will have no password, a situation that is very inse‐\ncure and should be avoided.\nCreating a table\nAt this point, you should now be logged into MySQL with ALL privileges granted for\nthe database publications  (or a database that was created for you), so you’re ready to\ncreate your first table. Make sure the correct database is in use by typing the following\n(replacing publications  with the name of your database if it is different):\nUSE publications;\nNow enter the commands in Example 8-3  one line at a time.\nExample 8-3. Creating a table called classics\nCREATE TABLE classics (\n author VARCHAR(128),\n title VARCHAR(128),\n type VARCHAR(16),\n year CHAR(4)) ENGINE MyISAM;\nY ou could also issue this command on a single line, like this:\nCREATE TABLE classics (author VARCHAR(128), title\nVARCHAR(128), type VARCHAR(16), year CHAR(4)) ENGINE\nMyISAM;\nbut MySQL commands can be long and complicated, so I recom‐\nmend a single line at a time until you are comfortable with longer\nones.\nMySQL should then issue the response Query OK, 0 rows affected , along with how\nlong it took to execute the command. If you see an error message instead, check your\nsyntax carefully. Every parenthesis and comma counts, and typing errors are easy to\nmake. In case you are wondering, the ENGINE MyISAM  tells MySQL the type of data‐\nbase engine to use for this table.\nTo check whether your new table has been created, type the following:\nDESCRIBE classics;\nAccessing MySQL via the Command Line | 175"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 206,
    "text": "All being well, you will see the sequence of commands and responses shown in\nExample 8-4 , where you should particularly note the table format displayed.\nExample 8-4. A MySQL session: creating and checking a new table\nmysql> USE publications;\nDatabase changed\nmysql> CREATE TABLE classics (\n    ->  author VARCHAR(128),\n    ->  title VARCHAR(128),\n    ->  type VARCHAR(16),\n    ->  year CHAR(4)) ENGINE MyISAM;\nQuery OK, 0 rows affected (0.03 sec)\nmysql> DESCRIBE classics;\n+--------+--------------+------+-----+---------+-------+\n| Field  | Type         | Null | Key | Default | Extra |\n+--------+--------------+------+-----+---------+-------+\n| author | varchar(128) | YES  |     | NULL    |       |\n| title  | varchar(128) | YES  |     | NULL    |       |\n| type   | varchar(16)  | YES  |     | NULL    |       |\n| year   | char(4)      | YES  |     | NULL    |       |\n+--------+--------------+------+-----+---------+-------+\n4 rows in set (0.00 sec)\nThe DESCRIBE  command is an invaluable debugging aid when you need to ensure that\nyou have correctly created a MySQL table. Y ou can also use it to remind yourself\nabout a table’s field or column names and the types of data in each one. Let’s look at\neach of the headings in detail:\nField\nThe name of each field or column within a table.\nType\nThe type of data being stored in the field.\nNull\nWhether a field is allowed to contain a value of NULL .\nKey\nMySQL supports keys or indexes , which are quick ways to look up and search for\ndata. The Key heading shows what type of key (if any) has been applied.\nDefault\nThe default value that will be assigned to the field if no value is specified when a new\nrow is created.\nExtra\nAdditional information, such as whether a field is set to auto-increment.\n176 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 207,
    "text": "Data Types\nIn Example 8-3 , you may have noticed  that three of the table’s fields were given the\ndata type of VARCHAR , and one was given the type CHAR . The term VARCHAR  stands for\nVARiable length  CHARacter string , and the command takes a numeric value that tells\nMySQL the maximum length allowed for a string stored in this field.\nThis data type is very useful, as MySQL can then plan the size of databases and per‐\nform lookups and searches more easily. The downside is that if you ever attempt to\nassign a string value longer than the length allowed, it will be truncated to the maxi‐\nmum length declared in the table definition.\nThe year  field, however, has more-predictable values, so instead of VARCHAR  we use\nthe more efficient CHAR(4)  data type. The parameter of 4 allows for 4 bytes of data,\nsupporting all years from –999 to 9999; a byte comprises 8 bits and can have the val‐\nues 00000000 through 11111111, which are 0 to 255 in decimal.\nY ou could, of course, just store two-digit values for the year, but if your data is going\nto still be needed in the following century, or may otherwise wrap around, it will have\nto be sanitized first—much like the “millennium bug” that would have caused dates\nbeginning on January 1, 2000, to be treated as 1900 on many of the world’s biggest\ncomputer installations.\nI didn’t use the YEAR  data type in the classics  table because it sup‐\nports only the year 0000, and years 1901 through 2155. This is\nbecause MySQL stores the year in a single byte for reasons of effi‐\nciency, but it also means that only 256 years are available, and the\npublication years of the titles in the classics  table are well before\nthis.\nBoth CHAR  and VARCHAR  accept text strings and impose a limit on the size of the field.\nThe difference is that every string in a CHAR  field has the specified size. If you put in a\nsmaller string, it is padded with spaces. A VARCHAR  field does not pad the text; it lets\nthe size of the field vary to fit the text that is inserted. But VARCHAR  requires a small\namount of overhead to keep track of the size of each value. So CHAR  is slightly more\nefficient if the sizes are similar in all records, whereas VARCHAR  is more efficient if\nsizes can vary a lot and get large. In addition, the overhead causes access to VARCHAR\ndata to be slightly slower than to CHAR  data.\nThe CHAR data type\nTable 8-6  lists the CHAR  data types. All these types offer a parameter that sets the maxi‐\nmum (or exact) length of the string allowed in the field. As the table shows, each type\nhas a built-in maximum number of bytes it can occupy.\nAccessing MySQL via the Command Line | 177"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 208,
    "text": "Table 8-6. MySQL ’s CHAR data types\nData type Bytes used Examples\nCHAR(n) Exactly n (<= 255) CHAR(5)  “Hello” uses 5 bytes\nCHAR(57)  “Goodbye” uses 57 bytes\nVARCHAR( n) Up to n (<= 65535) VARCHAR(7)  “Morning” uses 7 bytes\nVARCHAR(100)  “Night” uses 5 bytes\nThe BINARY data type\nThe BINARY  data type is  used for storing strings of full bytes that do not have an asso‐\nciated character set. For example, you might use the BINARY  data type to store a GIF\nimage (see Table 8-7 ).\nTable 8-7. MySQL ’s BINARY data types\nData type Bytes used Examples\nBINARY(n) or BYTE(n) Exactly n (<= 255) As CHAR  but contains binary data\nVARBINARY( n) Up to n (<= 65535) As VARCHAR  but contains binary data\nThe TEXT and VARCHAR data types\nThe differences between TEXT  and VARCHAR  are small:\n•Prior to version 5.0.3, MySQL would remove leading and trailing spaces from\nVARCHAR  fields.\n•TEXT  fields cannot have default values.\n•MySQL indexes only the first n characters of a TEXT  column (you specify n when\nyou create the index).\nWhat this means is that VARCHAR  is the better and faster data type to use if you need to\nsearch the entire contents of a field. If you will never search more than a certain num‐\nber of leading characters in a field, you should probably use a TEXT  data type (see\nTable 8-8 ).\nTable 8-8. MySQL ’s TEXT data types\nData type Bytes used Attributes\nTINYTEXT( n) Up to n (<= 255) Treated as a string with a character set\nTEXT(n) Up to n (<= 65535) Treated as a string with a character set\nMEDIUMTEXT( n) Up to n (<= 1.67e+7) Treated as a string with a character set\nLONGTEXT( n) Up to n (<= 4.29e+9) Treated as a string with a character set\n178 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 209,
    "text": "The BLOB data type\nThe term BLOB  stands for Binary  Large  OBject  and, therefore, as you would think, the\nBLOB  data type is most useful for binary data in excess of 65,536 bytes in size. The\nmain other difference between the BLOB  and BINARY  data types is that BLOB s cannot\nhave default values (see Table 8-9 ).\nTable 8-9. MySQL ’s BLOB data types\nData type Bytes used Attributes\nTINYBLOB( n) Up to n (<= 255) Treated as binary data—no character set\nBLOB(n) Up to n (<= 65535) Treated as binary data—no character set\nMEDIUMBLOB( n) Up to n (<= 1.67e+7) Treated as binary data—no character set\nLONGBLOB( n) Up to n (<= 4.29e+9) Treated as binary data—no character set\nNumeric data types\nMySQL supports various numeric data types from a single byte up to double-\nprecision floating-point numbers. Although the most memory that a numeric field\ncan use up is 8 bytes, you are well advised to choose the smallest data type that will\nadequately handle the largest value you expect. Y our databases will be small and\nquickly accessible.\nTable 8-10  lists the numeric data types supported by MySQL and the ranges of values\nthey can contain. In case you are not acquainted with the terms, a signed number  is\none with a possible range from a minus value, through 0, to a positive one; and an\nunsigned  one has a value ranging from 0 to a positive one. They can both hold the\nsame number of values; just picture a signed number as being shifted halfway to the\nleft so that half its values are negative and half are positive. Note that floating-point\nvalues (of any precision) may only be signed.\nTable 8-10. MySQL ’s numeric data types\nData type Bytes\nusedMinimum value Maximum value\nSigned Unsigned Signed Unsigned\nTINYINT 1–128 0 127 255\nSMALLINT 2–32768 0 32767 65535\nMEDIUMINT 3–8.38e+6 0 8.38e+6 1.67e+7\nINT  / INTEGER 4–2.15e+9 0 2.15e+9 4.29e+9\nBIGINT 8–9.22e+18 0 9.22e+18 1.84e+19\nFLOAT 4–3.40e+38 n/a 3.4e+38 n/a\nDOUBLE  / REAL8–1.80e+308 n/a 1.80e+308 n/a\nAccessing MySQL via the Command Line | 179"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 210,
    "text": "To specify whether a data type is signed or unsigned, use the UNSIGNED  qualifier.  The\nfollowing example creates a table called tablename  with a field in it called fieldname  of\nthe data type UNSIGNED INTEGER :\nCREATE TABLE tablename (fieldname INT UNSIGNED);\nWhen creating a numeric field, you can also pass an optional number as a parameter,\nlike this:\nCREATE TABLE tablename (fieldname INT(4));\nBut you must remember that, unlike BINARY  and CHAR  data types, this parameter does\nnot indicate the number of bytes of storage to use. It may seem counterintuitive, but\nwhat the number actually represents is the display width of the data in the field when\nit is retrieved. It is commonly used with the ZEROFILL  qualifier, like this:\nCREATE TABLE tablename (fieldname INT(4) ZEROFILL);\nWhat this does is cause any numbers with a width of less than four characters to be\npadded with one or more zeros, sufficient to make the display width of the field four\ncharacters long. When a field is already of the specified width or greater, no padding\ntakes place.\nDATE and TIME\nThe main remaining data types supported by MySQL relate to the date and time and\ncan be seen in Table 8-11 .\nTable 8-11. MySQL ’s DATE and TIME data types\nData type Time/date format\nDATETIME '0000-00-00 00:00:00'\nDATE '0000-00-00'\nTIMESTAMP '0000-00-00 00:00:00'\nTIME '00:00:00'\nYEAR 0000  (Only years 0000 and 1901–2155)\nThe DATETIME  and TIMESTAMP  data types display the same way. The main difference  is\nthat TIMESTAMP  has a very narrow range (from the years 1970 through 2037), whereas\nDATETIME  will hold just about any date you’re likely to specify, unless you’re interested\nin ancient history or science fiction.\nTIMESTAMP  is useful, however, because you can let MySQL set the value for you. If you\ndon’t specify the value when adding a row, the current time is automatically inserted.\nY ou can also have MySQL update a TIMESTAMP  column each time you change a row.\n180 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 211,
    "text": "The AUTO_INCREMENT data type\nSometimes you need to ensure that every row in your database is guaranteed to be\nunique. Y ou could do this in your program by carefully checking the data you enter\nand making sure that there is at least one value that differs in any two rows, but this\napproach is error-prone and works only in certain circumstances. In the classics  table,\nfor instance, an author may appear multiple times. Likewise, the year of publication\nwill also be frequently duplicated, and so on. It would be hard to guarantee that you\nhave no duplicate rows.\nThe general solution is to use an extra column just for this purpose. In a while, we’ll\nlook at using a publication’s ISBN (International Standard Book Number), but first I’ d\nlike to introduce the AUTO_INCREMENT  data type.\nAs its name implies, a column given this data type will set the value of its contents to\nthat of the column entry in the previously inserted row, plus 1. Example 8-5  shows\nhow to add a new column called id to the table classics  with auto-incrementing.\nExample 8-5. Adding the auto-incrementing column id\nALTER TABLE classics ADD id INT UNSIGNED NOT NULL AUTO_INCREMENT KEY;\nThis is your introduction to the ALTER  command, which  is very similar to CREATE .\nALTER  operates on an existing table, and can add, change, or delete columns. Our\nexample adds a column named id with the following characteristics:\nINT UNSIGNED\nMakes the column take an integer large enough for you to store more than 4 billion\nrecords in the table.\nNOT NULL\nEnsures that every column has a value. Many programmers use NULL  in a field to\nindicate that it doesn’t have any value. But that would allow duplicates, which would\nviolate the whole reason for this column’s existence. So we disallow NULL  values.\nAUTO_INCREMENT\nCauses MySQL to set a unique value for this column in every row, as described ear‐\nlier. We don’t really have control over the value that this column will take in each row,\nbut we don’t care: all we care about is that we are guaranteed a unique value.\nKEY\nAn auto-increment column is useful as a key, because you will tend to search for rows\nbased on this column. This will be explained in the section “Indexes” on page 186 .\nEach entry in the column id will now have a unique number, with the first starting at\n1 and the others counting upward from there. And whenever a new row is inserted,\nits id column will automatically be given the next number in sequence.\nAccessing MySQL via the Command Line | 181"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 212,
    "text": "Rather than applying the column retroactively, you could have included it by issuing\nthe CREATE  command  in a slightly different format. In that case, the command in\nExample 8-3  would be replaced with Example 8-6 . Check the final line in particular.\nExample 8-6. Adding the auto-incrementing id column at table creation\nCREATE TABLE classics (\n author VARCHAR(128),\n title VARCHAR(128),\n type VARCHAR(16),\n year CHAR(4),\n id INT UNSIGNED NOT NULL AUTO_INCREMENT KEY) ENGINE MyISAM;\nIf you wish to check whether the column has been added, use the following com‐\nmand to view the table’s columns and data types:\nDESCRIBE classics;\nNow that we’ve finished with it, the id column is no longer needed, so if you created it\nusing Example 8-5 , you should now remove the column using the command in\nExample 8-7 .\nExample 8-7. Removing the id column\nALTER TABLE classics DROP id;\nAdding data to a table\nTo add data to a table, use the INSERT  command. Let’s see this in action by populating\nthe table classics  with the data from Table 8-1 , using one form of the INSERT  com‐\nmand repeatedly ( Example 8-8 ).\nExample 8-8. Populating the classics table\nINSERT INTO classics(author, title, type, year)\n VALUES('Mark Twain','The Adventures of Tom Sawyer','Fiction','1876');\nINSERT INTO classics(author, title, type, year)\n VALUES('Jane Austen','Pride and Prejudice','Fiction','1811');\nINSERT INTO classics(author, title, type, year)\n VALUES('Charles Darwin','The Origin of Species','Non-Fiction','1856');\nINSERT INTO classics(author, title, type, year)\n VALUES('Charles Dickens','The Old Curiosity Shop','Fiction','1841');\nINSERT INTO classics(author, title, type, year)\n VALUES('William Shakespeare','Romeo and Juliet','Play','1594');\nAfter every second line, you should see a Query OK  message. Once all lines have been\nentered, type the following command, which will display the table’s contents. The\nresult should look like Figure 8-4 :\n182 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 213,
    "text": "SELECT * FROM classics;\nFigure 8-4. Populating the classics table and viewing its contents\nDon’t worry about the SELECT  command for now—we’ll come to it in the section\n“Querying a MySQL Database”  on page 192. Suffice it to say that, as typed, it will dis‐\nplay all the data you just entered.\nLet’s go back and look at how we used the INSERT  command. The first part, INSERT\nINTO classics , tells MySQL where to insert the following data. Then, within paren‐\ntheses, the four column names are listed— author , title, type, and year—all separated\nby commas. This tells MySQL that these are the fields into which the data is to be\ninserted.\nThe second line of each INSERT  command  contains the keyword VALUES  followed by\nfour strings within parentheses, and separated by commas. This supplies MySQL with\nthe four values to be inserted into the four columns previously specified. (As always,\nmy choice of where to break the lines was arbitrary.)\nEach item of data will be inserted into the corresponding column, in a one-to-one\ncorrespondence. If you accidentally listed the columns in a different order from the\ndata, the data would go into the wrong columns. And the number of columns must\nmatch the number of data items.\nRenaming a table\nRenaming a table, like  any other change to the structure or meta information about a\ntable, is achieved via the ALTER  command.  So, for example, to change the name of\ntable classics  to pre1900 , use the following command:\nALTER TABLE classics RENAME pre1900;\nAccessing MySQL via the Command Line | 183"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 214,
    "text": "If you tried that command, you should revert the table name by entering the follow‐\ning, so that later examples in this chapter will work as printed:\nALTER TABLE pre1900 RENAME classics;\nChanging the data type of a column\nChanging a column’s data type also makes use of the ALTER  command, this time in\nconjunction with the MODIFY  keyword.  So to change the data type of column year\nfrom CHAR(4)  to SMALLINT  (which requires only 2 bytes of storage and so will save\ndisk space), enter the following:\nALTER TABLE classics MODIFY year SMALLINT;\nWhen you do this, if the conversion of data type makes sense to MySQL, it will auto‐\nmatically change the data while keeping the meaning. In this case, it will change each\nstring to a comparable integer, and so on, as the string is recognizable as referring to\nan integer.\nAdding a new column\nLet’s suppose that you have created a table and populated it with plenty of data, only\nto discover you need an additional column. Not to worry. Here’s how to add the new\ncolumn pages , which will be used to store the number of pages in a publication:\nALTER TABLE classics ADD pages SMALLINT UNSIGNED;\nThis adds the new column with the name pages  using the UNSIGNED SMALLINT  data\ntype, sufficient to hold a value of up to 65,535—hopefully that’s more than enough for\nany book ever published!\nAnd, if you ask MySQL to describe the updated table by using the DESCRIBE  com‐\nmand, as follows, you will see the change has been made (see Figure 8-5 ):\nDESCRIBE classics;\n184 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 215,
    "text": "Figure 8-5. Adding the new pages column and viewing the table\nRenaming a column\nLooking again at Figure 8-5 , you may decide that having a column named type can be\nconfusing, because that is the name used by MySQL to identify data types. Again, no\nproblem—let’s change its name to category , like this:\nALTER TABLE classics CHANGE type category VARCHAR(16);\nNote the addition of VARCHAR(16)  on the end of this command. That’s because the\nCHANGE  keyword requires the data type to be specified, even if you don’t intend to\nchange it, and VARCHAR(16)  was the data type specified when that column was ini‐\ntially created as type.\nRemoving a column\nActually, upon reflection, you might decide that the page count column pages  isn’t\nactually all that useful for this particular database, so here’s how to remove that col‐\numn by using the DROP  keyword:\nALTER TABLE classics DROP pages;\nRemember that DROP  is irreversible and you should always use it\nwith caution, because you could inadvertently delete entire tables\n(and even databases) with it if you are not careful!\nDeleting a table\nDeleting a table is very easy indeed. But, because I don’t want you to have to reenter\nall the data for the classics  table, let’s quickly create a new table, verify its existence,\nAccessing MySQL via the Command Line | 185"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 216,
    "text": "and then delete it by typing the commands in Example 8-9 . The result of these four\ncommands should look like Figure 8-6 .\nExample 8-9. Creating, viewing, and deleting a table\nCREATE TABLE disposable(trash INT);\nDESCRIBE disposable;\nDROP TABLE disposable;\nSHOW tables;\nFigure 8-6. Creating, viewing, and deleting a table\nIndexes\nAs things stand, the table classics  works  and can be searched  without  problem by\nMySQL—until it grows to more than a couple of hundred rows, that is. At that point,\ndatabase accesses will get slower and slower with every new row added, because\nMySQL has to search through every row whenever a query is issued. This is like\nsearching through every book in a library whenever you need to look something up.\nOf course, you don’t have to search libraries that way, because they have either a card\nindex system or, most likely, a database of their own. And the same goes for MySQL,\nbecause at the expense of a slight overhead in memory and disk space, you can create\na “card index” for a table that MySQL will use to conduct lightning-fast searches.\nCreating an Index\nThe way to achieve fast searches is to add an index , either when creating a table or at\nany time afterward. But the decision is not so simple. For example, there are different\nindex types such as a  regular INDEX , PRIMARY KEY , and FULLTEXT . Also, you must\n186 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 217,
    "text": "decide which columns require an index, a judgment that requires you to predict\nwhether you will be searching any of the data in that column. Indexes can also get\ncomplicated, because you can combine multiple columns in one index. And even\nwhen you’ve decided that, you still have the option of reducing index size by limiting\nthe amount of each column to be indexed.\nIf we imagine the searches that may be made on the classics  table, it becomes apparent\nthat all of the columns may need to be searched. However, if the pages  column created\nin the section “ Adding a new column” on page 184 had not been deleted, it would\nprobably not have needed an index, as most people would be unlikely to search for\nbooks by the number of pages they have. Anyway, go ahead and add an index to each \nof the columns, using the commands in Example 8-10 .\nExample 8-10. Adding indexes to the classics table\nALTER TABLE classics ADD INDEX(author(20));\nALTER TABLE classics ADD INDEX(title(20));\nALTER TABLE classics ADD INDEX(category(4));\nALTER TABLE classics ADD INDEX(year);\nDESCRIBE classics;\nThe first two commands create indexes on both the author  and title columns, limiting\neach index to only the first 20 characters. For instance, when MySQL indexes the fol‐\nlowing title:\nThe Adventures of Tom Sawyer\nIt will actually store in the index only the first 20 characters:\nThe Adventures of To\nThis is done to minimize the size of the index, and to optimize database access speed.\nI chose 20 because it’s likely to be sufficient to ensure uniqueness for most strings in\nthese columns. If MySQL finds two indexes with the same contents, it will have to\nwaste time going to the table itself and checking the column that was indexed to find\nout which rows really matched.\nWith the category  column, currently only the first character is required to identify a\nstring as unique (F for Fiction, N for Nonfiction, and P for Play), but I chose an index\nof four characters to allow for future category types that may be unique only after\nfour characters. Y ou can also re-index this column later, when you have a more com‐\nplete set of categories. And finally, I set no limit to the year column’s index, because\nit’s an integer, not a string.\nThe results of issuing these commands (and a DESCRIBE  command to confirm that\nthey worked) can be seen in Figure 8-7 , which shows the key MUL for each column.\nThis key means that multiple occurrences of a value may occur within that column,\nIndexes | 187"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 218,
    "text": "which is exactly what we want, as authors may appear many times, the same book\ntitle could be used by multiple authors, and so on.\nFigure 8-7. Adding indexes to the classics table\nUsing CREATE INDEX\nAn alternative to using ALTER TABLE  to add an index is to use the CREATE INDEX  com‐\nmand. They are equivalent, except that CREATE INDEX  cannot be used for creating a\nPRIMARY KEY  (see the section “Primary keys” on page 189). The format of this com‐\nmand is shown in the second line of Example 8-11 .\nExample 8-11. These  two commands are equivalent\nALTER TABLE classics ADD INDEX(author(20));\nCREATE INDEX author ON classics (author(20));\nAdding indexes when creating tables\nY ou don’t have to wait until after creating a table to add indexes. In fact, doing so can\nbe time-consuming, as adding an index to a large table can take a very long time.\nTherefore, let’s look at a command that creates the table classics  with indexes already\nin place.\nExample 8-12  is a reworking of Example 8-3  in which the indexes are created at the\nsame time as the table. Note that to incorporate the modifications made in this chap‐\nter, this version uses the new column name category  instead of type and sets the data\ntype of year to SMALLINT  instead of CHAR(4) . If you want to try it out without first\ndeleting your current classics  table, change the word classics  in line 1 to something\nelse like classics1 , and then drop classics1  after you have finished with it.\n188 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 219,
    "text": "Example 8-12. Creating the table classics with indexes\nCREATE TABLE classics (\n author VARCHAR(128),\n title VARCHAR(128),\n category VARCHAR(16),\n year SMALLINT,\n INDEX(author(20)),\n INDEX(title(20)),\n INDEX(category(4)),\n INDEX(year)) ENGINE MyISAM;\nPrimary keys\nSo far, you’ve created the table classics  and ensured that MySQL can search it quickly\nby adding indexes, but there’s still something missing. All the publications in the table\ncan be searched, but there is no single unique key for each publication to enable\ninstant accessing of a row. The importance of having a key with a unique value for\neach row will come up when we start to combine data from different tables.\nThe section “The AUTO_INCREMENT data type” on page 181  briefly introduced the\nidea of a primary key when creating the auto-incrementing column id, which could\nhave been used as a primary key for this table. However, I wanted to reserve that task\nfor a more appropriate column: the internationally recognized ISBN.\nSo let’s go ahead and create a new column for this key. Now, bearing in mind that\nISBNs are 13 characters long, you might think that the following command would do\nthe job:\nALTER TABLE classics ADD isbn CHAR(13) PRIMARY KEY;\nBut it doesn’t. If you try it, you’ll get the error Duplicate entry  for key 1. The reason\nis that the table is already populated with some data and this command is trying to\nadd a column with the value NULL  to each row, which is not allowed, as all values\nmust be unique in any column having a primary key index. However, if there were no\ndata already in the table, this command would work just fine, as would adding the\nprimary key index upon table creation.\nIn our current situation, we have to be a bit sneaky and create the new column\nwithout an index, populate it with data, and then add the index retrospectively using\nthe commands in Example 8-13 . Luckily, each of the years is unique in the current set\nof data, so we can use the year column to identify each row for updating. Note that\nthis example uses the UPDATE  and WHERE  keywords, which are explained in more detail\nin the section “Querying a MySQL Database” on page 192 .\nIndexes | 189"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 220,
    "text": "Example 8-13. Populating the isbn column with data and using a primary key\nALTER TABLE classics ADD isbn CHAR(13);\nUPDATE classics SET isbn='9781598184891' WHERE year='1876';\nUPDATE classics SET isbn='9780582506206' WHERE year='1811';\nUPDATE classics SET isbn='9780517123201' WHERE year='1856';\nUPDATE classics SET isbn='9780099533474' WHERE year='1841';\nUPDATE classics SET isbn='9780192814968' WHERE year='1594';\nALTER TABLE classics ADD PRIMARY KEY(isbn);\nDESCRIBE classics;\nOnce you have typed these commands, the results should look like Figure 8-8 . Note\nthat the keywords PRIMARY KEY  replace the keyword INDEX  in the ALTER TABLE  syntax\n(compare Example 8-10  and Example 8-13 ).\nFigure 8-8. Retrospectively adding a primary key to the classics table\nTo have created a primary key when the table classics  was created, you could have\nused the commands in Example 8-14 . Again, rename classics  in line 1 to something\nelse if you wish to try this example, and then delete the test table afterward.\nExample 8-14. Creating the table classics with a primary key\nCREATE TABLE classics (\n author VARCHAR(128),\n title VARCHAR(128),\n category VARCHAR(16),\n year SMALLINT,\n isbn CHAR(13),\n INDEX(author(20)),\n INDEX(title(20)),\n INDEX(category(4)),\n190 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 221,
    "text": "INDEX(year),\n PRIMARY KEY (isbn)) ENGINE MyISAM;\nCreating a FULLTEXT index\nUnlike a regular index, MySQL ’s FULLTEXT  allows super-fast searches of entire col‐\numns of text. It stores every word in every data string in a special index that you can\nsearch using “natural language, ” in a similar manner to using a search engine.\nIt’s not strictly true that MySQL stores all the words in a FULLTEXT\nindex, because it has a built-in list of more than 500 words that it\nchooses to ignore because they are so common that they aren’t very\nhelpful for searching anyway. This list, called stopwords , includes\nthe, as, is, of, and so on. The list helps MySQL run much more\nquickly when performing a FULLTEXT  search and keeps database\nsizes down. Appendix C  contains the full list of stopwords.\nHere are some things that you should know about FULLTEXT  indexes:\n•FULLTEXT  indexes can be used only with MyISAM tables, the type used by\nMySQL ’s default storage engine (MySQL supports at least 10 different storage\nengines). If you need to convert a table to MyISAM, you can usually use the\nMySQL command ALTER TABLE tablename ENGINE = MyISAM; .\n•FULLTEXT  indexes can be created for CHAR , VARCHAR , and TEXT  columns only.\n•A FULLTEXT  index definition can be given in the CREATE TABLE  statement when a\ntable is created, or added later using ALTER TABLE  (or CREATE INDEX ).\n•For large data sets, it is much  faster to load your data into a table that has no\nFULLTEXT  index and then create the index than to load data into a table that has\nan existing FULLTEXT  index.\nTo create a FULLTEXT  index, apply it to one or more records as in Example 8-15 ,\nwhich adds a FULLTEXT  index to the pair of columns author  and title in the classics\ntable (this index is in addition to the ones already created and does not affect them).\nExample 8-15. Adding a FULLTEXT index to the table classics\nALTER TABLE classics ADD FULLTEXT(author,title);\nY ou can now perform FULLTEXT  searches across this pair of columns. This feature\ncould really come into its own if you could now add the entire text of these publica‐\ntions to the database (particularly as they’re out of copyright protection) and they\nwould be fully searchable. See the section “MATCH...AGAINST”  on page 197 for a\ndescription of searches using FULLTEXT .\nIndexes | 191"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 222,
    "text": "If you find that MySQL is running slower than you think it should\nbe when accessing your database, the problem is usually related to\nyour indexes. Either you don’t have an index where you need one,\nor the indexes are not optimally designed. Tweaking a table’s\nindexes will often solve such a problem. Performance is beyond the\nscope of this book, but in Chapter 9  I’ll give you a few tips so you\nknow what to look for.\nQuerying a MySQL Database\nSo far, we’ve created a MySQL database and tables, populated them with data, and\nadded indexes to make them fast to search. Now it’s time to look at how these\nsearches are performed, and the various commands and qualifiers available.\nSELECT\nAs you saw in Figure 8-4 , the SELECT  command is used to extract data from a table. In\nthat section, I used its simplest form to select all data and display it—something you\nwill never want to do on anything but the smallest tables, because all the data will\nscroll by at an unreadable pace. Let’s now examine SELECT  in more detail.\nThe basic syntax is as follows:\nSELECT something  FROM tablename ;\nThe something  can be an * (asterisk) as you saw before, which means every column ,\nor you can choose to select only certain columns. For instance, Example 8-16  shows\nhow to select just the author  and title and just the title and isbn. The result of typing\nthese commands can be seen in Figure 8-9 .\nExample 8-16. Two different  SELECT statements\nSELECT author,title FROM classics;\nSELECT title,isbn FROM classics;\n192 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 223,
    "text": "Figure 8-9. The output from two different  SELECT statements\nSELECT COUNT\nAnother replacement for the something  parameter is COUNT , which can be used in\nmany ways. In Example 8-17 , it displays the number of rows in the table by passing *\nas a parameter, which means all rows . As you’ d expect, the result returned is 5, as\nthere are five publications in the table.\nExample 8-17. Counting rows\nSELECT COUNT(*) FROM classics;\nSELECT DISTINCT\nThis qualifier (and its synonym DISTINCTROW ) allows you to weed out multiple entries\nwhen they contain the same data. For instance, suppose that you want a list of all\nauthors in the table. If you select just the author  column from a table containing mul‐\ntiple books by the same author, you’ll normally see a long list with the same author\nnames over and over. But by adding the DISTINCT  keyword, you can show each\nauthor just once. So let’s test that out by adding another row that repeats one of our\nexisting authors ( Example 8-18 ).\nExample 8-18. Duplicating data\nINSERT INTO classics(author, title, category, year, isbn)\n VALUES('Charles Dickens','Little Dorrit','Fiction','1857', '9780141439969');\nNow that Charles Dickens appears twice in the table, we can compare the results of\nusing SELECT  with and without the DISTINCT  qualifier. Example 8-19  and Figure 8-10\nIndexes | 193"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 224,
    "text": "show that the simple SELECT  lists Dickens twice, and the command with the DISTINCT\nqualifier shows him only once.\nExample 8-19. With and without the DISTINCT qualifier\nSELECT author FROM classics;\nSELECT DISTINCT author FROM classics;\nFigure 8-10. Selecting data with and without DISTINCT\nDELETE\nWhen you need to remove  a row from a table, use the DELETE  command. Its syntax is\nsimilar to the SELECT  command and allows you to narrow down the exact row or\nrows to delete using qualifiers such as WHERE  and LIMIT .\nNow that you’ve seen the effects of the DISTINCT  qualifier, if you typed Example 8-18 ,\nyou should remove Little Dorrit  by entering the commands in Example 8-20 .\nExample 8-20. Removing the new entry\nDELETE FROM classics WHERE title='Little Dorrit';\nThis example issues a DELETE  command for all rows whose title column contains the\nstring Little Dorrit .\nThe WHERE  keyword is very powerful, and important to enter correctly; an error could\nlead a command to the wrong rows (or have no effect in cases where nothing matches\nthe WHERE  clause). So now we’ll spend some time on that clause, which is the heart\nand soul of SQL.\n194 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 225,
    "text": "WHERE\nThe WHERE  keyword enables you to narrow down queries by returning only those\nwhere  a certain expression is true. Example 8-20  returns only the rows where the col‐\numn exactly matches the string Little Dorrit , using the equality operator =.\nExample 8-21  shows a couple more examples of using WHERE  with =.\nExample 8-21. Using the WHERE keyword\nSELECT author,title FROM classics WHERE author=\"Mark Twain\";\nSELECT author,title FROM classics WHERE isbn=\"9781598184891 \";\nGiven our current table, the two commands in Example 8-21  display the same results.\nBut we could easily add more books by Mark Twain, in which case the first line would\ndisplay all titles he wrote and the second line would continue (because we know the\nISBN is unique) to display The Adventures of Tom Sawyer . In other words, searches\nusing a unique key are more predictable, and you’ll see further evidence later of the\nvalue of unique and primary keys.\nY ou can also do pattern matching for your searches using the LIKE  qualifier, which\nallows searches on parts of strings. This qualifier should be used with a % character\nbefore or after some text. When placed before a keyword, % means anything before .\nAfter a keyword, it means anything after . Example 8-22  performs three different quer‐\nies, one for the start of a string, one for the end, and one for anywhere in a string. Y ou\ncan see the results of these commands in Figure 8-11 .\nExample 8-22. Using the LIKE qualifier\nSELECT author,title FROM classics WHERE author LIKE \"Charles%\";\nSELECT author,title FROM classics WHERE title LIKE \"%Species\";\nSELECT author,title FROM classics WHERE title LIKE \"%and%\";\nThe first command outputs the publications by both Charles Darwin and Charles\nDickens because the LIKE  qualifier was set to return anything matching the string\nCharles  followed by any other text. Then just The Origin of Species  is returned,\nbecause it’s the only row whose column ends with the string Species . Last, both\nPride and Prejudice  and Romeo and Juliet  are returned, because they both\nmatched the string and anywhere in the column.\nThe % will also match if there is nothing in the position it occupies; in other words, it\ncan match an empty string.\nIndexes | 195"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 226,
    "text": "Figure 8-11. Using WHERE with the LIKE qualifier\nLIMIT\nThe LIMIT  qualifier enables you to choose how many rows to return in a query, and\nwhere in the table to start returning them. When passed a single parameter, it tells\nMySQL to start at the beginning of the results and just return the number of rows\ngiven in that parameter. If you pass it two parameters, the first indicates the offset\nfrom the start of the results where MySQL should start the display, and the second\nindicates how many to return. Y ou can think of the first parameter as saying, “Skip\nthis number of results at the start. ”\nExample 8-23  includes three commands. The first returns the first three rows from\nthe table. The second returns two rows starting at position 1 (skipping the first row).\nThe last command returns a single row starting at position 3 (skipping the first three\nrows). Figure 8-12  shows the results of issuing these three commands.\nExample 8-23. Limiting the number of results returned\nSELECT author,title FROM classics LIMIT 3;\nSELECT author,title FROM classics LIMIT 1,2;\nSELECT author,title FROM classics LIMIT 3,1;\nBe careful with the LIMIT  keyword, because offsets start at 0, but\nthe number of rows to return starts at 1. So LIMIT 1,3  means\nreturn three  rows starting from the second  row.\n196 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 227,
    "text": "Figure 8-12. Restricting the rows returned with LIMIT\nMATCH...AGAINST\nThe MATCH...AGAINST  construct can be used on columns that have been given  a FULL\nTEXT  index (see the section “Creating a FULLTEXT index”  on page 191). With it, you\ncan make natural-language searches as you would in an Internet search engine.\nUnlike the use of WHERE...=  or WHERE...LIKE , MATCH...AGAINST  lets you enter multi‐\nple words in a search query and checks them against all words in the FULLTEXT  col‐\numns. FULLTEXT  indexes are case-insensitive, so it makes no difference what case is\nused in your queries.\nAssuming that you have added a FULLTEXT  index to the author  and title columns,\nenter the three queries shown in Example 8-24 . The first asks for any of these col‐\numns that contain the word and to be returned. Because and is a stopword, MySQL\nwill ignore it and the query will always produce an empty set—no matter what is\nstored in the columns. The second query asks for any rows that contain both of the\nwords curiosity  and shop  anywhere in them, in any order, to be returned. And the last\nquery applies the same kind of search for the words tom and sawyer . Figure 8-13\nshows the results of these queries.\nExample 8-24. Using MATCH...AGAINST on FULLTEXT indexes\nSELECT author,title FROM classics\n WHERE MATCH(author,title) AGAINST('and');\nSELECT author,title FROM classics\n WHERE MATCH(author,title) AGAINST('curiosity shop');\nSELECT author,title FROM classics\n WHERE MATCH(author,title) AGAINST('tom sawyer');\nIndexes | 197"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 228,
    "text": "Figure 8-13. Using MATCH...AGAINST on a FULLTEXT index\nMATCH...AGAINST...in Boolean Mode\nIf you wish to give your MATCH...AGAINST  queries  even more power, use Boolean\nmode. This changes the effect of the standard FULLTEXT  query so that it searches for\nany combination of search words, instead of requiring all search words to be in the\ntext. The presence of a single word in a column causes the search to return the row.\nBoolean mode also allows you to preface search words with a + or - sign to indicate\nwhether they must be included or excluded. If normal Boolean mode says, “ Any of\nthese words will do, ” a plus sign means, “This word must be present; otherwise, don’t\nreturn the row. ” A minus sign means, “This word must not be present; its presence\ndisqualifies the row from being returned. ”\nExample 8-25  illustrates Boolean mode through two queries. The first asks for all\nrows containing the word charles  and not the word species  to be returned. The second\nuses double quotes to request that all rows containing the exact phrase origin of  be\nreturned. Figure 8-14  shows the results of these queries.\nExample 8-25. Using MATCH...AGAINST...in Boolean Mode\nSELECT author,title FROM classics\n WHERE MATCH(author,title)\n AGAINST('+charles -species' IN BOOLEAN MODE);\nSELECT author,title FROM classics\n WHERE MATCH(author,title)\n AGAINST('\"origin of\"' IN BOOLEAN MODE);\n198 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 229,
    "text": "Figure 8-14. Using MATCH...AGAINST...in Boolean Mode\nAs you would expect, the first request returns only The Old Curiosity Shop  by\nCharles Dickens, because any rows containing the word species  have been excluded,\nso Charles Darwin’s publication is ignored.\nThere is something of interest to note in the second query: the\nstopword of is part of the search string, but is still used by the\nsearch because the double quotation marks override stopwords.\nUPDATE...SET\nThis construct allows you to update the contents of a field. If you wish to change the\ncontents of one or more fields, you need to first narrow in on just the field or fields to\nbe changed, in much the same way you use the SELECT  command. Example 8-26\nshows the use of UPDATE...SET  in two different ways. Y ou can see the results in\nFigure 8-15 .\nExample 8-26. Using UPDATE...SET\nUPDATE classics SET author='Mark Twain (Samuel Langhorne Clemens)'\n WHERE author='Mark Twain';\nUPDATE classics SET category='Classic Fiction'\n WHERE category='Fiction';\nIndexes | 199"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 230,
    "text": "Figure 8-15. Updating columns in the classics table\nIn the first query, Mark Twain’s real name of Samuel Langhorne Clemens was\nappended to his pen name in brackets, which affected only one row. The second\nquery, however, affected three rows, because it changed all occurrences of the word\nFiction  in the category  column to the term Classic Fiction .\nWhen performing an update, you can also make use of the qualifiers you have already\nseen, such as LIMIT , and the following ORDER BY  and GROUP BY  keywords.\nORDER BY\nORDER BY  sorts returned results by one or more columns in ascending or descending\norder. Example 8-27  shows two such queries, the results of which can be seen in\nFigure 8-16 .\nExample 8-27. Using ORDER BY\nSELECT author,title FROM classics ORDER BY author;\nSELECT author,title FROM classics ORDER BY title DESC;\nAs you can see, the first query returns the publications by author  in ascending alpha‐\nbetical order (the default), and the second returns them by title in descending order.\n200 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 231,
    "text": "Figure 8-16. Sorting the results of requests\nIf you wanted to sort all the rows by author  and then by descending year of publica‐\ntion (to view the most recent first), you would issue the following query:\nSELECT author,title,year FROM classics ORDER BY author,year DESC;\nThis shows that each ascending and descending qualifier applies to a single column.\nThe DESC  keyword applies only to the preceding column, year. Because you allow\nauthor  to use the default sort order, it is sorted in ascending order. Y ou could also\nhave explicitly specified ascending order for that column, with the same results:\nSELECT author,title,year FROM classics ORDER BY author ASC,year DESC;\nGROUP BY\nIn a similar fashion to ORDER BY , you can group results returned from queries using\nGROUP BY , which is good for retrieving information about a group of data. For exam‐\nple, if you want to know how many publications there are of each category in the\nclassics  table, you can issue the following query:\nSELECT category,COUNT(author) FROM classics GROUP BY category;\nwhich returns the following output:\n+-----------------+---------------+\n| category        | COUNT(author) |\n+-----------------+---------------+\n| Classic Fiction |             3 |\n| Non-Fiction     |             1 |\n| Play            |             1 |\n+-----------------+---------------+\n3 rows in set (0.00 sec)\nIndexes | 201"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 232,
    "text": "Joining Tables Together\nIt is quite normal to maintain multiple tables  within a database, each holding a differ‐\nent type of information. For example, consider the case of a customers  table that needs\nto be able to be cross-referenced with publications purchased from the classics  table.\nEnter the commands in Example 8-28  to create this new table and populate it with\nthree customers and their purchases. Figure 8-17  shows the result.\nExample 8-28. Creating and populating the customers table\nCREATE TABLE customers (\n name VARCHAR(128),\n isbn VARCHAR(13),\n PRIMARY KEY (isbn)) ENGINE MyISAM;\nINSERT INTO customers(name,isbn)\n VALUES('Joe Bloggs','9780099533474');\nINSERT INTO customers(name,isbn)\n VALUES('Mary Smith','9780582506206');\nINSERT INTO customers(name,isbn)\n VALUES('Jack Wilson','9780517123201');\nSELECT * FROM customers;\nFigure 8-17. Creating the customers table\nThere’s also a shortcut for inserting multiple rows of data, as in\nExample 8-28 , in which you can replace the three separate INSERT\nINTO  queries with a single one listing the data to be inserted, sepa‐\nrated by commas, like this:\nINSERT INTO customers(name,isbn) VALUES\n('Joe Bloggs','9780099533474'),\n('Mary Smith','9780582506206'),\n('Jack Wilson','9780517123201');\n202 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 233,
    "text": "Of course, in a proper table containing customers’ details there would also be\naddresses, phone numbers, email addresses, and so on, but they aren’t necessary for\nthis explanation. While creating the new table, you should have noticed that it has\nsomething in common with the classics  table: a column called isbn. Because it has the\nsame meaning in both tables (an ISBN refers to a book, and always the same book),\nwe can use this column to tie the two tables together into a single query, as in\nExample 8-29 .\nExample 8-29. Joining two tables into a single SELECT\nSELECT name,author,title from customers,classics\n WHERE customers.isbn=classics.isbn;\nThe result of this operation is the following:\n+-------------+-----------------+------------------------+\n| name        | author          | title                  |\n+-------------+-----------------+------------------------+\n| Joe Bloggs  | Charles Dickens | The Old Curiosity Shop |\n| Mary Smith  | Jane Austen     | Pride and Prejudice    |\n| Jack Wilson | Charles Darwin  | The Origin of Species  |\n+-------------+-----------------+------------------------+\n3 rows in set (0.00 sec)\nSee how this query has neatly tied both tables together to show the publications pur‐\nchased from the classics  table by the people in the customers  table?\nNATURAL JOIN\nUsing NATURAL JOIN , you can save yourself some typing and make queries a little\nclearer. This kind of join takes two tables and automatically joins columns that have\nthe same name. So, to achieve the same results as from Example 8-29 , you would\nenter the following:\nSELECT name,author,title FROM customers NATURAL JOIN classics;\nJOIN...ON\nIf you wish to specify the column on which to join two tables, use the JOIN...ON\nconstruct, as follows, to achieve results identical to those of Example 8-29 :\nSELECT name,author,title FROM customers\n JOIN classics ON customers.isbn=classics.isbn;\nUsing AS\nY ou can also save yourself some typing and improve query readability by creating\naliases using the AS keyword.  Follow a table name with AS and the alias to use. The\nfollowing code, therefore, is also identical in action to Example 8-29 . Aliases  can be\nIndexes | 203"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 234,
    "text": "particularly useful when you have long queries that reference the same table names\nmany times.\nSELECT name,author,title from\n customers AS cust, classics AS class WHERE cust.isbn=class.isbn;\nThe result of this operation is the following:\n+-------------+-----------------+------------------------+\n| name        | author          | title                  |\n+-------------+-----------------+------------------------+\n| Joe Bloggs  | Charles Dickens | The Old Curiosity Shop |\n| Mary Smith  | Jane Austen     | Pride and Prejudice    |\n| Jack Wilson | Charles Darwin  | The Origin of Species  |\n+-------------+-----------------+------------------------+\n3 rows in set (0.00 sec)\nUsing Logical Operators\nY ou can also use the logical operators AND, OR, and NOT in your MySQL WHERE  queries\nto further narrow  down your selections. Example 8-30  shows one instance of each,\nbut you can mix and match them in any way you need.\nExample 8-30. Using logical operators\nSELECT author,title FROM classics WHERE\n author LIKE \"Charles%\" AND author LIKE \"%Darwin\";\nSELECT author,title FROM classics WHERE\n author LIKE \"%Mark Twain%\" OR author LIKE \"%Samuel Langhorne Clemens%\";\nSELECT author,title FROM classics WHERE\n author LIKE \"Charles%\" AND author NOT LIKE \"%Darwin\";\nI’ve chosen the first query, because Charles Darwin might be listed in some rows by\nhis full name, Charles Robert Darwin. Thus, the query returns publications as long as\nthe author  column starts with Charles  and ends with Darwin . The second query\nsearches for publications written using either Mark Twain’s pen name or his real\nname, Samuel Langhorne Clemens. The third query returns publications written by\nauthors with the first name Charles but not the surname Darwin.\nMySQL Functions\nY ou might wonder why anyone would want to use MySQL functions when PHP\ncomes with a whole bunch of powerful functions of its own. The answer is very sim‐\nple: the MySQL functions work on the data right there in the database. If you were to\nuse PHP , you would first have to extract raw data from MySQL, manipulate it, and\nthen perform the database query you first wanted.\n204 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 235,
    "text": "Having functions built into MySQL substantially reduces the time needed for per‐\nforming complex queries, as well as their complexity. If you wish to learn more about\nthe available string and date/time functions, you can visit the following URLs:\nhttp://tinyurl.com/mysqlstrings\nhttp://tinyurl.com/mysqldates\nHowever, to get you started, Appendix D  describes a subset containing the most use‐\nful of these functions.\nAccessing MySQL via phpMyAdmin\nAlthough to use MySQL you have to learn these main commands and how they work,\nonce you understand them, it can be much quicker and simpler to use a program\nsuch as phpMyAdmin  to manage your databases and tables.\nTo do this, type the following to call up the XAMPP main page shown in Figure 8-18 :\nhttp://localhost/xampp\nFigure 8-18. The XAMPP Dashboard\nAccessing MySQL via phpMyAdmin | 205"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 236,
    "text": "Now click the phpMyAdmin link toward the bottom of the lefthand menu to open up\nthe program (see Figure 8-19 ).\nFigure 8-19. The phpMyAdmin main screen\nIn the lefthand pane of the main phpMyAdmin screen, you can click to select any\ndatabase you wish to work with. This will open the database and display its tables.\nY ou can also click New to create a new database.\nFrom here you can perform all the main operations, such as creating new databases,\nadding tables, creating indexes, and much more. To read the supporting documenta‐\ntion for phpMyAdmin, visit https://docs.phpmyadmin.net .\nIf you worked with me through the examples in this chapter, congratulations—it’s\nbeen quite a long journey. Y ou’ve come all the way from learning how to create a\nMySQL database through issuing complex queries that combine multiple tables, to\nusing Boolean operators and leveraging MySQL ’s various qualifiers.\nIn the next chapter, we’ll start looking at how to approach efficient database design,\nadvanced SQL techniques, and MySQL functions and transactions.\nQuestions\n1.What is the purpose of the semicolon in MySQL queries?\n2.Which command would you use to view the available databases or tables?\n206 | Chapter 8: Introduction to MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 237,
    "text": "3.How would you create a new MySQL user on the local host called newuser  with a\npassword of newpass  and with access to everything in the database newdatabase ?\n4.How can you view the structure of a table?\n5.What is the purpose of a MySQL index?\n6.What benefit does a FULLTEXT  index provide?\n7.What is a stopword?\n8.Both SELECT DISTINCT  and GROUP BY  cause the display to show only one output\nrow for each value in a column, even if multiple rows contain that value. What\nare the main differences between SELECT DISTINCT  and GROUP BY ?\n9.Using the SELECT...WHERE  construct, how would you return only rows contain‐\ning the word Langhorne  somewhere in the author  column of the classics  table\nused in this chapter?\n10.What needs to be defined in two tables to make it possible for you to join them\ntogether?\nSee Chapter 8 Answers  in Appendix A  for the answers to these questions.\nQuestions | 207"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 238,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 239,
    "text": "CHAPTER 9\nMastering MySQL\nChapter 8  provided you with a good grounding in the practice of using relational\ndatabases with Structured Query Language. Y ou’ve learned about creating databases\nand the tables they comprise, as well as inserting, looking up, changing, and deleting\ndata.\nWith that knowledge under your belt, we now need to look at how to design databa‐\nses for maximum speed and efficiency. For example, how do you decide what data to\nplace in which table? Well, over the years, a number of guidelines have been devel‐\noped that—if you follow them—ensure that your databases will be efficient and capa‐\nble of growing as you feed them more and more data.\nDatabase Design\nIt’s very important that you design a database correctly before you  start to create it;\notherwise, you are almost certainly going to have to go back and change it by splitting\nup some tables, merging others, and moving various columns about in order to ach‐\nieve sensible relationships that MySQL can easily use.\nSitting down with a sheet of paper and a pencil and writing down a selection of the\nqueries that you think you and your users are likely to ask is an excellent starting\npoint. In the case of an online bookstore’s database, some of your questions could be:\n•How many authors, books, and customers are in the database?\n•Which author wrote a certain book?\n•Which books were written by a certain author?\n•What is the most expensive book?\n•What is the best-selling book?\n209"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 240,
    "text": "•Which books have not sold this year?\n•Which books did a certain customer buy?\n•Which books have been purchased along with the same other books?\nOf course, there are many more queries that you could make on such a database, but\neven this small sample will begin to give you insights into how to lay out your tables.\nFor example, books and ISBNs can probably be combined into one table, because\nthey are closely linked (we’ll examine some of the subtleties later). In contrast, books\nand customers should be in separate tables, because their connection is very loose. A\ncustomer can buy any book, and even multiple copies of a book, yet a book can be\nbought by many customers and be ignored by still more potential customers.\nWhen you plan to do a lot of searches on something, it can often benefit by having its\nown table. And when couplings between things are loose, it’s best to put them in sep‐\narate tables.\nTaking into account those simple rules of thumb, we can guess we’ll need at least\nthree tables to accommodate all these queries:\nAuthors\nThere will be lots of searches for authors, many of whom have collaborated on titles,\nand many of whom will be featured in collections. Listing all the information about\neach author together, linked to that author, will produce optimal results for searches\n—hence an Authors  table.\nBooks\nMany books appear in different editions. Sometimes they change publisher and\nsometimes they have the same titles as other, unrelated books. So the links between\nbooks and authors are complicated enough to call for a separate table.\nCustomers\nIt’s even more clear why customers should get their own table, as they are free to pur‐\nchase any book by any author.\nPrimary Keys: The Keys to Relational Databases\nUsing the power of relational databases, we can define information for each author,\nbook, and customer in just one place. Obviously, what interests us is the links\nbetween them—such as who wrote each book and who purchased it—but we can\nstore that information just by making links between the three tables. I’ll show you the\nbasic principles, and then it just takes practice for it to feel natural.\nThe magic involves giving every author a unique identifier. Do the same for every\nbook and for every customer. We saw the means of doing that in the previous chap‐\nter: the primary key . For a book, it makes sense to use the ISBN, although you then\nhave to deal with multiple editions that have different ISBNs. For authors and cus‐\n210 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 241,
    "text": "tomers, you can just assign arbitrary keys, which the AUTO_INCREMENT  feature that\nyou saw in the last chapter makes easy.\nIn short, every table will be designed around some object that you’re likely to search\nfor a lot—an author, book, or customer, in this case—and that object will have a pri‐\nmary key. Don’t choose a key that could possibly have the same value for different\nobjects. The ISBN is a rare case for which an industry has provided a primary key\nthat you can rely on to be unique for each product. Most of the time, you’ll create an\narbitrary key for this purpose, using AUTO_INCREMENT .\nNormalization\nThe process of separating your data into tables and creating  primary keys is called\nnormalization . Its main goal is to make sure each piece of information appears in the\ndatabase only once. Duplicating data is inefficient, because it makes databases larger\nthan they need to be and therefore slows access. But, more important, the presence of\nduplicates creates a strong risk that you’ll update only one row of duplicated data,\ncreating inconsistencies in a database and potentially causing serious errors.\nThus, if you list the titles of books in the Authors  table as well as the Books  table, and\nyou have to correct a typographic error in a title, you’ll have to search through both\ntables and make sure you make the same change every place the title is listed. It’s bet‐\nter to keep the title in one place and use the ISBN in other places.\nBut in the process of splitting a database into multiple tables, it’s important not to go\ntoo far and create more tables than is necessary, which would also lead to inefficient\ndesign and slower access.\nLuckily, E. F. Codd, the  inventor of the relational model, analyzed the concept of nor‐\nmalization and split it into three separate schemas called First , Second , and Third  Nor‐\nmal Form . If you modify a database to satisfy each of these forms in order, you will\nensure that your database is optimally balanced for fast access, and minimum mem‐\nory and disk space usage.\nTo see how the normalization process works, let’s start with the rather monstrous\ndatabase in Table 9-1 , which shows a single table containing all of the author names,\nbook titles, and (fictional) customer details. Y ou could consider it a first attempt at a\ntable intended to keep track of which customers have ordered books. Obviously, this\nis inefficient design, because data is duplicated all over the place (duplications are\nhighlighted), but it represents a starting point.\nNormalization | 211"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 242,
    "text": "Table 9-1. A highly inefficient  design for a database table\nAuthor 1 Author 2 Title ISBN Price\n$USCustomer\nNameCustomer Address Purchase\nDate\nDavid Sklar Adam\nTrachtenbergPHP Cookbook 0596101015 44.99 Emma\nBrown1565 Rainbow\nRoad, Los Angeles,\nCA 90014Mar 03 2009\nDanny\nGoodman Dynamic HTML 0596527403 59.99 Darren\nRyder4758 Emily Drive,\nRichmond, VA\n23219Dec 19\n2008\nHugh E\nWilliamsDavid Lane PHP And\nMySQL0596005436 44.95 Earl B.\nThurston862 Gregory Lane,\nFrankfort, KY 40601Jun 22 2009\nDavid Sklar Adam\nTrachtenbergPHP Cookbook 0596101015 44.99 Darren\nRyder4758 Emily Drive,\nRichmond, VA\n23219Dec 19\n2008\nRasmus\nLerdorfKevin Tatroe &\nPeter\nMacIntyreProgramming\nPHP0596006815 39.99 David Miller 3647 Cedar Lane,\nWaltham, MA\n02154Jan 16 2009\nIn the following three sections, we will examine this database design, and you’ll see\nhow we can improve it by removing the various duplicate entries and splitting the\nsingle table into multiple tables, each containing one type of data.\nFirst Normal Form\nFor a database to satisfy the First Normal Form , it must fulfill three requirements:\n•There should be no repeating columns containing the same kind of data.\n•All columns should contain a single value.\n•There should be a primary key to uniquely identify each row.\nLooking at these requirements in order, you should notice straightaway that both the\nAuthor 1  and Author 2  columns constitute repeating data types. So we already have a\ntarget column for pulling into a separate table, as the repeated Author  columns violate\nRule 1.\nSecond, there are three authors listed for the final book, Programming PHP . I’ve han‐\ndled that by making Kevin Tatroe and Peter MacIntyre share the Author 2  column,\nwhich violates Rule 2—yet another reason to transfer the Author  details to a separate\ntable.\nHowever, Rule 3 is satisfied, because the primary key of ISBN has already been cre‐\nated.\n212 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 243,
    "text": "Table 9-2  shows the result of removing the Authors  columns from Table 9-1 . Already\nit looks a lot less cluttered, although there remain duplications that are highlighted.\nTable 9-2. The result of stripping the Authors columns from Table 9-1\nTitle ISBN Price\n$USCustomer Name Customer Address Purchase Date\nPHP Cookbook 0596101015 44.99 Emma Brown 1565 Rainbow Road, Los Angeles, CA\n90014Mar 03 2009\nDynamic HTML 0596527403 59.99 Darren Ryder 4758 Emily Drive, Richmond, VA\n23219Dec 19 2008\nPHP and MySQL 0596005436 44.95 Earl B. Thurston 862 Gregory Lane, Frankfort, KY 40601 Jun 22 2009\nPHP Cookbook 0596101015 44.99 Darren Ryder 4758 Emily Drive, Richmond, VA\n23219Dec 19 2008\nProgramming PHP 0596006815 39.99 David Miller 3647 Cedar Lane, Waltham, MA 02154 Jan 16 2009\nThe new Authors  table shown in Table 9-3  is small and simple. It just lists the ISBN of\na title along with an author. If a title has more than one author, additional authors get\ntheir own rows. At first, you may feel ill at ease with this table, because you can’t tell\nwhich author wrote which book. But don’t worry: MySQL can quickly tell you. All\nyou have to do is tell it which book you want information for, and MySQL will use its\nISBN to search the Authors  table in a matter of milliseconds.\nTable 9-3. The new Authors table\nISBN Author\n0596101015 David Sklar\n0596101015 Adam Trachtenberg\n0596527403 Danny Goodman\n0596005436 Hugh E Williams\n0596005436 David Lane\n0596006815 Rasmus Lerdorf\n0596006815 Kevin Tatroe\n0596006815 Peter MacIntyre\nAs I mentioned earlier, the ISBN will be the primary key for the Books  table, when we\nget around to creating that table. I mention that here in order to emphasize that the\nISBN is not, however, the primary key for the Authors  table. In the real world, the\nAuthors  table would deserve a primary key, too, so that each author would have a key\nto uniquely identify him or her.\nSo, in the Authors  table, the ISBN is just a column for which—for the purposes of\nspeeding up searches—we’ll probably make a key, but not the primary key. In fact, it\nNormalization | 213"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 244,
    "text": "cannot  be the primary key in this table, because it’s not unique: the same ISBN\nappears multiple times whenever two or more authors have collaborated on a book.\nBecause we’ll use it to link authors to books in another table, this column is called a\nforeign  key.\nKeys (also called indexes ) have several  purposes in MySQL. The\nfundamental reason for defining a key is to make searches faster.\nY ou’ve seen examples in Chapter 8  in which keys are used in WHERE\nclauses for searching. But a key can also be useful to uniquely iden‐\ntify an item. Thus, a unique key is often used as a primary key in\none table, and as a foreign key to link rows in that table to rows in\nanother table.\nSecond Normal Form\nThe First Normal Form deals with duplicate data (or redundancy) across multiple\ncolumns.  The Second Normal Form  is all about redundancy across multiple rows. To\nachieve Second Normal Form, your tables must already be in First Normal Form.\nOnce this has been done, we achieve Second Normal Form by identifying columns\nwhose data repeats in different places and then removing them to their own tables.\nSo let’s look again at Table 9-2 . Notice how Darren Ryder bought two books and\ntherefore his details are duplicated. This tells us that the Customer  columns need to\nbe pulled into their own tables. Table 9-4  shows the result of removing the Customer\ncolumns from Table 9-2 .\nTable 9-4. The new Titles table\nISBN Title Price\n0596101015 PHP Cookbook 44.99\n0596527403 Dynamic HTML 59.99\n0596005436 PHP and MySQL 44.95\n0596006815 Programming PHP 39.99\nAs you can see, all that’s left in Table 9-4  are the ISBN , Title , and Price  columns for\nfour unique books, so this now constitutes an efficient and self-contained table that\nsatisfies the requirements of both the First and Second Normal Forms. Along the way,\nwe’ve managed to reduce the information to data closely related to book titles. This\ntable could also include years of publication, page counts, numbers of reprints, and so\non, as these details are also closely related. The only rule is that we can’t put in any\ncolumn that could have multiple values for a single book, because then we’ d have to\nlist the same book in multiple rows and would thus violate Second Normal Form.\nRestoring an Author  column, for instance, would violate this normalization.\n214 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 245,
    "text": "However, looking at the extracted Customer  columns, now in Table 9-5 , we can see\nthat there’s still more normalization work to do, because Darren Ryder’s details are\nstill duplicated. And it could also be argued that First Normal Form Rule 2 (all col‐\numns should contain a single value) has not been properly complied with, because\nthe addresses really need to be broken into separate columns for Address , City, State ,\nand Zip code .\nTable 9-5. The Customer details from Table 9-2\nISBN Customer Name Customer Address Purchase Date\n0596101015 Emma Brown 1565 Rainbow Road, Los Angeles, CA 90014 Mar 03 2009\n0596527403 Darren Ryder 4758 Emily Drive, Richmond, VA 23219 Dec 19 2008\n0596005436 Earl B. Thurston 862 Gregory Lane, Frankfort, KY 40601 Jun 22 2009\n0596101015 Darren Ryder 4758 Emily Drive, Richmond, VA 23219 Dec 19 2008\n0596006815 David Miller 3647 Cedar Lane, Waltham, MA 02154 Jan 16 2009\nWhat we have to do is split this table further to ensure that each customer’s details are\nentered only once. Because the ISBN is not and cannot be used as a primary key to\nidentify customers (or authors), a new key must be created.\nTable 9-6  is the result of normalizing the Customers  table into both First and Second\nNormal Forms. Each customer now has a unique customer number called CustNo\nthat is the table’s primary key, and that will most likely have been created via\nAUTO_INCREMENT . All the parts of customer addresses have also been separated into\ndistinct columns to make them easily searchable and updateable.\nTable 9-6. The new Customers table\nCustNo Name Address City State Zip\n1 Emma Brown 1565 Rainbow Road Los Angeles CA 90014\n2 Darren Ryder 4758 Emily Drive Richmond VA 23219\n3 Earl B. Thurston 862 Gregory Lane Frankfort KY 40601\n4 David Miller 3647 Cedar Lane Waltham MA 02154\nAt the same time, in order to normalize Table 9-6 , we had to remove the information\non customer purchases, because otherwise, there would be multiple instances of cus‐\ntomer details for each book purchased. Instead, the purchase data is now placed in a\nnew table called Purchases  (see Table 9-7 ).\nNormalization | 215"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 246,
    "text": "Table 9-7. The new Purchases table\nCustNo ISBN Date\n1 0596101015 Mar 03 2009\n2 0596527403 Dec 19 2008\n2 0596101015 Dec 19 2008\n3 0596005436 Jun 22 2009\n4 0596006815 Jan 16 2009\nHere the CustNo  column from Table 9-6  is reused as a key to tie both the Customers\nand the Purchases  tables together. Because the ISBN column is also repeated here, this\ntable can be linked with either of the Authors  or the Titles  tables, too.\nThe CustNo  column can be a useful key in the Purchases  table, but it’s not a primary\nkey. A single customer can buy multiple books (and even multiple copies of one\nbook), so the CustNo  column is not a primary key. In fact, the Purchases  table has no\nprimary key. That’s all right, because we don’t expect to need to keep track of unique\npurchases. If one customer buys two copies of the same book on the same day, we’ll\njust allow two rows with the same information. For easy searching, we can define\nboth CustNo  and ISBN  as keys—just not as primary keys.\nThere are now four tables, one more than the three we had initially\nassumed would be needed. We arrived at this decision through the\nnormalization processes, by methodically following the First and\nSecond Normal Form rules, which made it plain that a fourth table\ncalled Purchases  would also be required.\nThe tables we now have are Authors  (Table 9-3 ), Titles  (Table 9-4 ), Customers\n(Table 9-6 ), and Purchases  (Table 9-7 ), and we can link each table to any other using\neither the CustNo  or the ISBN  keys.\nFor example, to see which books Darren Ryder has purchased, you can look him up\nin Table 9-6 , the Customers  table, where you will see his CustNo  is 2. Armed with this\nnumber, you can now go to Table 9-7 , the Purchases  table; looking at the ISBN col‐\numn here, you will see that he purchased titles 0596527403 and 0596101015 on\nDecember 19, 2008. This looks like a lot of trouble for a human, but it’s not so hard\nfor MySQL.\nTo determine what these titles were, you can then refer to Table 9-4 , the Titles  table,\nand see that the books he bought were Dynamic HTML  and PHP Cookbook . Should\nyou wish to know the authors of these books, you could also use the ISBNs you just\nlooked up on Table 9-3 , the Authors  table, and you would see that ISBN 0596527403,\n216 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 247,
    "text": "Dynamic HTML , was written by Danny Goodman, and that ISBN 0596101015, PHP\nCookbook , was written by David Sklar and Adam Trachtenberg.\nThird Normal Form\nOnce you have a database that complies with both the First and Second Normal\nForms, it is in pretty good shape and you might not have to modify it any further.\nHowever, if you wish to be very strict with your database, you can ensure that it\nadheres to the Third  Normal Form , which requires that data that is not directly depen‐\ndent on the primary key but is dependent on another value in the table should also be\nmoved into separate tables, according to the dependence.\nFor example, in Table 9-6 , the Customers  table, it could be argued that the State , City,\nand Zip code  keys are not directly related to each customer, because many other peo‐\nple will have the same details in their addresses, too. However, they are directly\nrelated to each other, in that the street Address  relies on the City, and the City relies\non the State .\nTherefore, to satisfy Third Normal Form for Table 9-6 , you would need to split it into\nTable 9-8  through Table 9-11 .\nTable 9-8. Third  Normal Form Customers table\nCustNo Name Address Zip\n1 Emma Brown 1565 Rainbow Road 90014\n2 Darren Ryder 4758 Emily Drive 23219\n3 Earl B. Thurston 862 Gregory Lane 40601\n4 David Miller 3647 Cedar Lane 02154\nTable 9-9. Third  Normal Form Zip codes table\nZip CityID\n90014 1234\n23219 5678\n40601 4321\n02154 8765\nTable 9-10. Third  Normal Form Cities table\nCityID Name StateID\n1234 Los Angeles 5\n5678 Richmond 46\n4321 Frankfort 17\n8765 Waltham 21\nNormalization | 217"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 248,
    "text": "Table 9-11. Third  Normal Form States table\nStateID Name Abbreviation\n5 California CA\n46 Virginia VA\n17 Kentucky KY\n21 Massachusetts MA\nSo, how would you use this set of four tables instead of the single Table 9-6 ? Well, you\nwould look up the Zip code  in Table 9-8 , and then find the matching CityID  in\nTable 9-9 . Given this information, you could look up the city Name  in Table 9-10  and\nthen also find the StateID , which you could use in Table 9-11  to look up the State’s\nName .\nAlthough using the Third Normal Form in this way may seem like overkill, it can\nhave advantages. For example, take a look at Table 9-11 , where it has been possible to\ninclude both a state’s name and its two-letter abbreviation. It could also contain popu‐\nlation details and other demographics, if you desired.\nTable 9-10  could also contain even more localized demographics\nthat could be useful to you and/or your customers. By splitting up\nthese pieces of data, you can make it easier to maintain your data‐\nbase in the future, should it be necessary to add columns.\nDeciding whether to use the Third Normal Form can be tricky. Y our evaluation\nshould rest on what data you may need to add at a later date. If you are absolutely\ncertain that the name and address of a customer is all that you will ever require, you\nprobably will want to leave out this final normalization stage.\nOn the other hand, suppose you are writing a database for a large organization such\nas the U.S. Postal Service. What would you do if a city were to be renamed? With a\ntable such as Table 9-6 , you would need to perform a global search-and-replace on\nevery instance of that city. But if you have your database set up according to the Third\nNormal Form, you would have to change only a single entry in Table 9-10  for the\nchange to be reflected throughout the entire database.\nTherefore, I suggest that you ask yourself two questions to help you decide whether\nto perform a Third Normal Form normalization on any table:\n•Is it likely that many new columns will need to be added to this table?\n•Could any of this table’s fields require a global update at any point?\nIf either of the answers is yes, you should probably consider performing this final\nstage of normalization.\n218 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 249,
    "text": "When Not to Use Normalization\nNow that you know all about normalization, I’m going to tell you why you should\nthrow these rules out of the window on high-traffic sites. That’s right—you should\nnever fully normalize your tables on sites that will cause MySQL to thrash.\nNormalization requires spreading data across multiple tables, and this means making\nmultiple calls to MySQL for each query. On a very popular site, if you have normal‐\nized tables, your database access will slow down considerably once you get above a\nfew dozen concurrent users, because they will be creating hundreds of database\naccesses between them. In fact, I would go so far as to say you should denormalize\nany commonly looked-up data as much as you can.\nY ou see, if you have data duplicated across your tables, you can substantially reduce\nthe number of additional requests that need to be made, because most of the data you\nwant is available in each table. This means that you can simply add an extra column\nto a query and that field will be available for all matching results.\nOf course, you have to deal with the downsides previously mentioned, such as using\nup large amounts of disk space, and ensuring that you update every single duplicate\ncopy of data when one of them needs modifying.\nMultiple updates can be computerized, though. MySQL provides a feature called trig‐\ngers that make automatic changes to the database in response to changes you make.\n(Triggers are, however, beyond the scope of this book.) Another way to propagate\nredundant data is to set up a PHP program to run regularly and keep all copies in\nsync. The program reads changes from a “master” table and updates all the others.\n(Y ou’ll see how to access MySQL from PHP in the next chapter.)\nHowever, until you are very experienced with MySQL, I recommend that you fully\nnormalize all your tables (at least to First and Second Normal Form), as this will\ninstill the habit and put you in good stead. Only when you actually start to see\nMySQL logjams should you consider looking at denormalization.\nRelationships\nMySQL is called a relational  database management system because its tables store not\nonly data but the relationships  among the data. There are three categories of relation‐\nships.\nOne-to-One\nA one-to-one relationship  is like a (traditional) marriage: each item has a relationship\nto only one item of the other type. This is surprisingly rare. For instance, an author\ncan write multiple books, a book can have multiple authors, and even an address can\nbe associated with multiple customers. Perhaps the best example in this chapter so far\nRelationships | 219"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 250,
    "text": "of a one-to-one relationship is the relationship between the name of a state and its\ntwo-character abbreviation.\nHowever, for the sake of argument, let’s assume that there can always be only one cus‐\ntomer at any address. In such a case, the Customers–Addresses relationship in\nFigure 9-1  is a one-to-one relationship: only one customer lives at each address, and\neach address can have only one customer.\nFigure 9-1. The Customers table, Table 9-8 , split into two tables\nUsually, when two items have a one-to-one relationship, you just include them as col‐\numns in the same table. There are two reasons for splitting them into separate tables:\n•Y ou want to be prepared in case the relationship changes later.\n•The table has a lot of columns, and you think that performance or maintenance\nwould be improved by splitting it.\nOf course, when you build your own databases in the real world, you will have to cre‐\nate one-to-many Customer–Address relationships ( one address, many  customers).\nOne-to-Many\nOne-to-many  (or many-to-one) relationships occur when one row in one table is\nlinked to many rows in another table. Y ou have already seen how Table 9-8  would\ntake on a one-to-many relationship if multiple customers were allowed at the same\naddress, which is why it would have to be split up if that were the case.\nSo, looking at Table 9-8a within Figure 9-1 , you can see that it shares a one-to-many\nrelationship with Table 9-7  because there is only one of each customer in Table 9-8a.\nHowever Table 9-7 , the Purchases  table, can (and does) contain more than one pur‐\nchase from customers. Therefore, one customer has a relationship with many  purcha‐\nses.\nY ou can see these two tables alongside each other in Figure 9-2 , where the dashed\nlines joining rows in each table start from a single row in the lefthand table but can\nconnect to more than one row on the righthand table. This one-to-many relationship\n220 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 251,
    "text": "is also the preferred scheme to use when describing a many-to-one relationship, in\nwhich case you would normally swap the left and right tables to view them as a one-\nto-many relationship.\nFigure 9-2. Illustrating the relationship between two tables\nMany-to-Many\nIn a many-to-many relationship , many rows in one table are linked to many rows in\nanother table. To create this relationship, add a third table containing the same key\ncolumn from each of the other tables. This third table contains nothing else, as its\nsole purpose is to link up the other tables.\nTable 9-12  is just such a table. It was extracted from Table 9-7 , the Purchases  table, but\nomits the purchase date information. It contains a copy of the ISBN of every title\nsold, along with the customer number of each purchaser.\nTable 9-12. An intermediary table\nCustomer ISBN\n1 0596101015\n2 0596527403\n2 0596101015\n3 0596005436\n4 0596006815\nWith this intermediary table in place, you can traverse all the information in the data‐\nbase through a series of relations. Y ou can take an address as a starting point and find\nout the authors of any books purchased by the customer living at that address.\nFor example, let’s suppose that you want to find out about purchases in the 23219 zip\ncode. Look that zip code up in Table 9-8b, and you’ll find that customer number 2 has\nbought at least one item from the database. At this point, you can use Table 9-8a to\nRelationships | 221"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 252,
    "text": "find out his or her name, or use the new intermediary Table 9-12  to see the book(s)\npurchased.\nFrom here, you will find that two titles were purchased and can follow them back to\nTable 9-4  to find the titles and prices of these books, or to Table 9-3  to see who the\nauthors were.\nIf it seems to you that this is really combining multiple one-to-many relationships,\nthen you are absolutely correct. To illustrate, Figure 9-3  brings three tables together.\nFigure 9-3. Creating a many-to-many relationship via a third table\nFollow any zip code in the lefthand table to associated customer IDs. From there, you\ncan link to the middle table, which joins the left and right tables by linking customer\nIDs and ISBNs. Now all you have to do is follow an ISBN over to the right-hand table\nto see which book it relates to.\nY ou can also use the intermediary table to work your way backward from book titles\nto zip codes. The Titles  table can tell you the ISBN, which you can use in the middle\ntable to find ID numbers of customers who bought the books, and finally, you can use\nthe Customers  table to match the customer ID numbers to the customers’ zip codes.\nDatabases and Anonymity\nAn interesting aspect of using relations is that you can accumulate a lot of informa‐\ntion about some item—such as a customer—without actually knowing who that cus‐\ntomer is. Note that in the previous example we went from customers’ zip codes to\ncustomers’ purchases, and back again, without finding out the name of a customer.\nDatabases can be used to track people, but they can also be used to help preserve peo‐\nple’s privacy while still finding useful information.\n222 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 253,
    "text": "Transactions\nIn some applications, it is vitally important that a sequence of queries runs in the cor‐\nrect order and that every single query successfully completes.  For example, suppose\nthat you are creating a sequence of queries to transfer funds from one bank account\nto another. Y ou would not want either of the following events to occur:\n•Y ou add the funds to the second account, but when you try to subtract them\nfrom the first account, the update fails, and now both accounts have the funds.\n•Y ou subtract the funds from the first bank account, but the update request to add\nthem to the second account fails, and the funds have disappeared into thin air.\nAs you can see, not only is the order of queries important in this type of transaction,\nbut it is also vital that all parts of the transaction complete successfully. But how can\nyou ensure this happens, because surely after a query has occurred, it cannot be\nundone? Do you have to keep track of all parts of a transaction and then undo them\nall one at a time if any one fails? The answer is absolutely not, because MySQL comes\nwith powerful transaction-handling features to cover just these types of eventualities.\nIn addition, transactions allow concurrent access to a database by many users or pro‐\ngrams at the same time. MySQL handles this seamlessly by ensuring that all transac‐\ntions are queued and that users or programs take their turns and don’t tread on each\nother’s toes.\nTransaction Storage Engines\nTo be able to use MySQL ’s transaction facility, you have to be using MySQL ’s InnoDB\nstorage engine. This is easy to do, as it’s simply another parameter that you use when\ncreating a table. So go ahead and create a table of bank accounts by typing the com‐\nmands in Example 9-1 . (Remember that to do this, you will need access to the\nMySQL command line, and must also have already selected a suitable database in\nwhich to create this table.)\nExample 9-1. Creating a transaction-ready table\nCREATE TABLE accounts (\nnumber INT, balance FLOAT, PRIMARY KEY(number)\n) ENGINE InnoDB;\nDESCRIBE accounts;\nThe final line of this example displays the contents of the new table so you can ensure\nthat it was correctly created. The output from it should look like this:\nTransactions | 223"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 254,
    "text": "+---------+---------+------+-----+---------+-------+\n| Field   | Type    | Null | Key | Default | Extra |\n+---------+---------+------+-----+---------+-------+\n| number  | int(11) | NO   | PRI | 0       |       |\n| balance | float   | YES  |     | NULL    |       |\n+---------+---------+------+-----+---------+-------+\n2 rows in set (0.00 sec)\nNow let’s create two rows within the table so that you can practice using transactions.\nType the commands in Example 9-2 .\nExample 9-2. Populating the accounts table\nINSERT INTO accounts(number, balance) VALUES(12345, 1025.50);\nINSERT INTO accounts(number, balance) VALUES(67890, 140.00);\nSELECT * FROM accounts;\nThe third line displays the contents of the table to confirm that the rows were cor‐\nrectly inserted. The output should look like this:\n+--------+---------+\n| number | balance |\n+--------+---------+\n|  12345 |  1025.5 |\n|  67890 |     140 |\n+--------+---------+\n2 rows in set (0.00 sec)\nWith this table created and prepopulated, you are ready to start using transactions.\nUsing BEGIN\nTransactions in MySQL start with  either a BEGIN  or a START TRANSACTION  statement.\nType the commands in Example 9-3  to send a transaction to MySQL.\nExample 9-3. A MySQL transaction\nBEGIN;\nUPDATE accounts SET balance=balance+25.11 WHERE number=12345;\nCOMMIT;\nSELECT * FROM accounts;\nThe result of this transaction is displayed by the final line, and should look like this:\n+--------+---------+\n| number | balance |\n+--------+---------+\n|  12345 | 1050.61 |\n|  67890 |     140 |\n+--------+---------+\n2 rows in set (0.00 sec)\n224 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 255,
    "text": "As you can see, the balance of account number 12345 was increased by 25.11 and is\nnow 1050.61. Y ou may also have noticed the COMMIT  command in Example 9-3 , which\nis explained next.\nUsing COMMIT\nWhen you are satisfied that a series of queries in a transaction has successfully com‐\npleted, issue a COMMIT  command to commit all the changes to the database. Until it\nreceives a COMMIT , MySQL considers all the changes you make to be merely tempo‐\nrary. This feature gives you the opportunity to cancel a transaction by not sending a\nCOMMIT  but by issuing a ROLLBACK  command instead.\nUsing ROLLBACK\nUsing the ROLLBACK  command,  you can tell MySQL to forget all the queries made\nsince the start of a transaction and to end the transaction. See this in action by enter‐\ning the funds-transfer transaction in Example 9-4 .\nExample 9-4. A funds transfer transaction\nBEGIN;\nUPDATE accounts SET balance=balance-250 WHERE number=12345;\nUPDATE accounts SET balance=balance+250 WHERE number=67890;\nSELECT * FROM accounts;\nOnce you have entered these lines, you should see the following result:\n+--------+---------+\n| number | balance |\n+--------+---------+\n|  12345 |  800.61 |\n|  67890 |     390 |\n+--------+---------+\n2 rows in set (0.00 sec)\nThe first bank account now has a value that is 250 less than before, and the second\nhas been incremented by 250; you have transferred a value of 250 between them. But\nlet’s assume that something went wrong and you wish to undo this transaction. All\nyou have to do is issue the commands in Example 9-5 .\nExample 9-5. Canceling a transaction using ROLLBACK\nROLLBACK;\nSELECT * FROM accounts;\nTransactions | 225"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 256,
    "text": "Y ou should now see the following output, showing that the two accounts have had\ntheir previous balances restored, due to the entire transaction being cancelled via the\nROLLBACK  command:\n+--------+---------+\n| number | balance |\n+--------+---------+\n|  12345 | 1050.61 |\n|  67890 |     140 |\n+--------+---------+\n2 rows in set (0.00 sec)\nUsing EXPLAIN\nMySQL comes with a powerful tool for  investigating how the queries you issue to it\nare interpreted. Using EXPLAIN , you can get a snapshot of any query to find out\nwhether you could issue it in a better or more efficient way. Example 9-6  shows how\nto use it with the accounts table you created earlier.\nExample 9-6. Using the EXPLAIN command\nEXPLAIN SELECT * FROM accounts WHERE number='12345';\nThe results of this EXPLAIN  command should look like the following:\n+--+-----------+--------+-----+-------------+-------+-------+-----+----+-----+\n|id|select_type|table   |type |possible_keys|key    |key_len|ref  |rows|Extra|\n+--+-----------+--------+-----+-------------+-------+-------+-----+----+-----+\n| 1|SIMPLE     |accounts|const|PRIMARY      |PRIMARY|4      |const|   1|     |\n+--+-----------+--------+-----+-------------+-------+-------+-----+----+-----+\n1 row in set (0.00 sec)\nThe information that MySQL is giving you here is as follows:\nselect_type\nThe selection type is SIMPLE . If you were joining tables together, this would show the\njoin type.\ntable\nThe current table being queried is accounts .\ntype\nThe query type is const . From worst to best, the possible values can be ALL, index ,\nrange , ref, eq_ref, const , system , and NULL .\npossible_keys\nThere is a possible PRIMARY  key, which means that accessing should be fast.\n226 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 257,
    "text": "key\nThe key actually used is PRIMARY . This is good.\nkey_len\nThe key length is 4. This is the number of bytes of the index that MySQL will use.\nref\nThe ref column displays which columns or constants are used with the key. In this\ncase, a constant key is being used.\nrows\nThe number of rows that needs to be searched by this query is 1. This is good.\nWhenever you have a query that seems to be taking longer than you think it should\nto execute, try using EXPLAIN  to see where you can optimize it. Y ou will discover\nwhich keys (if any) are being used, their lengths, and so on, and will be able to adjust\nyour query or the design of your table(s) accordingly.\nWhen you have finished experimenting with the temporary\naccounts  table, you may wish to remove it by entering the following\ncommand:\nDROP TABLE accounts;\nBacking Up and Restoring\nWhatever kind of data you are storing in your database, it must have some value to\nyou, even if it’s only the cost of the time required for reentering it should the hard\ndisk fail. Therefore, it’s important that you keep backups to protect your investment.\nAlso, there will be times when you have to migrate your database over to a new\nserver; the best way to do this is usually to back it up first. It is also important that\nyou test your backups from time to time to ensure that they are valid and will work if\nthey need to be used.\nThankfully, backing up and restoring MySQL data is easy with the mysqldump  com‐\nmand.\nUsing mysqldump\nWith mysqldump , you can dump a database or collection of databases into one or\nmore files containing all the instructions necessary to re-create all your tables and\nrepopulate them with your data. It can also generate files in CSV (comma-separated\nvalues)  and other delimited text formats, or even in XML format. Its main drawback\nis that you must make sure that no one writes to a table while you’re backing it up.\nThere are various ways to do this, but the easiest is to shut down the MySQL server\nbefore mysqldump  and start up the server again after mysqldump  finishes.\nBacking Up and Restoring | 227"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 258,
    "text": "Or you can lock the tables you are backing up before running mysqldump . To lock\ntables for reading (as we want to read the data), from the MySQL command line issue\nthis command:\nLOCK TABLES tablename1 READ, tablename2  READ ...\nThen, to release the lock(s), enter the following:\nUNLOCK TABLES;\nBy default, the output from mysqldump  is simply printed out, but you can capture it in\na file through the > redirect symbol.\nThe basic format of the mysqldump  command is shown here:\nmysqldump -u user -ppassword database\nHowever, before you can dump the contents of a database, you must make sure that\nmysqldump  is in your path, or that you specify its location as part of your command.\nTable 9-13  shows the likely locations of the program for the different installations and\noperating systems covered in Chapter 2 . If you have a different installation, it may be\nin a slightly different location.\nTable 9-13. Likely locations of mysqldump for different  installations\nOperating system and program Likely folder location\nWindows XAMPP C:\\xampp\\mysql\\bin\nOS X XAMPP /Applications/xampp/bin\nLinux XAMPP /Applications/xampp/bin\nSo, to dump the contents of the publications  database that you created in Chapter 8  to\nthe screen, enter mysqldump  (or the full path if necessary) and the command in\nExample 9-7 .\nExample 9-7. Dumping the publications database to screen\nmysqldump -u user -ppassword  publications\nMake sure that you replace user  and password  with the correct details for your\ninstallation of MySQL. If there is no password set for the user, you can omit that part\nof the command, but the -u user  part is mandatory—unless you have root access\nwithout a password and are executing as root (not recommended). The result of issu‐\ning this command will look something like Figure 9-4 .\n228 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 259,
    "text": "Figure 9-4. Dumping the publications database to screen\nCreating a Backup File\nNow that you have mysqldump  working, and have verified it outputs correctly to the\nscreen, you can send the backup data directly to a file using the > redirect symbol. \nAssuming that you wish to call the backup file publications.sql , type the command in\nExample 9-8  (remembering to replace user  and password  with the correct details).\nExample 9-8. Dumping the publications database to file\nmysqldump -u user –p password  publications > publications.sql\nThe command in Example 9-8  stores the backup file into the cur‐\nrent directory. If you need it to be saved elsewhere, you should\ninsert a file path before the filename. Y ou must also ensure that the\ndirectory you are backing up to has the right permissions set to\nallow the file to be written.\nIf you echo the backup file to screen or load it into a text editor, you will see that it\ncomprises sequences of SQL commands such as the following:\nDROP TABLE IF EXISTS 'classics';\nCREATE TABLE 'classics' (\n  'author' varchar(128) default NULL,\n  'title' varchar(128) default NULL,\n  'category' varchar(16) default NULL,\n  'year' smallint(6) default NULL,\n  'isbn' char(13) NOT NULL default '',\n  PRIMARY KEY  ('isbn'),\n  KEY 'author' ('author'(20)),\n  KEY 'title' ('title'(20)),\nBacking Up and Restoring | 229"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 260,
    "text": "KEY 'category' ('category'(4)),\n  KEY 'year' ('year'),\n  FULLTEXT KEY 'author_2' ('author','title')\n) ENGINE=MyISAM DEFAULT CHARSET=latin1;\nThis is smart code that can be used to restore a database from a backup, even if it\ncurrently exists, because it will first drop any tables that need to be re-created, thus\navoiding potential MySQL errors.\nBacking up a single table\nTo back up only a single table from a database (such as the classics  table from the\npublications  database), you should first lock the table from within the MySQL com‐\nmand line, by issuing a command such as the following:\nLOCK TABLES publications.classics READ;\nThis ensures that MySQL remains running for read purposes, but writes cannot be\nmade. Then, while keeping the MySQL command line open, use another terminal\nwindow to issue the following command from the operating system command line:\nmysqldump -u user -ppassword publications classics > classics.sql\nY ou must now release the table lock by entering the following command from the\nMySQL command line in the first terminal window, which unlocks all tables that\nhave been locked during the current session:\nUNLOCK TABLES;\nBacking up all tables\nIf you want to back up all your MySQL databases at  once (including the system data‐\nbases such as mysql ), you can use a command such as the one in Example 9-9 , which\nwould enable you to restore an entire MySQL database installation. Remember to use\nlocking where required.\nExample 9-9. Dumping all the MySQL databases to file\nmysqldump -u user -ppassword  --all-databases > all_databases.sql\nOf course, there’s a lot more than just a few lines of SQL code in\nbacked-up database files. I recommend that you take a few minutes\nto examine a couple in order to familiarize yourself with the types\nof commands that appear in backup files and how they work.\n230 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 261,
    "text": "Restoring from a Backup File\nTo perform a restore  from a file, call the mysql  executable, passing it the file to restore\nfrom using the < symbol. So, to recover an entire database that you dumped using the\n--all-databases  option, use a command such as that in Example 9-10 .\nExample 9-10. Restoring an entire set of databases\nmysql -u user -ppassword  < all_databases.sql\nTo restore a single database, use the -D option followed by the name of the database,\nas in Example 9-11 , where the publications  database is being restored from the backup\nmade in Example 9-8 .\nExample 9-11. Restoring the publications database\nmysql -u user -ppassword  -D publications < publications.sql\nTo restore a single table to a database, use a command such as that in Example 9-12 ,\nwhere just the classics  table is being restored to the publications  database.\nExample 9-12. Restoring the classics table to the publications database\nmysql -u user -ppassword  -D publications < classics.sql\nDumping Data in CSV Format\nAs previously mentioned, the mysqldump  program is very flexible and supports vari‐\nous types of output, such as the CSV format. Example 9-13  shows how you can dump\nthe data from the classics  and customers  tables in the publications  database to the files\nclassics.txt  and customers.txt  in the folder c:/temp . On OS X or Linux systems, you\nshould modify the destination path to an existing folder.\nExample 9-13. Dumping data to CSV format files\nmysqldump -u user -ppassword  --no-create-info --tab=c:/temp\n  --fields-terminated-by=',' publications\nThis command is quite long and is shown here wrapped over two lines, but you must\ntype it all as a single line. The result is the following:\nMark Twain (Samuel Langhorne Clemens)','The Adventures of Tom Sawyer',\n 'Classic Fiction','1876','9781598184891\nJane Austen','Pride and Prejudice','Classic Fiction','1811','9780582506206\nCharles Darwin','The Origin of Species','Non Fiction','1856','9780517123201\nCharles Dickens','The Old Curiosity Shop','Classic Fiction','1841','9780099533474\nWilliam Shakespeare','Romeo and Juliet','Play','1594','9780192814968\nBacking Up and Restoring | 231"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 262,
    "text": "Mary Smith','9780582506206\nJack Wilson','9780517123201\nPlanning Your Backups\nThe golden rule to backing up is to do so as often as you find practical. The more\nvaluable the data, the more often you should back it up, and the more copies you\nshould make. If your database gets updated at least once a day, you should really back\nit up on a daily basis. If, on the other hand, it is not updated very often, you could\nprobably get by with backups less often.\nY ou should also consider making multiple backups and storing\nthem in different locations. If you have several servers, it is a simple\nmatter to copy your backups between them. Y ou would also be well\nadvised to make physical backups of removable hard disks, thumb\ndrives, CDs or DVDs, and so on, and to keep these in separate\nlocations—preferably somewhere like a fireproof safe.\nOnce you’ve digested the contents of this chapter, you will be proficient in using both\nPHP and MySQL; the next chapter will show you how to bring these two technologies\ntogether.\nQuestions\n1.What does the word relationship  mean in reference to a relational database?\n2.What is the term for the process of removing duplicate data and optimizing\ntables?\n3.What are the three rules of the First Normal Form?\n4.How can you make a table satisfy the Second Normal Form?\n5.What do you put in a column to tie together two tables that contain items having\na one-to-many relationship?\n6.How can you create a database with a many-to-many relationship?\n7.What commands initiate and end a MySQL transaction?\n8.What feature does MySQL provide to enable you to examine how a query will\nwork in detail?\n9.What command would you use to back up the database publications  to a file\ncalled publications.sql ?\nSee Chapter 9 Answers  for the answers to these questions.\n232 | Chapter 9: Mastering MySQL"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 263,
    "text": "CHAPTER 10\nAccessing MySQL Using PHP\nIf you worked through the previous chapters, you’re proficient in using both MySQL\nand PHP . In this chapter, you will learn how to integrate the two by using PHP’s built-\nin functions to access MySQL.\nQuerying a MySQL Database with PHP\nThe reason for using PHP as an interface to MySQL is to format the results of SQL\nqueries in a form visible in a web page. As long as you can log into your MySQL\ninstallation using your username and password, you can also do so from PHP .\nHowever, instead of using MySQL ’s command line to enter instructions and view out‐\nput, you will create query strings that are passed to MySQL. When MySQL returns its\nresponse, it will come as a data structure that PHP can recognize instead of the for‐\nmatted output you see when you work on the command line. Further PHP com‐\nmands can retrieve the data and format it for the web page.\nIn previous editions of the book, this chapter introduced the old\nmysql  extension for accessing a MySQL database, before then mov‐\ning onto discussing the newer mysqli  extensions in the following\nchapter. But time marches on, as they say, and by now there should\nbe very few legacy installations using the old code, so we’ll just go\nstraight in and look at how to use this newer extension—which is\npretty much standard everywhere nowadays.\nThe Process\nThe process of using MySQL with PHP is as follows:\n1.Connect to MySQL and select the database to use.\n233"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 264,
    "text": "2.Build a query string.\n3.Perform the query.\n4.Retrieve the results and output them to a web page.\n5.Repeat steps 2 to 4 until all desired data has been retrieved.\n6.Disconnect from MySQL.\nWe’ll work through these sections in turn, but first it’s important to set up your login\ndetails in a secure manner so people snooping around on your system have trouble\ngetting access to your database.\nCreating a Login File\nMost websites developed with PHP contain multiple program files that will require\naccess to MySQL and will thus need the login and password details. Therefore, it’s\nsensible to create a single file to store these and then include that file wherever it’s\nneeded. Example 10-1  shows such a file, which I’ve called login.php .\nExample 10-1. The login.php file\n<?php // login.php\n  $hn = 'localhost';\n  $db = 'publications';\n  $un = ' username ';\n  $pw = ' password ';\n?>\nType the example, replacing username  and password  with the values you use for your\nMySQL database, and save it to the document root directory you set up in Chapter 2 .\nWe’ll be making use of the file shortly.\nThe hostname localhost  should work as long as you’re using a MySQL database on\nyour local system, and the database publications  should work if you’re typing the\nexamples I’ve used so far.\nThe enclosing <?php  and ?> tags are especially important for the login.php  file in\nExample 10-1 , because they mean that the lines between can be interpreted only as\nPHP code. If you were to leave them out and someone were to call up the file directly\nfrom your website, it would display as text and reveal your secrets. But, with the tags\nin place, all that person will see is a blank page. The file will correctly include in your\nother PHP files.\nThe $hn variable will tell PHP which computer to use when connecting to a database.\nThis is required, because you can access MySQL databases on any computer connec‐\nted to your PHP installation, and that potentially includes any host anywhere on the\n234 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 265,
    "text": "Web. However, the examples in this chapter will be working on the local server. So, in\nplace of specifying a domain such as mysql.myserver.com , you can just use the word\nlocalhost  (or the IP address 127.0.0.1).\nThe database we’ll be using, $db, is the one called publications , which we created in\nChapter 8  (or may have been provided to you by your server administrator—in which\ncase you have to modify login.php  accordingly).\nAnother benefit of keeping these login details in a single place is\nthat you can change your password as frequently as you like and\nthere will be only one file to update when you do, no matter how\nmany PHP files access MySQL.\nConnecting to a MySQL Database\nNow that you have the login.php  file saved, you can include it in any PHP files that\nwill need to access the database by  using the require_once  statement. This is prefera‐\nble to an include  statement, as it will generate a fatal error if the file is not found.\nAnd believe me, not finding the file containing the login details to your database is a\nfatal error.\nAlso, using require_once  instead of require  means  that the file will be read in only\nwhen it has not previously been included, which prevents wasteful duplicate disk\naccesses. Example 10-2  shows the code to use.\nExample 10-2. Connecting to a MySQL server with mysqli\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n?>\nThis example creates a new object called $conn  by calling a new instance of the\nmysqli  method, passing all the values retrieved from the login.php  file. Error check‐\ning is achieved by referencing the $conn->connect_error  property.\nThe -> operator indicates that the item on the right is a property or method of the\nobject on the left. In this case, if connect_error  has a value, then there was an error,\nso we call the die function  and display that property, which details the connection\nerror.\nThe $conn  object is used in the following examples to access the MySQL database.\nQuerying a MySQL Database with PHP | 235"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 266,
    "text": "The die function is great for when you are developing PHP code,\nbut of course you will want more user-friendly error messages on a\nproduction server. In this case, you won’t abort your PHP program,\nbut format a message that will be displayed when the program exits\nnormally, perhaps something like this:\nfunction mysql_fatal_error($msg)\n{\n    $msg2 = mysql_error();\n    echo <<< _END\nWe are sorry, but it was not possible to complete\nthe requested task. The error message we got was:\n    <p>$msg: $msg2</p>\nPlease click the back button on your browser\nand try again. If you are still having problems,\nplease <a href=\"mailto:admin@server.com\">email\nour administrator</a>. Thank you.\n_END;\n}\nBuilding and executing a query\nSending a query to MySQL from PHP is as simple as issuing  it using the query\nmethod of a connection object. Example 10-3  shows you how to use it.\nExample 10-3. Querying a database with mysqli\n<?php\n  $query  = \"SELECT * FROM classics\";\n  $result = $conn->query($query);\n  if (!$result) die($conn->error);\n?>\nHere the variable $query  is assigned a string containing the query to be made, and\nthen passed to the query  method of the $conn  object, which returns a result that we\nplace in the object $result . If $result  is FALSE , there was a problem and the error\nproperty of the connection object will contain the details, so the die function is called\nto display that error.\nAll the data returned by MySQL is now stored in an easily interrogatable format in\nthe $result  object.\n236 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 267,
    "text": "Fetching a result\nOnce you have an object returned in $result , you can use it to extract the data you\nwant, one item at a time, using the fetch_assoc  method of the object. Example 10-4\ncombines and extends the previous examples into a program that you can type and\nrun yourself to retrieve these results (as depicted in Figure 10-1 ). I suggest that you\nsave this script using the filename query.php  (or use the file saved in the free archive\nof files available at lpmj.net ).\nExample 10-4. Fetching results one cell at a time\n<?php // query.php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \"SELECT * FROM classics\";\n  $result = $conn->query($query);\n  if (!$result) die($conn->error);\n  $rows = $result->num_rows;\n  for ($j = 0 ; $j < $rows ; ++$j)\n  {\n    $result->data_seek($j);\n    echo 'Author: '   . $result->fetch_assoc()['author']   . '<br>';\n    $result->data_seek($j);\n    echo 'Title: '    . $result->fetch_assoc()['title']    . '<br>';\n    $result->data_seek($j);\n    echo 'Category: ' . $result->fetch_assoc()['category'] . '<br>';\n    $result->data_seek($j);\n    echo 'Year: '     . $result->fetch_assoc()['year']     . '<br>';\n    $result->data_seek($j);\n    echo 'ISBN: '     . $result->fetch_assoc()['isbn']     . '<br><br>';\n  }\n  $result->close();\n  $conn->close();\n?>\nQuerying a MySQL Database with PHP | 237"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 268,
    "text": "Figure 10-1. The output from the query.php program in Example 10-4\nHere, to seek to the correct row each time around the loop, we call the data_seek\nmethod of $result  before fetching each item of data. Then we call the fetch_assoc\nmethod to retrieve the value stored in each cell, and output the result using echo\nstatements.\nY ou will probably agree that all this data seeking is rather cumbersome and that there\nought to be a more efficient method of achieving the same result. And, indeed, there\nis a better method, which is to extract a row at a time.\nIn Chapter 9 , I talked about First, Second, and Third Normal Form,\nso you may have now noticed that the classics  table doesn’t satisfy\nthese, because both author and book details are included within the\nsame table. That’s because we created this table before encountering\nnormalization. However, for the purposes of illustrating access to\nMySQL from PHP , reusing this table avoids the hassle of typing in a\nnew set of test data, so we’ll stick with it for the time being.\n238 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 269,
    "text": "Fetching a row\nTo fetch one row at a time, replace the for loop  from Example 10-4  with  the one\nhighlighted in bold in Example 10-5 , and you will find that you get exactly the same\nresult that was displayed in Figure 10-1 . Y ou may wish to save this revised file using\nthe name fetchrow.php .\nExample 10-5. Fetching results one row at a time\n<?php //fetchrow.php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \"SELECT * FROM classics\";\n  $result = $conn->query($query);\n  if (!$result) die($conn->error);\n  $rows = $result->num_rows;\n  for ($j = 0 ; $j < $rows ; ++$j)\n  {\n    $result->data_seek($j);\n    $row = $result->fetch_array(MYSQLI_ASSOC);\n    echo 'Author: '   . $row['author']   . '<br>';\n    echo 'Title: '    . $row['title']    . '<br>';\n    echo 'Category: ' . $row['category'] . '<br>';\n    echo 'Year: '     . $row['year']     . '<br>';\n    echo 'ISBN: '     . $row['isbn']     . '<br><br>';\n  }\n  $result->close();\n  $conn->close();\n?>\nIn this modified code, only one-fifth of the interrogations of the $result  object are\nmade (compared to the previous example), and only one seek into the object is made\nin each iteration of the loop, because each row is fetched in its entirety via the\nfetch_array  method. This returns a single row of data as an array, which is then\nassigned to the array $row .\nThe fetch_array  method can return three types of array according to the value\npassed to it:\nMYSQLI_NUM\nNumeric array. Each column appears in the array in the order in which you defined it\nwhen you created (or altered) the table. In our case, the zeroth element of the array\ncontains the Author column, element 1 contains the Title, and so on.\nQuerying a MySQL Database with PHP | 239"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 270,
    "text": "MYSQLI_ASSOC\nAssociative array. Each key is the name of a column. Because items of data are refer‐\nenced by column name (rather than index number), use this option where possible in\nyour code to make debugging easier and help other programmers better manage\nyour code.\nMYSQLI_BOTH\nAssociative and numeric array.\nAssociative arrays are usually more useful than numeric ones because you can refer to\neach column by name, such as $row['author'] , instead of trying to remember where\nit is in the column order. So this script uses an associative array, leading us to pass\nMYSQLI_ASSOC .\nClosing a connection\nPHP will eventually return the memory it has allocated for objects after you have fin‐\nished with the script, so in small scripts, you don’t usually need to worry about releas‐\ning memory yourself. However, if you’re allocating a lot of result objects or fetching\nlarge amounts of data, it can be a good idea to free the memory you have been using\nto prevent problems later in your script.\nThis becomes particularly important on higher-traffic pages, because the amount of\nmemory consumed in a session can rapidly grow. Therefore, note the calls to the\nclose  methods of the objects $result  and $conn  in the preceding scripts, as soon as\neach object is no longer needed, like this:\n$result->close();\n$conn->close();\nIdeally, you should close each result object when you have finished\nusing it, and then close the connection object when your script will\nnot be accessing MySQL anymore. This best practice ensures that\nresources are returned to the system as quickly as possible to keep\nMySQL running optimally, and alleviates doubt over whether PHP\nwill return unused memory in time for when you next need it.\nA Practical Example\nIt’s time to write our first example of inserting  data in and deleting it from a MySQL\ntable using PHP . I recommend that you type Example 10-6  and save it to your web\ndevelopment directory using the filename sqltest.php . Y ou can see an example of the\nprogram’s output in Figure 10-2 .\n240 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 271,
    "text": "Example 10-6  creates a standard HTML form. Chapter 11  explains\nforms in detail, but in this chapter I take form handling for granted\nand just deal with database interaction.\nExample 10-6. Inserting and deleting using sqltest.php\n<?php // sqltest.php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  if (isset($_POST['delete']) && isset($_POST['isbn']))\n  {\n    $isbn   = get_post($conn, 'isbn');\n    $query  = \"DELETE FROM classics WHERE isbn='$isbn'\";\n    $result = $conn->query($query);\n    if (!$result) echo \"DELETE failed: $query<br>\" .\n      $conn->error . \"<br><br>\";\n  }\n  if (isset($_POST['author'])   &&\n      isset($_POST['title'])    &&\n      isset($_POST['category']) &&\n      isset($_POST['year'])     &&\n      isset($_POST['isbn']))\n  {\n    $author   = get_post($conn, 'author');\n    $title    = get_post($conn, 'title');\n    $category = get_post($conn, 'category');\n    $year     = get_post($conn, 'year');\n    $isbn     = get_post($conn, 'isbn');\n    $query    = \"INSERT INTO classics VALUES\" .\n      \"('$author', '$title', '$category', '$year', '$isbn')\";\n    $result   = $conn->query($query);\n    if (!$result) echo \"INSERT failed: $query<br>\" .\n      $conn->error . \"<br><br>\";\n  }\n  echo <<<_END\n  <form action=\"sqltest.php\" method=\"post\"><pre>\n    Author <input type=\"text\" name=\"author\">\n     Title <input type=\"text\" name=\"title\">\n  Category <input type=\"text\" name=\"category\">\n      Year <input type=\"text\" name=\"year\">\n      ISBN <input type=\"text\" name=\"isbn\">\n           <input type=\"submit\" value=\"ADD RECORD\">\n  </pre></form>\n_END;\n  $query  = \"SELECT * FROM classics\";\nA Practical Example | 241"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 272,
    "text": "$result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n  $rows = $result->num_rows;\n  for ($j = 0 ; $j < $rows ; ++$j)\n  {\n    $result->data_seek($j);\n    $row = $result->fetch_array(MYSQLI_NUM);\n    echo <<<_END\n  <pre>\n    Author $row[0]\n     Title $row[1]\n  Category $row[2]\n      Year $row[3]\n      ISBN $row[4]\n  </pre>\n  <form action=\"sqltest.php\" method=\"post\">\n  <input type=\"hidden\" name=\"delete\" value=\"yes\">\n  <input type=\"hidden\" name=\"isbn\" value=\"$row[4]\">\n  <input type=\"submit\" value=\"DELETE RECORD\"></form>\n_END;\n  }\n  $result->close();\n  $conn->close();\n  function get_post($conn, $var)\n  {\n    return $conn->real_escape_string($_POST[$var]);\n  }\n?>\n242 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 273,
    "text": "Figure 10-2. The output from Example 10-6 , sqltest.php\nAt over 80 lines of code, this program may appear daunting, but don’t worry—you’ve\nalready covered many of them in Example 10-5 , and what the code does is actually\nquite simple.\nIt first checks for any inputs that may have been made and then either inserts new\ndata into the table classics  of the publications  database or deletes a row from it,\naccording to the input supplied. Regardless of whether there was input, the program\nthen outputs all rows in the table to the browser. So let’s see how it works.\nThe first section of new code starts by using the isset  function to check whether val‐\nues for all the fields have been posted to the program. Upon confirmation, each line\nwithin the if statement calls the function get_post , which appears at the end of the\nprogram. This function has one small but critical job: fetching input from the\nbrowser.\nThe $_POST Array\nI mentioned in an earlier chapter that a browser sends user input through either a Get\nrequest or a Post request. The Post request is usually preferred (because it avoids\nplacing unsightly data in the browser’s address bar), and so we use it here. The web\nA Practical Example | 243"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 274,
    "text": "server bundles up all of the user input (even if the form was filled out with a hundred\nfields) and puts in into an array named $_POST .\n$_POST  is an associative array, which you encountered in Chapter 6 . Depending on\nwhether a form has been set to use the Post or the Get method, either the $_POST  or\nthe $_GET  associative array will be populated with the form data. They can both be\nread in exactly the same way.\nEach field has an element in the array named after that field. So, if a form contained a\nfield named isbn , the $_POST  array contains an element keyed by the word isbn . The\nPHP program can read that field by referring to either $_POST['isbn']  or\n$_POST[\"isbn\"]  (single and double quotes have the same effect in this case).\nIf the $_POST  syntax still seems complex to you, rest assured that you can just use the\nconvention I’ve shown in Example 10-6 , copy the user’s input to other variables, and\nforget about $_POST  after that. This is normal in PHP programs: they retrieve all the\nfields from $_POST  at the beginning of the program and then ignore it.\nThere is no reason to write to an element in the $_POST  array. Its\nonly purpose is to communicate information from the browser to\nthe program, and you’re better off copying data to your own vari‐\nables before altering it.\nSo, back to the get_post  function, which passes each item it retrieves through the\nreal_escape_string  method of the connection object to strip out any characters that\na hacker may have inserted in order to break into or alter your database, like this:\nfunction get_post($conn, $var)\n{\n  return $conn->real_escape_string($_POST[$var]);\n}\nDeleting a Record\nPrior to checking whether new data has been  posted, the program checks whether the\nvariable $_POST['delete']  has a value. If so, the user has clicked the DELETE\nRECORD button to erase a record. In this case, the value of $isbn  will also have been\nposted.\nAs you’ll recall, the ISBN uniquely identifies each record. The HTML form appends\nthe ISBN to the DELETE FROM  query string created in the variable $query , which is\nthen passed to the query  method of the $conn  object to issue it to MySQL.\nIf $_POST['delete'])  is not set (and so there is no record to be deleted),\n$_POST['author'])  and other posted values are checked. If they have all been given\n244 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 275,
    "text": "values, then $query  is set to an INSERT INTO  command, followed by the five values to\nbe inserted. The string is then passed to the query  method, which upon completion\nreturns either TRUE  or FALSE . If FALSE  is returned, the error message held in the error\nproperty of the $conn  object is displayed, like this:\nif (!$result) echo \"INSERT failed: $query<br>\" .\n  $conn->error . \"<br><br>\";\nDisplaying the Form\nNext we get to the part of code that displays the little form at the top of Figure 10-2 .\nY ou should recall the echo <<<_END ..._END  structure from  previous chapters, which\noutputs everything between the _END  tags.\nInstead of the echo  command, the program could also drop out of\nPHP using ?>, issue the HTML, and then reenter PHP processing\nwith <?php . Whichever style used is a matter of programmer pref‐\nerence, but I always recommend staying within PHP code for these\nreasons:\n•It makes it very clear when debugging (and also for other\nusers) that everything within a .php file is PHP code. There‐\nfore, there is no need to go hunting for dropouts to HTML.\n•When you wish to include a PHP variable directly within\nHTML, you can just type it. If you had dropped back to\nHTML, you would have had to temporarily reenter PHP pro‐\ncessing, access the variable, and then drop back out again.\nThe HTML form section simply sets the form’s action to sqltest.php . This means that\nwhen the form is submitted, the contents of the form fields will be sent to the file\nsqltest.php , which is the program itself. The form is also set up to send the fields as a\nPost rather than a Get request. This is because Get requests are appended to the URL\nbeing submitted to and can look messy in your browser. They also allow users to\neasily modify submissions and try to hack your server. Therefore, whenever possible,\nyou should use Post submissions, which also have the benefit of hiding the posted\ndata from view.\nHaving output the form fields, the HTML displays a Submit button with the name\nADD RECORD and closes the form. Note the <pre>  and </pre>  tags here, which\nhave been used to force a monospaced font and allow all the inputs to line up neatly.\nThe carriage returns at the end of each line are also output when inside <pre>  tags.\nA Practical Example | 245"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 276,
    "text": "Querying the Database\nNext, the code returns to the familiar  territory of Example 10-5 , where a query is sent\nto MySQL asking to see all the records in the classics  table, like this:\n$query  = \"SELECT * FROM classics\";\n$result = $conn->query($query);\nAfter that, $rows  is set to a value representing the number of rows in the table:\n$rows = $result->num_rows;\nUsing the value in $rows , a for loop is then entered to display the contents of each\nrow. Within each iteration of the loop, the data_seek  method of the $result  object is\ncalled to seek to the relevant items of data we’re interested in, like this:\n$result->data_seek($j);\nThen the array $row  is populated with a row of results by calling the fetch_array\nmethod of $result , passing it the constant value MYSQLI_NUM , which forces the return\nof a numeric (rather than associative) array, like this:\n$row = $result->fetch_array(MYSQLI_NUM);\nWith the data in $row , it’s now a simple matter to display it within the heredoc echo\nstatement that follows in which I have chosen to use a <pre>  tag to line up the display\nof each record in a pleasing manner.\nAfter the display of each record, there is a second form that also posts to sqltest.php\n(the program itself) but this time contains two hidden fields: delete  and isbn . The\ndelete  field is set to yes and isbn  to the value held in $row[4] , which contains the\nISBN for the record.\nThen a Submit button with the name DELETE RECORD is displayed, and the form is\nclosed. A curly brace then completes the for loop, which will continue until all\nrecords have been displayed, at which time the $result  and $conn  object’s close\nmethods are closed to release resources back to PHP:\n$result->close();\n$conn->close();\nFinally, you see the definition for the function get_post , which we’ve already looked\nat. And that’s it—our first PHP program to manipulate a MySQL database. So, let’s\ncheck out what it can do.\nOnce you have typed the program (and corrected any typing errors), try entering the\nfollowing data into the various input fields to add a new record for the book Moby\nDick  to the database:\n246 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 277,
    "text": "Herman Melville\nMoby Dick\nFiction\n1851\n9780199535729\nRunning the Program\nWhen you have submitted this data using the ADD RECORD button, scroll down to\nthe bottom of the web page to see the new addition. It should look like Figure 10-3 .\nFigure 10-3. The result of adding Moby Dick to the database\nNow let’s look at how deleting a record works by creating a dummy record. So try\nentering just the number 1 in each of the five fields and click the ADD RECORD but‐\nton. If you now scroll down, you’ll see a new record consisting just of 1s. Obviously,\nthis record isn’t useful in this table, so now click the DELETE RECORD button and\nscroll down again to confirm that the record has been deleted.\nA Practical Example | 247"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 278,
    "text": "Assuming that everything worked, you are now able to add and\ndelete records at will. Try doing this a few times, but leave the main\nrecords in place (including the new one for Moby Dick ), as we’ll be\nusing them later. Y ou could also try adding the record with all 1s\nagain a couple of times and note the error message that you receive\nthe second time, indicating that there is already an ISBN with the\nnumber 1.\nPractical MySQL\nY ou are now ready to look at some practical  techniques that you can use in PHP to\naccess the MySQL database, including tasks such as creating and dropping tables;\ninserting, updating, and deleting data; and protecting your database and website from\nmalicious users. Note that the following examples assume that you’ve already created\nthe login.php  program discussed earlier in this chapter.\nCreating a Table\nLet’s assume that you are working for a wildlife park and need to create a database to\nhold details about all the types of cats it houses. Y ou are told that there are nine fami‐\nlies of cats—Lion, Tiger, Jaguar, Leopard, Cougar, Cheetah, Lynx, Caracal, and\nDomestic—so you’ll need a column for that. Then each cat has been given a name , so\nthat’s another column, and you also want to keep track of their ages, which is another.\nOf course, you will probably need more columns later, perhaps to hold dietary\nrequirements, inoculations, and other details, but for now that’s enough to get going.\nA unique identifier is also needed for each animal, so you also decide to create a col‐\numn for that called id.\nExample 10-7  shows the code you might use to create a MySQL table to hold this\ndata, with the main query assignment in bold text.\nExample 10-7. Creating a table called cats\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query = \"CREATE TABLE cats (\n    id SMALLINT NOT NULL AUTO_INCREMENT,\n    family VARCHAR(32) NOT NULL,\n    name VARCHAR(32) NOT NULL,\n    age TINYINT NOT NULL,\n    PRIMARY KEY (id)\n  )\";\n248 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 279,
    "text": "$result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n?>\nAs you can see, the MySQL query looks pretty similar to how you would type it\ndirectly in the command line, except that there is no trailing semicolon, as none is\nneeded when you are accessing MySQL from PHP .\nDescribing a Table\nWhen you aren’t logged into the MySQL command line, here’s a  handy piece of code\nthat you can use to verify that a table has been correctly created from inside a\nbrowser.  It simply issues the query DESCRIBE cats  and then outputs an HTML table\nwith four headings— Column , Type , Null, and Key—underneath which all columns\nwithin the table are shown. To use it with other tables, simply replace the name cats\nin the query with that of the new table (see Example 10-8 ).\nExample 10-8. Describing the table cats\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" DESCRIBE cats \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n  $rows = $result->num_rows;\n  echo \"<table><tr><th>Column</th><th>Type</th><th>Null</th><th>Key</th></tr>\";\n  for ($j = 0 ; $j < $rows ; ++$j)\n  {\n    $result->data_seek($j);\n    $row = $result->fetch_array(MYSQLI_NUM);\n    echo \"<tr>\";\n    for ($k = 0 ; $k < 4 ; ++$k) echo \"<td>$row[$k]</td>\";\n    echo \"</tr>\";\n  }\n  echo \"</table>\";\n?>\nThe output from the program should look like this:\nColumn Type        Null Key\nid     smallint(6) NO   PRI\nfamily varchar(32) NO\nPractical MySQL | 249"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 280,
    "text": "name   varchar(32) NO\nage    tinyint(4)  NO\nDropping a Table\nDropping a table is very easy to do and is therefore very dangerous, so be careful.\nExample 10-9  shows the code that you need. However, I don’t recommend that you\ntry it until you have been through the other examples, as it will drop the table cats\nand you’ll have to re-create it using Example 10-7 .\nExample 10-9. Dropping the table cats\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" DROP TABLE cats \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n?>\nAdding Data\nLet’s add some data to the table by using the code in Example 10-10 .\nExample 10-10. Adding data to table cats\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" INSERT INTO cats VALUES(NULL, 'Lion', 'Leo', 4) \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n?>\nY ou may wish to add a couple more items of data by modifying $query  as follows and\ncalling up the program in your browser again:\n$query = \"INSERT INTO cats VALUES(NULL, 'Cougar', 'Growler', 2)\";\n$query = \"INSERT INTO cats VALUES(NULL, 'Cheetah', 'Charly', 3)\";\nBy the way, notice the NULL  value passed as the first parameter? This is because the id\ncolumn is of type AUTO_INCREMENT , and MySQL will decide what value to assign\naccording to the next available number in sequence, so we simply pass a NULL  value,\nwhich will be ignored.\n250 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 281,
    "text": "Of course, the most efficient way to populate MySQL with data is to create an array\nand insert the data with a single query.\nRetrieving Data\nNow that some data has been entered into the cats table, Example 10-11  shows how\nyou can check that it was correctly inserted.\nExample 10-11. Retrieving rows from the cats table\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" SELECT * FROM cats \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n  $rows = $result->num_rows;\n  echo \"<table><tr> <th>Id</th> <th>Family</th><th>Name</th><th>Age</th></tr>\";\n  for ($j = 0 ; $j < $rows ; ++$j)\n  {\n    $result->data_seek($j);\n    $row = $result->fetch_array(MYSQLI_NUM);\n    echo \"<tr>\";\n    for ($k = 0 ; $k < 4 ; ++$k) echo \"<td>$row[$k]</td>\";\n    echo \"</tr>\";\n  }\n  echo \"</table>\";\n?>\nThis code simply issues the MySQL query SELECT * FROM cats  and then displays all\nthe rows returned. Its output is as follows:\nId Family  Name    Age\n1  Lion    Leo     4\n2  Cougar  Growler 2\n3  Cheetah Charly  3\nHere you can see that the id column has correctly auto-incremented.\nUpdating Data\nChanging data that you have already  inserted is also quite simple.  Did you notice the\nspelling of Charly  for the cheetah’s name? Let’s correct that to Charlie , as in\nExample 10-12 .\nPractical MySQL | 251"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 282,
    "text": "Example 10-12. Renaming Charly the cheetah to Charlie\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" UPDATE cats SET name='Charlie' WHERE name='Charly' \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n?>\nIf you run Example 10-11  again, you’ll see that it now outputs the following:\nId Family  Name    Age\n1  Lion    Leo     4\n2  Cougar  Growler 2\n3  Cheetah Charlie 3\nDeleting Data\nGrowler the cougar has been transferred to another  zoo, so it’s time to remove him\nfrom the database; see Example 10-13 .\nExample 10-13. Removing Growler the cougar from the cats table\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" DELETE FROM cats WHERE name='Growler' \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n?>\nThis uses a standard DELETE FROM  query, and when you run Example 10-11 , you can\nsee that the row has been removed in the following output:\nId Family  Name    Age\n1  Lion    Leo     4\n3  Cheetah Charlie 3\nUsing AUTO_INCREMENT\nWhen using AUTO_INCREMENT , you cannot know what value has been given to a col‐\numn before a row is inserted. Instead, if you need to know it, you must ask MySQL\nafterward using the mysql_insert_id  function. This need is common: for instance,\nwhen you process a purchase, you might insert a new customer into a Customers  table\n252 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 283,
    "text": "and then refer to the newly created CustId  when inserting a purchase into the pur‐\nchase table.\nExample 10-10  can be rewritten as Example 10-14  to display this value after each\ninsert.\nExample 10-14. Adding data to table cats and reporting the insertion id\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" INSERT INTO cats VALUES(NULL, 'Lynx', 'Stumpy', 5) \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n  echo \"The Insert ID was: \" . $result->insert_id;\n?>\nThe contents of the table should now look like the following (note how the previous\nid value of 2 is not reused, as this could cause complications in some instances):\nId Family  Name    Age\n1  Lion    Leo     4\n3  Cheetah Charlie 3\n4  Lynx    Stumpy  5\nUsing insert IDs\nIt’s very common to insert data in multiple tables: a book followed by its author, or a\ncustomer followed by his purchase, and so on. When doing this with an auto-\nincrement column, you will need to retain the insert ID returned for storing in the\nrelated table.\nFor example, let’s assume that these cats can be “adopted” by the public as a means of\nraising funds, and that when a new cat is stored in the cats table, we also want to cre‐\nate a key to tie it to the animal’s adoptive owner. The code to do this is similar to that\nin Example 10-14 , except that the returned insert ID is stored in the variable $inser\ntID, and is then used as part of the subsequent query:\n$query    = \"INSERT INTO cats VALUES(NULL, 'Lynx', 'Stumpy', 5)\";\n$result   = $conn->query($query);\n$insertID  = $result->insert_id;\n$query    = \"INSERT INTO owners VALUES( $insertID , 'Ann', 'Smith')\";\n$result   = $conn->query($query);\nNow the cat is connected to its “owner” through the cat’s unique ID, which was cre‐\nated automatically by AUTO_INCREMENT .\nPractical MySQL | 253"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 284,
    "text": "Using locks\nA completely safe procedure for linking tables through the insert ID is to use locks\n(or transactions, as described in Chapter 9 ). It can slow down response time a bit\nwhen there are many people submitting data to the same table, but it can also be\nworth it. The sequence is as follows:\n1.Lock the first table (e.g., cats).\n2.Insert data into the first table.\n3.Retrieve the unique ID from the first table (the insert_id  property).\n4.Unlock the first table.\n5.Insert data into the second table.\nY ou can safely release the lock before inserting data into the second table, because the\ninsert ID has been retrieved and is stored in a program variable. Y ou could also use a\ntransaction instead of locking, but that slows down the MySQL server even more.\nPerforming Additional Queries\nOkay, that’s enough feline fun. To explore some slightly more complex queries, we\nneed to revert to using the customers  and classics  tables that you created in Chapter 8 .\nThere will be two customers in the customers  table; the classics  table holds the details\nof a few books. They also share a common column of ISBNs, called isbn, that we can\nuse to perform additional queries.\nFor example, to display all of the customers along with the titles and authors of the\nbooks they have bought, you can use the code in Example 10-15 .\nExample 10-15. Performing a secondary query\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $query  = \" SELECT * FROM customers \";\n  $result = $conn->query($query);\n  if (!$result) die (\"Database access failed: \" . $conn->error);\n  $rows = $result->num_rows;\n  for ($j = 0 ; $j < $rows ; ++$j)\n  {\n    $result->data_seek($j);\n    $row = $result->fetch_array(MYSQLI_NUM);\n    echo \"$row[0] purchased ISBN $row[1]:<br>\";\n254 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 285,
    "text": "$subquery  = \"SELECT * FROM classics WHERE isbn=' $row[1]'\";\n    $subresult = $conn->query($query);\n    if (!$subresult) die (\"Database access failed: \" . $conn->error);\n    $subrow = $subresult->fetch_array(MYSQLI_NUM);\n    echo \"  '$subrow[1]' by $subrow[0]<br>\";\n  }\n?>\nThis program uses an initial query to the customers  table to look up all the customers\nand then, given the ISBN of the book each customer purchased, makes a new query\nto the classics  table to find out the title and author for each. The output from this code\nshould be as follows:\nMary Smith purchased ISBN 9780582506206:\n  'Pride and Prejudice' by Jane Austen\nJack Wilson purchased ISBN 9780517123201:\n  'The Origin of Species' by Charles Darwin\nOf course, although it wouldn’t illustrate performing additional\nqueries, in this particular case you could also return the same\ninformation using a NATURAL JOIN  query (see Chapter 8 ), like this:\nSELECT name,isbn,title,author FROM customers\n NATURAL JOIN classics;\nPreventing Hacking Attempts\nIf you haven’t looked into it, you may find it hard to appreciate just how dangerous it\nis to pass user input unchecked to MySQL. For example, suppose you have a simple\npiece of code to verify a user, and it looks like this:\n$user  = $_POST['user'];\n$pass  = $_POST['pass'];\n$query = \"SELECT * FROM users WHERE user='$user' AND pass='$pass'\";\nAt first glance, you might think this code is perfectly fine. If the user enters values of\nfredsmith  and mypass  for $user  and $pass , respectively, then the query string, as\npassed to MySQL, will be as follows:\nSELECT * FROM users WHERE user='fredsmith' AND pass='mypass'\nThis is all well and good, but what if someone enters the following for $user  (and\ndoesn’t even enter anything for $pass )?\nadmin' #\nLet’s look at the string that would be sent to MySQL:\nSELECT * FROM users WHERE user='admin' #' AND pass=''\nPreventing Hacking Attempts | 255"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 286,
    "text": "Do you see the problem there? In MySQL, the # symbol represents the start of a com‐\nment. Therefore, the user will be logged in as admin  (assuming there is a user admin ),\nwithout having to enter a password. In the following, the part of the query that will be\nexecuted is shown in bold; the rest will be ignored.\nSELECT * FROM users WHERE user='admin' # ' AND pass=''\nBut you should count yourself very lucky if that’s all a malicious user does to you. At\nleast you might still be able to go into your application and undo any changes the user\nmakes as admin . But what about the case in which your application code removes a\nuser from the database? The code might look something like this:\n$user  = $_POST['user'];\n$pass  = $_POST['pass'];\n$query = \"DELETE FROM users WHERE user='$user' AND pass='$pass'\";\nAgain, this looks quite normal at first glance, but what if someone entered the follow‐\ning for $user ?\nanything' OR 1=1 #\nThis would be interpreted by MySQL as follows:\nDELETE FROM users WHERE user='anything' OR 1=1 # ' AND pass=''\nOuch—that SQL query will always be TRUE , and therefore you’ve lost your whole\nusers  database! So what can you do about this kind of attack?\nSteps You Can Take\nThe first thing is not to rely on PHP’s built-in magic quotes , which  automatically\nescape any characters such as single and double quotes by prefacing them with a\nbackslash ( \\). Why? Because this feature can be turned off; many programmers do so\nin order to put their own security code in place. So there is no guarantee that this\nhasn’t happened on the server you are working on. In fact, the feature was deprecated\nas of PHP 5.3.0 and has been removed in PHP 6.0.0.\nInstead, you should always use the real_escape_string  method for all calls to\nMySQL. Example 10-16  is a function you can use that will remove any magic quotes\nadded to a user-inputted string and then properly sanitize it for you.\nExample 10-16. How to properly sanitize user input for MySQL\n<?php\n  function mysql_fix_string($conn, $string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return $conn->real_escape_string($string);\n  }\n?>\n256 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 287,
    "text": "The get_magic_quotes_gpc  function returns TRUE  if magic quotes are active. In that\ncase, any slashes that have been added to a string have to be removed, or the\nreal_escape_string  method could end up double-escaping some characters, creat‐\ning corrupted strings. Example 10-17  illustrates how you would incorporate\nmysql_fix_string  within your own code.\nExample 10-17. How to safely access MySQL with user input\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $user  = mysql_fix_string($conn, $_POST['user']);\n  $pass  = mysql_fix_string($conn, $_POST['pass']);\n  $query = \"SELECT * FROM users WHERE user='$user' AND pass='$pass'\";\n  // Etc...\n  function mysql_fix_string($conn, $string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return $conn->real_escape_string($string);\n  }\n?>\nThese precautions are becoming less important, however, because\nthere’s a much easier and safer way to access MySQL, which obvi‐\nates the need for these types of functions, and that’s the use of pla‐\nceholders—explained next.\nUsing Placeholders\nPrepared statements with placeholders  provide a method by which only data is trans‐\nferred to the database, without the possibility of user-submitted (or other) data being\ninterpreted as MySQL statements (and the potential for hacking that could then\nresult).\nIt works by requiring you to first prepare the statement you wish to be executed in\nMySQL, but leave all the parts of the statement that refer to data as simple question\nmarks.\nIn plain MySQL, prepared statements look like Example 10-18 .\nPreventing Hacking Attempts | 257"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 288,
    "text": "Example 10-18. MySQL placeholders\nPREPARE statement FROM \"INSERT INTO classics VALUES(?,?,?,?,?)\";\nSET @author   = \"Emily Brontë\",\n    @title    = \"Wuthering Heights\",\n    @category = \"Classic Fiction\",\n    @year     = \"1847\",\n    @isbn     = \"9780553212587\";\nEXECUTE statement USING @author,@title,@category,@year,@isbn;\nDEALLOCATE PREPARE statement;\nThis can be cumbersome to submit to MySQL, so the mysqli extension makes han‐\ndling placeholders easier for you with a ready-made method called prepare , which\nyou call like this:\n$stmt = $conn->prepare('INSERT INTO classics VALUES(?,?,?,?,?)');\nThe object $stmt  (or whatever you choose to name it) returned by this method is\nthen used for sending the data to the server in place of the question marks. It’s first\nuse is to bind some PHP variables to each of the question marks (the placeholder\nparameters) in turn, like this:\n$stmt->bind_param('sssss', $author, $title, $category, $year, $isbn);\nThe first argument to bind_param  is a string representing the type of each of the\narguments in turn. In this case, it comprises five s characters, representing strings,\nbut any combination of types can be specified here, out of the following:\ni The data is an integer.\nd The data is a double.\ns The data is a string.\nb The data is a BLOB (and will be sent in packets).\nWith the variables bound to the prepared statement, it is now necessary to populate\nthese variables with the data to be passed to MySQL, like this:\n$author   = 'Emily Brontë';\n$title    = 'Wuthering Heights';\n$category = 'Classic Fiction';\n$year     = '1847';\n$isbn     = '9780553212587';\nAt this point, PHP now has everything it needs in order to execute the prepared state‐\nment, so we issue the following command, which calls the execute  method of the\n$stmt  object earlier created:\n$stmt->execute();\n258 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 289,
    "text": "Before going any further, it makes sense to next check whether the command was\nexecuted successfully, so here’s how you can do that by checking the affected_rows\nproperty of $statement :\nprintf(\"%d Row inserted.\\n\", $stmt->affected_rows);\nIn the preceding example, there should be notification of one row inserted.\nOnce you are happy that the statement executed successfully (or you have otherwise\ndealt with any errors), you can close the $stmt  object, like this:\n$stmt->close();\nAnd finally, close the $conn  object (assuming you have finished with it too), like this:\n$conn->close();\nWhen you put all this together, the result is Example 10-19 .\nExample 10-19. Issuing prepared statements\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $stmt = $conn->prepare('INSERT INTO classics VALUES(?,?,?,?,?)');\n  $stmt->bind_param('sssss', $author, $title, $category, $year, $isbn);\n  $author   = 'Emily Brontë';\n  $title    = 'Wuthering Heights';\n  $category = 'Classic Fiction';\n  $year     = '1847';\n  $isbn     = '9780553212587';\n  $stmt->execute();\n  printf(\"%d Row inserted.\\n\", $stmt->affected_rows);\n  $stmt->close();\n  $conn->close();\n?>\nEvery time you are able to use prepared statements in place of nonprepared, you will\nbe closing a potential security hole, so it’s worth spending the time getting to know\nhow to use them.\nPreventing HTML Injection\nThere’s another type of injection you need to concern yourself about—not for the\nsafety of your own websites, but for your users’ privacy and protection. That’s cross-\nsite scripting , also referred to as XSS.\nPreventing Hacking Attempts | 259"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 290,
    "text": "This occurs when you allow HTML, or more often JavaScript code, to be input by a\nuser and then displayed back by your website. One place this is common is in a com‐\nment form. What happens most often is that a malicious user will try to write code\nthat steals cookies from your site’s users, allowing him or her to discover username\nand password pairs or other information. Even worse, the malicious user might\nlaunch an attack to download a Trojan onto a user’s computer.\nBut preventing this is as simple as calling the htmlentities  function, which strips\nout all HTML markup codes and replaces them with a form that displays the charac‐\nters, but does not allow a browser to act on them. For example, consider this HTML:\n<script src='http://x.com/hack.js'>\n</script><script>hack();</script>\nThis code loads in a JavaScript program and then executes malicious functions. But if\nit is first passed through htmlentities , it will be turned into the following totally\nharmless string:\n&lt;script src='http://x.com/hack.js'&gt; &lt;/script&gt;\n&lt;script&gt;hack();&lt;/script&gt;\nTherefore, if you are ever going to display anything that your users enter, either\nimmediately or after storing it in a database, you need to first sanitize it using the\nhtmlentities  function. To do this, I recommend that you create a new function, like\nthe first one in Example 10-20 , which can sanitize for both SQL and XSS injections.\nExample 10-20. Functions for preventing both SQL and XSS injection attacks\n<?php\n  function mysql_entities_fix_string($conn, $string)\n  {\n    return htmlentities(mysql_fix_string($conn, $string));\n  }\n  function mysql_fix_string($conn, $string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return $conn->real_escape_string($string);\n  }\n?>\nThe mysql_entities_fix_string  function first calls mysql_fix_string  and t hen\npasses the result through htmlentities  before returning the fully sanitized string. To\nuse either of these functions, you must already have an active connection object open\nto a MySQL database.\nExample 10-21  shows your new “ultimate protection” version of Example 10-17 .\n260 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 291,
    "text": "Example 10-21. How to safely access MySQL and prevent XSS attacks\n<?php\n  require_once 'login.php';\n  $conn = new mysqli($hn, $un, $pw, $db);\n  if ($conn->connect_error) die($conn->connect_error);\n  $user  = mysql_entities_fix_string($conn, $_POST['user']);\n  $pass  = mysql_entities_fix_string($conn, $_POST['pass']);\n  $query = \"SELECT * FROM users WHERE user='$user' AND pass='$pass'\";\n  //Etc...\n  function mysql_entities_fix_string($conn, $string)\n  {\n    return htmlentities(mysql_fix_string($conn, $string));\n  }\n  function mysql_fix_string($conn, $string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return $conn->real_escape_string($string);\n  }\n?>\nUsing mysqli Procedurally\nIf you prefer, there is an alternative set of functions you can use to access mysqli in a\nprocedural (rather than object-oriented) manner.\nSo, instead of creating a $conn  object like this:\n$conn = new mysqli($hn, $un, $pw, $db);\nY ou can use the following:\n$link = mysqli_connect($hn, $un, $pw, $db);\nTo check that the connection has been made and handle it, you could use code such\nas this:\nif (mysqli_connect_errno()) die(mysqli_connect_error());\nAnd to make a MySQL query, you would use code such as the following:\n$result = mysqli_query($link, \"SELECT * FROM classics\");\nUpon return, $result  will contain the data. Y ou can find out the number of rows\nreturned as follows:\n$rows = mysqli_num_rows($result);\nUsing mysqli Procedurally | 261"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 292,
    "text": "An integer is returned in $rows . Y ou can fetch the actual data one row at a time in the\nfollowing way, which returns a numeric array:\n$row = mysqli_fetch_array($result, MYSQLI_NUM);\nIn this instance, $row[0]  will contain the first column of data, $row[1]  the second,\nand so on. As described in Example 11-5 , rows can also be returned as associative\narrays or as both types, depending on the value passed in the second argument.\nWhen you need to know the insert ID of an insert operation, you can always call the\nmysqli_insert_id  function, like this:\n$insertID = mysqli_insert_id($result);\nEscaping strings procedurally with mysqli is as easy as using the following:\n$escaped = mysqli_real_escape_string($link, $val);\nTo prepare a statement with mysqli is as simple as this:\n$stmt = mysqli_prepare($link, 'INSERT INTO classics VALUES(?,?,?,?,?)');\nTo bind variables to the prepared statement, you would then use the following:\nmysqli_stmt_bind_param($stmt, 'sssss', $author, $title, $category, $year, $isbn);\nAnd to execute the prepared statement after assigning the variables with the required\nvalues, you would issue this call:\nmysqli_stmt_execute($stmt);\nTo close a statement, issue the following command:\nmysqli_stmt_close($stmt);\nAnd to close the connection to MySQL, enter this command:\nmysqli_close($link);\nFor complete details on using prepared statements (procedurally or\notherwise), check out tinyurl.com/mysqlistmt . And for more advice\non all aspects of mysqli, visit tinyurl.com/usingmysqli .\nNow that you have learned how to integrate PHP with MySQL in several different\nways, the next chapter moves on to creating user-friendly forms and dealing with the\ndata submitted from them.\n \n262 | Chapter 10: Accessing MySQL Using PHP"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 293,
    "text": "Questions\n1.How do you connect to a MySQL database using mysqli ?\n2.How do you submit a query to MySQL using mysqli ?\n3.How can you retrieve a string containing an error message when a mysqli  error\noccurs?\n4.How can you determine the number of rows returned by a mysqli  query?\n5.How can you retrieve a particular row of data from a set of mysqli  results?\n6.Which mysqli  method can be used to properly escape user input to prevent code\ninjection?\n7.What negative effects can happen if you do not close the objects created by\nmysqli  methods?\nSee Chapter 10 Answers  in Appendix A  for the answers to these questions.\nQuestions | 263"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 294,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 295,
    "text": "CHAPTER 11\nForm Handling\nThe main way that website users interact with PHP and MySQL is through the use of\nHTML forms. These were introduced very early on in the development of the World\nWide Web in 1993—even before the advent of ecommerce—and have remained a\nmainstay ever since, due to their simplicity and ease of use.\nOf course, enhancements have been made over the years to add extra functionality to\nHTML form handling, so this chapter will bring you up to speed on state-of-the-art\nform handling and show you the best ways to implement forms for good usability\nand security. Plus, as you will see a little later on, the HTML5 specification has further\nimproved the use of forms.\nBuilding Forms\nHandling forms is a multipart process. First a form is created, into which a user can\nenter the required details. This data is then sent to the web server, where it is inter‐\npreted, often with some error checking. If the PHP code identifies one or more fields\nthat require reentering, the form may be redisplayed with an error message. When\nthe code is satisfied with the accuracy of the input, it takes some action that usually\ninvolves the database, such as entering details about a purchase.\nTo build a form, you must have at least the following elements:\n•An opening <form>  and closing </form>  tag\n•A submission type specifying either a Get or Post method\n•One or more input  fields\n•The destination URL to which the form data is to be submitted\n265"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 296,
    "text": "Example 11-1  shows a very simple form created with PHP , which you should type in\nand save as formtest.php .\nExample 11-1. formtest.php—a simple PHP form handler\n<?php // formtest.php\n  echo <<<_END\n    <html>\n      <head>\n        <title>Form Test</title>\n      </head>\n      <body>\n      <form method=\"post\" action=\"formtest.php\">\n        What is your name?\n        <input type=\"text\" name=\"name\">\n        <input type=\"submit\">\n      </form>\n      </body>\n    </html>\n_END;\n?>\nThe first thing to notice about this example is that, as you have already seen in this\nbook, rather than dropping in and out of PHP code, the echo <<<_END..._END  con‐\nstruct is used whenever multiline HTML must be output.\nInside of this multiline output is some standard code for commencing an HTML\ndocument, displaying its title, and starting the body of the document. This is followed\nby the form, which is set to send its data using the Post method to the PHP program\nformtest.php , which is the name of the program itself.\nThe rest of the program just closes all the items it opened: the form, the body of the\nHTML document, and the PHP echo <<<_END  statement. The result of opening this\nprogram in a web browser is shown in Figure 11-1 .\nFigure 11-1. The result of opening formtest.php in a web browser\n266 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 297,
    "text": "Retrieving Submitted Data\nExample 11-1  is only one part of the multipart form-handling process. If you enter a\nname and click the Submit Query button, absolutely nothing will happen other than\nthe form being redisplayed. So now it’s time to add some PHP code to process the\ndata submitted by the form.\nExample 11-2  expands on the previous program to include data processing. Type it or\nmodify formtest.php  by adding in the new lines, save it as formtest2.php , and try the\nprogram for yourself. The result of running this program and entering a name is\nshown in Figure 11-2 .\nExample 11-2. Updated version of formtest.php\n<?php // formtest2.php\n  if (isset($_POST['name'])) $name = $_POST['name'];\n  else $name = \"(Not entered)\";\n  echo <<<_END\n    <html>\n      <head>\n        <title>Form Test</title>\n      </head>\n      <body>\n        Your name is: $name<br>\n        <form method=\"post\" action=\"formtest2.php\">\n          What is your name?\n          <input type=\"text\" name=\"name\">\n          <input type=\"submit\">\n        </form>\n      </body>\n    </html>\n_END;\n?>\nThe only changes are a couple of lines at the start that check the $_POST  associative\narray for the field name  having been submitted. Chapter 10  introduced the $_POST\nassociative array, which contains an element for each field in an HTML form. In\nExample 11-2 , the input name used was name  and the form method was Post, so ele‐\nment name  of the $_POST  array contains the value in $_POST['name'] .\nThe PHP isset  function is used to test whether $_POST['name']  has been assigned a\nvalue. If nothing was posted, the program assigns the value (Not entered) ; other‐\nwise, it stores the value that was entered. Then a single line has been added after the\n<body>  statement to display that value, which is stored in $name .\nRetrieving Submitted Data | 267"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 298,
    "text": "Notice how the <input>  elements in this example do not use the />\nform of self-closing, because in the new world of HTML5 this style\nis optional (and it was never actually required in HTML4 anyway;\nit was recommended purely because XHTML was planned to\nsupersede HTML at some point—but this never happened). So\nsince I’m always in favor of less work when programming, I no\nlonger use these characters except for actual XHTML (where this\ntype of closing remains necessary), saving both a space and a slash\nfor every self-closing tag.\nFigure 11-2. formtest.php with data handling\nregister_globals: An Old Solution Hangs On\nBefore security became such a big issue, the default behavior of PHP was to assign the\n$_POST  and $_GET  arrays directly to PHP variables. For example, there would be no\nneed to use the instruction $name=$_POST['name'];  because $name  would already be\ngiven that value automatically by PHP at the program start!\nInitially (prior to version 4.2.0 of PHP), this seemed a very useful idea that saved a lot\nof extra code writing, but this practice has now been discontinued and the feature is\ndisabled by default. Should you find register_globals  enabled on a production web\nserver for which you are developing, you should urgently ask your server administra‐\ntor to disable it.\nSo why disable register_globals ? It enables anyone to enter a Get input on the tail\nof a URL, like this: http://myserver.com?override=1 . If your code were ever to use the\nvariable $override  and you forgot to initialize it (for example, with the statement\n$override=0; ), the program could be compromised by such an exploit.\nIn fact, because many installations on the Web still have this gaping hole, I advise you\nto always initialize every variable you use, just in case your code will ever run on such\na system. Initialization is also good programming practice, because you can comment\neach initialization to remind yourself and other programmers what a variable is for.\n268 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 299,
    "text": "If you ever find yourself maintaining code that seems to assume\nvalues for certain variables for no apparent reason, you can make\nan educated guess that the programmer probably wrote the code\nusing register_globals , and that these values are intended to be\nextracted from a Post or Get. If so, I recommend that you rewrite\nthe code to load these variables explicitly from the correct $_POST\nor $_GET  array.\nDefault Values\nSometimes it’s convenient to offer your site visitors a default value in a web form. For\nexample, suppose you put up a loan repayment calculator widget on a real estate web‐\nsite.  It could make sense to enter default values of, say, 25 years and 6 percent inter‐\nest, so that the user can simply type either the principle sum to borrow or the amount\nthat she can afford to pay each month.\nIn this case, the HTML for those two values would be something like Example 11-3 .\nExample 11-3. Setting default values\n<form method=\"post\" action=\"calc.php\"><pre>\n      Loan Amount <input type=\"text\" name=\"principle\">\nMonthly Repayment <input type=\"text\" name=\"monthly\">\n  Number of Years <input type=\"text\" name=\"years\" value=\"25\">\n    Interest Rate <input type=\"text\" name=\"rate\"  value=\"6\">\n                  <input type=\"submit\">\n</pre></form>\nIf you wish to try this (and the other HTML code samples), type it\nand save it with an .html  (or .htm ) file extension, such as test.html\n(or test.htm ), and then load that file into your browser.\nTake a look at the third and fourth inputs. By populating  the value  attribute, you dis‐\nplay a default value in the field, which the users can then change if they wish. With\nsensible default values, you can often make your web forms more user-friendly by\nminimizing unnecessary typing. The result of the previous code looks like\nFigure 11-3 . Of course, this was created to illustrate default values and, because the\nprogram calc.php  has not been written, the form will not do anything if submitted.\nRetrieving Submitted Data | 269"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 300,
    "text": "Figure 11-3. Using default values for selected form fields\nDefault values are also used for  hidden fields if you want to pass extra information\nfrom your web page to your program, in addition to what users enter. We’ll look at\nhidden fields later in this chapter.\nInput Types\nHTML forms are very versatile and allow you to submit a wide range of input types,\nfrom text boxes and text areas to checkboxes, radio buttons, and more.\nText boxes\nThe input type you will probably use most often is the text box. It accepts a wide\nrange of alphanumeric text and other characters in a single-line box. The general for‐\nmat of a text box input is as follows:\n<input type=\"text\" name=\" name\" size=\" size\" maxlength=\" length\" value=\" value\">\nWe’ve already covered the name  and value  attributes, but two more are introduced\nhere: size  and maxlength . The size  attribute specifies the width of the box (in char‐\nacters of the current font) as it should appear on the screen, and maxlength  specifies\nthe maximum number of characters that a user is allowed to enter into the field.\nThe only required attributes are type , which tells the web browser what type of input\nto expect, and name , for giving the input a name that will be used to process the field\nupon receipt of the submitted form.\nText areas\nWhen you need to  accept input of more than a short line of text, use a text area. This\nis similar to a text box, but, because it allows multiple lines, it has some different\nattributes. Its general format looks like this:\n<textarea name=\" name\" cols=\" width\" rows=\" height\" wrap=\" type\">\n</textarea>\n270 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 301,
    "text": "The first thing  to notice is that <textarea>  has its own tag and is not a subtype of the\n<input>  tag. It therefore requires a closing </textarea>  to end input.\nInstead of a default attribute, if you have default text to display, you must put it before\nthe closing </textarea> , and it will then be displayed and be editable by the user:\n<textarea name=\" name\" cols=\" width\" rows=\" height\" wrap=\" type\">\n  This is some default text.\n</textarea>\nTo control the width and height, use the cols  and rows  attributes. Both use the char‐\nacter spacing of the current font to determine the size of the area. If you omit these\nvalues, a default input box will be created that will vary in dimensions depending on\nthe browser used, so you should always define them to be certain about how your\nform will appear.\nLast, you can control how the text entered into the box will wrap (and how any such\nwrapping will be sent to the server) using the wrap  attribute. Table 11-1  shows the\nwrap types available. If you leave out the wrap  attribute, soft wrapping is used.\nTable 11-1. The wrap types available in a textarea input\nType Action\noff Text does not wrap, and lines appear exactly as the user types them.\nsoft Text wraps but is sent to the server as one long string without carriage returns and line feeds.\nhard Text wraps and is sent to the server in wrapped format with soft returns and line feeds.\nCheckboxes\nWhen you want to offer a number of different options to a user, from which he can\nselect one or more items, checkboxes are the way to go. Here is the format to use:\n<input type=\"checkbox\" name=\" name\" value=\" value\" checked=\"checked\">\nIf you include the checked  attribute, the box is already checked when the browser is\ndisplayed. The string you assign to the attribute should be either a double quote or\nthe value \"checked\" , or there should be no value assigned. If you don’t include the\nattribute, the box is shown unchecked. Here is an example of creating an unchecked\nbox:\nI Agree <input type=\"checkbox\" name=\"agree\">\nIf the user doesn’t check the box, no value will be submitted. But if he does, a value of\n\"on\"  will be submitted for the field named agree . If you prefer to have your own\nvalue submitted instead of the word on (such as the number 1), you could use the\nfollowing syntax:\nI Agree <input type=\"checkbox\" name=\"agree\" value=\"1\">\nRetrieving Submitted Data | 271"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 302,
    "text": "On the other hand, if you wish to offer a newsletter to your readers when submitting\na form, you might want to have the checkbox already checked as the default value:\nSubscribe? <input type=\"checkbox\" name=\"news\" checked=\"checked\">\nIf you want to allow groups of items to be selected at one time, assign them all the\nsame name. However, only the last item checked will be submitted, unless you pass\nan array as the name. For example, Example 11-4  allows the user to select his favorite\nice creams (see Figure 11-4  for how it displays in a browser).\nExample 11-4. Offering  multiple checkbox choices\n   Vanilla <input type=\"checkbox\" name=\"ice\" value=\"Vanilla\">\n Chocolate <input type=\"checkbox\" name=\"ice\" value=\"Chocolate\">\nStrawberry <input type=\"checkbox\" name=\"ice\" value=\"Strawberry\">\nFigure 11-4. Using checkboxes to make quick selections\nIf only one of the checkboxes is selected, such as the second one, only that item will\nbe submitted (the field named ice would be assigned the value \"Chocolate\" ). But if\ntwo or more are selected, only the last value will be submitted, with prior values being\nignored.\nIf you want  exclusive behavior—so that only one item can be submitted—then you\nshould  use radio buttons  (see the next section), but to allow multiple submissions,\nyou have to slightly alter the HTML, as in Example 11-5  (note the addition of the\nsquare brackets, [], following the values of ice).\nExample 11-5. Submitting multiple values with an array\n   Vanilla <input type=\"checkbox\" name=\"ice[]\" value=\"Vanilla\">\n Chocolate <input type=\"checkbox\" name=\"ice[]\" value=\"Chocolate\">\nStrawberry <input type=\"checkbox\" name=\"ice[]\" value=\"Strawberry\">\nNow, when the form is submitted, if any of these items have been checked, an array\ncalled ice will be submitted that contains any and all values. In each case, you can\nextract either the single submitted value, or the array of values, to a variable like this:\n$ice = $_POST['ice'];\n272 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 303,
    "text": "If the field ice has been posted as a single value, $ice  will be a single string, such as\n\"Strawberry\" . But if ice was defined in the form as an array (like Example 11-5 ),\n$ice  will be an array, and its number of elements will be the number of values sub‐\nmitted. Table 11-2  shows the seven possible sets of values that could be submitted by\nthis HTML for one, two, or all three selections. In each case, an array of one, two, or\nthree items is created.\nTable 11-2. The seven possible sets of values for the array $ice\nOne value submitted Two values submitted Three values submitted\n$ice[0] => Vanilla\n$ice[0] => Chocolate\n$ice[0] => Strawberry$ice[0] => Vanilla\n$ice[1] => Chocolate\n$ice[0] => Vanilla\n$ice[1] => Strawberry\n$ice[0] => Chocolate\n$ice[1] => Strawberry$ice[0] => Vanilla\n$ice[1] => Chocolate\n$ice[2] => Strawberry\nIf $ice  is an array, the PHP code to display its contents is quite simple and might look\nlike this:\nforeach($ice as $item) echo \"$item<br>\";\nThis uses the standard PHP foreach  construct to iterate through the array $ice  and\npass each element’s value into the variable $item , which is then displayed via the echo\ncommand. The <br>  is just an HTML formatting device to force a new line after each\nflavor in the display. By default, checkboxes are square.\nRadio buttons\nRadio buttons are named after the push-in preset buttons found on many older\nradios, where any previously depressed button pops back up when another is pressed.\nThey are used when you want only a single value to be returned from a selection of\ntwo or more options. All the buttons in a group must use the same name and,\nbecause only a single value is returned, you do not have to pass an array.\nFor example, if your website offers a choice of delivery times for items purchased\nfrom your store, you might use HTML like that in Example 11-6  (see Figure 11-5  to\nsee how it displays).\nExample 11-6. Using radio buttons\n8am-Noon<input type=\"radio\" name=\"time\" value=\"1\">\nNoon-4pm<input type=\"radio\" name=\"time\" value=\"2\" checked=\"checked\">\n 4pm-8pm<input type=\"radio\" name=\"time\" value=\"3\">\nRetrieving Submitted Data | 273"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 304,
    "text": "Figure 11-5. Selecting a single value with radio buttons\nHere, the second option of Noon–4pm has been selected by default. This default\nchoice ensures that at least one delivery time will be chosen by the user, which she\ncan change to one of the other two options if she prefers. Had one of the items not\nbeen already checked, the user might forget to select an option, and no value would\nbe submitted at all for the delivery time. By default, radio buttons are round.\nHidden fields\nSometimes it is convenient to have hidden form fields so that you can keep track of\nthe state of form entry. For example, you might wish to know whether a form has\nalready been submitted. Y ou can achieve this by adding some HTML in your PHP\ncode, such as the following:\necho '<input type=\"hidden\" name=\"submitted\" value=\"yes\">'\nThis is a simple PHP echo  statement that adds an input  field to the HTML form. Let’s\nassume the form was created outside the program and displayed to the user. The first\ntime the PHP program receives the input, this line of code has not run, so there will\nbe no field named submitted . The PHP program re-creates the form, adding the\ninput  field. So when the visitor resubmits the form, the PHP program receives it with\nthe submitted  field set to \"yes\" . The code can simply check whether the field is\npresent:\nif (isset($_POST['submitted']))\n{...\nHidden fields can also be useful for storing other details, such as a session ID string\nthat you might create to identify a user, and so on.\nNever treat hidden fields as secure—because they are not. Someone\ncould easily view the HTML containing them by using a browser’s\nView Source feature.\n274 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 305,
    "text": "<select>\nThe <select>  tag lets you create a drop-down list of options, offering either single or\nmultiple selections. It conforms to the following syntax:\n<select name=\" name\" size=\" size\" multiple=\"multiple\">\nThe attribute size  is the number of lines to display. Clicking on the display causes a\nlist to drop down, showing all the options. If you use the multiple  attribute, a user\ncan select multiple options from the list by pressing the Ctrl key when clicking. So to\nask a user for his favorite vegetable from a choice of five, you might use HTML as in\nExample 11-7 , which offers a single selection.\nExample 11-7. Using select\nVegetables\n<select name=\"veg\" size=\"1\">\n  <option value=\"Peas\">Peas</option>\n  <option value=\"Beans\">Beans</option>\n  <option value=\"Carrots\">Carrots</option>\n  <option value=\"Cabbage\">Cabbage</option>\n  <option value=\"Broccoli\">Broccoli</option>\n</select>\nThis HTML offers five choices, with the first one, Peas , preselected (due to it being the\nfirst item). Figure 11-6  shows the output where the list has been clicked to drop it down,\nand the option Carrots  has been highlighted. If you want to have a different default option\noffered first (such as Beans ), use the <selected>  tag, like this:\n<option selected=\"selected\" value=\"Beans\">Beans</option>\nFigure 11-6. Creating a drop-down list with select\nY ou can also allow users to select more than one item, as in Example 11-8 .\nExample 11-8. Using select with the multiple attribute\nVegetables\n<select name=\"veg\" size=\"5\" multiple=\"multiple\">\nRetrieving Submitted Data | 275"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 306,
    "text": "<option value=\"Peas\">Peas</option>\n  <option value=\"Beans\">Beans</option>\n  <option value=\"Carrots\">Carrots</option>\n  <option value=\"Cabbage\">Cabbage</option>\n  <option value=\"Broccoli\">Broccoli</option>\n</select>\nThis HTML is not very different; only the size has been changed to \"5\" and the\nattribute multiple  has been added. But, as you can see from Figure 11-7 , it is now\npossible for the user to select more than one option by using the Ctrl key when click‐\ning. Y ou can leave out the size  attribute if you wish, and the output will be the same;\nhowever, with a larger list, the drop-down box might take up too much screen space,\nso I recommend that you pick a suitable number of rows and stick with it. I also rec‐\nommend against multiple select boxes smaller than two rows in height—some brows‐\ners may not correctly display the scroll bars needed to access it.\nFigure 11-7. Using a select with the multiple attribute\nY ou can also use the selected  attribute within a multiple select and can, in fact, have\nmore than one option preselected if you wish.\nLabels\nY ou can provide an even better user experience by utilizing the <label>  tag. With it,\nyou can surround a form element, making it selectable by clicking any visible part\ncontained between the opening and closing <label>  tags.\nFor example, going back to the example of choosing a delivery time, you could allow\nthe user to click the radio button itself and the associated text, like this:\n<label>8am-Noon<input type=\"radio\" name=\"time\" value=\"1\"></label>\nThe text will not be underlined like a hyperlink when you do this, but as the mouse\npasses over, it will change to an arrow instead of a text cursor, indicating that the\nwhole item is clickable.\n276 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 307,
    "text": "The submit button\nTo match the type of form being submitted, you can change the text of the submit\nbutton to anything you like by using the value  attribute, like this:\n<input type=\"submit\" value=\"Search\">\nY ou can also replace the standard text button with a graphic image of your choice,\nusing HTML such as this:\n<input type=\"image\" name=\"submit\" src=\"image.gif\">\nSanitizing Input\nNow we return to PHP programming. It can never be emphasized enough that han‐\ndling user data is a security minefield, and that it is essential to learn to treat all such\ndata with utmost caution from the word go. It’s actually not that difficult to sanitize\nuser input from potential hacking attempts, but it must be done.\nThe first thing to remember is that regardless of what constraints you have placed in\nan HTML form to limit the types and sizes of inputs, it is a trivial matter for a hacker\nto use her browser’s View Source feature to extract the form and modify it to provide\nmalicious input to your website.\nTherefore, you must never trust any variable that you fetch from either the $_GET  or\n$_POST  arrays until you have processed it. If you don’t, users may try to inject Java‐\nScript into the data to interfere with your site’s operation, or even attempt to add\nMySQL commands to compromise your database.\nTherefore, instead of just using code such as the following when reading in user\ninput:\n$variable = $_POST['user_input'];\nyou should also use one or more of the following lines of code. For example, to pre‐\nvent escape characters from being injected into a string that will be presented to\nMySQL, use the following. Remember that this function takes into account the cur‐\nrent character set of a MySQL connection, so it must be used with a mysqli  connec‐\ntion object (in this instance, $connection ), as discussed in Chapter 10 .\n$variable = $connection->real_escape_string($variable);\nRemember that the safest way to secure MySQL from hacking\nattempts is to use placeholders and prepared statements, as\ndescribed in Chapter 10 . If you do so for all accesses to MySQL, it\nbecomes unnecessary to escape data being transferred into or out\nof the database. Y ou will, however, still need to sanitize input when\nincluding it within HTML.\nRetrieving Submitted Data | 277"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 308,
    "text": "To get rid of unwanted slashes, use this:\n$variable = stripslashes($variable);\nAnd to remove any HTML from a string, use the following:\n$variable = htmlentities($variable);\nFor example, this would change a string of interpretable HTML code like <b>hi</b>\ninto &lt;b&gt;hi&lt;/b&gt; , which displays as text, and won’t be interpreted as\nHTML tags.\nFinally, if you wish to strip HTML entirely from an input, use the following (but\nensure you use it before calling htmlentities , which replaces any angle brackets\nused as part of HTML tags):\n$variable = strip_tags($variable);\nIn fact, until you know exactly what sanitization you require for a program,\nExample 11-9  shows a pair of functions that brings all these checks together to pro‐\nvide a very good level of security.\nExample 11-9. The sanitizeString and sanitizeMySQL functions\n<?php\n  function sanitizeString($var)\n  {\n    $var = stripslashes($var);\n    $var = strip_tags($var);\n    $var = htmlentities($var);\n    return $var;\n  }\n  function sanitizeMySQL($connection, $var)\n  { \n    $var = $connection->real_escape_string($var);\n    $var = sanitizeString($var);\n    return $var;\n  }\n?>\nAdd this code to the end of your PHP programs, and you can then call it for each user\ninput to sanitize, like this:\n$var = sanitizeString($_POST['user_input']);\nOr, when you have an open MySQL connection, and a mysqli  connection object (in\nthis case, called $connection ):\n$var = sanitizeMySQL($connection, $_POST['user_input']);\n278 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 309,
    "text": "If you are using the procedural version of the mysqli  extension,\nyou will need to modify the sanitizeMySQL  function to call the\nmysqli_real_escape_string  function,  like this (in which case\n$connection  will then be a handle, not an object):\n$var = mysqli_real_escape_string($connection, $var);\nAn Example Program\nSo let’s look at how a real-life PHP program integrates with an HTML form by creat‐\ning the program convert.php  listed in Example 11-10 . Type it as shown and try it for\nyourself.\nExample 11-10. A program to convert values between Fahrenheit and Celsius\n<?php // convert.php\n  $f = $c = '';\n  if (isset($_POST['f'])) $f = sanitizeString($_POST['f']);\n  if (isset($_POST['c'])) $c = sanitizeString($_POST['c']);\n  if ($f != '')\n  {\n    $c = intval((5 / 9) * ($f - 32));\n    $out = \"$f °f equals $c °c\";\n  }\n  elseif($c != '')\n  {\n    $f = intval((9 / 5) * $c + 32);\n    $out = \"$c °c equals $f °f\";\n  }\n  else $out = \"\";\n  echo <<<_END\n<html>\n  <head>\n    <title>Temperature Converter</title>\n  </head>\n  <body>\n    <pre>\n      Enter either Fahrenheit or Celsius and click on Convert\n      <b>$out</b>\n      <form method=\"post\" action=\"convert.php\">\n        Fahrenheit <input type=\"text\" name=\"f\" size=\"7\">\n           Celsius <input type=\"text\" name=\"c\" size=\"7\">\n                   <input type=\"submit\" value=\"Convert\">\n      </form>\n    </pre>\n  </body>\nAn Example Program | 279"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 310,
    "text": "</html>\n_END;\n  function sanitizeString($var)\n  {\n    $var = stripslashes($var);\n    $var = strip_tags($var);\n    $var = htmlentities($var);\n    return $var;\n  }\n?>\nWhen you call up convert.php  in a browser, the result should look something like\nFigure 11-8 .\nFigure 11-8. The temperature conversion program in action\nTo break the program down, the first line initializes the variables $c and $f in case\nthey do not get posted to the program. The next two lines fetch the values of either\nthe field named f or the one named c, for an input Fahrenheit or Celsius value. If the\nuser inputs both, the Celsius is simply ignored and the Fahrenheit value is converted.\nAs a security measure, the new function sanitizeString  from Example 11-9  is also\nused.\nSo, having either submitted values or empty strings in both $f and $c, the next por‐\ntion of code constitutes an if...elseif...else  structure that first tests whether $f\nhas a value. If not, it checks $c; otherwise, the variable $out  is set to the empty string\n(more on that in a moment).\nIf $f is found to have a value, the variable $c is assigned a simple mathematical\nexpression that converts the value of $f from Fahrenheit to Celsius. The formula used\nis Celsius = (5 / 9) × (Fahrenheit – 32). The variable $out  is then set to a message\nstring explaining the conversion.\n280 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 311,
    "text": "On the other hand, if $c is found to have a value, a complementary operation is per‐\nformed to convert the value of $c from Celsius to Fahrenheit and assign the result to\n$f. The formula used is Fahrenheit = (9 / 5) × Celsius + 32. As with the previous sec‐\ntion, the string $out  is then set to contain a message about the conversion.\nIn both conversions, the PHP intval  function is called to convert the result of the\nconversion to an integer value. It’s not necessary, but looks better.\nWith all the arithmetic done, the program now outputs the HTML, which starts with\nthe basic head and title and then contains some introductory text before displaying\nthe value of $out . If no temperature conversion was made, $out  will have a value of\nNULL  and nothing will be displayed, which is exactly what we want when the form\nhasn’t yet been submitted. But if a conversion was made, $out  contains the result,\nwhich is displayed.\nAfter this, we come to the form, which is set to submit using the Post method to the\nfile convert.php  (the program itself). Within the form, there are two inputs for either a\nFahrenheit or Celsius value to be entered. A submit button with the text Convert is\nthen displayed, and the form is closed.\nAfter outputting the HTML to close the document, we come finally to the function\nsanitizeString  from Example 11-9 . Try playing with the example by inputting dif‐\nferent values into the fields; for a bit of fun, can you find a value for which Fahrenheit\nand Celsius are the same?\nAll the examples in this chapter have used the Post method to send\nform data. I recommend this, as it’s the neatest and most secure\nmethod. However, the forms can easily be changed to use the Get\nmethod, as long as values are fetched from the $_GET  array instead\nof the $_POST  array. Reasons to do this might include making the\nresult of a search bookmarkable or directly linkable from another\npage.\nWhat’s New in HTML5?\nWith HTML5, developers can draw on a number of useful enhancements to form\nhandling to make using forms easier than ever, including new attributes; color, date,\nand time pickers; and new input types—although some of these features are not yet\nimplanted across all major browsers. The following new features, however, will work\non all browsers.\nWhat’s New in HTML5? | 281"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 312,
    "text": "The autocomplete Attribute\nY ou can apply the autocomplete  attribute to either the <form>  element, or to any of\nthe color , date , email , password , range , search , tel, text , or url types of the\n<input>  element.\nWith autocomplete enabled, previous user inputs are recalled and automatically\nentered into fields as suggestions. Y ou can also disable this feature by turning auto‐\ncomplete off. Here’s how to turn autocomplete on for an entire form but disable it for\nspecific fields (highlighted in bold):\n<form action='myform.php' method='post' autocomplete='on' >\n  <input type='text'     name='username'>\n  <input type='password' name='password' autocomplete='off' >\n</form>\nThe autofocus Attribute\nThe autofocus  attribute gives immediate focus to an element when a page loads. It\ncan be applied to any <input> , <textarea> , or <button>  element, like this:\n<input type='text' name='query' autofocus='autofocus' >\nBrowsers that use touch interfaces (such as Android, iOS, or Win‐\ndows Phone) usually ignore the autofocus  attribute, leaving it to\nthe user to tap on a field to give it focus; otherwise, the zoom in,\nfocusing, and pop-up keyboards this attribute would generate\ncould quickly become very annoying.\nBecause this feature will cause the focus to move in to an input element, the Back‐\nspace key will no longer take the user back a web page (although Alt-Left and Alt-\nRight will still move backward and forward within the browsing history).\nThe placeholder Attribute\nThe placeholder  attribute  lets you place into any blank input field a helpful hint to\nexplain to users what they should enter. Y ou use it like this:\n<input type='text' name='name' size='50' placeholder='First & Last name' >\nThe input field will display the placeholder text as a prompt until the user starts typ‐\ning, at which point the placeholder will disappear.\nThe required Attribute\nThe required  attribute is used to ensure that a field has been completed before a\nform is submitted. Y ou use it like this:\n282 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 313,
    "text": "<input type='text' name='creditcard' required='required' >\nWhen the browser detects attempted form submission where there’s an uncompleted\nrequired  input, a message is displayed, prompting the user to complete the field.\nOverride Attributes\nWith override attributes, you can override form settings on an element-by-element\nbasis. So, for example, using the formaction  attribute,  you can specify that a submit\nbutton should submit a form to a different URL than is specified in the form itself,\nlike the following (in which the default and overridden action URLs are bold):\n<form action='url1.php'  method='post'>\n  <input type='text' name='field'>\n  <input type='submit' formaction='url2.php' >\n</form>\nHTML5 also brings support for the formenctype , formmethod , formnovalidate , and\nformtarget  override attributes, which you can use in exactly the same manner as for\nmaction  to override one of these settings.\nThe form overrides have been supported in most major browsers\nfor a few years, but have been featured in Internet Explorer only\nsince version 10.\nThe width and height Attributes\nUsing these new attributes, you can alter the dimensions of an input image, like this:\n<input type='image' src='picture.png' width='120' height='80' >\nFeatures Awaiting Full Implementation\nSince HTML5 is  still  in its  early days (even though it’s been around for many years),\nbrowser developers have been implementing features according to their own sched‐\nules, so many parts of the specification are available only on some browsers. However,\nduring the life of this edition, more and more of them will become available across\nthe board, so it’s worth mentioning what’s coming here so that you’ll be ready to use\nthem sooner rather than later.\nThe form Attribute\nWith HTML5, you no longer have to place <input>  elements within <form>  elements,\nbecause you can specify the form to which an input applies by supplying a form\nFeatures Awaiting Full Implementation | 283"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 314,
    "text": "attribute. The following code shows a form being created, but with its input outside\nof the <form>  and </form>  tags:\n<form action='myscript.php' method='post' id='form1' >\n</form>\n<input type='text' name='username' form='form1' >\nTo do this, you must give the form an ID using the id attribute, and this is the ID to\nwhich the form  attribute of an input element must refer.\nAt the time of writing, this attribute is unsupported by Internet Explorer.\nThe list Attribute\nHTML5 supports attaching lists to inputs to enable users to easily select from a pre‐\ndefined list. But, at the time of writing, only Firefox, Chrome, Safari, and IE support\nthe list  attribute.  Nevertheless, once Opera picks it up, it will be a very handy fea‐\nture, which you’ll be able to use like this:\nSelect destination:\n<input type='url' name='site' list='links' >\n<datalist id='links' >\n  <option label='Google' value='http://google.com'>\n  <option label='Yahoo!' value='http://yahoo.com'>\n  <option label='Bing'   value='http://bing.com'>\n  <option label='Ask'    value='http://ask.com'>\n</datalist >\nThe min and max Attributes\nWith the min and max attributes,  you can specify minimum and maximum values for\ninputs, but currently not in Firefox or IE. Y ou use the attributes like this:\n<input type='time' name='alarm' value='07:00' min='05:00' max='09:00' >\nThe browser will then either offer up and down selectors for the range of values\nallowed, or simply disallow values outside of that range. In tests, however, I have\nfound this attribute to be flaky in some implementations, and suggest you fully test\nbefore implementing this feature, even when it is available on all browsers.\nThe step Attribute\nOften used with min and max, the step  attribute supports  stepping through number\nor date values, like this:\n<input type='time' name='meeting' value='12:00'\n  min='09:00' max='16:00' step='3600' >\n284 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 315,
    "text": "When you are stepping through date or time values, each unit represents 1 second.\nThis attribute is not yet supported by Firefox or IE.\nThe color Input Type\nThe color  input type calls up a color  picker so that you can simply click the color of\nyour choice. Y ou use it like this:\nChoose a color <input type='color'  name='color'>\nNeither Firefox nor IE supports this input type at the time of writing.\nThe number and range Input Types\nThe number  and range  input types restrict input to either a number or a number\nwithin a specified range, like this:\n<input type='number' name='age'>\n<input type='range' name='num' min='0' max='100' value='50' step='1'>\nFirefox does not appear to support the number  input type at the time of writing.\nDate and Time Pickers\nWhen you choose an input type of date , month , week , time , datetime , or datetime-\nlocal , a picker will pop up on supported browsers from which the user can make a\nselection, like this one, which inputs the time:\n<input type='time'  name='time' value='12:34'>\nHowever, without support from IE or Firefox, these pickers are probably not worth\nusing in your web pages yet.\nThere are a few other form-related enhancements to HTML5 that are still under\ndevelopment, and you can keep abreast of them at http://tinyurl.com/h5forms  (or this\ndirect URL: http://www.w3.org/TR/html5/forms.html ).\nThe next chapter will show you how to use cookies and authentication to store users’\npreferences and keep them logged in, and how to maintain a complete user session.\nQuestions\n1.Y ou can submit form data using either the POST  or the GET method. Which asso‐\nciative arrays are used to pass this data to PHP?\n2.What is register_globals , and why is it a bad idea?\n3.What is the difference between a text box and a text area?\nQuestions | 285"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 316,
    "text": "4.If a form has to offer three choices to a user, each of which is mutually exclusive\nso that only one of the three can be selected, which input type would you use,\ngiven a choice between checkboxes and radio buttons?\n5.How can you submit a group of selections from a web form using a single field\nname?\n6.How can you submit a form field without displaying it in the browser?\n7.Which HTML tag is used to encapsulate a form element and supporting text or\ngraphics, making the entire unit selectable with a mouse-click?\n8.Which PHP function converts HTML into a format that can be displayed but will\nnot be interpreted as HTML by a browser?\n9.What form attribute can be used to help users complete input fields?\n10.How can you ensure that an input is completed before a form gets submitted?\nSee Chapter 11 Answers  in Appendix A  for the answers to these questions. \n286 | Chapter 11: Form Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 317,
    "text": "CHAPTER 12\nCookies, Sessions, and Authentication\nAs your web projects grow larger and more complicated, you will find an increasing\nneed to keep track of your users. Even if you aren’t offering logins and passwords, you\nwill still often need to store details about a user’s current session and possibly also\nrecognize her when she returns to your site.\nSeveral technologies support this kind of interaction, ranging from simple browser\ncookies to session handling and HTTP authentication. Between them, they offer the\nopportunity for you to configure your site to your users’ preferences and ensure a\nsmooth and enjoyable transition through it.\nUsing Cookies in PHP\nA cookie  is an item of data that a web server saves to your computer’s hard disk via a\nweb browser. It can contain almost any alphanumeric information (as long as it’s\nunder 4 KB) and can be retrieved from your computer and returned to the server.\nCommon uses include session tracking, maintaining data across multiple visits, hold‐\ning shopping cart contents, storing login details, and more.\nBecause of their privacy implications, cookies can be read only from the issuing\ndomain. In other words, if a cookie is issued by, for example, oreilly.com , it can be\nretrieved only by a web server using that domain. This prevents other websites from\ngaining access to details for which they are not authorized.\nBecause of the way the Internet works, multiple elements on a web page can be\nembedded from multiple domains, each of which can issue its own cookies. When\nthis happens, they are referred to as third-party cookies . Most commonly, these are\ncreated by advertising companies in order to track users across multiple websites.\n287"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 318,
    "text": "Because of this, most browsers allow users to turn cookies off either for the current\nserver’s domain, third-party servers, or both. Fortunately, most people who disable\ncookies do so only for third-party websites.\nCookies are exchanged during the transfer of headers, before the actual HTML of a\nweb page is sent, and it is impossible to send a cookie once any HTML has been\ntransferred. Therefore, careful planning of cookie usage is important. Figure 12-1\nillustrates a typical request and response dialog between a web browser and  web\nserver passing cookies.\nFigure 12-1. A browser/server request/response dialog with cookies\nThis exchange shows a browser receiving two pages:\n1.The browser issues a request to retrieve the main page, index.html , at the website\nhttp://www.webserver.com . The first header specifies the file, and the second\nheader specifies the server.\n2.When the web server at webserver.com  receives this pair of headers, it returns\nsome of its own. The second header defines the type of content to be sent ( text/\nhtml ), and the third one sends a cookie of the name name  and with the value\nvalue . Only then are the contents of the web page transferred.\n3.Once the browser has received the cookie, it will then return it with every future\nrequest made to the issuing server until the cookie expires or is deleted. So, when\nthe browser requests the new page /news.html , it also returns the cookie name\nwith the value value .\n288 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 319,
    "text": "4.Because the cookie has already been set, when the server receives the request to\nsend /news.html , it does not have to resend the cookie, but just returns the\nrequested page.\nSetting a Cookie\nSetting a cookie in PHP is a simple matter. As long as no HTML has yet been trans‐\nferred, you can call the setcookie  function, which has the following syntax (see\nTable 12-1 ):\nsetcookie(name, value, expire, path, domain, secure, httponly);\nTable 12-1. The setcookie parameters\nParameter Description Example\nname The name of the cookie. This is the name that your server will use to access the\ncookie on subsequent browser requests.username\nvalue The value of the cookie, or the cookie’s contents. This can contain up to 4 KB of\nalphanumeric text.Hannah\nexpire (Optional. ) Unix timestamp of the expiration date. Generally, you will probably use\ntime()  plus a number of seconds. If not set, the cookie expires when the browser\ncloses.time() + 2592000\npath (Optional. ) The path of the cookie on the server. If this is a / (forward slash), the\ncookie is available over the entire domain, such as www.webserver.com . If it is a\nsubdirectory, the cookie is available only within that subdirectory. The default is\nthe current directory that the cookie is being set in, and this is the setting you will\nnormally use./\ndomain (Optional. ) The Internet domain of the cookie. If this is .webserver.com , the cookie is\navailable to all of webserver.com  and its subdomains, such as www.webserver.com\nand images.webserver.com . If it is images.webserver.com , the cookie is available\nonly to images.webserver.com  and its subdomains such as\nsub.images.webserver.com , but not, say, to www.webserver.com ..webserver.com\nsecure (Optional. ) Whether the cookie must use a secure connection ( https:// ). If this value\nis TRUE , the cookie can be transferred only across a secure connection. The default\nis FALSE .FALSE\nhttponly (Optional ; implemented since PHP version 5.2.0.) Whether the cookie must use the\nHTTP protocol. If this value is TRUE , scripting languages such as JavaScript cannot\naccess the cookie. (Not supported in all browsers.) The default is FALSE .FALSE\nSo, to create a cookie with the name username  and the value Hannah  that is accessible\nacross the entire web server on the current domain, and will be removed from the\nbrowser’s cache in seven days, use the following:\nsetcookie('username', 'Hannah', time() + 60 * 60 * 24 * 7, '/');\nUsing Cookies in PHP | 289"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 320,
    "text": "Accessing a Cookie\nReading the value of a cookie is as simple as accessing  the $_COOKIE  system array. For\nexample, if you wish to see whether the current browser has the cookie called user\nname  already stored and, if so, to read its value, use the following:\nif (isset($_COOKIE['username'])) $username = $_COOKIE['username'];\nNote that you can read a cookie back only after it has been sent to a web browser.\nThis means that when you issue a cookie, you cannot read it in again until the\nbrowser reloads the page (or another with access to the cookie) from your website\nand passes the cookie back to the server in the process.\nDestroying a Cookie\nTo delete a cookie, you must issue it again and set a date in the past.  It is important\nfor all parameters in your new setcookie  call except the timestamp to be identical to\nthe parameters when the cookie was first issued; otherwise, the deletion will fail.\nTherefore, to delete the cookie created earlier, you would use the following:\nsetcookie('username', 'Hannah', time() - 2592000, '/');\nAs long as the time given is in the past, the cookie should be deleted. However, I have\nused a time of 2,592,000 seconds (one month) in the past in case the client computer’s\ndate and time are not correctly set.\nHTTP Authentication\nHTTP authentication uses the web server to manage users and passwords for the\napplication. It’s adequate for most applications that ask users to log in, although some\napplications have specialized needs or more stringent security requirements that call\nfor other techniques.\nTo use HTTP authentication, PHP sends a header  request asking to start an authenti‐\ncation dialog with the browser. The server must have this feature turned on in order\nfor it to work, but because it’s so common, your server is likely to offer the feature.\nAlthough it is usually installed with Apache, HTTP authentication\nmay not necessarily be installed on the server you use. So attempt‐\ning to run these examples may generate an error telling you that the\nfeature is not enabled, in which case you must install the module,\nchange the configuration file to load the module, or ask your sys‐\ntem administrator to do these fixes.\n290 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 321,
    "text": "After entering your URL into the browser or visiting via a link, the user will see an\n“ Authentication Required” prompt pop up, requesting two fields: User Name and\nPassword ( Figure 12-2  shows how this looks in Firefox).\nFigure 12-2. An HTTP authentication login prompt\nExample 12-1  shows the code to make this happen.\nExample 12-1. PHP authentication\n<?php\n  if (isset($_SERVER['PHP_AUTH_USER']) &&\n      isset($_SERVER['PHP_AUTH_PW']))\n  {\n    echo \"Welcome User: \" . $_SERVER['PHP_AUTH_USER'] .\n         \" Password: \"    . $_SERVER['PHP_AUTH_PW'];\n  }\n  else\n  {\n    header('WWW-Authenticate: Basic realm=\"Restricted Section\"');\n    header('HTTP/1.0 401 Unauthorized');\n    die(\"Please enter your username and password\");\n  }\n?>\nHTTP Authentication | 291"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 322,
    "text": "By default, the type of interface Zend Server uses is cgi-fcgi , which\nis incompatible with basic authentication. However, configuring\nZend is beyond the scope of this book, so if you are using it for\nExample 12-1  through Example 12-5 , you may prefer to test them\non a different server. To determine the interface of a server, you can\ncall the php_sapi_name  function, which will return a string such as\n'cgi-fcgi' , 'cli' , and so on. Basic authentication is not recom‐\nmended anyway on a production website, as it is very insecure, but\nyou need to know how it works for maintaining legacy code. Please\nrefer to http://php.net/php_sapi_name  for further details.\nThe first thing the program does is look for two particular array values:\n$_SERVER['PHP_AUTH_USER']  and $_SERVER['PHP_AUTH_PW'] . If they both exist, they\nrepresent the username and password entered by a user into an authentication\nprompt.\nIf either value does not exist, the user has not yet been authenticated and you display\nthe prompt in Figure 12-2  by issuing the following header, where Basic realm  is the\nname of the section that is protected and appears as part of the pop-up prompt:\nWWW-Authenticate: Basic realm=\"Restricted Area\"\nIf the user fills out the fields, the PHP program runs again from the top. But if the\nuser clicks the Cancel button, the program proceeds to the following two lines, which\nsend the following header and an error message:\nHTTP/1.0 401 Unauthorized\nThe die statement causes the text “Please enter your username and password” to be\ndisplayed (see Figure 12-3 ).\nFigure 12-3. The result of clicking the Cancel button\n292 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 323,
    "text": "Once a user has been authenticated, you will not be able to get the\nauthentication dialog to pop up again unless the user closes and\nreopens all browser windows, as the web browser will keep return‐\ning the same username and password to PHP . Y ou may need to\nclose and reopen your browser a few times as you work through\nthis section and try different things out.\nNow let’s check for a valid username and  password. The code in Example 12-1  doesn’t\nrequire you to change much to add this check, other than modifying the previous\nwelcome message code to test for a correct username and password, and then issuing\na welcome message. A failed authentication causes an error message to be sent (see\nExample 12-2 ).\nExample 12-2. PHP authentication with input checking\n<?php\n  $username = 'admin';\n  $password = 'letmein';\n  if (isset($_SERVER['PHP_AUTH_USER']) &&\n      isset($_SERVER['PHP_AUTH_PW']))\n  {\n    if ($_SERVER['PHP_AUTH_USER'] == $username &&\n        $_SERVER['PHP_AUTH_PW']   == $password)\n          echo \"You are now logged in\";\n    else die(\"Invalid username / password combination\");\n  }\n  else\n  {\n    header('WWW-Authenticate: Basic realm=\"Restricted Section\"');\n    header('HTTP/1.0 401 Unauthorized');\n    die (\"Please enter your username and password\");\n  }\n?>\nIncidentally, take a look at the wording of the error message: Invalid username /\npassword combination . It doesn’t say whether the username or the password or both\nwere wrong—the less information you can give to a potential hacker, the better.\nA mechanism is now in place to authenticate users, but only for a single username\nand password. Also, the password appears in clear text within the PHP file, and if\nsomeone managed to hack into your server, he would instantly know it. So let’s look\nat a better way to handle usernames and passwords.\nHTTP Authentication | 293"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 324,
    "text": "Storing Usernames and Passwords\nObviously, MySQL is the natural way to store usernames and passwords. But again,\nwe don’t want to store the passwords as clear text, because our website could be com‐\npromised if the database were accessed by a hacker. Instead, we’ll use a neat trick\ncalled a one-way function .\nThis type of function is easy to use and converts a string of text into a seemingly ran‐\ndom string. Because of their one-way nature, such functions are virtually impossible\nto reverse, so their output can be safely stored in a database—and anyone who steals\nit will be none the wiser as to the passwords used.\nIn previous editions of this book, I recommended using the md5  hashing algorithm\nfor your data security. Time marches on, however, and now md5 is considered easily\nhackable and therefore unsafe, while even its previously recommended  replacement\nof sha1  can apparently be hacked (plus sha1 and sha2 were designed by the NSA and\ntherefore considerable caution is recommended for their use in highly secure imple‐\nmentations).\nSo now I have moved on to using the PHP hash  function, passing it a version of the\nripemd  algorithm, which was designed by the open academic community and which\n(like md5) returns a 32-character hexadecimal number—so it can easily replace md5\nin most databases. Use it like this:\n$token = hash('ripemd128', 'mypassword');\nThat example happens to give $token  this value:\n7b694600c8a2a2b0897c719958713619\nBy using the hash  function, you can keep up with future developments in security\nand simply pass the hashing algorithm to it that you wish to implement, resulting in\nless code maintenance (although you will probably have to accommodate larger hash\nlengths than 32 characters in your databases).\nSalting\nUnfortunately, hash  on its own is not enough to protect a database of passwords,\nbecause it could still be susceptible to a brute force attack that uses another database\nof known 32-character hexadecimal tokens. Such databases do exist, as a quick Goo‐\ngle search will verify, although probably only for md5 and sha1 or sha2 at the\nmoment.\nThankfully, though, we can put a spanner in the works of any such attempts by salting\nall the passwords before they are sent to hash . Salting is simply a matter of adding\nsome text that only we know about to each parameter to be encrypted, like this (with\nthe salt highlighted in bold):\n294 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 325,
    "text": "$token = hash('ripemd128', ' saltstring mypassword');\nIn this example, the text saltstring  has been prepended to the password. Of course, the\nmore obscure you can make the salt, the better. I like to use salts such as this:\n$token = hash('ripemd128', ' hqb%$tmypassword cg*l');\nHere some random characters have been placed both before and after the password.\nGiven just the database, and without access to your PHP code, it should now be next\nto impossible to work out the stored passwords.\nAll you have to do when verifying someone’s login password is to add these same ran‐\ndom strings back in before and after it, and then check the resulting token from a\nhash  call against the one stored in the database for that user.\nLet’s create a MySQL table to hold some user details and add a couple of accounts. So\ntype and save the program in Example 12-3  as setupusers.php , and then open it in\nyour browser.\nExample 12-3. Creating a users table and adding two accounts\n<?php // setupusers.php\n  require_once 'login.php';\n  $connection =\n    new mysqli($db_hostname, $db_username, $db_password, $db_database);\n  if ($connection->connect_error) die($connection->connect_error);\n  $query = \"CREATE TABLE users (\n    forename VARCHAR(32) NOT NULL,\n    surname  VARCHAR(32) NOT NULL,\n    username VARCHAR(32) NOT NULL UNIQUE,\n    password VARCHAR(32) NOT NULL\n  )\";\n  $result = $connection->query($query);\n  if (!$result) die($connection->error);\n  $salt1    = \"qm&h*\";\n  $salt2    = \"pg!@\";\n  $forename = 'Bill';\n  $surname  = 'Smith';\n  $username = 'bsmith';\n  $password = 'mysecret';\n  $token    = hash('ripemd128', \"$salt1$password$salt2\");\n  add_user($connection, $forename, $surname, $username, $token);\n  $forename = 'Pauline';\n  $surname  = 'Jones';\n  $username = 'pjones';\nHTTP Authentication | 295"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 326,
    "text": "$password = 'acrobat';\n  $token    = hash('ripemd128', \"$salt1$password$salt2\");\n  add_user($connection, $forename, $surname, $username, $token);\n  function add_user($connection, $fn, $sn, $un, $pw)\n  {\n    $query  = \"INSERT INTO users VALUES('$fn', '$sn', '$un', '$pw')\";\n    $result = $connection->query($query);\n    if (!$result) die($connection->error);\n  }\n?>\nThis program will create the table users  within your publications  database (or\nwhichever database you set up for the login.php  file in Chapter 10 ). In this table, it\nwill create two users: Bill Smith and Pauline Jones. They have the usernames and\npasswords of bsmith/mysecret  and pjones/acrobat , respectively.\nUsing the data in this table, we can now modify Example 12-2  to properly authenti‐\ncate users, and Example 12-4  shows the code needed to do this. Type it, save it as\nauthenticate.php , and call it up in your browser.\nExample 12-4. PHP authentication using MySQL\n<?php // authenticate.php\n  require_once 'login.php';\n  $connection =\n    new mysqli($db_hostname, $db_username, $db_password, $db_database);\n  if ($connection->connect_error) die($connection->connect_error);\n  if (isset($_SERVER['PHP_AUTH_USER']) &&\n      isset($_SERVER['PHP_AUTH_PW']))\n  {\n    $un_temp = mysql_entities_fix_string($connection, $_SERVER['PHP_AUTH_USER']);\n    $pw_temp = mysql_entities_fix_string($connection, $_SERVER['PHP_AUTH_PW']);\n    $query  = \"SELECT * FROM users WHERE username='$un_temp'\";\n    $result = $connection->query($query);\n    if (!$result) die($connection->error);\n    elseif ($result->num_rows)\n    {\n        $row = $result->fetch_array(MYSQLI_NUM);\n          $result->close();\n        $salt1 = \"qm&h*\";\n        $salt2 = \"pg!@\";\n        $token = hash('ripemd128', \"$salt1$pw_temp$salt2\");\n        if ($token == $row[3]) echo \"$row[0] $row[1] :\n296 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 327,
    "text": "Hi $row[0], you are now logged in as '$row[2]'\";\n        else die(\"Invalid username/password combination\");\n    }\n    else die(\"Invalid username/password combination\");\n  }\n  else\n  {\n    header('WWW-Authenticate: Basic realm=\"Restricted Section\"');\n    header('HTTP/1.0 401 Unauthorized');\n    die (\"Please enter your username and password\");\n  }\n  $connection->close();\n  function mysql_entities_fix_string($connection, $string)\n  {\n    return htmlentities(mysql_fix_string($connection, $string));\n  }\n  function mysql_fix_string($connection, $string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return $connection->real_escape_string($string);\n  }\n?>\nAs you might expect at this point in the book, some of these examples are starting to\nget quite a bit longer. But don’t be put off. The final 10 lines are simply Example 10-22\nfrom Chapter 10 . They are there to sanitize the user input—very important.\nThe only lines to really concern yourself with at this point start with the assigning of\ntwo variables, $un_temp  and $pw_temp , using the submitted username and password,\nhighlighted in bold text. Next, a query is issued to MySQL to look up the user\n$un_temp  and, if a result is returned, to assign the first row to $row . (Because user‐\nnames are unique, there will be only one row.) Then the two salts are created in\n$salt1  and $salt2 , which are then added before and after the submitted password\n$pw_temp . This string is then passed to the hash  function, which returns a 32-\ncharacter hexadecimal value in $token .\nNow all that’s necessary is to check $token  against the value stored in the database,\nwhich happens to be in the fourth column—which is column 3 when starting from 0.\nSo $row[3]  contains the previous token calculated for the salted password. If the two\nmatch, a friendly welcome string is output, calling the user by his or her first name\n(see Figure 12-4 ). Otherwise, an error message is displayed. As mentioned before, the\nerror message is the same regardless of whether such a username exists, as this pro‐\nvides minimal information to potential hackers or password guessers.\nHTTP Authentication | 297"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 328,
    "text": "Figure 12-4. Bill Smith has now been authenticated\nY ou can try this out for yourself by calling up the program in your browser and enter‐\ning a username of bsmith  and password of mysecret  (or pjones  and acrobat ), the\nvalues that were saved in the database by Example 12-3 .\nBy sanitizing input immediately after it is encountered, you will\nblock any malicious HTML, JavaScript, or MySQL attacks before\nthey can get any further, and will not have to sanitize this data\nagain. Remember, however, that if a user has characters such as < or\n& in a password (for example), these will be expanded to &lt;  or\n&amp;  by the htmlemtities  function. But as long as your code\nallows for strings that may end up larger than the provided input\nwidth, and as long as you always run passwords through this sani‐\ntization, you’ll be just fine.\nUsing Sessions\nBecause your program can’t tell what variables were set in other programs—or even\nwhat values the same program set the previous time it ran—you’ll sometimes want to\ntrack what your users are doing from one web page to another. Y ou can do this by\nsetting hidden fields in a form, as seen in Chapter 10 , and checking the value of the\nfields after the form is submitted, but PHP provides a much more powerful and sim‐\npler solution in the form of sessions . These are groups of variables that are stored on\nthe server but relate only to the current user. To ensure that the right variables are\napplied to the right users, PHP saves a cookie in the users’ web browsers to uniquely\nidentify them.\nThis cookie has meaning only to the web server and cannot be used to ascertain any\ninformation about a user. Y ou might ask about those users who have their cookies\nturned off. Well, that’s not a problem as of PHP 4.2.0, because it will identify when\nthis is the case and place a cookie token in the Get portion of each URL request\ninstead. Either way, sessions provide a solid way of keeping track of your users.\n298 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 329,
    "text": "Starting a Session\nStarting a session requires calling the PHP function session_start  before  any\nHTML has been output, similarly to how cookies are sent during header exchanges.\nThen, to begin saving session variables, you just assign them as part of the $_SESSION\narray, like this:\n$_SESSION['variable'] = $value;\nThey can then be read back just as easily in later program runs, like this:\n$variable = $_SESSION['variable'];\nNow assume that you have an application that always needs access to the username,\npassword, first name, and last name of each user, as stored in the table users , which\nyou should have created a little earlier. So let’s further modify authenticate.php  from\nExample 12-4  to set up a session once a user has been authenticated.\nExample 12-5  shows the changes needed. The only difference is the content of the if\n($token == $row[3])  section, which we now start by opening a session and saving\nthese four variables into it. Type this program (or modify Example 12-4 ) and save it\nas authenticate2.php . But don’t run it in your browser yet, as you will also need to cre‐\nate a second program in a moment.\nExample 12-5. Setting a session after  successful authentication\n<?php //authenticate2.php\n  require_once 'login.php';\n  $connection =\n    new mysqli($db_hostname, $db_username, $db_password, $db_database);\n  if ($connection->connect_error) die($connection->connect_error);\n  if (isset($_SERVER['PHP_AUTH_USER']) &&\n      isset($_SERVER['PHP_AUTH_PW']))\n  {\n    $un_temp = mysql_entities_fix_string($connection, $_SERVER['PHP_AUTH_USER']);\n    $pw_temp = mysql_entities_fix_string($connection, $_SERVER['PHP_AUTH_PW']);\n    $query = \"SELECT * FROM users WHERE username='$un_temp'\";\n    $result = $connection->query($query);\n    if (!$result) die($connection->error);\n    elseif ($result->num_rows)\n    {\n          $row = $result->fetch_array(MYSQLI_NUM);\n          $result->close();\n          $salt1 = \"qm&h*\";\nUsing Sessions | 299"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 330,
    "text": "$salt2 = \"pg!@\";\n        $token = hash('ripemd128', \"$salt1$pw_temp$salt2\");\n          if ($token == $row[3])\n          {\n               session_start();\n               $_SESSION['username'] = $un_temp;\n               $_SESSION['password'] = $pw_temp;\n               $_SESSION['forename'] = $row[0];\n               $_SESSION['surname']  = $row[1];\n               echo \"$row[0] $row[1] : Hi $row[0],\n                     you are now logged in as '$row[2]'\";\n               die (\"<p><a href=continue.php>Click here to continue</a></p>\");\n          }\n          else die(\"Invalid username/password combination\");\n    }\n    else die(\"Invalid username/password combination\");\n  }\n  else\n  {\n    header('WWW-Authenticate: Basic realm=\"Restricted Section\"');\n    header('HTTP/1.0 401 Unauthorized');\n    die (\"Please enter your username and password\");\n  }\n  $connection->close();\n  function mysql_entities_fix_string($connection, $string)\n  {\n    return htmlentities(mysql_fix_string($connection, $string));\n  }\n  function mysql_fix_string($connection, $string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return $connection->real_escape_string($string);\n  }\n?>\nOne other addition to the program is the “Click here to continue” link with a destina‐\ntion URL of continue.php . This will be used to illustrate how the session will transfer\nto another program or PHP web page. So create continue.php  by typing the program\nin Example 12-6  and saving it.\nExample 12-6. Retrieving session variables\n<?php // continue.php\n  session_start();\n  if (isset($_SESSION['username']))\n  {\n300 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 331,
    "text": "$username = $_SESSION['username'];\n    $password = $_SESSION['password'];\n    $forename = $_SESSION['forename'];\n    $surname  = $_SESSION['surname'];\n    echo \"Welcome back $forename.<br>\n          Your full name is $forename $surname.<br>\n          Your username is '$username'\n          and your password is '$password'.\";\n  }\n  else echo \"Please <a href='authenticate2.php'>click here</a> to log in.\";\n?>\nNow you are ready to call up authenticate2.php  into your browser. Enter a username\nof bsmith  and password of mysecret  (or pjones  and acrobat ) when prompted, and\nclick the link to load in continue.php . When your browser calls it up, the result should\nbe something like Figure 12-5 .\nFigure 12-5. Maintaining user data with sessions\nSessions neatly confine to a single program the extensive code required to authenti‐\ncate and log in a user. Once a user has been authenticated, and you have created a\nsession, your program code becomes very simple indeed. Y ou need only to call up\nsession_start  and look up any variables to which you need access from $_SESSION .\nIn Example 12-6 , a quick test of whether $_SESSION['username']  has a value  is\nenough to let you know that the current user is authenticated, because session vari‐\nables are stored on the server (unlike cookies, which are stored on the web browser)\nand can therefore be trusted.\nIf $_SESSION['username']  has not been assigned a value, no session is active, so the\nlast line of code in Example 12-6  directs users to the login page at authenticate2.php .\nThe continue.php  program prints back the value of the user’s pass‐\nword to show you how session variables work. In practice, you\nalready know that the user is logged in, so you shouldn’t need to\nkeep track of (or display) any passwords, and in fact doing so\nwould be a security risk.\nUsing Sessions | 301"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 332,
    "text": "Ending a Session\nWhen the time comes to end a session, usually when a user requests to log out from\nyour site, you can use the session_destroy  function  in association, as in\nExample 12-7 . That example provides a useful function for totally destroying a ses‐\nsion, logging a user out, and unsetting all session variables.\nExample 12-7. A handy function to destroy a session and its data\n<?php\n  function destroy_session_and_data()\n  {\n    session_start();\n    $_SESSION = array();\n    setcookie(session_name(), '', time() - 2592000, '/');\n    session_destroy();\n  }\n?>\nTo see this in action, you could modify continue.php  as in Example 12-8 .\nExample 12-8. Retrieving session variables and then destroying the session\n<?php\n  session_start();\n  if (isset($_SESSION['username']))\n  {\n    $username = $_SESSION['username'];\n    $password = $_SESSION['password'];\n    $forename = $_SESSION['forename'];\n    $surname  = $_SESSION['surname'];\n    destroy_session_and_data();\n    echo \"Welcome back $forename.<br>\n          Your full name is $forename $surname.<br>\n          Your username is '$username'\n          and your password is '$password'.\";\n  }\n  else echo \"Please <a href='authenticate2.php'>click here</a> to log in.\";\n  function destroy_session_and_data()\n  {\n    $_SESSION = array();\n    setcookie(session_name(), '', time() - 2592000, '/');\n    session_destroy();\n  }\n?>\n302 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 333,
    "text": "The first time you navigate from authenticate2.php  to continue.php , it will display all\nthe session variables. But, because of the call to destroy_session_and_data , if you\nthen click your browser’s Reload button, the session will have been destroyed and\nyou’ll be prompted to return to the login page.\nSetting a Time-Out\nThere are other times when you might wish to close a user’s session yourself, such as\nwhen the user has forgotten or neglected to log out, and you want the program to do\nso for her for her own security. Y ou do this by setting the time-out after which a log‐\nout will automatically occur if there has been no activity.\nTo do this, use the ini_set  function as follows. This example sets the time-out to\nexactly one day:\nini_set('session.gc_maxlifetime', 60 * 60 * 24);\nIf you wish to know what the current time-out period is, you can display it using the\nfollowing:\necho ini_get('session.gc_maxlifetime');\nSession Security\nAlthough I mentioned that once you had authenticated a user and set up a session,\nyou could safely assume that the session variables were trustworthy, this isn’t exactly\nthe case. The reason is that it’s possible to use packet sniffing  (sampling of data) to\ndiscover session IDs passing across a network. Additionally, if the session ID is passed\nin the Get part of a URL, it might appear in external site server logs. The only truly\nsecure way of preventing these from being discovered is to implement Secure Sockets\nLayer (SSL)  and run HTTPS instead of HTTP web pages. That’s beyond the scope of\nthis book, although you may like to take a look at http://apache-ssl.org  for details on\nsetting up a secure web server.\nPreventing session hijacking\nWhen SSL is not a possibility, you can further authenticate users by storing their IP\naddress along with their other details by adding a line such as the following when you\nstore their session:\n$_SESSION['ip'] = $_SERVER['REMOTE_ADDR'];\nThen, as an extra check, whenever any page loads and a session is available, perform\nthe following check. It calls the function different_user  if the stored IP address\ndoesn’t match the current one:\nif ($_SESSION['ip'] != $_SERVER['REMOTE_ADDR']) different_user();\nUsing Sessions | 303"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 334,
    "text": "What code you place in your different_user  function is up to you. I recommend\nthat you simply delete the current session and ask the user to log in again due to a\ntechnical error. Don’t say any more than that, or you’re giving away potentially useful\ninformation.\nOf course, you need to be aware that users on the same proxy server, or sharing the\nsame IP address on a home or business network, will have the same IP address.\nAgain, if this is a problem for you, use SSL. Y ou can also store a copy of the browser\nuser agent string  (a string that developers put in their browsers to identify them by\ntype and version), which might also distinguish users due to the wide variety of\nbrowser types, versions, and computer platforms. Use the following to store the user\nagent:\n$_SESSION['ua'] = $_SERVER['HTTP_USER_AGENT'];\nAnd use this to compare the current agent string with the saved one:\nif ($_SESSION['ua'] != $_SERVER['HTTP_USER_AGENT']) different_user();\nOr, better still, combine the two checks like this and save the combination as a hash\nhexadecimal string:\n$_SESSION['check'] = hash('ripemd128', $_SERVER['REMOTE_ADDR'] .\n    $_SERVER['HTTP_USER_AGENT']);\nAnd use this to compare the current and stored strings:\nif ($_SESSION['check'] != hash('ripemd128', $_SERVER['REMOTE_ADDR'] .\n    $_SERVER['HTTP_USER_AGENT'])) different_user();\nPreventing session fixation\nSession fixation  happens when a malicious user tries to present a session ID to the\nserver rather than letting the server create one. It can happen when a user takes\nadvantage of the ability to pass a session ID in the Get part of a URL, like this:\nhttp://yourserver.com/authenticate.php?PHPSESSID=123456789\nIn this example, the made-up session ID of 123456789 is being passed to the server.\nNow, consider Example 12-9 , which is susceptible to session fixation. To see how, type\nit and save it as sessiontest.php .\nExample 12-9. A session susceptible to session fixation\n<?php // sessiontest.php\n  session_start();\n  if (!isset($_SESSION['count'])) $_SESSION['count'] = 0;\n  else ++$_SESSION['count'];\n304 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 335,
    "text": "echo $_SESSION['count'];\n?>\nOnce it’s saved, call it up in your browser using the following URL (prefacing it with\nthe correct pathname, such as http://localhost/web/ ):\nsessiontest.php?PHPSESSID=1234\nPress Reload a few times, and you’ll see the counter increase. Now try browsing to\nsessiontest.php?PHPSESSID=5678\nPress Reload a few times here, and you should see it count up again from 0. Leave the\ncounter on a different number than the first URL and then go back to the first URL\nand see how the number changes back. Y ou have created two different sessions of\nyour own choosing here, and you could easily create as many as you needed.\nThe reason this approach is so dangerous is that a malicious attacker could try to dis‐\ntribute these types of URLs to unsuspecting users, and if any of them followed these\nlinks, the attacker would be able to come back and take over any sessions that had not\nbeen deleted or expired!\nTo prevent this, add a simple check to change the session ID using session_regener\nate_id . This function keeps all current session variable values, but replaces the ses‐\nsion ID with a new one that an attacker cannot know.\nTo do this, check for a special session variable that you arbitrarily invent. If it doesn’t\nexist, you know that this is a new session, so you simply change the session ID and set\nthe special session variable to note the change.\nExample 12-10  shows how the code to do this might look, using the session variable\ninitiated .\nExample 12-10. Session regeneration\n<?php\n  session_start();\n  if (!isset($_SESSION['initiated']))\n  {\n    session_regenerate_id();\n    $_SESSION['initiated'] = 1;\n  }\n  if (!isset($_SESSION['count'])) $_SESSION['count'] = 0;\n  else ++$_SESSION['count'];\n  echo $_SESSION['count'];\n?>\nUsing Sessions | 305"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 336,
    "text": "This way, an attacker can come back to your site using any of the session IDs that he\nor she generated, but none of them will call up another user’s session, as they will all\nhave been replaced with regenerated IDs. If you want to be ultra-paranoid, you can\neven regenerate the session ID on each request.\nForcing cookie-only sessions\nIf you are prepared to require your users to enable cookies on your website, you can\nuse the ini_set  function, like this:\nini_set('session.use_only_cookies', 1);\nWith that setting, the ?PHPSESSID=  trick will be completely ignored. If you use this\nsecurity measure, I also recommend that you inform your users that your site\nrequires cookies, so they know what’s wrong if they don’t get the results they want.\nUsing a shared server\nOn a server shared with other accounts, you will not want to have all your session\ndata saved into the same directory as theirs. Instead, you should choose a directory to\nwhich only your account has access (and that is not web-visible) to store your ses‐\nsions, by placing an ini_set  call near the start of a program, like this:\nini_set('session.save_path', '/home/user/myaccount/sessions');\nThe configuration option will keep this new value only during the program’s execu‐\ntion, and the original configuration will be restored at the program’s ending.\nThis sessions folder can fill up quickly; you may wish to periodically clear out older\nsessions according to how busy your server gets. The more it’s used, the less time you\nwill want to keep a session stored.\nRemember that your websites can and will be subject to hacking\nattempts. There are automated bots running riot around the Inter‐\nnet, trying to find sites vulnerable to exploits. So whatever you do,\nwhenever you are handling data that is not 100 percent generated\nwithin your own program, you should always treat it with the\nutmost caution.\nAt this point, you should now have a very good grasp of both PHP and MySQL, so in\nthe next chapter it’s time to introduce the third major technology covered by this\nbook, JavaScript. \n306 | Chapter 12: Cookies, Sessions, and Authentication"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 337,
    "text": "Questions\n1.Why must a cookie be transferred at the start of a program?\n2.Which PHP function stores a cookie on a web browser?\n3.How can you destroy a cookie?\n4.Where are the username and password stored in a PHP program when you are\nusing HTTP authentication?\n5.Why is the hash  function a powerful security measure?\n6.What is meant by salting a string?\n7.What is a PHP session?\n8.How do you initiate a PHP session?\n9.What is session hijacking?\n10.What is session fixation?\nSee Chapter 12 Answers  in Appendix A  for the answers to these questions.\nQuestions | 307"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 338,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 339,
    "text": "CHAPTER 13\nExploring JavaScript\nJavaScript brings a dynamic functionality to your websites. Every time you see some‐\nthing pop up when you mouse over an item in the browser, or see new text, colors, or\nimages appear on the page in front of your eyes, or grab an object on the page and\ndrag it to a new location—all those things are done through JavaScript. It offers\neffects that are not otherwise possible, because it runs inside the browser and has\ndirect access to all the elements in a web document.\nJavaScript first appeared in the Netscape Navigator browser in 1995, coinciding with\nthe addition of support for Java technology in the browser. Because of the initial\nincorrect impression that JavaScript was a spin-off of Java, there has been some long-\nterm confusion over their relationship. However, the naming was just a marketing\nploy to help the new scripting language benefit from the popularity of the Java pro‐\ngramming language.\nJavaScript gained new power when the HTML elements of the web page got a more\nformal, structured definition in what is called the Document Object Model , or DOM .\nThe DOM makes it relatively easy to add a new paragraph or focus on a piece of text\nand change it.\nBecause both JavaScript and PHP support much of the structured programming syn‐\ntax used by the C programming language, they look very similar to each other. They\nare both fairly high-level languages, too; for instance, they are weakly typed, so it’s\neasy to change a variable to a new type just by using it in a new context.\nNow that you have learned PHP , you should find JavaScript even easier. And you’ll be\nglad you did, because it’s at the heart of the Web 2.0 Ajax technology that provides the\nfluid web frontends that (along with HTML5 features) savvy web users expect these\ndays.\n309"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 340,
    "text": "JavaScript and HTML Text\nJavaScript is a client-side scripting language that runs entirely  inside the web browser.\nTo call it up, you place it between  opening <script>  and closing </script>  HTML\ntags. A typical HTML 4.01 “Hello World” document using JavaScript might look like\nExample 13-1 .\nExample 13-1. “Hello World” displayed using JavaScript\n<html>\n  <head><title>Hello World</title></head>\n  <body>\n    <script type=\"text/javascript\">\n      document.write(\"Hello World\")\n    </script>\n    <noscript>\n      Your browser doesn't support or has disabled JavaScript\n    </noscript>\n  </body>\n</html>\nY ou may have seen web pages that use the HTML tag <script\nlanguage=\"javascript\"> , but that usage has now been deprecated.\nThis example uses the more recent and preferred <script\ntype=\"text/javascript\"> , or you can just use <script>  on its\nown if you like.\nWithin the <script>  tags is a single line of JavaScript code that uses its equivalent of\nthe PHP echo  or print  commands, document.write . As you’ d expect, it simply out‐\nputs the supplied string to the current document, where it is displayed.\nY ou may also have noticed that, unlike with PHP , there is no trailing semicolon ( ;).\nThis is because a newline serves the same purpose as a semicolon in JavaScript. How‐\never, if you wish to have more than one statement on a single line, you do need to\nplace a semicolon after each command except the last one. Of course, if you wish, you\ncan add a semicolon to the end of every statement, and your JavaScript will work fine.\nThe other thing to note in this example  is the <noscript>  and </noscript>  pair of\ntags. These are used when you wish to offer alternative HTML to users whose\nbrowser does not  support JavaScript or who have it disabled. Using these tags is up to\nyou, as they are not required, but you really ought to use them because it’s usually not\nthat difficult to provide static HTML alternatives to the operations you provide using\nJavaScript. However, the remaining examples in this book will omit <noscript>  tags,\nbecause we’re focusing on what you can do with JavaScript, not what you can do\nwithout it.\n310 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 341,
    "text": "When Example 13-1  is loaded, a web browser with JavaScript enabled will output the\nfollowing (see Figure 13-1 ):\nHello World\nFigure 13-1. JavaScript, enabled and working\nA browser with JavaScript disabled will display this message (see Figure 13-2 ):\nYour browser doesn't support or has disabled JavaScript.\nFigure 13-2. JavaScript has been disabled\nUsing Scripts Within a Document Head\nIn addition to placing a script within the body of a document, you can put it in the\n<head>  section,  which is the ideal place if you wish to execute a script when a page\nloads. If you place critical code and functions there, you can also ensure that they are\nready to use immediately by any other script sections in the document that rely on\nthem.\nAnother reason for placing a script in the document head is to enable JavaScript to\nwrite things such as meta tags into the <head>  section, because the location of your\nscript is the part of the document it writes to by default.\nOlder and Nonstandard Browsers\nIf you need to support browsers that do not offer scripting, you will need to use the\nHTML comment tags ( <!--  and -->) to prevent them from encountering script code\nthat they should not see. Example 13-2  shows how you add them to your script code.\nJavaScript and HTML Text | 311"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 342,
    "text": "Example 13-2. The “Hello World” example modified  for non-JavaScript browsers\n<html>\n  <head><title>Hello World</title></head>\n  <body>\n    <script type=\"text/javascript\"> <!--\n      document.write(\"Hello World\")\n    // --></script>\n  </body>\n</html>\nHere an opening HTML comment tag ( <!-- ) has been added directly after the open‐\ning <script>  statement and a closing comment tag ( // --> ) directly before the script\nis closed with </script> .\nThe double forward slash ( //) is used by JavaScript to indicate that the rest of the line\nis a comment. It is there so that browsers that do support JavaScript will ignore the\nfollowing -->, but non-JavaScript browsers will ignore the preceding //, and act on\nthe --> by closing the HTML comment.\nAlthough the solution is a little convoluted, all you really need to remember is to use\nthe two following lines to enclose your JavaScript when you wish to support very old\nor nonstandard browsers:\n<script type=\"text/javascript\"><!—\n  (Your JavaScript goes here...)\n// --></script>\nHowever, the use of these comments is unnecessary for any browser released over the\npast several years.\nThere are a couple of other scripting languages you should know\nabout. These include Microsoft’s VBScript, which is based on the\nVisual Basic programming language, and Tcl, a rapid prototyping\nlanguage. They are called up in a similar way to JavaScript, except\nthey use types of text/vbscript  and text/tcl , respectively.\nVBScript works only in Internet Explorer; use of it in other brows‐\ners requires a plug-in. Tcl always needs a plug-in. So both should be\nconsidered nonstandard, and neither is covered in this book.\nIncluding JavaScript Files\nIn addition to writing JavaScript code directly in HTML documents, you can include\nfiles of JavaScript code either from your website or from anywhere on the Internet. \nThe syntax for this is as follows:\n<script type=\"text/javascript\" src=\"script.js\"></script>\nOr, to pull a file in from the Internet, use this:\n312 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 343,
    "text": "<script type=\"text/javascript\" src=\"http://someserver.com/script.js\">\n</script>\nAs for the script files themselves, they must not include any <script>  or </script>\ntags, because they are unnecessary: the browser already knows that a JavaScript file is\nbeing loaded. Putting them in the JavaScript files will cause an error.\nIncluding script files is the preferred way for you to use third-party JavaScript files on\nyour website.\nIt is possible to leave out the type=\"text/javascript\"  parameters;\nall modern browsers default to assuming that the script contains\nJavaScript.\nDebugging JavaScript Errors\nWhen you’re learning JavaScript, it’s  important to be able to track typing or other\ncoding errors. Unlike PHP , which displays error messages in the browser, JavaScript\nhandles error messages in a way that changes according to the browser used.\nTable 13-1  lists how to access JavaScript error messages in each of the five most  com‐\nmonly used browsers.\nTable 13-1. Accessing JavaScript error messages in different  browsers\nBrowser How to access JavaScript error messages\nApple Safari Safari does not have an Error Console enabled by default, but you can turn it on by selecting\nSafari→Preferences→Advanced→“Show Develop menu in menu bar.” However, you may prefer\nto use the Firebug Lite JavaScript module , which many people find  easier to use.\nGoogle Chrome Click the menu icon that looks like a page with a corner turned; then select\nDeveloper→JavaScript Console. You can also use the shortcut Ctrl-Shift-J on a PC, or Command-\nShift-J on a Mac.\nMicrosoft Internet Explorer Select Tools→Internet Options →Advanced; then uncheck the Disable Script Debugging box and\ncheck the “Display a Notification  about Every Script Error” box.\nMozilla Firefox Select Tools→Error Console or use the shortcut Ctrl-Shift-J on a PC, or Command-Shift-J on a Mac.\nOpera Select Tools→Advanced→Error Console.\nOS X users: Although I have shown you how to create an Error\nConsole for JavaScript, you may prefer to use Google Chrome (for\nIntel OS X 10.5 or higher).\nTo try out whichever Error Console you are using, let’s create a script with a minor\nerror. Example 13-3  is much the same as Example 13-1 , but the final double quota‐\nJavaScript and HTML Text | 313"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 344,
    "text": "tion mark has been left off the end of the string \"Hello World\" —a common syntax\nerror.\nExample 13-3. A JavaScript “Hello World” script with an error\n<html>\n  <head><title>Hello World</title></head>\n  <body>\n    <script type=\"text/javascript\">\n      document.write(\"Hello World)\n    </script>\n  </body>\n</html>\nType the example and save it as test.html ; then call it up in your browser. It should\nsucceed only in displaying the title, not anything in the main browser window. Now\ncall up the Error Console in your browser, and you should see a message such as the\none in Example 13-4 . To the right there will be a link to the source, which, when\nclicked, shows the error line highlighted (but does not indicate the position at which\nthe error was encountered).\nExample 13-4. A Mozilla Firefox Error Console message\nSyntaxError: unterminated string literal\nIn Microsoft Internet Explorer, the error message will look like Example 13-5 , and\nthere’s no helpful arrow, but you are given the line and position.\nExample 13-5. A Microsoft  Internet Explorer Error Console message\nunterminated string constant\nGoogle Chrome and Opera will give the message in Example 13-6 . Again, you’ll be\ngiven the line error number but not the exact location.\nExample 13-6. A Google Chrome/Opera Error Console message\nUncaught SyntaxError: Unexpected token ILLEGAL\nAnd Apple Safari provides the message in Example 13-7 , with a link to the source on\nthe right stating the line number of the error. Y ou can click the link to highlight the\nline, but it will not show where on the line the error occurred.\nExample 13-7. An Opera Error Console message\nSyntaxError: Unexpected EOF\n314 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 345,
    "text": "If you find this support a little underwhelming, the Firebug plug-in for Firefox (and\nnow Chrome too) at http://getfirebug.com  is very popular among JavaScript develop‐\ners and is definitely worth a look.\nIf you will be typing the following code snippets to try them out,\ndon’t forget to surround them with <script>  and </script>  tags.\nUsing Comments\nBecause of their shared inheritance  from the C programming  language,  PHP and\nJavaScript have many similarities, one of which is commenting. First, there’s the\nsingle-line comment, like this:\n// This is a comment\nThis style uses a pair of forward slash characters ( //) to inform JavaScript that every‐\nthing following is to be ignored. Y ou also have multiline comments, like this:\n/* This is a section\n   of multiline comments\n   that will not be\n   interpreted */\nHere you start a multiline comment with the sequence /* and end it with */. Just\nremember that you cannot nest multiline comments, so make sure that you don’t\ncomment out large sections of code that already contain multiline comments.\nSemicolons\nUnlike PHP , JavaScript generally does not require semicolons if you have only one\nstatement on a line. Therefore, the following is valid:\nx += 10\nHowever, when you wish to place more than one statement on a line, you must sepa‐\nrate them with semicolons, like this:\nx += 10; y -= 5; z = 0\nY ou can normally leave the final semicolon off, because the newline terminates the\nfinal statement.\nUsing Comments | 315"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 346,
    "text": "There are exceptions to the semicolon rule. If you write JavaScript\nbookmarklets, or end a statement with a variable or function refer‐\nence, and the first character of the line below is a left parenthesis or\nbracket, you must  remember to append a semicolon or the Java‐\nScript will fail. So, when in doubt, use a semicolon.\nVariables\nNo particular character identifies a variable in JavaScript as the dollar sign does in\nPHP . Instead, variables use the following naming rules:\n•A variable may include only the letters a-z, A-Z, 0-9, the $ symbol, and the\nunderscore ( _).\n•No other characters, such as spaces or punctuation, are allowed in a variable\nname.\n•The first character of a variable name can be only a-z, A-Z, $, or _ (no numbers).\n•Names are case-sensitive. Count , count , and COUNT  are all different variables.\n•There is no set limit on variable name lengths.\nAnd yes, you’re right that is a $ there in that list. It is allowed by JavaScript and may\nbe the first character of a variable or function name. Although I don’t recommend\nkeeping the $ symbols, it means that you can port a lot of PHP code more quickly to\nJavaScript that way.\nString Variables\nJavaScript string variables should be enclosed in either single or double quotation\nmarks, like this:\ngreeting = \"Hello there\"\nwarning  = 'Be careful'\nY ou may include a single quote within a double-quoted string or a double quote\nwithin a single-quoted string. But you must escape a quote of the same type by using\nthe backslash character, like this:\ngreeting = \"\\\"Hello there\\\" is a greeting\"\nwarning  = '\\'Be careful\\' is a warning'\nTo read from a string variable, you can assign it to another one, like this:\nnewstring = oldstring\nor you can use it in a function, like this:\nstatus = \"All systems are working\"\ndocument.write(status)\n316 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 347,
    "text": "Numeric Variables\nCreating a numeric variable is as simple as assigning a value, like these examples:\ncount       = 42\ntemperature = 98.4\nLike strings, numeric variables can be read from and used in expressions and func‐\ntions.\nArrays\nJavaScript arrays are also very similar to those in PHP , in that an array can contain\nstring or numeric data, as well as other arrays. To assign values to an array, use the\nfollowing syntax (which in this case creates an array of strings):\ntoys = ['bat', 'ball', 'whistle', 'puzzle', 'doll']\nTo create a multidimensional array, nest smaller arrays  within a larger one. So, to cre‐\nate a two-dimensional array containing the colors of a single face of a scrambled\nRubik’s Cube (where the colors red, green, orange, yellow, blue, and white are repre‐\nsented by their capitalized initial letters), you could use the following code:\nface =\n[\n  ['R', 'G', 'Y'],\n  ['W', 'R', 'O'],\n  ['Y', 'W', 'G']\n]\nThe previous example has been formatted to make it obvious what is going on, but it\ncould also be written like this:\nface = [['R', 'G', 'Y'], ['W', 'R', 'O'], ['Y', 'W', 'G']]\nor even like this:\ntop = ['R', 'G', 'Y']\nmid = ['W', 'R', 'O']\nbot = ['Y', 'W', 'G']\nface = [top, mid, bot]\nTo access the element two down and three along in this matrix, you would use the\nfollowing (because array elements start at position 0):\ndocument.write(face[1][2])\nThis statement will output the letter O for orange .\nVariables | 317"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 348,
    "text": "JavaScript arrays are powerful storage structures, so Chapter 15  dis‐\ncusses them in much greater depth.\nOperators\nOperators in JavaScript,  as in PHP , can involve mathematics, changes to strings, and\ncomparison and logical operations ( and, or, etc.). JavaScript mathematical operators\nlook a lot like plain arithmetic; for instance, the following statement outputs 15:\ndocument.write(13 + 2)\nThe following sections teach you about the various operators.\nArithmetic Operators\nArithmetic operators  are used to perform mathematics.  Y ou can use  them for the\nmain four  operations (addition, subtraction, multiplication, and division) as well as\nto find the modulus (the remainder after a division) and  to increment or decrement a\nvalue (see Table 13-2 ).\nTable 13-2. Arithmetic operators\nOperator Description Example\n+ Addition j + 12\n- Subtraction j - 22\n* Multiplication j * 7\n/ Division j / 3.13\n% Modulus (division remainder) j % 6\n++ Increment ++j\n-- Decrement --j\nAssignment Operators\nThe assignment  operators  are used to assign values to variables. They start with the\nvery  simple =, and move  on to +=, -=, and so on. The operator += adds the value on \nthe right side to the variable on the left, instead of totally replacing the value on the\nleft. Thus, if count  starts with the value 6, the statement\ncount += 1\nsets count  to 7, just like the more familiar assignment statement:\ncount = count + 1\n318 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 349,
    "text": "Table 13-3  lists the various assignment operators available.\nTable 13-3. Assignment operators\nOperator Example Equivalent to\n= j = 99 j = 99\n+= j += 2 j = j + 2\n+= j += 'string' j = j + 'string'\n-= j -= 12 j = j - 12\n*= j *= 2 j = j * 2\n/= j /= 6 j = j / 6\n%= j %= 7 j = j % 7\nComparison Operators\nComparison operators  are generally used inside a construct such as an if statement,\nwhere you need to compare two items. For example, you may wish to know whether a\nvariable you have been incrementing has reached a specific value, or whether another\nvariable is less than a set value, and so on (see Table 13-4 ).\nTable 13-4. Comparison operators\nOperator Description Example\n== Is equal  to j == 42\n!= Is not equal  to j != 17\n> Is greater than j > 0\n< Is less than j < 100\n>= Is greater than or equal  to j >= 23\n<= Is less than or equal  to j <= 13\n=== Is equal  to (and of the same type) j === 56\n!== Is not equal  to (and of the same type) j !== '1'\nLogical Operators\nUnlike PHP , JavaScript’s logical  operators  do not include and and or equivalents  to &&\nand ||, and there is no xor operator (see Table 13-5 ).\nOperators | 319"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 350,
    "text": "Table 13-5. Logical operators\nOperator Description Example\n&& And j == 1 && k == 2\n|| Or j < 100 || j > 0\n! Not ! (j == k)\nVariable Incrementing and Decrementing\nThe following forms of post- and pre-incrementing and  decrementing you learned  to\nuse in PHP are also supported by JavaScript:\n++x\n--y\nx += 22\ny -= 3\nString Concatenation\nJavaScript handles string concatenation  slightly   differently from PHP . Instead of\nthe . (period) operator, it uses the plus sign ( +), like this:\ndocument.write(\"You have \" + messages + \" messages.\")\nAssuming that the variable messages  is set to the value 3, the output from this line of\ncode will be as follows:\nYou have 3 messages.\nJust as you can add a value to a numeric variable with the += operator, you can also\nappend one string to another the same way:\nname =  \"James\"\nname += \" Dean\"\nEscaping Characters\nEscape characters, which you’ve seen used to insert quotation marks in strings, can\nalso insert various special characters such as tabs, newlines, and carriage returns.\nHere is an  example using tabs to lay out a heading; it is included here merely  to illus‐\ntrate escapes, because in web pages, there are better ways to do layout:\nheading = \"Name\\tAge\\tLocation\"\nTable 13-6  details the escape characters available.\n320 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 351,
    "text": "Table 13-6. JavaScript’s escape characters\nCharacter Meaning\n\\b Backspace\n\\f Form feed\n\\n New line\n\\r Carriage return\n\\t Tab\n\\' Single quote (or apostrophe)\n\\\" Double quote\n\\\\ Backslash\n\\XXX An octal number between 000  and 377  that represents the Latin-1 character equivalent (such as \\251  for the\n© symbol)\n\\xXX A hexadecimal number between 00 and FF that represents the Latin-1 character equivalent (such as \\xA9  for\nthe © symbol)\n\\uXXXX A hexadecimal number between 0000  and FFFF  that represents the Unicode character equivalent (such as\n\\u00A9  for the © symbol)\nVariable Typing\nLike PHP , JavaScript is a very loosely typed language; the type of a variable is deter‐\nmined only when a value is assigned and can change as the variable appears in differ‐\nent contexts. Usually, you don’t have to worry about the type; JavaScript figures out\nwhat you want and just does it.\nTake a look at Example 13-8 , in which:\n1.The variable n is assigned the string value 838102050 , the next line prints out its\nvalue, and the typeof  operator is used to look up the type.\n2.n is given the value returned when the numbers 12345 and 67890 are multiplied\ntogether. This value is also 838102050 , but it is a number, not a string. The type of\nvariable is then looked up and displayed.\n3.Some text is appended to the number n and the result is displayed.\nExample 13-8. Setting a variable’s type by assignment\n<script>\n  n = '838102050'        // Set 'n' to a string\n  document.write('n = ' + n + ', and is a ' + typeof n + '<br>')\n  n = 12345 * 67890;     // Set 'n' to a number\n  document.write('n = ' + n + ', and is a ' + typeof n + '<br>')\nVariable Typing | 321"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 352,
    "text": "n += ' plus some text' // Change 'n' from a number to a string\n  document.write('n = ' + n + ', and is a ' + typeof n + '<br>')\n</script>\nThe output from this script looks like this:\nn = 838102050, and is a string\nn = 838102050, and is a number\nn = 838102050 plus some text, and is a string\nIf there is ever any doubt about the type of a variable, or you need to ensure that a\nvariable has a particular type, you can force it to that type by using statements such as\nthe following (which respectively turn a string into a number and a number into a\nstring):\nn = \"123\"\nn *= 1    // Convert 'n' into a number\nn = 123\nn += \"\"   // Convert 'n' into a string\nOr, of course, you can always look up a variable’s type by using the typeof  operator.\nFunctions\nAs with PHP , JavaScript functions are used to separate out sections of code that per‐\nform a particular task. To create a function, declare it in the manner shown in\nExample 13-9 .\nExample 13-9. A simple function declaration\n<script>\n  function product(a, b)\n  {\n    return a*b\n  }\n</script>\nThis function takes the two parameters passed, multiplies them together, and returns\nthe product.\nGlobal Variables\nGlobal  variables are ones defined outside of any functions (or within functions, but\ndefined without the var keyword). They can be defined in the following ways:\n322 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 353,
    "text": "a = 123               // Global scope\nvar b = 456               // Global scope\nif (a == 123) var c = 789 // Global scope\nRegardless of whether you are using the var keyword,  as long as a variable is defined\noutside of a function, it is global in scope. This means that every part of a script can\nhave access to it.\nLocal Variables\nParameters passed to a function automatically  have local scope; that is, they can be\nreferenced only from within that function. However, there is one exception. Arrays\nare passed to a function by reference, so if you modify any elements in an array\nparameter, the elements of the original array will be modified.\nTo define a local variable that has scope only within the current function, and has not\nbeen passed as a parameter, use the var keyword. Example 13-10  shows a function\nthat creates one variable with global scope and two with local scope.\nExample 13-10. A function creating variables with global and local scope\n<script>\n  function test()\n  {\n        a = 123               // Global scope\n    var b = 456               // Local scope\n    if (a == 123) var c = 789 // Local scope\n  }\n</script>\nTo test whether scope setting has worked in PHP , we can use the isset  function. But\nin JavaScript there isn’t one, so Example 13-11  makes use of the typeof  operator,\nwhich returns the string undefined  when a variable is not defined.\nExample 13-11. Checking the scope of the variables defined  in function test\n<script>\n  test()\n  if (typeof a != 'undefined') document.write('a = \"' + a + '\"<br>')\n  if (typeof b != 'undefined') document.write('b = \"' + b + '\"<br>')\n  if (typeof c != 'undefined') document.write('c = \"' + c + '\"<br>')\n  function test()\n  {\n    a     = 123\n    var b = 456\nLocal Variables | 323"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 354,
    "text": "if (a == 123) var c = 789\n  }\n</script>\nThe output from this script is the following single line:\na = \"123\"\nThis shows that only the variable a was given global scope, which is exactly what we\nwould expect, since the variables b and c were given local scope by being prefaced\nwith the var keyword.\nIf your browser issues a warning about b being undefined, the warning is correct but\ncan be ignored.\nThe Document Object Model\nThe designers of JavaScript were very smart. Rather than just creating yet another\nscripting language (which would have still been a pretty good improvement at the\ntime), they had the vision to build it around the Document Object Model , or DOM .\nThis breaks down the parts of an HTML document into discrete objects , each with its\nown properties  and methods  and each subject to JavaScript’s control.\nJavaScript separates  objects, properties, and methods by using a period (one good\nreason why + is the string concatenation operator in JavaScript, rather than the\nperiod). For example, let’s consider a business card as an object we’ll call card . This\nobject contains properties such as a name, address, phone number, and so on. In the\nsyntax of JavaScript, these properties would look like this:\ncard.name\ncard.phone\ncard.address\nIts methods are functions that retrieve, change, and otherwise act on the properties.\nFor instance, to invoke a method that displays the properties of object card , you\nmight use syntax such as this:\ncard.display()\nHave a look at some of the earlier examples in this chapter and look at where the\nstatement document.write  is used. Now that you understand how JavaScript is based\naround objects, you will see that write  is actually a method of the document  object.\nWithin JavaScript, there is a hierarchy of parent and child objects, which is what is\nknown as the Document Object Model (see Figure 13-3 ).\n324 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 355,
    "text": "Figure 13-3. Example of DOM object hierarchy\nThe figure uses HTML tags that you are already familiar with to illustrate the parent/\nchild relationship between the various objects in a document. For example, a URL\nwithin a link is part of the body of an HTML document. In JavaScript, it is referenced\nlike this:\nurl = document.links.linkname.href\nNotice how this follows the central column down. The first part, document , refers to\nthe <html>  and <body>  tags; links.linkname  to the <a> tag; and href  to the href\nattribute.\nLet’s turn this into some HTML and a script to read a link’s properties. Type\nExample 13-12  and save it as linktest.html ; then call it up in your browser.\nIf you are using Microsoft Internet Explorer as your main develop‐\nment browser, please just read through this section, then read the\nsection entitled “But It’s Not That Simple” on page 326, and finally\ncome back here and try the example with the getElementById\nmodification discussed there. Without it, this example will not\nwork for you.\nExample 13-12. Reading a link URL with JavaScript\n<html>\n  <head>\n    <title>Link Test</title>\n  </head>\n  <body>\n    <a id=\"mylink\" href=\"http://mysite.com\">Click me</a><br>\n    <script>\n      url = document.links.mylink.href\n      document.write('The URL is ' + url)\nThe Document Object Model | 325"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 356,
    "text": "</script>\n  </body>\n</html>\nNote the short form of the <script>  tags where I have omitted the parameter\ntype=\"text/JavaScript\"  to save you some typing. If you wish, just for the purposes\nof testing this (and other examples), you could also omit everything outside of the\n<script>  and </script>  tags. The output from this example is as follows:\nClick me\nThe URL is http://mysite.com\nThe second line of output comes from the document.write  method. Notice how the\ncode follows the document tree down from document  to links  to mylink  (the id\ngiven to the link) to href  (the URL destination value).\nThere is also a short form that works equally well, which starts with the value in the\nid attribute: mylink.href . So you can replace this:\nurl = document.links.mylink.href\nwith the following:\nurl = mylink.href\nBut It’s Not That Simple\nIf you tried Example 13-12  in Safari,  Firefox, Opera, or Chrome, it will have worked\njust great. But in Internet Explorer it will fail, because Microsoft’s implementation of\nJavaScript, called JScript, has many subtle differences from the recognized standards.\nWelcome to the world of advanced web development!\nSo what can we do about this? Well, in this case, instead of using the links  child\nobject  of the parent document  object, which Internet Explorer balks at, you have to\nreplace it with a method to fetch the element by its id. Therefore, the following line:\nurl = document.links.mylink.href\ncan be replaced with this one:\nurl = document.getElementById('mylink').href\nAnd now the script will work in all major browsers. Incidentally, when you don’t have\nto look up the element by id, the short form that follows will still work in Internet\nExplorer, as well as the other browsers:\nurl = mylink.href\n326 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 357,
    "text": "Another use for the $ symbol\nAs mentioned earlier, the $ symbol is allowed in JavaScript variable and function\nnames. Because of this, you may sometimes encounter strange-looking code like this:\nurl = $('mylink').href\nSome enterprising programmers have decided that the getElementById  function is so\nprevalent in JavaScript that they have written a function to replace it  called $, as with\njQuery (although it uses the $ for much more than that—see Chapter 21), and shown\nin Example 13-13 .\nExample 13-13. A replacement function for the getElementById method\n<script>\n  function $(id)\n  {\n    return document.getElementById(id)\n  }\n</script>\nTherefore, as long as you have included the $ function in your code, syntax such as\nthis:\n$('mylink').href\ncan replace code such as this:\ndocument.getElementById('mylink').href\nUsing the DOM\nThe links  object is actually an array of URLs, so the mylink  URL in Example 13-12\ncan also be safely referred to on all browsers in the following way (because it’s the\nfirst, and only, link):\nurl = document.links[0].href\nIf you want to know how many links there are in an entire document, you can query\nthe length  property of the links  object like this:\nnumlinks = document.links.length\nY ou can therefore extract and display all links in a document like this:\nfor (j=0 ; j < document.links.length ; ++j)\n  document.write(document.links[j].href + '<br>')\nThe length  of something is a property of every array, and many objects as well. For\nexample, the number of items in your browser’s web history can be queried like this:\ndocument.write(history.length)\nThe Document Object Model | 327"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 358,
    "text": "However, to stop websites from snooping on your browsing  history, the history\nobject stores only the number of sites in the array: you cannot read from or write to\nthese values. But you can replace the current page with one from the history, if you\nknow what position it has within the history. This can be very useful in cases in which\nyou know that certain pages in the history came from your site, or you simply wish to\nsend the browser back one or more pages, which you do with the go method of the\nhistory  object. For example, to send the browser back three pages, issue the follow‐\ning command:\nhistory.go(-3)\nY ou can also use the following methods to move back or forward a page at a time:\nhistory.back()\nhistory.forward()\nIn a similar manner, you can replace the currently loaded URL with one of your\nchoosing, like this:\ndocument.location.href = 'http://google.com'\nOf course, there’s a whole lot more to the DOM than reading and modifying links. As\nyou progress through the following chapters on JavaScript, you’ll become quite famil‐\niar with the DOM and how to access it.\nAbout document.write\nWhen teaching programming it’s necessary to have a quick and easy way to display\nthe results of expressions. In PHP (for example) there are the echo  and print  state‐\nments, which simply send text to the browser, so that’s easy. In JavaScript, though,\nthere are the following alternatives.\nUsing console.log\nThe console.log  function  will output the result of any value or expression passed to\nit in the console of the current browser. This is a special mode with a frame or win‐\ndow separate to the browser window, and in which errors and other messages can be\nmade to display. While great for experienced programmers, it is not ideal for begin‐\nners because calling up the console is different in all browsers, it works differently in\nall browsers, and the output is not near the web content in the browser.\nUsing alert\nThe alert  function displays values or expressions passed to it in a pop-up window,\nwhich requires you to click a button to close. Clearly this can become quite irritating\nvery quickly, and it has the downside of displaying only the current message—previ‐\nous ones are erased.\n328 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 359,
    "text": "Writing into Elements\nIt is possible to write directly into the text of an HTML element, which is a fairly ele‐\ngant solution (and the best one for production websites), except that for this book\nevery example would require such an element to be created, and some lines of Java‐\nScript code to access it. This gets in the way of teaching the core of an example and\nwould make the code look overly cumbersome and confusing.\nUsing document.write\nThe document.write  function writes a value or expression at the current browser\nlocation, and is therefore the perfect choice for quickly displaying results, because it\nkeeps all the examples short and sweet, by placing the output right there in the\nbrowser next to the web content and code.\nY ou may, however, have have heard that this function is regarded as unsafe by some\ndevelopers, because when you call it after a web page is fully loaded, it will overwrite\nthe current document. While this is correct, it doesn’t apply to any of the examples in\nthis book, because they all use document.write  the way it was originally intended; as\npart of the page creation process, calling it only before the page has completed load‐\ning and displaying.\nHowever, although I use document.write  in this way for simple examples, I never use\nit in production code (except in the very rarest of circumstances, where it actually is\nnecessary). Instead I almost always use the preceding option of writing directly into a\nspecially prepared element, as per the more complex examples in Chapter 17  onward\n(which access the innerHTML  property of elements for program output).\nSo please remember that where you see document.write  being called in this book, it\nis there only to simplify an example, and I recommend that you also only use the\nfunction in the same way—for obtaining quick test results.\nWith that caveat explained, in the following chapter we’ll continue our exploration of\nJavaScript by looking at how to control program flow and write expressions.\nQuestions\n1.Which tags do you use to enclose JavaScript code?\n2.By default, to which part of a document will JavaScript code output?\n3.How can you include JavaScript code from another source in your documents?\n4.Which JavaScript function is the equivalent of echo  or print  in PHP?\n5.How can you create a comment in JavaScript?\n6.What is the JavaScript string concatenation operator?\n7.Which keyword can you use within a JavaScript function to define a variable that\nhas local scope?\nQuestions | 329"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 360,
    "text": "8.Give two cross-browser methods to display the URL assigned to the link with an\nid of thislink .\n9.Which two JavaScript commands will make the browser load the previous page\nin its history array?\n10.What JavaScript command would you use to replace the current document with\nthe main page at the oreilly.com  website?\nSee Chapter 13 Answers  in Appendix A  for the answers to these questions.\n330 | Chapter 13: Exploring JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 361,
    "text": "CHAPTER 14\nExpressions and Control Flow in JavaScript\nIn the previous chapter, I introduced the basics of JavaScript and the DOM. Now it’s\ntime to look at how to construct complex expressions in JavaScript and how to con‐\ntrol the program flow of your scripts by using conditional statements.\nExpressions\nJavaScript  expressions are very similar to those in PHP . As you learned in Chapter 4 ,\nan expression is a combination of values, variables, operators, and functions that\nresults in a value; the result can be a number, a string, or a Boolean value (which eval‐\nuates to either true  or false ).\nExample 14-1  shows some simple expressions. For each line, it prints out a letter\nbetween a and d, followed by a colon and the result of the expressions. The <br>  tag is\nthere to create a line break and separate the output into four lines (remember that\nboth <br>  and <br />  are acceptable in HTML5, so I chose to use the former style for\nbrevity).\nExample 14-1. Four simple Boolean expressions\n<script>\n  document.write(\"a: \" + (42 > 3) + \"<br>\")\n  document.write(\"b: \" + (91 < 4) + \"<br>\")\n  document.write(\"c: \" + (8 == 2) + \"<br>\")\n  document.write(\"d: \" + (4 < 17) + \"<br>\")\n</script>\nThe output from this code is as follows:\na: true\nb: false\n331"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 362,
    "text": "c: false\nd: true\nNotice that both expressions a: and d: evaluate to true . But b: and c: evaluate to\nfalse . Unlike PHP (which would print the number 1 and nothing, respectively),\nactual strings of true  and false  are displayed.\nIn JavaScript, when you are checking whether a value is true  or false , all values eval‐\nuate to true  except the following, which evaluate to false : the string false  itself, 0, –\n0, the empty string, null , undefined , and NaN (Not a Number, a computer engineer‐\ning concept for an illegal floating-point operation such as division by zero).\nNote how I am referring to true  and false  in lowercase. This is because, unlike in\nPHP , these values must  be in lowercase in JavaScript. Therefore, only the first of the\ntwo following statements will display, printing the lowercase word true , because the\nsecond will cause a 'TRUE' is not defined  error:\nif (1 == true) document.write('true') // True\nif (1 == TRUE) document.write('TRUE') // Will cause an error\nRemember that any code snippets you wish to type and try for\nyourself in an HTML file need to be enclosed within <script>  and\n</script>  tags.\nLiterals and Variables\nThe simplest form of an  expression is a literal , which means something that evaluates\nto itself, such as the number 22 or the string Press Enter . An expression could also\nbe a variable, which evaluates to the value that has been assigned to it. They are both\ntypes of expressions, because they return a value.\nExample 14-2  shows three different literals and two variables, all of which return val‐\nues, albeit of different types.\nExample 14-2. Five types of literals\n<script>\n  myname = \"Peter\"\n  myage  = 24\n  document.write(\"a: \" + 42     + \"<br>\") // Numeric literal\n  document.write(\"b: \" + \"Hi\"   + \"<br>\") // String literal\n  document.write(\"c: \" + true   + \"<br>\") // Constant literal\n  document.write(\"d: \" + myname + \"<br>\") // String variable\n  document.write(\"e: \" + myage  + \"<br>\") // Numeric variable\n</script>\n332 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 363,
    "text": "And, as you’ d expect, you see a return value from all of these in the following output:\na: 42\nb: Hi\nc: true\nd: Peter\ne: 24\nOperators let you create more-complex expressions that evaluate to useful results.\nWhen you combine assignment or control-flow constructs with expressions, the\nresult is a statement .\nExample 14-3  shows one of each. The first assigns the result of the expression 366 -\nday_number  to the variable days_to_new_year , and the second outputs a friendly\nmessage only if the expression days_to_new_year < 30  evaluates to true .\nExample 14-3. Two simple JavaScript statements\n<script>\n  days_to_new_year = 366 - day_number;\n  if (days_to_new_year < 30) document.write(\"It's nearly New Year\")\n</script>\nOperators\nJavaScript offers a lot of powerful operators that range from arithmetic, string, and\nlogical operators to assignment, comparison, and more (see Table 14-1 ).\nTable 14-1. JavaScript operator types\nOperator Description Example\nArithmetic Basic mathematics a + b\nArray Array manipulation a + b\nAssignment Assign values a = b + 23\nBitwise Manipulate bits within bytes 12 ^ 9\nComparison Compare two values a < b\nIncrement/decrement Add or subtract one a++\nLogical Boolean a && b\nString Concatenation a + 'string'\nEach operator takes a different number of operands:\n•Unary  operators, such as incrementing ( a++) or negation ( -a), take a single\noperand.\nOperators | 333"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 364,
    "text": "•Binary  operators, which represent the bulk of JavaScript operators—including\naddition, subtraction, multiplication, and division—take two operands.\n•One ternary  operator, which takes the form ? x : y . It’s a terse single-line if\nstatement that chooses between two expressions depending on a third one.\nOperator Precedence\nAs with PHP ,  JavaScript utilizes operator precedence,  in which some operators in an \nexpression  are considered more  important  than others and are therefore  evaluated \nfirst. Table 14-2  lists JavaScript’s operators and their precedencies.\nTable 14-2. Precedence of JavaScript operators (high to low)\nOperator(s) Type(s)\n() [] . Parentheses, call, and member\n++ -- Increment/decrement\n+ - ~ ! Unary, bitwise, and logical\n* / % Arithmetic\n+ - Arithmetic and string\n<< >> >>> Bitwise\n< > <= >= Comparison\n== != === !== Comparison\n& ^ | Bitwise\n&& Logical\n|| Logical\n? : Ternary\n= += -= *= /= %= Assignment\n<<= >>= >>>= &= ^= |= Assignment\n, Separator\nAssociativity\nMost  JavaScript  operators  are  processed  in order  from  left to right  in an equation.\nBut some  operators require  processing  from  right  to left instead.  The  direction  of\nprocessing  is called the operator’s associativity .\nThis associativity becomes important in cases where you do not explicitly force prece‐\ndence. For example, look at the following assignment operators, by which three vari‐\nables are all set to the value 0:\nlevel = score = time = 0\n334 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 365,
    "text": "This multiple assignment is possible only because the rightmost part of the expres‐\nsion is evaluated first and then processing continues in a right-to-left direction.\nTable 14-3  lists operators and their associativity.\nTable 14-3. Operators and associativity\nOperator Description Associativity\n++ -- Increment and decrement None\nnew Create a new object Right\n+ - ~ ! Unary and bitwise Right\n?: Ternary Right\n= *= /= %= += -= Assignment Right\n<<= >>= >>>= &= ^= |= Assignment Right\n, Separator Left\n+ - * / % Arithmetic Left\n<< >> >>> Bitwise Left\n< <= > >= == != === !== Arithmetic Left\nRelational Operators\nRelational operators  test two operands and return a Boolean result of either true  or\nfalse . There are three types of relational operators: equality , comparison , and logical .\nEquality operators\nThe equality  operator is == (which  should not be confused with the = assignment\noperator). In Example 14-4 , the first statement assigns a value, and the second tests it\nfor equality. As it stands, nothing will be printed out, because month  is assigned the\nstring value July , and therefore the check for it having a value of October  will fail.\nExample 14-4. Assigning a value and testing for equality\n<script>\n  month = \"July\"\n  if (month == \"October\") document.write(\"It's the Fall\")\n</script>\nIf the two operands  of an equality expression are of different types, JavaScript will\nconvert them to whatever type makes best sense to it. For example, any strings com‐\nposed entirely of numbers will be converted to numbers whenever compared with a\nnumber. In Example 14-5 , a and b are two different values (one is a number and the\nother is a string), and we would therefore normally expect neither of the if state‐\nments to output a result.\nOperators | 335"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 366,
    "text": "Example 14-5. The equality and identity operators\n<script>\n  a = 3.1415927\n  b = \"3.1415927\"\n  if (a == b)  document.write(\"1\")\n  if (a === b) document.write(\"2\")\n</script>\nHowever, if you run the example, you will see that it outputs the number 1, which\nmeans that the first if statement evaluated to true . This is because the string value of\nb was first temporarily converted to a number, and therefore both halves of the equa‐\ntion had a numerical value of 3.1415927.\nIn contrast, the second if statement uses the identity  operator, three equals signs in a\nrow, which prevents JavaScript from automatically converting types. This means that\na and b are therefore found to be different, so nothing is output.\nAs with forcing operator precedence, whenever you’re in doubt about how JavaScript\nwill convert operand types, you can use the identity operator to turn this behavior off.\nComparison operators\nUsing  comparison  operators, you can test for more than  just equality and inequality.\nJavaScript  also gives you > (is greater than), < (is less than), >= (is greater than or\nequal to), and <= (is less than or equal to) to play with. Example 14-6  shows these\noperators in use.\nExample 14-6. The four comparison operators\n<script>\n  a = 7; b = 11\n  if (a > b)  document.write(\"a is greater than b<br>\")\n  if (a < b)  document.write(\"a is less than b<br>\")\n  if (a >= b) document.write(\"a is greater than or equal to b<br>\")\n  if (a <= b) document.write(\"a is less than or equal to b<br>\")\n</script>\nIn this example, where a is 7 and b is 11, the following is output (because 7 is less than\n11, and also less than or equal to 11):\na is less than b\na is less than or equal to b\nLogical operators\nLogical operators produce true-or-false results, and are also known  as Boolean  opera‐\ntors. There are three of them in JavaScript (see Table 14-4 ).\n336 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 367,
    "text": "Table 14-4. JavaScript’s logical operators\nLogical operator Description\n&& (and) true  if both operands are true\n|| (or) true  if either operand is true\n! (not) true  if the operand is false , or false  if the operand is true\nY ou can see how these can be used in Example 14-7 , which outputs 0, 1, and true .\nExample 14-7. The logical operators in use\n<script>\n  a = 1; b = 0\n  document.write((a && b) + \"<br>\")\n  document.write((a || b) + \"<br>\")\n  document.write((  !b  ) + \"<br>\")\n</script>\nThe && statement requires both operands to be true  if it is going to return a value of\ntrue , the || statement will be true  if either value is true , and the third statement\nperforms a NOT on the value of b, turning it from 0 into a value of true .\nThe || operator can cause unintentional problems, because the second operand will\nnot be evaluated if the first is evaluated as true . In Example 14-8 , the  getnext  func‐\ntion will never be called if finished  has a value of 1.\nExample 14-8. A statement using the || operator\n<script>\n  if (finished == 1 || getnext() == 1) done = 1\n</script>\nIf you need  getnext  to be called at each if statement, you should rewrite the code as\nshown in Example 14-9 .\nExample 14-9. The if...or statement modified  to ensure calling of getnext\n<script>\n  gn = getnext()\n  if (finished == 1 OR gn == 1) done = 1;\n</script>\nIn this case, the code in function getnext  will be executed and its return value stored\nin gn before the if statement.\nOperators | 337"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 368,
    "text": "Table 14-5  shows all the possible variations of using the logical operators. Y ou should\nalso note that !true  equals false , and !false  equals true .\nTable 14-5. All possible logical expressions\nInputs Operators and results\nAb&& ||\ntruetruetrue true\ntruefalsefalse true\nfalsetruefalse true\nfalsefalsefalse false\nThe with Statement\nThe with  statement is not one that you’ve seen in earlier chapters on PHP , because it’s\nexclusive to JavaScript. With it (if you see what I mean), you can simplify some types\nof JavaScript statements by reducing many references to an object to just one refer‐\nence. References to properties and methods within the with  block are assumed to\napply to that object.\nFor example, take the code in Example 14-10 , in which the document.write  function\nnever references the variable string  by name.\nExample 14-10. Using the with statement\n<script>\n  string = \"The quick brown fox jumps over the lazy dog\"\n  with (string)\n  {\n    document.write(\"The string is \" + length + \" characters<br>\")\n    document.write(\"In upper case it's: \" + toUpperCase())\n  }\n</script>\nEven though string  is never directly referenced by document.write , this code still\nmanages to output the following:\nThe string is 43 characters\nIn upper case it's: THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\nThis is how the code works: the JavaScript interpreter recognizes that the length\nproperty and toUpperCase()  method have to be applied to some object. Because they\nstand alone, the interpreter assumes they apply to the string  object that you specified\nin the with  statement.\n338 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 369,
    "text": "Using onerror\nThere are more constructs not available in PHP . Using either the onerror  event, or a\ncombination of the try and catch  keywords, you can catch JavaScript errors and deal\nwith them yourself.\nEvents  are actions that can be detected by JavaScript. Every element on a web page has\ncertain events that can trigger JavaScript functions. For example, the onclick  event of \na button element can be set to call a function and make it run whenever a user clicks\nthe button.\nExample 14-11  illustrates how to use the onerror  event.\nExample 14-11. A script employing the onerror event\n<script>\n  onerror = errorHandler\n  document.writ(\"Welcome to this website\") // Deliberate error\n  function errorHandler(message, url, line)\n  {\n    out  = \"Sorry, an error was encountered.\\n\\n\";\n    out += \"Error: \" + message + \"\\n\";\n    out += \"URL: \"   + url     + \"\\n\";\n    out += \"Line: \"  + line    + \"\\n\\n\";\n    out += \"Click OK to continue.\\n\\n\";\n    alert(out);\n    return true;\n  }\n</script>\nThe first line of this script tells the error event to use the new errorHandler  function\nfrom now onward. This function takes three parameters—a message , a url, and a\nline  number—so it’s a simple matter to display all these in an alert pop up.\nThen, to test the new function, we deliberately place a syntax error in the code with a\ncall to document.writ  instead of document.write  (the final e is missing). Figure 14-1\nshows the result of running this script in a browser. Using onerror  this way can also\nbe quite useful during the debugging process.\nUsing onerror | 339"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 370,
    "text": "Figure 14-1. Using the onerror event with an alert method pop-up\nUsing try...catch\nThe try and catch  keywords are more  standard and more flexible than the onerror\ntechnique shown in the previous section. These keywords let you trap errors for a\nselected section of code, rather than all scripts in a document. However, they do not\ncatch syntax errors, for which you need onerror .\nThe try...catch  construct is supported by all major browsers and is handy when\nyou want to catch a certain condition that you are aware could occur in a specific part\nof your code.\nFor example, in Chapter 17  we’ll be exploring Ajax techniques that make use of the\nXMLHttpRequest  object.  Unfortunately, this isn’t available in the Internet Explorer\nbrowser (although it is in all other major browsers). Therefore, we can use try and\ncatch  to trap this case and do something else if the function is not available.\nExample 14-12  shows how.\nExample 14-12. Trapping an error with try and catch\n<script>\n  try\n  {\n    request = new XMLHTTPRequest()\n  }\n  catch(err)\n  {\n    // Use a different method to create an XML HTTP Request object\n  }\n</script>\n340 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 371,
    "text": "I won’t go into how we implement the missing object in Internet Explorer here, but\nyou can see how the system works. There’s also another keyword associated with try\nand catch  called finally  that is always executed, regardless of whether an error\noccurs in the try clause. To use it, just add something like the following statements\nafter a catch  statement:\nfinally\n{\n  alert(\"The 'try' clause was encountered\")\n}\nConditionals\nConditionals alter program flow.  They enable you to ask questions about certain\nthings and respond to the answers you get in different ways. There are three types of\nnonlooping conditionals: the if statement, the switch  statement, and the ? operator.\nThe if Statement\nSeveral examples in this chapter have already made use of if statements. The code\nwithin such a statement is executed only if the given expression evaluates to true .\nMultiline if statements require curly braces around them, but as in PHP , you can\nomit the braces for single statements. Therefore, the following statements are valid:\nif (a > 100)\n{\n  b=2\n  document.write(\"a is greater than 100\")\n}\nif (b == 10) document.write(\"b is equal to 10\")\nThe else Statement\nWhen a condition has not been met, you can execute an alternative by using an else\nstatement, like this:\nif (a > 100)\n{\n  document.write(\"a is greater than 100\")\n}\nelse\n{\n  document.write(\"a is less than or equal to 100\")\n}\nConditionals | 341"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 372,
    "text": "Unlike PHP , JavaScript has no elseif  statement, but that’s not a problem, because\nyou can use an else  followed by another if to form the equivalent of an elseif\nstatement, like this:\nif (a > 100)\n{\n  document.write(\"a is greater than 100\")\n}\nelse if(a < 100)\n{\n  document.write(\"a is less than 100\")\n}\nelse\n{\n  document.write(\"a is equal to 100\")\n}\nAs you can see, you can use another else  after the new if, which could equally be\nfollowed by another if statement, and so on. Although I have shown braces on the\nstatements, because each is a single line, the whole previous example could be written\nas follows:\nif     (a > 100) document.write(\"a is greater than 100\")\nelse if(a < 100) document.write(\"a is less than 100\")\nelse             document.write(\"a is equal to 100\")\nThe switch Statement\nThe switch  statement is useful when one variable or the result of an expression can\nhave multiple values, and you want to perform a different function for each value.\nFor example, the following code takes the PHP menu system we put together in\nChapter 4  and converts it to JavaScript. It works by passing a single string to the main\nmenu code according to what the user requests. Let’s say the options are Home,\nAbout, News, Login, and Links, and we set the variable page  to one of these according\nto the user’s input.\nThe code for this written using if...else if...  might look like Example 14-13 .\nExample 14-13. A multiline if...else if... statement\n<script>\n  if      (page == \"Home\")  document.write(\"You selected Home\")\n  else if (page == \"About\") document.write(\"You selected About\")\n  else if (page == \"News\")  document.write(\"You selected News\")\n  else if (page == \"Login\") document.write(\"You selected Login\")\n  else if (page == \"Links\") document.write(\"You selected Links\")\n</script>\n342 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 373,
    "text": "But using a switch  construct, the code could look like Example 14-14 .\nExample 14-14. A switch construct\n<script>\n  switch (page)\n  {\n    case \"Home\":\n      document.write(\"You selected Home\")\n      break\n    case \"About\":\n      document.write(\"You selected About\")\n      break\n    case \"News\":\n      document.write(\"You selected News\")\n      break\n    case \"Login\":\n      document.write(\"You selected Login\")\n      break\n    case \"Links\":\n      document.write(\"You selected Links\")\n      break\n  }\n</script>\nThe variable page  is mentioned only once at the start of the switch  statement. There‐\nafter, the case  command checks for matches. When one occurs, the matching condi‐\ntional statement is executed. Of course, a real program would have code here to\ndisplay or jump to a page, rather than simply telling the user what was selected.\nBreaking out\nAs you can see in Example 14-14 , just as with PHP , the break  command allows your\ncode to break out of the switch  statement once a condition has been satisfied.\nRemember to include the break  unless you want to continue executing the statements\nunder the next case .\nDefault action\nWhen no condition is satisfied, you can specify a default action for a switch  state‐\nment by using the default  keyword. Example 14-15  shows a code snippet that could\nbe inserted into Example 14-14 .\nExample 14-15. A default statement to add to Example 14-14\ndefault:\n  document.write(\"Unrecognized selection\")\n  break\nConditionals | 343"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 374,
    "text": "The ? Operator\nThe ternary  operator ( ?), combined with the : character,  provides a quick way of\ndoing if...else  tests. With it you can write an expression to evaluate, and then fol‐\nlow it with a ? symbol and the code to execute if the expression is true . After that,\nplace a : and the code to execute if the expression evaluates to false .\nExample 14-16  shows a ternary operator being used to print out whether the variable\na is less than or equal to 5, and prints something either way.\nExample 14-16. Using the ternary operator\n<script>\n  document.write(\n    a <= 5 ?\n    \"a is less than or equal to 5\" :\n    \"a is greater than 5\"\n  )\n</script>\nThe statement has been broken up into several lines for clarity, but you would be\nmore likely to use such a statement on a single line, in this manner:\nsize = a <= 5 ? \"short\" : \"long\"\nLooping\nAgain, you will find many close similarities between  JavaScript and PHP when it\ncomes to looping. Both languages support while , do...while , and for loops.\nwhile Loops\nA JavaScript while  loop first checks the value of an expression and starts executing\nthe statements within the loop only if that expression is true . If it is false , execution\nskips over to the next JavaScript statement (if any).\nUpon completing an iteration of the loop, the expression is again tested to see if it is\ntrue , and the process continues until such a time as the expression evaluates to false\nor until execution is otherwise halted. Example 14-17  shows such a loop.\nExample 14-17. A while loop\n<script>\n  counter=0\n  while (counter < 5)\n  {\n344 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 375,
    "text": "document.write(\"Counter: \" + counter + \"<br>\")\n    ++counter\n  }\n</script>\nThis script outputs the following:\nCounter: 0\nCounter: 1\nCounter: 2\nCounter: 3\nCounter: 4\nIf the variable counter  were not incremented within the loop, it is\nquite possible that some browsers could become unresponsive due\nto a never-ending loop, and the page may not even be easy to ter‐\nminate with Escape or the Stop button. So be careful with your\nJavaScript loops.\ndo...while Loops\nWhen you require a loop to iterate at least once before any tests are made, use a\ndo...while  loop, which is similar to a while  loop, except that the test expression is\nchecked only after each iteration of the loop. So, to output the first seven results in\nthe 7 times table, you could use code such as that in Example 14-18 .\nExample 14-18. A do...while loop\n<script>\n  count = 1\n  do\n  {\n    document.write(count + \" times 7 is \" + count * 7 + \"<br>\")\n  } while (++count <= 7)\n</script>\nAs you might expect, this loop outputs the following:\n1 times 7 is 7\n2 times 7 is 14\n3 times 7 is 21\n4 times 7 is 28\n5 times 7 is 35\n6 times 7 is 42\n7 times 7 is 49\nLooping | 345"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 376,
    "text": "for Loops\nA for loop combines the  best of all worlds into a single looping construct that allows\nyou to pass three parameters for each statement:\n•An initialization expression\n•A condition expression\n•A modification expression\nThese are separated by semicolons, like this: for (expr1 ; expr2 ; expr3). At the\nstart of the first iteration of the loop, the initialization expression is executed. In the\ncase of the code for the multiplication table for 7, count  would be initialized to the\nvalue 1. Then, each time around the loop, the condition expression (in this case,\ncount <= 7 ) is tested, and the loop is entered only if the condition is true . Finally, at\nthe end of each iteration, the modification expression is executed. In the case of the\nmultiplication table for 7, the variable count  is incremented. Example 14-19  shows\nwhat the code would look like.\nExample 14-19. Using a for loop\n<script>\n  for (count = 1 ; count <= 7 ; ++count)\n  {\n    document.write(count + \"times 7 is \" + count * 7 + \"<br>\");\n  }\n</script>\nAs in PHP , you can assign multiple variables in the first parameter of a for loop by\nseparating them with a comma, like this:\nfor (i = 1, j = 1 ; i < 10 ; i++)\nLikewise, you can perform multiple modifications in the last parameter, like this:\nfor (i = 1 ; i < 10 ; i++, --j)\nOr you can do both at the same time:\nfor (i = 1, j = 1 ; i < 10 ; i++, --j)\nBreaking Out of a Loop\nThe break  command, which you’ll recall is important inside a switch  statement, is\nalso available within for loops. Y ou might need to use this, for example, when search‐\ning for a match of some kind. Once the match is found, you know that continuing to\nsearch will only waste time and make your visitor wait. Example 14-20  shows how to\nuse the break  command.\n346 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 377,
    "text": "Example 14-20. Using the break command in a for loop\n<script>\n  haystack     = new Array()\n  haystack[17] = \"Needle\"\n  for (j = 0 ; j < 20 ; ++j)\n  {\n    if (haystack[j] == \"Needle\")\n    {\n      document.write(\"<br>- Found at location \" + j)\n      break\n    }\n    else document.write(j + \", \")\n  }\n</script>\nThis script outputs the following:\n0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n- Found at location 17\nThe continue Statement\nSometimes you don’t want to entirely exit from a loop, but instead wish to skip the\nremaining statements just for this iteration of the loop. In such cases, you can use the\ncontinue  command. Example 14-21  shows this in use.\nExample 14-21. Using the continue command in a for loop\n<script>\n  haystack     = new Array()\n  haystack[4]  = \"Needle\"\n  haystack[11] = \"Needle\"\n  haystack[17] = \"Needle\"\n  for (j = 0 ; j < 20 ; ++j)\n  {\n    if (haystack[j] == \"Needle\")\n    {\n      document.write(\"<br>- Found at location \" + j + \"<br>\")\n      continue\n    }\n    document.write(j + \", \")\n  }\n</script>\nLooping | 347"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 378,
    "text": "Notice how the second document.write  call does not have to be enclosed in an else\nstatement (as it did before), because the continue  command will skip it if a match has\nbeen found. The output from this script is as follows:\n0, 1, 2, 3,\n- Found at location 4\n5, 6, 7, 8, 9, 10,\n- Found at location 11\n12, 13, 14, 15, 16,\n- Found at location 17\n18, 19,\nExplicit Casting\nUnlike PHP , JavaScript has no explicit casting of types such as (int)  or (float) .\nInstead, when you need a value to be of a certain type, use one of JavaScript’s built-in\nfunctions, shown in Table 14-6 .\nTable 14-6. JavaScript’s type-changing functions\nChange to type Function to use\nInt, Integer parseInt()\nBool, Boolean Boolean()\nFloat, Double, Real parseFloat()\nString String()\nArray split()\nSo, for example, to change a floating-point number to an integer, you could use code\nsuch as the following (which displays the value 3):\nn = 3.1415927\ni = parseInt(n)\ndocument.write(i)\nOr you can use the compound form:\ndocument.write(parseInt(3.1415927))\nThat’s it for control flow and expressions. The next chapter focuses on the use of\nfunctions, objects, and arrays in JavaScript.\nQuestions\n1.How are Boolean values handled differently by PHP and JavaScript?\n2.What characters are used to define a JavaScript variable name?\n3.What is the difference between unary, binary, and ternary operators?\n348 | Chapter 14: Expressions and Control Flow in JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 379,
    "text": "4.What is the best way to force your own operator precedence?\n5.When would you use the === (identity) operator?\n6.What are the simplest two forms of expressions?\n7.Name the three conditional statement types.\n8.How do if and while  statements interpret conditional expressions of different\ndata types?\n9.Why is a for loop more powerful than a while  loop?\n10.What is the purpose of the with  statement?\nSee Chapter 14 Answers  in Appendix A  for the answers to these questions.\nQuestions | 349"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 380,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 381,
    "text": "CHAPTER 15\nJavaScript Functions, Objects, and Arrays\nJust like PHP , JavaScript offers access to functions and objects. In fact, JavaScript is\nactually based on objects, because—as you’ve seen—it has to access the DOM, which\nmakes every element of an HTML document available to manipulate as an object.\nThe usage and syntax are also quite similar to those of PHP , so you should feel right at\nhome as I take you through using functions and objects in JavaScript, as well as\nthrough an in-depth exploration of array handling.\nJavaScript Functions\nIn addition to having access to dozens of built-in functions (or methods) such as\nwrite , which you have already seen being used in document.write , you can easily\ncreate your own functions. Whenever you have a more complex piece of code that is\nlikely to be reused, you have a candidate for a function.\nDefining  a Function\nThe general syntax for a function is shown here:\nfunction function_name ([parameter  [, ...]])\n{\n  statements\n}\nThe first line of the syntax indicates the following:\n•A definition starts with the word function .\n•A name follows that must start with a letter or underscore, followed by any num‐\nber of letters, digits, dollar symbols, or underscores.\n•The parentheses are required.\n351"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 382,
    "text": "•One or more parameters, separated by commas, are optional (indicated by the\nsquare brackets, which are not part of the function syntax).\nFunction names are case-sensitive, so all of the following strings refer to different\nfunctions: getInput , GETINPUT , and getinput .\nIn JavaScript there is a general naming convention for functions: the first letter of\neach word in a name is capitalized except for the very first letter, which is lowercase.\nTherefore, of the previous examples, getInput  would be the preferred name used by\nmost programmers. This convention is commonly referred to as bumpyCaps , bumpy‐\nCase , or camelCase .\nThe opening curly brace starts the statements that will execute when you call the\nfunction; a matching curly brace must close it. These statements may include one or\nmore return  statements,  which force the function to cease execution and return to\nthe calling code. If a value is attached to the return  statement, the calling code can\nretrieve it.\nThe arguments  array\nThe arguments  array is a member of every function. With it, you can determine the\nnumber of variables passed to a function and what they are. Take the example of a\nfunction called displayItems . Example 15-1  shows one way of writing it.\nExample 15-1. Defining  a function\n<script>\n  displayItems(\"Dog\", \"Cat\", \"Pony\", \"Hamster\", \"Tortoise\")\n  function displayItems(v1, v2, v3, v4, v5)\n  {\n    document.write(v1 + \"<br>\")\n    document.write(v2 + \"<br>\")\n    document.write(v3 + \"<br>\")\n    document.write(v4 + \"<br>\")\n    document.write(v5 + \"<br>\")\n  }\n</script>\nWhen you call up this script in your browser, it will display the following:\nDog\nCat\nPony\nHamster\nTortoise\n352 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 383,
    "text": "All of this is fine, but what if you wanted to pass more than five items to the function?\nAlso, reusing the document.write  call multiple times instead of employing a loop is\nwasteful programming. Luckily, the arguments  array gives you the flexibility to han‐\ndle a variable number of arguments. Example 15-2  shows how you can use it to\nrewrite the example in a much more efficient manner.\nExample 15-2. Modifying the function to use the arguments array\n<script>\n  function displayItems()\n  {\n    for (j = 0 ; j < displayItems.arguments.length ; ++j)\n      document.write(displayItems.arguments[j] + \"<br>\")\n  }\n</script>\nNote the use of the length  property, which you already encountered in the previous\nchapter, and also how the array displayItems.arguments  is referenced using the\nvariable j as an offset into it. I also chose to keep the function short and sweet by not\nsurrounding the contents of the for loop in curly braces, as it contains only a single\nstatement.\nUsing this technique, you now have a function that can take as many (or as few) argu‐\nments as you like and act on each argument as you desire.\nReturning a Value\nFunctions are not used just to display things. In fact,  they are mostly used to perform\ncalculations or data manipulation and then return a result. The function fixNames  in\nExample 15-3  uses the arguments  array (discussed in the previous section) to take a\nseries of strings passed to it and return them as a single string. The “fix” it performs is\nto convert every character in the arguments to lowercase except for the first character\nof each argument, which is set to a capital letter.\nExample 15-3. Cleaning up a full name\n<script>\n  document.write(fixNames(\"the\", \"DALLAS\", \"CowBoys\"))\n  function fixNames()\n  {\n    var s = \"\"\n    for (j = 0 ; j < fixNames.arguments.length ; ++j)\n      s += fixNames.arguments[j].charAt(0).toUpperCase() +\n           fixNames.arguments[j].substr(1).toLowerCase() + \" \"\nJavaScript Functions | 353"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 384,
    "text": "return s.substr(0, s.length-1)\n  }\n</script>\nWhen called with the parameters the, DALLAS , and CowBoys , for example, the func‐\ntion returns the string The Dallas Cowboys . Let’s walk through the function.\nThe function first initializes the temporary (and local) variable s to the empty string.\nThen a for loop iterates through each of the passed parameters, isolating the parame‐\nter’s first character using the charAt  method and converting it to uppercase with the\ntoUpperCase  method.  The various methods shown in this example are all built into\nJavaScript and available by default.\nThen the substr  method is used to fetch the rest of each string,  which is converted to\nlowercase using the toLowerCase  method. A fuller version of the substr  method here\nwould specify how many characters are part of the substring as a second argument:\nsubstr(1, (arguments[j].length) - 1 )\nIn other words, this substr  method says, “Start with the character at position 1 (the\nsecond character) and return the rest of the string (the length minus one). ” As a nice\ntouch, though, the substr  method assumes that you want the rest of the string if you\nomit the second argument.\nAfter the whole argument is converted to our desired case, a space character is added\nto the end and the result is appended to the temporary variable s.\nFinally, the substr  method is used again to return the contents of the variable s,\nexcept for the final space—which is unwanted. We remove this by using substr  to\nreturn the string up to, but not including, the final character.\nThis example is particularly interesting in that it illustrates the use of multiple proper‐\nties and methods in a single expression. For example:\nfixNames.arguments[j].substr(1).toLowerCase()\nY ou have to interpret the statement by mentally dividing it into parts at the periods.\nJavaScript evaluates these elements of the statement from left to right as follows:\n1.Start with the name of the function itself: fixNames .\n2.Extract element j from the array arguments  representing fixNames  arguments.\n3.Invoke substr  with a parameter of 1 to the extracted element. This passes all but\nthe first character to the next section of the expression.\n4.Apply the method toLowerCase  to the string that has been passed this far.\n354 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 385,
    "text": "This practice is often referred to as method chaining . So, for example, if the string\nmixedCASE  is passed to the example expression, it will go through the following trans‐\nformations:\nmixedCASE\nixedCASE\nixedcase\nOne final reminder: the s variable created inside the function is local, and therefore\ncannot be accessed outside the function. By returning s in the return  statement, we\nmade its value available to the caller, which could store or use it any way it wanted.\nBut s itself disappears at the end of the function. Although we could make a function\noperate on global variables (and sometimes that’s necessary), it’s much better to just\nreturn the values you want to preserve and let JavaScript clean up all the other vari‐\nables used by the function.\nReturning an Array\nIn Example 15-3 , the function  returned only one parameter, but what if you need to\nreturn multiple parameters? Y ou can do this by returning an array, as in\nExample 15-4 .\nExample 15-4. Returning an array of values\n<script>\n  words = fixNames(\"the\", \"DALLAS\", \"CowBoys\")\n  for (j = 0 ; j < words.length ; ++j)\n    document.write(words[j] + \"<br>\")\n  function fixNames()\n  {\n    var s = new Array()\n    for (j = 0 ; j < fixNames.arguments.length ; ++j)\n      s[j] = fixNames.arguments[j].charAt(0).toUpperCase() +\n             fixNames.arguments[j].substr(1).toLowerCase()\n  return s\n}\n</script>\nHere the variable words  is automatically defined as an array and populated with the\nreturned result of a call to the function fixNames . Then a for loop iterates through\nthe array and displays each member.\nJavaScript Functions | 355"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 386,
    "text": "As for the fixNames  function, it’s almost identical to Example 15-3 , except that the\nvariable s is now an array, and after each word has been processed, it is stored as an\nelement of this array, which is returned by the return  statement.\nThis function enables the extraction of individual parameters from its returned val‐\nues, like the following (the output from which is simply The Cowboys ):\nwords = fixNames(\"the\", \"DALLAS\", \"CowBoys\")\ndocument.write(words[0] + \" \" + words[2])\nJavaScript Objects\nA JavaScript object  is a step up from a variable, which can contain only one value at a\ntime, in that objects can contain multiple values and even functions. An object groups\ndata together with the functions needed to manipulate it.\nDeclaring a Class\nWhen creating a script to use objects, you need to design a composite of data and\ncode called a class . Each new object based on this class is called  an instance  (or occur‐\nrence ) of that class. As you’ve already seen, the data associated with an object is called\nits properties , while the functions it uses are called methods .\nLet’s look at how to declare the class for an object called User  that will contain details\nabout the current user. To create the class, just write a function named after the class.\nThis function can accept arguments (I’ll show later how it’s invoked) and can create\nproperties and methods for objects in that class. The function is called a constructor .\nExample 15-5  shows a constructor for the class User  with three properties: forename ,\nusername , and password . The class also defines the method showUser .\nExample 15-5. Declaring the User class and its method\n<script>\n  function User(forename, username, password)\n  {\n    this.forename = forename\n    this.username = username\n    this.password = password\n    this.showUser = function()\n    {\n      document.write(\"Forename: \" + this.forename + \"<br>\")\n      document.write(\"Username: \" + this.username + \"<br>\")\n      document.write(\"Password: \" + this.password + \"<br>\")\n    }\n  }\n</script>\n356 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 387,
    "text": "The function is different from other functions we’ve seen so far in two ways:\n•It refers to an object named this . When the program creates an instance of User\nby running this function, this  refers to the instance being created. The same\nfunction can be called over and over with different arguments, and will create a\nnew User  each time with different values for the properties forename , and so on.\n•A new function named showUser  is created within the function. The syntax\nshown here is new and rather complicated, but its purpose is to tie showUser  to\nthe User  class. Thus, showUser  comes into being as a method of the User  class.\nThe naming convention I have used is to keep all properties in lowercase and to use at\nleast one uppercase character in method names, following the bumpyCaps conven‐\ntion mentioned earlier in the chapter.\nExample 15-5  follows the recommended way to write a class constructor, which is to\ninclude methods in the constructor function. However, you can also refer to func‐\ntions defined outside the constructor, as in Example 15-6 .\nExample 15-6. Separately defining  a class and method\n<script>\n  function User(forename, username, password)\n  {\n    this.forename = forename\n    this.username = username\n    this.password = password\n    this.showUser = showUser\n  }\n  function showUser()\n  {\n    document.write(\"Forename: \" + this.forename + \"<br>\")\n    document.write(\"Username: \" + this.username + \"<br>\")\n    document.write(\"Password: \" + this.password + \"<br>\")\n  }\n</script>\nI show you this form because you are certain to encounter it when perusing other\nprogrammers’ code.\nCreating an Object\nTo create an instance of the class User , you can use a statement such as the following:\ndetails = new User(\"Wolfgang\", \"w.a.mozart\", \"composer\")\nOr you can create an empty object, like this:\nJavaScript Objects | 357"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 388,
    "text": "details = new User()\nand then populate it later, like this:\ndetails.forename = \"Wolfgang\"\ndetails.username = \"w.a.mozart\"\ndetails.password = \"composer\"\nY ou can also add new properties to an object, like this:\ndetails.greeting = \"Hello\"\nY ou can verify that adding such new properties works with the following statement:\ndocument.write(details.greeting)\nAccessing Objects\nTo access an object, you can refer to its properties, as in the following two unrelated\nexample statements:\nname = details.forename\nif (details.username == \"Admin\") loginAsAdmin()\nSo, to access the showUser  method of an object of class User , you would use the fol‐\nlowing syntax, in which the object details  has already been created and populated\nwith data:\ndetails.showUser()\nAssuming the data supplied earlier, this code would display the following:\nForename: Wolfgang\nUsername: w.a.mozart\nPassword: composer\nThe prototype Keyword\nThe prototype  keyword can save you a lot of memory. In the User  class, every\ninstance will contain the three properties and the method. Therefore, if you have\n1,000 of these objects in memory, the method showUser  will also be replicated 1,000\ntimes. However, because the method is identical in every case, you can specify that\nnew objects should refer to a single instance of the method instead of creating a copy\nof it. So, instead of using the following in a class constructor:\nthis.showUser = function()\nyou could replace it with this:\nUser.prototype.showUser = function()\nExample 15-7  shows what the new constructor would look like.\n358 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 389,
    "text": "Example 15-7. Declaring a class using the prototype keyword for a method\n<script>\n  function User(forename, username, password)\n  {\n    this.forename = forename\n    this.username = username\n    this.password = password\n    User.prototype.showUser = function()\n    {\n      document.write(\"Forename: \" + this.forename + \"<br>\")\n      document.write(\"Username: \" + this.username + \"<br>\")\n      document.write(\"Password: \" + this.password + \"<br>\")\n    }\n  }\n</script>\nThis works because all functions have a prototype  property, designed to hold proper‐\nties and methods that are not replicated in any objects created from a class. Instead,\nthey are passed to its objects by reference.\nThis means that you can add a prototype  property or method at any time, and all\nobjects (even those already created) will inherit it, as the following statements illus‐\ntrate:\nUser.prototype.greeting = \"Hello\"\ndocument.write(details.greeting)\nThe first statement adds the prototype  property of greeting  with a value of Hello  to\nthe class User . In the second line, the object details , which has already been created,\ncorrectly displays this new property.\nY ou can also add to or modify methods in a class, as the following statements illus‐\ntrate:\nUser.prototype.showUser = function()\n{\n  document.write(\"Name \"  + this.forename +\n                 \" User \" + this.username +\n                 \" Pass \" + this.password)\n}\ndetails.showUser()\nY ou might add these lines to your script in a conditional statement (such as if), so\nthey run if user activities cause you to decide you need a different showUser  method.\nAfter these lines run, even if the object details  has been created already, further calls\nto details.showUser  will run the new function. The old definition of showUser  has\nbeen erased.\nJavaScript Objects | 359"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 390,
    "text": "Static methods and properties\nWhen reading  about PHP objects, you learned that classes can have static properties\nand methods as well as properties and methods associated with a particular instance\nof a class. JavaScript also supports static properties and methods, which you can con‐\nveniently store and retrieve from the class’s prototype . Thus, the following state‐\nments set and read a static string from User :\nUser.prototype.greeting = \"Hello\"\ndocument.write(User.prototype.greeting)\nExtending JavaScript objects\nThe prototype  keyword even lets you add  functionality to a built-in object. For\nexample, suppose that you would like to add the ability to replace all spaces in a string\nwith nonbreaking spaces in order to prevent it from wrapping around. Y ou can do\nthis by adding a prototype method to JavaScript’s default String  object definition,\nlike this:\nString.prototype.nbsp = function()\n{\n  return this.replace(/ /g, '&nbsp;')\n}\nHere the replace  method is used with a regular expression (see Chapter 16 ) to find\nand replace all single spaces with the string &nbsp; . If you then enter the following\ncommand:\ndocument.write(\"The quick brown fox\".nbsp())\nit will output the string The&nbsp;quick&nbsp;brown&nbsp;fox . Or here’s a method\nyou can add that will trim leading and trailing spaces from a string (once again using\na regular expression):\nString.prototype.trim = function()\n{\n  return this.replace(/^\\s+|\\s+$/g, '')\n}\nIf you issue the following statement, the output will be the string Please trim me\n(with the leading and trailing spaces removed):\ndocument.write(\"  Please trim me    \".trim())\nIf we break down the expression into its component parts, the two / characters mark\nthe start and end of the expression, and the final g specifies a global search. Inside the\nexpression, the ^\\s+  part searches for one or more whitespace characters appearing at\nthe start of the search string, while the \\s+$  part searches for one or more whitespace\ncharacters at the end of the search string. The | character in the middle acts to sepa‐\nrate the alternatives.\n360 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 391,
    "text": "The result is that when either of these expressions matches, the match is replaced\nwith the empty string, thus returning a trimmed version of the string without any\nleading or trailing whitespace.\nJavaScript Arrays\nArray handling in JavaScript is very similar to PHP ,  although the syntax is a little dif‐\nferent. Nevertheless, given all you have already learned about arrays, this section\nshould be relatively straightforward for you.\nNumeric Arrays\nTo create a new array, use the following syntax:\narrayname = new Array()\nOr you can use the shorthand form, as follows:\narrayname = []\nAssigning element values\nIn PHP , you could add a new  element to an array by  simply assigning it without spec‐\nifying the element offset, like this:\n$arrayname[] = \"Element 1\";\n$arrayname[] = \"Element 2\";\nBut in JavaScript you use the push  method to achieve the same thing, like this:\narrayname.push(\"Element 1\")\narrayname.push(\"Element 2\")\nThis allows you to keep adding items to an array without having to keep track of the\nnumber of items. When you need to know how many elements are in an array, you\ncan use the length  property, like this:\ndocument.write(arrayname.length)\nAlternatively, if you wish to keep track of the element locations yourself and place\nthem in specific locations, you can use syntax such as this:\narrayname[0] = \"Element 1\"\narrayname[1] = \"Element 2\"\nExample 15-8  shows a simple script that creates an array, loads it with some values,\nand then displays them.\nJavaScript Arrays | 361"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 392,
    "text": "Example 15-8. Creating, building, and printing an array\n<script>\n  numbers = []\n  numbers.push(\"One\")\n  numbers.push(\"Two\")\n  numbers.push(\"Three\")\n  for (j = 0 ; j < numbers.length ; ++j)\n    document.write(\"Element \" + j + \" = \" + numbers[j] + \"<br>\")\n</script>\nThe output from this script is as follows:\nElement 0 = One\nElement 1 = Two\nElement 2 = Three\nAssignment using the array keyword\nY ou can also create an array together with some initial elements by using the Array\nkeyword, like this:\nnumbers = Array(\"One\", \"Two\", \"Three\")\nThere is nothing stopping you from adding more elements afterward as well.\nSo now you have a couple of ways you can add items to an array, and one way of ref‐\nerencing them, but JavaScript offers many more, which I’ll get to shortly. But first\nwe’ll look at another type of array.\nAssociative Arrays\nAn associative array  is one in which its elements are referenced by name rather than\nby numeric offset. To create an associative array, define a block of elements within\ncurly braces. For each element, place the key on the left and the contents on the right\nof a colon ( :). Example 15-9  shows how you might create an associative array to hold\nthe contents of the “balls” section of an online sports equipment retailer.\nExample 15-9. Creating and displaying an associative array\n<script>\n  balls = {\"golf\":    \"Golf balls, 6\",\n           \"tennis\":  \"Tennis balls, 3\",\n           \"soccer\":  \"Soccer ball, 1\",\n           \"ping\":    \"Ping Pong balls, 1 doz\"}\n  for (ball in balls)\n    document.write(ball + \" = \" + balls[ball] + \"<br>\")\n</script>\n362 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 393,
    "text": "To verify that the array has been correctly created and populated, I have used another\nkind of for loop using the in keyword. This creates a new variable to use only within\nthe array ( ball , in this example) and iterates through all elements of the array to the\nright of the in keyword ( balls , in this example). The loop acts on each element of\nballs , placing the key value into ball .\nUsing this key value stored in ball , you can also get the value of the current element\nof balls . The result of calling up the example script in a browser is as follows:\ngolf = Golf balls, 6\ntennis = Tennis balls, 3\nsoccer = Soccer ball, 1\nping = Ping Pong balls, 1 doz\nTo get a specific element of an associative array, you can specify a key explicitly, in the\nfollowing manner (in this case, outputting the value Soccer ball, 1 ):\ndocument.write(balls['soccer'])\nMultidimensional Arrays\nTo create a  multidimensional array in JavaScript, just place arrays inside other arrays.\nFor example, to create an array to hold the details of a two-dimensional checkerboard\n(8×8 squares), you could use the code in Example 15-10 .\nExample 15-10. Creating a multidimensional numeric array\n<script>\n  checkerboard = Array(\n    Array(' ', 'o', ' ', 'o', ' ', 'o', ' ', 'o'),\n    Array('o', ' ', 'o', ' ', 'o', ' ', 'o', ' '),\n    Array(' ', 'o', ' ', 'o', ' ', 'o', ' ', 'o'),\n    Array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '),\n    Array(' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '),\n    Array('O', ' ', 'O', ' ', 'O', ' ', 'O', ' '),\n    Array(' ', 'O', ' ', 'O', ' ', 'O', ' ', 'O'),\n    Array('O', ' ', 'O', ' ', 'O', ' ', 'O', ' '))\n  document.write(\"<pre>\")\n  for (j = 0 ; j < 8 ; ++j)\n  {\n    for (k = 0 ; k < 8 ; ++k)\n      document.write(checkerboard[j][k] + \" \")\n    document.write(\"<br>\")\n  }\n  document.write(\"</pre>\")\n</script>\nJavaScript Arrays | 363"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 394,
    "text": "In this example, the lowercase letters represent black pieces, and the uppercase white.\nA pair of nested for loops walks through the array and displays its contents.\nThe outer loop contains two statements, so curly braces enclose them. The inner loop\nthen processes each square in a row, outputting the character at location [j][k] , fol‐\nlowed by a space (to square up the printout). This loop contains a single statement, so\ncurly braces are not required to enclose it. The <pre>  and </pre>  tags ensure that the\noutput displays correctly, like this:\n  o   o   o   o\no   o   o   o\n  o   o   o   o\nO   O   O   O\n  O   O   O   O\nO   O   O   O\nY ou can also directly access any element within this array by using square brackets:\ndocument.write(checkerboard[7][2])\nThis statement outputs the uppercase letter O, the eighth element down and the third\nalong—remember that array indexes start at 0, not 1.\nUsing Array Methods\nGiven the power of arrays, JavaScript comes ready-made with a number of methods\nfor manipulating them and their data. Here is a selection of the most useful ones.\nconcat\nThe concat  method concatenates two arrays, or a series of values within an array. For\nexample, the following code outputs Banana,Grape,Carrot,Cabbage :\nfruit = [\"Banana\", \"Grape\"]\nveg   = [\"Carrot\", \"Cabbage\"]\ndocument.write(fruit.concat(veg))\nY ou can specify multiple arrays as arguments, in which case concat  adds all their ele‐\nments in the order that the arrays are specified.\nHere’s another way to use concat . This time, plain values are concatenated with the\narray pets , which outputs Cat,Dog,Fish,Rabbit,Hamster :\npets      = [\"Cat\", \"Dog\", \"Fish\"]\nmore_pets = pets.concat(\"Rabbit\", \"Hamster\")\ndocument.write(more_pets)\n364 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 395,
    "text": "forEach (for non-IE browsers)\nThe forEach  method in JavaScript is another way of achieving functionality similar to\nthe PHP foreach  keyword, but only for browsers other than Internet Explorer . To use\nit, you pass it the name of a function, which will be called for each element within the\narray. Example 15-11  shows how.\nExample 15-11. Using the forEach method\n<script>\n  pets = [\"Cat\", \"Dog\", \"Rabbit\", \"Hamster\"]\n  pets.forEach(output)\n  function output(element, index, array)\n  {\n    document.write(\"Element at index \" + index + \" has the value \" +\n      element + \"<br>\")\n  }\n</script>\nIn this case, the function passed to forEach  is called output . It takes three parame‐\nters: the element , its index , and the array . These can be used as required by your\nfunction. In this example, just the element  and index  values are displayed using the\nfunction document.write .\nOnce an array has been populated, the method is called like this:\npets.forEach(output)\nThis is the output:\nElement at index 0 has the value Cat\nElement at index 1 has the value Dog\nElement at index 2 has the value Rabbit\nElement at index 3 has the value Hamster\nforEach (a cross-browser solution)\nOf course, as is its way, Microsoft chose not to support the forEach  method, so the\nprevious example will work only on non–Internet Explorer browsers. Therefore, until\nIE does support it, and to ensure cross-browser compatibility, you should use a state‐\nment such as the following instead of pets.forEach(output) :\nfor (j = 0 ; j < pets.length ; ++j) output(pets[j], j)\njoin\nWith the join  method, you can convert all the values in an array to strings and then\njoin them together into one large string, placing an optional separator between them.\nExample 15-12  shows three ways of using this method.\nJavaScript Arrays | 365"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 396,
    "text": "Example 15-12. Using the join method\n<script>\n  pets = [\"Cat\", \"Dog\", \"Rabbit\", \"Hamster\"]\n  document.write(pets.join()      + \"<br>\")\n  document.write(pets.join(' ')   + \"<br>\")\n  document.write(pets.join(' : ') + \"<br>\")\n</script>\nWithout a parameter, join  uses a comma to separate the elements; otherwise, the\nstring passed to join  is inserted between each element. The output of Example 15-12\nlooks like this:\nCat,Dog,Rabbit,Hamster\nCat Dog Rabbit Hamster\nCat : Dog : Rabbit : Hamster\npush and pop\nY ou already saw how the push  method can be used to insert a value into an array. The\ninverse method is pop. It deletes the most recently inserted element from an array and\nreturns it. Example 15-13  shows an example of its use.\nExample 15-13. Using the push and pop methods\n<script>\n  sports = [\"Football\", \"Tennis\", \"Baseball\"]\n  document.write(\"Start = \"      + sports +  \"<br>\")\n  sports.push(\"Hockey\")\n  document.write(\"After Push = \" + sports +  \"<br>\")\n  removed = sports.pop()\n  document.write(\"After Pop = \"  + sports +  \"<br>\")\n  document.write(\"Removed = \"    + removed + \"<br>\")\n</script>\nThe three main statements of this script are shown in bold type. First, the script cre‐\nates an array called sports  with three elements and then push es a fourth element into\nthe array. After that, it pops that element back off. In the process, the various current\nvalues are displayed via document.write . The script outputs the following:\nStart = Football,Tennis,Baseball\nAfter Push = Football,Tennis,Baseball,Hockey\nAfter Pop = Football,Tennis,Baseball\nRemoved = Hockey\nThe push  and pop functions are useful in situations where you need to divert from\nsome activity to do another, and then return, as in Example 15-14 .\n366 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 397,
    "text": "Example 15-14. Using push and pop inside and outside of a loop\n<script>\n  numbers = []\n  for (j = 0 ; j < 3 ; ++j)\n  {\n    numbers.push(j);\n    document.write(\"Pushed \" + j + \"<br>\")\n  }\n  // Perform some other activity here\n  document.write(\"<br>\")\n  document.write(\"Popped \" + numbers.pop() + \"<br>\")\n  document.write(\"Popped \" + numbers.pop() + \"<br>\")\n  document.write(\"Popped \" + numbers.pop() + \"<br>\")\n</script>\nThe output from this example is as follows:\nPushed 0\nPushed 1\nPushed 2\nPopped 2\nPopped 1\nPopped 0\nUsing reverse\nThe reverse  method  simply reverses the order of all elements in an array.\nExample 15-15  shows this in action.\nExample 15-15. Using the reverse method\n<script>\n  sports = [\"Football\", \"Tennis\", \"Baseball\", \"Hockey\"]\n  sports.reverse()\n  document.write(sports)\n</script>\nThe original array is modified, and the output from this script is as follows:\nHockey,Baseball,Tennis,Football\nsort\nWith the sort  method, you can  place all elements of an array in alphabetical or other\norder, depending on the parameters used. Example 15-16  shows four types of sort.\nJavaScript Arrays | 367"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 398,
    "text": "Example 15-16. Using the sort method\n<script>\n  // Alphabetical sort\n  sports = [\"Football\", \"Tennis\", \"Baseball\", \"Hockey\"]\n  sports.sort()\n  document.write(sports + \"<br>\")\n  // Reverse alphabetical sort\n  sports = [\"Football\", \"Tennis\", \"Baseball\", \"Hockey\"]\n  sports.sort().reverse()\n  document.write(sports + \"<br>\")\n  // Ascending numeric sort\n  numbers = [7, 23, 6, 74]\n  numbers.sort(function(a,b){return a - b})\n  document.write(numbers + \"<br>\")\n  // Descending numeric sort\n  numbers = [7, 23, 6, 74]\n  numbers.sort(function(a,b){return b - a})\n  document.write(numbers + \"<br>\")\n</script>\nThe first of the four example sections is the default sort  method, alphabetical sort ,\nwhile the second uses the default sort  and then applies the reverse  method to get a\nreverse alphabetical sort .\nThe third and fourth sections are a little more complicated; they use a function to\ncompare the relationships between a and b. The function doesn’t have a name,\nbecause it’s used only in the sort. Y ou have already seen the function named function\nto create an anonymous function; we used it to define a method in a class (the show\nUser  method).\nHere, function  creates an anonymous function meeting the needs of the sort\nmethod. If the function returns a value greater than zero, the sort assumes that b\ncomes before a. If the function returns a value less than zero, the sort assumes that a\ncomes before b. The sort runs this function across all the values in the array to deter‐\nmine their order.\nBy manipulating the value returned ( a - b  in contrast to b - a ), the third and fourth\nsections of Example 15-16  choose between an ascending numerical sort  and a descend‐\ning numerical sort .\nAnd, believe it or not, this represents the end of your introduction to JavaScript. Y ou\nshould now have a core knowledge of the three main technologies covered in this\nbook. The next chapter will look at some advanced techniques used across these tech‐\nnologies, such as pattern matching and input validation.\n368 | Chapter 15: JavaScript Functions, Objects, and Arrays"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 399,
    "text": "Questions\n1.Are JavaScript functions and variable names case-sensitive or -insensitive?\n2.How can you write a function that accepts and processes an unlimited number of\nparameters?\n3.Name a way to return multiple values from a function.\n4.When you’re defining a class, what keyword do you use to refer to the current\nobject?\n5.Do all the methods of a class have to be defined within the class definition?\n6.What keyword is used to create an object?\n7.How can you make a property or method available to all objects in a class\nwithout replicating the property or method within the object?\n8.How can you create a multidimensional array?\n9.What syntax is used to create an associative array?\n10.Write a statement to sort an array of numbers in descending numerical order.\nSee Chapter 15 Answers  in Appendix A  for the answers to these questions.\nQuestions | 369"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 400,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 401,
    "text": "CHAPTER 16\nJavaScript and PHP Validation\nand Error Handling\nWith your solid foundation in both PHP and JavaScript, it’s time to bring these tech‐\nnologies together to create web forms that are as user-friendly as possible.\nWe’ll be using PHP to create the forms and JavaScript to perform client-side valida‐\ntion to ensure that the data is as complete and correct as it can be before it is submit‐\nted. Final validation of the input will then be made by PHP , which will, if necessary,\npresent the form again to the user for further modification.\nIn the process, this chapter will cover validation and regular expressions in both Java‐\nScript and PHP .\nValidating User Input with JavaScript\nJavaScript validation should be considered an assistance more to your users than to\nyour websites because, as I have already stressed many times, you cannot trust any\ndata submitted to your server, even if it has supposedly been validated with Java‐\nScript. This is because hackers can quite easily simulate your web forms and submit\nany data of their choosing.\nAnother reason you cannot rely on JavaScript to perform all your input validation is\nthat some users disable JavaScript, or use browsers that don’t support it.\nSo the best types of validation to do in JavaScript are checking that fields have content\nif they are not to be left empty, ensuring that email addresses conform to the proper\nformat, and ensuring that values entered are within expected bounds.\n371"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 402,
    "text": "The validate.html Document (Part 1)\nLet’s begin with a general sign-up form, common on most sites that offer member‐\nships or registered users. The inputs requested will be forename , surname , username ,\npassword , age, and email address . Example 16-1  provides a good template for such a\nform.\nExample 16-1. A form with JavaScript validation (part 1)\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>An Example Form</title>\n    <style>\n      .signup {\n        border:1px solid #999999;\n        font:  normal 14px helvetica;\n        color: #444444;\n      }\n    </style>\n    <script>\n      function validate(form)\n      {\n        fail  = validateForename(form.forename.value)\n        fail += validateSurname(form.surname.value)\n        fail += validateUsername(form.username.value)\n        fail += validatePassword(form.password.value)\n        fail += validateAge(form.age.value)\n        fail += validateEmail(form.email.value)\n        if   (fail == \"\")   return true\n        else { alert(fail); return false }\n      }\n    </script>\n  </head>\n  <body>\n    <table border=\"0\" cellpadding=\"2\" cellspacing=\"5\" bgcolor=\"#eeeeee\">\n      <th colspan=\"2\" align=\"center\">Signup Form</th>\n      <form method=\"post\" action=\"adduser.php\" onsubmit=\"return validate(this)\">\n        <tr><td>Forename</td>\n          <td><input type=\"text\" maxlength=\"32\" name=\"forename\"></td></tr>\n        <tr><td>Surname</td>\n          <td><input type=\"text\" maxlength=\"32\" name=\"surname\"></td></tr>\n        <tr><td>Username</td>\n          <td><input type=\"text\" maxlength=\"16\" name=\"username\"></td></tr>\n        <tr><td>Password</td>\n          <td><input type=\"text\" maxlength=\"12\" name=\"password\"></td></tr>\n        <tr><td>Age</td>\n          <td><input type=\"text\" maxlength=\"3\"  name=\"age\"></td></tr>\n        <tr><td>Email</td>\n          <td><input type=\"text\" maxlength=\"64\" name=\"email\"></td></tr>\n372 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 403,
    "text": "<tr><td colspan=\"2\" align=\"center\"><input type=\"submit\"\n          value=\"Signup\"></td></tr>\n      </form>\n    </table>\n  </body>\n</html>\nAs it stands, this form will display correctly but will not self-validate, because the\nmain validation functions have not yet been added. Even so, save it as validate.html ,\nand when you call it up in your browser, it will look like Figure 16-1 .\nFigure 16-1. The output from Example 16-1\nLet’s look at how this document is made up. The first few lines set up the document\nand use a little CSS to make the form look a little less plain. The parts of the docu‐\nment related to JavaScript come next and are shown in bold.\nBetween the <script>  and </script>  tags lies a single function called validate  that\nitself calls up  six other functions to validate each of the form’s input fields. We’ll get\nto these functions shortly. For now I’ll just explain that they return either an empty\nstring if a field validates, or an error message if it fails. If there are any errors, the final\nline of the script pops up an alert box to display them.\nUpon passing validation, the validate  function returns a value of true ; otherwise, it\nreturns false . The return values from validate  are important, because if it returns\nfalse , the form is prevented from being submitted. This allows the user to close the\nalert pop up and make changes. If true  is returned, no errors were encountered in\nthe form’s fields and so the form is allowed to be submitted.\nValidating User Input with JavaScript | 373"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 404,
    "text": "The second part of this example features the HTML for the form with each field and\nits name placed within its own row of a table. This is pretty straightforward HTML,\nwith the exception of the onSubmit=\"return validate(this)\"  statement within the\nopening <form>  tag. Using onSubmit , you  can cause a function of your choice to be\ncalled when a form is submitted. That function can perform some checking and\nreturn a value of either true  or false  to signify whether the form should be allowed\nto be submitted.\nThe this  parameter is the current object (i.e., this form) and is passed to the vali\ndate  function just discussed. The validate  function receives this parameter as the\nobject form .\nAs you can see, the only JavaScript used within the form’s HTML is the call to return\nburied in the onSubmit  attribute. Browsers with JavaScript disabled or not available\nwill simply ignore the onSubmit  attribute, and the HTML will display just fine.\nThe validate.html Document (Part 2)\nNow we come to Example 16-2 , a set of six functions that do the actual form-field\nvalidation. I suggest that you type all of this second part and save it in the\n<script> ...</script>  section of Example 16-1 , which you should already have saved\nas validate.html .\nExample 16-2. A form with JavaScript validation (part 2)\nfunction validateForename(field)\n{\n  return (field == \"\") ? \"No Forename was entered.\\n\" : \"\"\n}\nfunction validateSurname(field)\n{\n  return (field == \"\") ? \"No Surname was entered.\\n\" : \"\"\n}\nfunction validateUsername(field)\n{\n  if (field == \"\") return \"No Username was entered.\\n\"\n  else if (field.length < 5)\n    return \"Usernames must be at least 5 characters.\\n\"\n  else if (/[^a-zA-Z0-9_-]/.test(field))\n    return \"Only a-z, A-Z, 0-9, - and _ allowed in Usernames.\\n\"\n  return \"\"\n}\nfunction validatePassword(field)\n{\n  if (field == \"\") return \"No Password was entered.\\n\"\n374 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 405,
    "text": "else if (field.length < 6)\n    return \"Passwords must be at least 6 characters.\\n\"\n  else if (!/[a-z]/.test(field) || ! /[A-Z]/.test(field) ||\n           !/[0-9]/.test(field))\n    return \"Passwords require one each of a-z, A-Z and 0-9.\\n\"\n  return \"\"\n}\nfunction validateAge(field)\n{\n  if (isNaN(field)) return \"No Age was entered.\\n\"\n  else if (field < 18 || field > 110)\n    return \"Age must be between 18 and 110.\\n\"\n  return \"\"\n}\nfunction validateEmail(field)\n{\n  if (field == \"\") return \"No Email was entered.\\n\"\n    else if (!((field.indexOf(\".\") > 0) &&\n               (field.indexOf(\"@\") > 0)) ||\n              /[^a-zA-Z0-9.@_-]/.test(field))\n      return \"The Email address is invalid.\\n\"\n  return \"\"\n}\nWe’ll go through each of these functions in turn, starting with validateForename , so\nyou can see how validation works.\nValidating the forename\nvalidateForename  is quite a short function that accepts the parameter field , which\nis the value of the forename passed to it by the validate  function.\nIf this value is the empty string, an error message is returned; otherwise, an empty\nstring is returned to signify that no error was encountered.\nIf the user entered spaces in this field, it would be accepted by validateForename ,\neven though it’s empty for all intents and purposes. Y ou can fix this by adding an\nextra statement to trim whitespace from the field before checking whether it’s empty,\nuse a regular expression to make sure there’s something besides whitespace in the\nfield, or—as I do here—just let the user make the mistake and allow the PHP pro‐\ngram to catch it on the server.\nValidating the surname\nThe validateSurname  function is almost identical to validateForename  in that an\nerror is returned only if the surname supplied was an empty string. I chose not to\nValidating User Input with JavaScript | 375"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 406,
    "text": "limit the characters allowed in either of the name fields to allow for possibilities such\nas non-English and accented characters.\nValidating the username\nThe validateUsername  function is a little more interesting, because it has a more\ncomplicated job. It has to allow through only the characters a-z, A-Z, 0-9, _ and -,\nand ensure that usernames are at least five characters long.\nThe if...else  statements commence by returning an error if field  has not been fil‐\nled in. If it’s not the empty string, but is fewer than five characters in length, another\nerror message is returned.\nThen the JavaScript test  function is called, passing a regular expression (which\nmatches any character that is not one of those allowed) to be matched against field\n(see “Regular Expressions” on page 377). If even one character that isn’t one of the\nacceptable characters is encountered, the test  function returns true , and so valida\nteUser  returns an error string.\nValidating the password\nSimilar techniques are used in the validatePassword  function. First the function\nchecks whether field  is empty, and if it is, returns an error. Next, an error message is\nreturned if a password is shorter than six characters.\nOne of the requirements we’re imposing on passwords is that they must have at least\none each of a lowercase, uppercase, and numerical character, so the test  function is\ncalled three times, once for each of these cases. If any one of them returns false , one\nof the requirements was not met and so an error message is returned. Otherwise, the\nempty string is returned to signify that the password was OK.\nValidating the age\nvalidateAge  returns an error message if field  is not a number (determined by a call\nto the isNaN  function), or if the age entered is lower than 18 or greater than 110. Y our\napplications may well have different or no age requirements. Again, upon successful\nvalidation, the empty string is returned.\nValidating the email\nIn the last and most complicated example, the email address is validated with valida\nteEmail . After checking whether anything was actually entered, and returning an\nerror message if it wasn’t, the function calls the JavaScript indexOf  function twice.\nThe first time a check is made to ensure there is a period ( .) somewhere from at least\nthe second character of the field, and the second checks that an @ symbol appears\nsomewhere at or after the second character.\n376 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 407,
    "text": "If those two checks are satisfied, the test  function is called to see whether any disal‐\nlowed characters appear in the field. If any of these tests fail, an error message is\nreturned. The allowed characters in an email address are uppercase and lowercase let‐\nters, numbers, and the _, -, period, and @ characters, as detailed in the regular expres‐\nsion passed to the test  method. If no errors are found, the empty string is returned\nto indicate successful validation. On the last line, the script and document are closed.\nFigure 16-2  shows the result of the user clicking the Signup button without having\ncompleted any fields.\nFigure 16-2. JavaScript form validation in action\nUsing a separate JavaScript file\nOf course, because they are generic in construction and could apply to many types of\nvalidations you might require, these six functions make ideal candidates for moving\nout into a separate JavaScript file. Y ou could name the file something like vali‐\ndate_functions.js  and include it right after the initial script section in Example 16-1 ,\nusing the following statement:\n<script src=\"validate_functions.js\"></script>\nRegular Expressions\nLet’s look a little more closely at the pattern matching  we have been doing. We’ve\nachieved it using regular expressions , which are supported by both JavaScript and\nPHP . They make it possible to construct the most powerful of pattern-matching algo‐\nrithms within a single expression.\nRegular Expressions | 377"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 408,
    "text": "Matching Through Metacharacters\nEvery regular expression must be enclosed in slashes. Within these slashes, certain\ncharacters have special meanings; they are called metacharacters . For instance, an\nasterisk ( *) has  a meaning similar to what you have seen if you use a shell or Win‐\ndows command prompt (but not quite the same). An asterisk means, “The text you’re\ntrying to match may have any number of the preceding characters—or none at all. ”\nFor instance, let’s say you’re looking for the name Le Guin  and know that someone\nmight spell it with or without a space. Because the text is laid out strangely (for\ninstance, someone may have inserted extra spaces to right-justify lines), you could\nhave to search for a line such as this:\nThe   difficulty  of   classifying Le      Guin's    works\nSo you need to match LeGuin , as well as Le and Guin  separated by any number of\nspaces. The solution is to follow a space with an asterisk:\n/Le *Guin/\nThere’s a lot more than the name Le Guin  in the line, but that’s OK. As long as the\nregular expression matches some part of the line, the test  function returns a true\nvalue. What if it’s important to make sure the line contains nothing but Le Guin ? I’ll\nshow you how to ensure that later.\nSuppose that you know there is always at least one space. In that case, you could use\nthe plus sign ( +), because it requires at least one of the preceding characters to be\npresent:\n/Le +Guin/\nFuzzy Character Matching\nThe dot ( .) is particularly useful, because it can match anything except a newline.\nSuppose that you are looking for HTML tags, which start with < and end with >. A\nsimple way to do so is shown here:\n/<.*>/\nThe dot matches any character, and the * expands it to match zero or more charac‐\nters, so this is saying, “Match anything that lies between < and >, even if there’s noth‐\ning. ” Y ou will match <>, <em> , <br> , and so on. But if you don’t want to match the\nempty case, <>, you should use + instead of *, like this:\n/<.+>/\nThe plus sign expands the dot to match one or more characters, saying, “Match any‐\nthing that lies between < and > as long as there’s at least one character between them. ”\nY ou will match <em>  and </em> , <h1>  and </h1> , and tags with attributes, such as this:\n378 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 409,
    "text": "<a href=\"www.mozilla.org\">\nUnfortunately, the plus sign keeps on matching up to the last > on the line, so you\nmight end up with this:\n<h1><b>Introduction</b></h1>\nA lot more than one tag! I’ll show a better solution later in this section.\nIf you use the dot on its own between the angle brackets, without\nfollowing it with either a + or *, then it matches a single character;\nyou will match <b> and <i> but not <em>  or <textarea> .\nIf you want to match the dot character itself ( .), you have to escape it by placing a\nbackslash ( \\) before it, because otherwise it’s a metacharacter and matches anything.\nAs an example, suppose you want to match the floating-point number 5.0. The regu‐\nlar expression is as follows:\n/5\\.0/\nThe backslash can escape any metacharacter, including another backslash (in case\nyou’re trying to match a backslash in text). However, to make things a bit confusing,\nyou’ll see later how backslashes sometimes give the following character a special\nmeaning.\nWe just matched a floating-point number. But perhaps you want to match 5. as well\nas 5.0, because both mean the same thing as a floating-point number. Y ou also want\nto match 5.00 , 5.000 , and so forth—any number of zeros is allowed. Y ou can do this\nby adding an asterisk, as you’ve seen:\n/5\\.0*/\nGrouping Through Parentheses\nSuppose you want to match powers  of increments of units, such as kilo, mega, giga,\nand tera. In other words, you want all the following to match:\n1,000\n1,000,000\n1,000,000,000\n1,000,000,000,000\n...\nThe plus sign works here, too, but you need to group the string ,000  so the plus sign\nmatches the whole thing. The regular expression is as follows:\n/1(,000)+ /\nRegular Expressions | 379"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 410,
    "text": "The parentheses mean “treat this as a group when you apply something such as a plus\nsign. ” 1,00,000  and 1,000,00  won’t match because the text must have a 1 followed by\none or more complete groups of a comma followed by three zeros.\nThe space after the + character indicates that the match must end when a space is\nencountered. Without it, 1,000,00  would incorrectly match because only the first\n1,000  would be taken into account, and the remaining ,00 would be ignored. Requir‐\ning a space afterward ensures that matching will continue right through to the end of\na number.\nCharacter Classes\nSometimes you want to match something fuzzy, but not so broad that you want to use\na dot. Fuzziness is the great strength of regular expressions: they allow you to be as\nprecise or vague as you want.\nOne of the key features supporting fuzzy matching is the pair of  square brackets, [].\nIt matches a single character, like a dot, but inside the brackets you put a list of things\nthat can match. If any of those characters appears, the text matches. For instance, if\nyou wanted to match both the American spelling gray and the British spelling grey,\nyou could specify the following:\n/gr[ae]y/\nAfter the gr in the text you’re matching, there can be either an a or an e. But there\nmust be only one of them: whatever you put inside the brackets matches exactly one\ncharacter. The group of characters inside the brackets is called a character class .\nIndicating a Range\nInside the brackets, you can use a hyphen ( -) to indicate a range. One very common\ntask is matching a single digit, which you can do with a range as follows:\n/[0-9]/\nDigits are such a common item in regular expressions that a single character is pro‐\nvided to represent them: \\d. Y ou can use it in place of the bracketed regular expres‐\nsion to match a digit:\n/\\d/\nNegation\nOne other important feature of the square brackets is negation  of a character class.\nY ou can turn the whole character class on its head by placing a caret ( ^) after the\nopening bracket. Here it means, “Match any characters except  the following. ” So let’s\nsay you want to find instances of Yahoo  that lack the following exclamation point.\n380 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 411,
    "text": "(The name of the company officially contains an exclamation point!) Y ou could do it\nas follows:\n/Yahoo[^!]/\nThe character class consists of a single character—an exclamation point—but it is\ninverted by the preceding ^. This is actually not a great solution to the problem—for\ninstance, it fails if Yahoo  is at the end of the line, because then it’s not followed by\nanything , whereas the brackets must match a character. A better solution involves\nnegative lookahead  (matching something that is not followed by anything else), but\nthat’s beyond the scope of this book.\nSome More-Complicated Examples\nWith an understanding of character classes and negation,  you’re ready now to see a\nbetter solution to the problem of matching an HTML tag. This solution avoids going\npast the end of a single tag, but still matches tags such as <em>  and </em>  as well as\ntags with attributes such as this:\n<a href=\"www.mozilla.org\">\nHere is one solution:\n/<[^>]+>/\nThat regular expression may look like I just dropped my teacup on the keyboard, but\nit is perfectly valid and very useful. Let’s break it apart. Figure 16-3  shows the various\nelements, which I’ll describe one by one.\nFigure 16-3. Breakdown of a typical regular expression\nThe elements are as follows:\n/\nOpening slash that indicates this is a regular expression.\n<\nOpening bracket of an HTML tag. This is matched exactly; it is not a metacharacter.\n[^>]\nCharacter class. The embedded ^> means “match anything except a closing angle\nbracket. ”\nRegular Expressions | 381"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 412,
    "text": "+\nAllows any number of characters to match the previous [^>] , as long as there is at\nleast one of them.\n>\nClosing bracket of an HTML tag. This is matched exactly.\n/\nClosing slash that indicates the end of the regular expression.\nAnother solution to the problem of matching HTML tags is to use\na nongreedy operation. By default, pattern matching is greedy,\nreturning the longest match possible. Nongreedy matching finds\nthe shortest possible match, and its use is beyond the scope of this\nbook, but there are more details at http://oreilly.com/catalog/regex/\nchapter/ch04.html .\nWe are going to look now at one of the expressions from Example 16-1 , where the\nvalidateUsername  function is used:\n/[^a-zA-Z0-9_-]/\nFigure 16-4  shows the various elements.\nFigure 16-4. Breakdown of the validateUsername regular expression\nLet’s look at these elements in detail:\n/\nOpening slash that indicates this is a regular expression.\n[\nOpening bracket that starts a character class.\n^\nNegation character: inverts everything else between the brackets.\n382 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 413,
    "text": "a-z\nRepresents any lowercase letter.\nA-Z\nRepresents any uppercase letter.\n0-9\nRepresents any digit.\n_\nAn underscore.\n-\nA dash.\n]\nClosing bracket that ends a character class.\n/\nClosing slash that indicates the end of the regular expression.\nThere are two other important metacharacters. They “anchor” a regular expression by\nrequiring that it appear in a particular place. If a  caret (^) appears at the beginning of\nthe regular expression, the expression has to appear at the beginning of a line of text;\notherwise, it doesn’t match.  Similarly, if a dollar sign ( $) appears at the end of the reg‐\nular expression, the expression has to appear at the end of a line of text.\nIt may be somewhat confusing that ^ can mean “negate the charac‐\nter class” inside square brackets and “match the beginning of the\nline” if it’s at the beginning of the regular expression. Unfortunately,\nthe same character is used for two different things, so take care\nwhen using it.\nWe’ll finish our exploration of regular expression basics by answering a question\nraised earlier: suppose you want to make sure there is nothing extra on a line besides\nthe regular expression? What if you want a line that has “Le Guin” and nothing else?\nWe can do that by amending the earlier regular expression to anchor the two ends:\n/^Le *Guin$/\nSummary of Metacharacters\nTable 16-1  shows the metacharacters available in regular expressions.\nRegular Expressions | 383"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 414,
    "text": "Table 16-1. Regular expression metacharacters\nMetacharacters Description\n/ Begins and ends the regular expression\n. Matches any single character except the newline\nelement* Matches element  zero or more times\nelement+ Matches element  one or more times\nelement? Matches element  zero or one times\n[characters ] Matches a character out of those contained within the brackets\n[^characters ] Matches a single character that is not contained within the brackets\n(regex) Treats the regex  as a group for counting or a following *, +, or ?\nleft|right Matches either left  or right\n[l-r] Matches a range of characters between l and r\n^ Requires match to be at the string’s start\n$ Requires match to be at the string’s end\n\\b Matches a word boundary\n\\B Matches where there is not a word boundary\n\\d Matches a single digit\n\\D Matches a single nondigit\n\\n Matches a newline character\n\\s Matches a whitespace character\n\\S Matches a nonwhitespace character\n\\t Matches a tab character\n\\w Matches a word character ( a-z , A-Z , 0-9 , and _)\n\\W Matches a nonword character (anything but a-z , A-Z , 0-9 , and _)\n\\x x (useful if x is a metacharacter, but you really want x)\n{n} Matches exactly n times\n{n,} Matches n times or more\n{min,max} Matches at least min  and at most max  times\nProvided with this  table, and looking again at the expression /[^a-zA-Z0-9_]/ , you\ncan see that it could easily be shortened to /[^\\w]/  because the single metacharacter\n\\w (with a lowercase w) specifies the characters a-z, A-Z, 0-9, and _.\nIn fact, we can be cleverer than that, because the metacharacter \\W (with an uppercase\nW) specifies all characters except  for a-z, A-Z, 0-9, and _. Therefore, we could also\ndrop the ^ metacharacter and simply use /[\\W]/  for the expression.\n384 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 415,
    "text": "To give you more ideas of how this all works, Table 16-2  shows a range of expressions\nand the patterns they match.\nTable 16-2. Some example regular expressions\nExample Matches\nr The first  r in The quick brown\nrec[ei][ei]ve Either of receive  or recieve  (but also receeve  or reciive )\nrec[ei]{2}ve Either of receive  or recieve  (but also receeve  or reciive )\nrec(ei|ie)ve Either of receive  or recieve  (but not receeve  or reciive )\ncat The word cat in I like cats and dogs\ncat|dog Either of the words cat or dog in I like cats and dogs\n\\. . (the \\ is necessary because . is a metacharacter)\n5\\.0* 5., 5.0, 5.00 , 5.000 , etc.\n[a-f] Any of the characters a, b, c, d, e or f\ncats$ Only the final  cats  in My cats are friendly cats\n^my Only the first  my in my cats are my pets\n\\d{2,3} Any two- or three-digit number ( 00 through 999)\n7(,000)+ 7,000 ; 7,000,000 ; 7,000,000,000 ; 7,000,000,000,000 ; etc.\n[\\w]+ Any word of one or more characters\n[\\w]{5} Any five-letter  word\nGeneral Modifiers\nSome additional modifiers are available for regular expressions:\n•/g enables global  matching. When using a replace function, specify this modifier\nto replace all matches, rather than only the first one.\n•/i makes the regular expression match case-insensitive. Thus, instead of /[a-zA-\nZ]/, you could specify /[a-z]/i  or /[A-Z]/i .\n•/m enables multiline mode, in which the caret ( ^) and dollar ( $) match before and\nafter any newlines in the subject string. Normally, in a multiline string, ^ matches\nonly at the start of the string, and $ matches only at the end of the string.\nFor example, the expression /cats/g  will match both occurrences of the word cats in\nthe sentence I like cats, and cats like me . Similarly, /dogs/gi  will match both occur‐\nrences of the word dogs  (Dogs  and dogs ) in the sentence Dogs like other dogs , because\nyou can use these specifiers together.\nRegular Expressions | 385"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 416,
    "text": "Using Regular Expressions in JavaScript\nIn JavaScript, you will use regular expressions mostly in two methods: test  (which\nyou have already seen) and replace . Whereas test  just tells you whether its argu‐\nment matches the regular expression, replace  takes a second parameter: the string to\nreplace the text that matches. Like most functions, replace  generates a new string as\na return value; it does not change the input.\nTo compare the two methods, the following statement just returns true  to let us\nknow that the word cats appears at least once somewhere within the string:\ndocument.write(/cats/i.test(\"Cats are funny. I like cats.\"))\nBut the following statement replaces both occurrences of the word cats with the word\ndogs , printing the result. The search has to be global ( /g) to find all occurrences, and\ncase-insensitive ( /i) to find the capitalized Cats :\ndocument.write(\"Cats are friendly. I like cats.\".replace(/cats/gi,\"dogs\"))\nIf you try out the statement, you’ll see a limitation of replace : because it replaces text\nwith exactly the string you tell it to use, the first word Cats  is replaced by dogs  instead\nof Dogs .\nUsing Regular Expressions in PHP\nThe most common regular expression functions that you are likely to use in PHP are\npreg_match , preg_match_all , and preg_replace .\nTo test whether the word cats appears anywhere within a string, in any combination\nof upper- and lowercase, you could use preg_match  like this:\n$n = preg_match(\"/cats/i\", \"Cats are crazy. I like cats.\");\nBecause PHP uses 1 for TRUE  and 0 for FALSE , the preceding statement sets $n to 1.\nThe first argument is the regular expression, and the second is the text to match. But\npreg_match  is actually a good deal more powerful and complicated, because it takes a\nthird argument that shows what text matched:\n$n = preg_match(\"/cats/i\", \"Cats are curious. I like cats.\", $match);\necho \"$n Matches: $match[0]\";\nThe third argument is an array (here, given the name $match ). The function puts the\ntext that matches into the first element, so if the match is successful, you can find the\ntext that matched in $match[0] . In this example, the output lets us know that the\nmatched text was capitalized:\n1 Matches: Cats\nIf you wish to locate all matches, you use the preg_match_all  function, like this:\n386 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 417,
    "text": "$n = preg_match_all(\"/cats/i\", \"Cats are strange. I like cats.\", $match);\necho \"$n Matches: \";\nfor ($j=0 ; $j < $n ; ++$j) echo $match[0][$j].\" \";\nAs before, $match  is passed to the function and the element $match[0]  is assigned the\nmatches made, but this time as a subarray. To display the subarray, this example iter‐\nates through it with a for loop.\nWhen you want to replace part of a string, you can use preg_replace  as shown here.\nThis example replaces all occurrences of the word cats with the word dogs , regardless\nof case:\necho preg_replace(\"/cats/i\", \"dogs\", \"Cats are furry. I like cats.\");\nThe subject of regular expressions is a large one, and entire books\nhave been written about it. If you would like further information, I\nsuggest the Wikipedia entry , or Jeffrey Friedl’s excellent book Mas‐\ntering Regular Expressions .\nRedisplaying a Form After PHP Validation\nOK, back to form validation. So far we’ve created the  HTML document validate.html ,\nwhich  will post through to the PHP program adduser.php , but only if JavaScript vali‐\ndates the fields or if JavaScript is disabled or unavailable.\nSo now it’s time to create adduser.php  to receive the posted form, perform its own val‐\nidation, and then present the form again to the visitor if the validation fails.\nExample 16-3  contains the code that you should type and save (or download from the\ncompanion website).\nExample 16-3. The adduser.php program\n<?php // adduser.php\n  // The PHP code\n  $forename = $surname = $username = $password = $age = $email = \"\";\n  if (isset($_POST['forename']))\n    $forename = fix_string($_POST['forename']);\n  if (isset($_POST['surname']))\n    $surname  = fix_string($_POST['surname']);\n  if (isset($_POST['username']))\n    $username = fix_string($_POST['username']);\n  if (isset($_POST['password']))\n    $password = fix_string($_POST['password']);\n  if (isset($_POST['age']))\n    $age      = fix_string($_POST['age']);\nRedisplaying a Form After PHP Validation | 387"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 418,
    "text": "if (isset($_POST['email']))\n    $email    = fix_string($_POST['email']);\n  $fail  = validate_forename($forename);\n  $fail .= validate_surname($surname);\n  $fail .= validate_username($username);\n  $fail .= validate_password($password);\n  $fail .= validate_age($age);\n  $fail .= validate_email($email);\n  echo \"<!DOCTYPE html>\\n<html><head><title>An Example Form</title>\";\n  if ($fail == \"\")\n  {\n    echo \"</head><body>Form data successfully validated:\n      $forename, $surname, $username, $password, $age, $email.</body></html>\";\n    // This is where you would enter the posted fields into a database,\n    // preferably using hash encryption for the password.\n    exit;\n  }\n  echo <<<_END\n    <!-- The HTML/JavaScript section -->\n    <style>\n      .signup {\n        border: 1px solid #999999;\n      font:   normal 14px helvetica; color:#444444;\n      }\n    </style>\n    <script>\n      function validate(form)\n      {\n        fail  = validateForename(form.forename.value)\n        fail += validateSurname(form.surname.value)\n        fail += validateUsername(form.username.value)\n        fail += validatePassword(form.password.value)\n        fail += validateAge(form.age.value)\n        fail += validateEmail(form.email.value)\n        if (fail == \"\")     return true\n        else { alert(fail); return false }\n      }\n      function validateForename(field)\n      {\n        return (field == \"\") ? \"No Forename was entered.\\n\" : \"\"\n      }\n388 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 419,
    "text": "function validateSurname(field)\n      {\n        return (field == \"\") ? \"No Surname was entered.\\n\" : \"\"\n      }\n      function validateUsername(field)\n      {\n        if (field == \"\") return \"No Username was entered.\\n\"\n        else if (field.length < 5)\n          return \"Usernames must be at least 5 characters.\\n\"\n        else if (/[^a-zA-Z0-9_-]/.test(field))\n          return \"Only a-z, A-Z, 0-9, - and _ allowed in Usernames.\\n\"\n        return \"\"\n      }\n      function validatePassword(field)\n      {\n        if (field == \"\") return \"No Password was entered.\\n\"\n        else if (field.length < 6)\n          return \"Passwords must be at least 6 characters.\\n\"\n        else if (!/[a-z]/.test(field) || ! /[A-Z]/.test(field) ||\n                 !/[0-9]/.test(field))\n          return \"Passwords require one each of a-z, A-Z and 0-9.\\n\"\n        return \"\"\n      }\n      function validateAge(field)\n      {\n        if (isNaN(field)) return \"No Age was entered.\\n\"\n        else if (field < 18 || field > 110)\n          return \"Age must be between 18 and 110.\\n\"\n        return \"\"\n      }\n      function validateEmail(field)\n      {\n        if (field == \"\") return \"No Email was entered.\\n\"\n          else if (!((field.indexOf(\".\") > 0) &&\n                     (field.indexOf(\"@\") > 0)) ||\n                    /[^a-zA-Z0-9.@_-]/.test(field))\n            return \"The Email address is invalid.\\n\"\n        return \"\"\n      }\n    </script>\n  </head>\n  <body>\n    <table border=\"0\" cellpadding=\"2\" cellspacing=\"5\" bgcolor=\"#eeeeee\">\n      <th colspan=\"2\" align=\"center\">Signup Form</th>\n        <tr><td colspan=\"2\">Sorry, the following errors were found<br>\nRedisplaying a Form After PHP Validation | 389"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 420,
    "text": "in your form: <p><font color=red size=1><i>$fail</i></font></p>\n        </td></tr>\n      <form method=\"post\" action=\"adduser.php\" onSubmit=\"return validate(this)\">\n        <tr><td>Forename</td>\n          <td><input type=\"text\" maxlength=\"32\" name=\"forename\" value=\"$forename\">\n        </td></tr><tr><td>Surname</td>\n          <td><input type=\"text\" maxlength=\"32\" name=\"surname\"  value=\"$surname\">\n        </td></tr><tr><td>Username</td>\n          <td><input type=\"text\" maxlength=\"16\" name=\"username\" value=\"$username\">\n        </td></tr><tr><td>Password</td>\n          <td><input type=\"text\" maxlength=\"12\" name=\"password\" value=\"$password\">\n        </td></tr><tr><td>Age</td>\n          <td><input type=\"text\" maxlength=\"3\"  name=\"age\"      value=\"$age\">\n        </td></tr><tr><td>Email</td>\n          <td><input type=\"text\" maxlength=\"64\" name=\"email\"    value=\"$email\">\n        </td></tr><tr><td colspan=\"2\" align=\"center\"><input type=\"submit\"\n          value=\"Signup\"></td></tr>\n      </form>\n    </table>\n  </body>\n</html>\n_END;\n  // The PHP functions\n  function validate_forename($field)\n  {\n    return ($field == \"\") ? \"No Forename was entered<br>\": \"\";\n  }\n  function validate_surname($field)\n  {\n    return($field == \"\") ? \"No Surname was entered<br>\" : \"\";\n  }\n  function validate_username($field)\n  {\n    if ($field == \"\") return \"No Username was entered<br>\";\n    else if (strlen($field) < 5)\n      return \"Usernames must be at least 5 characters<br>\";\n    else if (preg_match(\"/[^a-zA-Z0-9_-]/\", $field))\n      return \"Only letters, numbers, - and _ in usernames<br>\";\n    return \"\";\n  }\n  function validate_password($field)\n  {\n    if ($field == \"\") return \"No Password was entered<br>\";\n    else if (strlen($field) < 6)\n      return \"Passwords must be at least 6 characters<br>\";\n390 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 421,
    "text": "else if (!preg_match(\"/[a-z]/\", $field) ||\n             !preg_match(\"/[A-Z]/\", $field) ||\n             !preg_match(\"/[0-9]/\", $field))\n      return \"Passwords require 1 each of a-z, A-Z and 0-9<br>\";\n    return \"\";\n  }\n  function validate_age($field)\n  {\n    if ($field == \"\") return \"No Age was entered<br>\";\n    else if ($field < 18 || $field > 110)\n      return \"Age must be between 18 and 110<br>\";\n    return \"\";\n  }\n  function validate_email($field)\n  {\n    if ($field == \"\") return \"No Email was entered<br>\";\n      else if (!((strpos($field, \".\") > 0) &&\n                 (strpos($field, \"@\") > 0)) ||\n                  preg_match(\"/[^a-zA-Z0-9.@_-]/\", $field))\n        return \"The Email address is invalid<br>\";\n    return \"\";\n  }\n  function fix_string($string)\n  {\n    if (get_magic_quotes_gpc()) $string = stripslashes($string);\n    return htmlentities ($string);\n  }\n?>\nIn this example, all input is sanitized prior to use, even passwords,\nwhich—since they may contain characters used to format HTML—\nwill be changed into HTML entities. For example, & will become\n&amp;  and < will become &lt; , and so on. If you will be using a\nhash function to store encrypted passwords, this will not be an\nissue as long as when you later check the password entered, it is\nsanitized in the same way, so that the same inputs will be com‐\npared.\nThe result of submitting the form with JavaScript disabled (and two fields incorrectly\ncompleted) is shown in Figure 16-5 .\nRedisplaying a Form After PHP Validation | 391"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 422,
    "text": "Figure 16-5. The form as represented after  PHP validation fails\nI have put the PHP section of this code (and changes to the HTML section) in a bold\ntypeface so that you can more clearly see the difference between this and\nExample 16-1  and Example 16-2 .\nIf you browsed through this example (or typed it or downloaded it from the http://\nlpmj.net  website), you’ll have seen that the PHP code is almost a clone of the Java‐\nScript code; the same regular expressions are used to validate each field in very simi‐\nlar functions.\nBut there are a couple of things to note. First, the fix_string  function (right at the\nend) is used to sanitize each field and prevent any attempts at code injection from\nsucceeding.\nAlso, you will see that the HTML from Example 16-1  has been repeated in the PHP\ncode within a <<<_END..._END;  structure, displaying the form with the values that\nthe visitor entered the previous time. Y ou do this by simply adding an extra value\nparameter  to each <input>  tag (such as value=\"$forename\" ). This courtesy is highly\nrecommended so that the user has to edit only the previously entered values, and\ndoesn’t have to type the fields all over again.\n392 | Chapter 16: JavaScript and PHP Validation and Error Handling"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 423,
    "text": "In the real world, you probably wouldn’t start with an HTML form\nsuch as the one in Example 16-1 . Instead, you’ d be more likely to go\nstraight ahead and write the PHP program in Example 16-3 , which\nincorporates all the HTML. And, of course, you’ d also need to\nmake a minor tweak for the case when it’s the first time the pro‐\ngram is called up, to prevent it from displaying errors when all the\nfields are empty. Y ou also might drop the six JavaScript functions\ninto their own .js file for separate inclusion.\nNow that you’ve seen how to bring all of PHP , HTML, and JavaScript together, the\nnext chapter will introduce Ajax (Asynchronous JavaScript and XML), which uses\nJavaScript calls to the server in the background to seamlessly update portions of a\nweb page, without having to resubmit the entire page to the web server.\nQuestions\n1.What JavaScript method can you use to send a form for validation prior to sub‐\nmitting it?\n2.What JavaScript method is used to match a string against a regular expression?\n3.Write a regular expression to match any characters that are not in a word, as\ndefined by regular expression syntax.\n4.Write a regular expression to match either of the words fox or fix.\n5.Write a regular expression to match any single word followed by any nonword\ncharacter.\n6.Using regular expressions, write a JavaScript function to test whether the word\nfox exists in the string The quick brown fox .\n7.Using regular expressions, write a PHP function to replace all occurrences of the\nword the in The cow jumps over the moon  with the word my.\n8.What HTML attribute is used to precomplete form fields with a value?\nSee Chapter 16 Answers  in Appendix A  for the answers to these questions.\nQuestions | 393"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 424,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 425,
    "text": "CHAPTER 17\nUsing Ajax\nThe term Ajax  was first coined in 2005. It stands for Asynchronous JavaScript and\nXML , which, in simple terms, means using a set of methods built in to JavaScript to\ntransfer data between the browser and a server in the background. An excellent\nexample of this technology is Google Maps (see Figure 17-1 ), in which new sections\nof a map are downloaded from the server when needed, without requiring a page\nrefresh.\nUsing Ajax not only substantially reduces the amount of data that must be sent back\nand forth, but also makes web pages seamlessly dynamic—allowing them to behave\nmore like self-contained applications. The results are a much improved user interface\nand better responsiveness.\nWhat Is Ajax?\nThe beginnings of Ajax as used today started with the release of Internet Explorer 5 in\n1999, which introduced a new ActiveX object, XMLHttpRequest . ActiveX is Micro‐\nsoft’s technology for signing plug-ins that install additional software to your com‐\nputer. Other browser developers later followed suit, but rather than using ActiveX,\nthey all implemented the feature as a native part of the JavaScript interpreter.\nHowever, even before then, an  early form of Ajax had already surfaced that used hid‐\nden frames on a page that interacted with the server in the background. Chat rooms\nwere early adopters of this technology, using it to poll for and display new message\nposts without requiring page reloads.\nSo let’s see how to implement Ajax by using JavaScript.\n395"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 426,
    "text": "Figure 17-1. Google Maps is an excellent example of Ajax in action\nUsing XMLHttpRequest\nBecause of the differences between  browser implementations of XMLHttpRequest , you\nmust create a special function in order to ensure that your code will work on all\nmajor browsers.\nTo do this, you must understand the three ways of creating an XMLHttpRequest\nobject:\n•IE 5: request = new ActiveXObject(\"Microsoft.XMLHTTP\")\n•IE 6+: request = new ActiveXObject(\"Msxml2.XMLHTTP\")\n•All others: request = new XMLHttpRequest()\nThis is the case because Microsoft chose to implement a change with the release of\nInternet Explorer 6, while all other browsers use a slightly different method. There‐\nfore, the code in Example 17-1  will work for all major browsers released over the last\nfew years.\n396 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 427,
    "text": "Example 17-1. A cross-browser Ajax function\n<script>\n  function ajaxRequest()\n  {\n    try // Non IE Browser?\n    {   // Yes\n      var request = new XMLHttpRequest()\n    }\n    catch(e1)\n    {\n      try // IE 6+?\n      {   // Yes\n        request = new ActiveXObject(\"Msxml2.XMLHTTP\")\n      }\n      catch(e2)\n      {\n        try // IE 5?\n        {   // Yes\n          request = new ActiveXObject(\"Microsoft.XMLHTTP\")\n        }\n        catch(e3) // There is no AJAX Support\n        {\n          request = false\n        }\n      }\n    }\n    return request\n  }\n</script>\nY ou may remember the introduction to error handling in the  previous chapter, using\nthe try...catch  construct. Example 17-1  is a perfect illustration of its utility, because\nit uses the try keyword to execute the non-IE Ajax command, and upon success,\njumps on to the final return  statement, where the new object is returned.\nOtherwise, a catch  traps the error, and the subsequent command is executed. Again,\nupon success, the new object is returned; otherwise, the final of the three commands\nis tried. If that attempt fails, then the browser doesn’t support Ajax and the request\nobject is set to false ; otherwise, the object is returned. So there you have it: a cross-\nbrowser Ajax request function that you may wish to add to your library of useful\nJavaScript functions.\nOK, so now you have a means of creating an XMLHttpRequest  object, but what can\nyou do with these objects? Well, each one comes with a set of properties (variables)\nand methods (functions), which  are detailed in Table 17-1  and Table 17-2 .\nUsing XMLHttpRequest | 397"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 428,
    "text": "Table 17-1. An XMLHttpRequest object’s properties\nProperty Description\nonreadystatechange Specifies  an event-handling function to be called whenever the readyState  property of an\nobject changes.\nreadyState An integer property that reports on the status of a request. It can have any of these values: 0 =\nUninitialized, 1 = Loading, 2 = Loaded, 3 = Interactive, and 4 = Completed.\nresponseText The data returned by the server in text format.\nresponseXML The data returned by the server in XML format.\nstatus The HTTP status code returned by the server.\nstatusText The HTTP status text returned by the server.\nTable 17-2. An XMLHttpRequest object’s methods\nMethod Description\nabort() Aborts the current request.\ngetAllResponseHeaders() Returns all headers as a string.\ngetResponseHeader( param) Returns the value of param  as a string.\nopen('method', 'url', 'asynch') Specifies  the HTTP method to use (Get or Post), the target URL, and\nwhether the request should be handled asynchronously ( true  or\nfalse ).\nsend(data) Sends data  to the target server using the specified  HTTP method.\nsetRequestHeader(' param', 'value') Sets a header with a parameter/value pair.\nThese properties and methods give you control over what data you send to the server\nand receive back, as well as a choice of send and receive methods. For example, you\ncan choose whether to request data in plain text (which could include HTML and\nother tags) or in XML format. Y ou can also decide whether you wish to use the Post\nor Get method to send to the server.\nLet’s look at the Post method first by creating a very simple pair of documents: a com‐\nbination of HTML and JavaScript, and a PHP program to interact via Ajax with the\nfirst. Hopefully you’ll enjoy these examples, because they illustrate just what Web 2.0\nand Ajax are all about. With a few lines of JavaScript, they request a web document\nfrom a third-party web server, which is then returned to the browser by your server\nand placed within a section of the current document.\nYour First Ajax Program\nType and save the code in Example 17-2  as urlpost.html , but don’t load it into your\nbrowser yet.\n398 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 429,
    "text": "Example 17-2. urlpost.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>AJAX Example</title>\n  </head>\n  <body style='text-align:center'>\n    <h1>Loading a web page into a DIV</h1>\n    <div id='info'>This sentence will be replaced</div>\n    <script>\n      params  = \"url=amazon.com/gp/aw\"\n      request = new ajaxRequest()\n      request.open(\"POST\", \"urlpost.php\", true)\n      request.setRequestHeader(\"Content-type\",\n        \"application/x-www-form-urlencoded\")\n      request.setRequestHeader(\"Content-length\", params.length)\n      request.setRequestHeader(\"Connection\", \"close\")\n      request.onreadystatechange = function()\n      {\n        if (this.readyState == 4)\n        {\n          if (this.status == 200)\n          {\n            if (this.responseText != null)\n            {\n              document.getElementById('info').innerHTML =\n                this.responseText\n            }\n            else alert(\"Ajax error: No data received\")\n          }\n          else alert( \"Ajax error: \" + this.statusText)\n        }\n      }\n      request.send(params)\n      function ajaxRequest()\n      {\n        try\n        {\n          var request = new XMLHttpRequest()\n        }\n        catch(e1)\n        {\n          try\n          {\n            request = new ActiveXObject(\"Msxml2.XMLHTTP\")\n          }\nUsing XMLHttpRequest | 399"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 430,
    "text": "catch(e2)\n          {\n            try\n            {\n              request = new ActiveXObject(\"Microsoft.XMLHTTP\")\n            }\n            catch(e3)\n            {\n              request = false\n            }\n          }\n        }\n        return request\n      }\n    </script>\n  </body>\n</html>\nLet’s go through this document and look at what it does, starting with the first six\nlines, which simply set up an HTML document and display a heading. The next line\ncreates a DIV with the ID info , containing the text This sentence will be\nreplaced  by default. Later on, the text returned from the Ajax call will be inserted\nhere.\nThe next six lines are required for making an HTTP Post Ajax request. The first sets\nthe variable params  to a parameter =value  pair, which is what we’ll send to the server.\nThen the Ajax object request  is created. After this, the open  method is called to set\nthe object to make a Post request to urlpost.php  in asynchronous mode. The last three\nlines in this group set up headers that are required for the receiving server to know\nthat a Post request is coming.\nThe readyState property\nNow we get to the nitty-gritty of an Ajax call, which all hangs on the readyState\nproperty. The “asynchronous” aspect of Ajax allows the browser to keep accepting\nuser input and changing the screen, while our program sets the onreadystatechange\nproperty to call a function of our choice each time readyState  changes. In this case, a\nnameless (or anonymous), inline function has been used, as opposed to a separate,\nnamed function. This type of function is known as a callback  function, as it is called\nback each time readyState  changes.\nThe syntax to set up the callback function using an inline, anonymous function is as\nfollows:\nrequest.onreadystatechange = function()\n{\n  if (this.readyState == 4)\n  {\n    // do something\n400 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 431,
    "text": "}\n}\nIf you wish to use a separate, named function, the syntax is slightly different:\nrequest.onreadystatechange = ajaxCallback\nfunction ajaxCallback()\n{\n  if (this.readyState == 4)\n  {\n    // do something\n  }\n}\nLooking at Table 17-1 , you’ll see that readyState  can have five values. But only one\nconcerns us: value 4, which represents a completed Ajax call. Therefore, each time the\nnew function gets called, it returns without doing anything until readyState  has a\nvalue of 4. When our function detects that value, it next inspects the status  of the\ncall to ensure it has a value of 200, which means that the call succeeded. If it’s not 200,\nan alert pop up displays the error message contained in statusText .\nY ou will notice that all of these object properties are referenced\nusing this.readyState , this.status , and so on, rather than the\nobject’s current name, request , as in request.readyState  or\nrequest.status . This is so that you can easily copy and paste the\ncode and it will work with any object name, because the this  key‐\nword always refers to the current object.\nSo, having ascertained that the readyState  is 4 and the status is 200, we test the\nresponseText  value to see whether it contains a value. If not, an error message is dis‐\nplayed in an alert box. Otherwise, the inner HTML of the DIV is assigned the value of\nresponseText , like this:\ndocument.getElementById('info').innerHTML = this.responseText\nIn this line, the  element info  is referenced via the getElementByID  method, and then\nits innerHTML  property is assigned the value that was returned by the Ajax call.\nAfter all this setting up and preparation, the Ajax request is finally sent to the server\nvia the following command, which passes the parameters already defined in the vari‐\nable params :\nrequest.send(params)\nAfter that, all the preceding code is activated each time readyState  changes.\nThe remainder of the document is the ajaxRequest  function from Example 17-1 , and\nthe closing script and HTML tags.\nUsing XMLHttpRequest | 401"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 432,
    "text": "The server half of the Ajax process\nNow we get to the PHP half of the equation, which you can see in Example 17-3 . Type\nit and save it as urlpost.php .\nExample 17-3. urlpost.php\n<?php // urlpost.php\n  if (isset($_POST['url']))\n  {\n    echo file_get_contents('http://' . SanitizeString($_POST['url']));\n  }\n  function SanitizeString($var)\n  {\n    $var = strip_tags($var);\n    $var = htmlentities($var);\n    return stripslashes($var);\n  }\n?>\nAs you can see, this is short and sweet, and also makes use of the ever-important Sani\ntizeString  function, as should be done with all posted data. In this instance, unsani‐\ntized data could result in the user gaining an advantage over your code.\nThis program uses the file_get_contents  PHP function to load in the web page at\nthe URL supplied to it in the Post variable $_POST['url'] . The file_get_contents\nfunction is versatile in that it loads in the entire contents of a file or web page from\neither a local or a remote server; it even takes into account moved pages and other\nredirects.\nOnce you have typed the program, you are ready to call up urlpost.html  into your web\nbrowser and, after a few seconds, you should see the contents of the Amazon mobile\nfront page loaded into the DIV that we created for that purpose. It won’t be as fast as\ndirectly loading the web page, because it is transferred twice: once to the server and\nagain from the server to your browser. The result should look like Figure 17-2 .\n402 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 433,
    "text": "Figure 17-2. The Amazon mobile website has been loaded into a DIV\nNot only have we succeeded in making an Ajax call and having a response returned to\nJavaScript, but we’ve also harnessed the power of PHP to enable the merging in of a\ntotally unrelated web object. Incidentally, if we had tried to find a way to fetch the\nAmazon mobile web page directly via Ajax (without recourse to the PHP server-side\nmodule), we wouldn’t have succeeded, because there are security blocks preventing\ncross-domain Ajax. So this example also illustrates a handy solution to a practical\nproblem.\nUsing Get Instead of Post\nAs with submitting any form  data, you have the option of submitting your data in\nthe form of Get requests, and you will save a few lines of code if you do so. However,\nthere is a downside: some browsers may cache Get requests, whereas Post requests\nwill never be cached. Y ou don’t want to cache a request, because the browser will just\nredisplay what it got the last time instead of going to the server for fresh input. The\nsolution to this is to use a workaround that adds a random parameter to each request,\nensuring that each URL requested is unique.\nUsing XMLHttpRequest | 403"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 434,
    "text": "Example 17-4  shows how you would achieve the same result as with Example 17-2 ,\nbut using an Ajax Get request instead of Post.\nExample 17-4. urlget.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>AJAX Example</title>\n  </head>\n  <body style='text-align:center'>\n    <h1>Loading a web page into a DIV</h1>\n    <div id='info'>This sentence will be replaced</div>\n    <script>\n      nocache = \"&nocache=\" + Math.random() * 1000000\n      request = new ajaxRequest()\n      request.open(\"GET\", \"urlget.php?url=amazon.com/gp/aw\" + nocache, true)\n      request.onreadystatechange = function()\n      {\n        if (this.readyState == 4)\n        {\n          if (this.status == 200)\n          {\n            if (this.responseText != null)\n            {\n              document.getElementById('info').innerHTML =\n                this.responseText\n            }\n            else alert(\"Ajax error: No data received\")\n          }\n          else alert( \"Ajax error: \" + this.statusText)\n        }\n      }\n      request.send( null)\n      function ajaxRequest()\n      {\n        try\n        {\n          var request = new XMLHttpRequest()\n        }\n        catch(e1)\n        {\n          try\n          {\n            request = new ActiveXObject(\"Msxml2.XMLHTTP\")\n          }\n          catch(e2)\n404 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 435,
    "text": "{\n            try\n            {\n              request = new ActiveXObject(\"Microsoft.XMLHTTP\")\n            }\n            catch(e3)\n            {\n              request = false\n            }\n          }\n        }\n        return request\n      }\n    </script>\n  </body>\n</html>\nThe differences to note between the two documents are highlighted in bold, and\ndescribed as follows:\n•It is not necessary to send headers for a Get request.\n•We call the open  method using a Get request, supplying a URL with a string com‐\nprising a ? symbol followed by the parameter/value pair url=amazon.com/gp/aw .\n•We start a second parameter/value pair using an & symbol, and then set the value\nof the parameter nocache  to a random value between 0 and a million. This is\nused to ensure that each URL requested is different, and therefore that no\nrequests will be cached.\n•The call to send  now contains only a parameter of null , as no parameters are\nbeing passed via a Post request. Note that leaving the parameter out is not an\noption, as it would result in an error.\nTo accompany this new document, the PHP program must be modified to respond to\na Get request, as in Example 17-5 , urlget.php .\nExample 17-5. urlget.php\n<?php\n  if (isset( $_GET['url']))\n  {\n    echo file_get_contents(\"http://\".sanitizeString( $_GET['url']));\n  }\n  function sanitizeString($var)\n  {\n    $var = strip_tags($var);\n    $var = htmlentities($var);\n    return stripslashes($var);\nUsing XMLHttpRequest | 405"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 436,
    "text": "}\n?>\nAll that’s different between this and Example 17-3  is that the references to $_POST\nhave been replaced with $_GET . The end result of calling up urlget.html  in your\nbrowser is identical to loading in urlpost.html .\nSending XML Requests\nAlthough the objects we’ve been creating are called XMLHttpRequest  objects, so far we\nhave made absolutely no use of XML. This is where the Ajax term is a bit of a misno‐\nmer, because the technology actually allows you to request any type of textual data,\nonly one of which is XML. As you have seen, we have requested an entire HTML\ndocument via Ajax, but we could equally have asked for a text page, a string or num‐\nber, or even spreadsheet data.\nSo let’s modify the previous example document and PHP program to fetch some\nXML data. To do this, first take a look at the PHP program, xmlget.php , shown in\nExample 17-6 .\nExample 17-6. xmlget.php\n<?php\n  if (isset($_GET['url']))\n  {\n    header('Content-Type: text/xml');\n    echo file_get_contents(\"http://\".sanitizeString($_GET['url']));\n  }\n  function sanitizeString($var)\n  {\n    $var = strip_tags($var);\n    $var = htmlentities($var);\n    return stripslashes($var);\n  }\n?>\nThis program has been very slightly modified (shown in bold highlighting) to output\nthe correct XML header before returning a fetched document. No checking is made\nhere, as it is assumed that the calling Ajax will request an actual XML document.\nNow on to the HTML document, xmlget.html , shown in Example 17-7 .\nExample 17-7. xmlget.html\n<!DOCTYPE html>\n<html>\n  <head>\n406 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 437,
    "text": "<title>AJAX Example</title>\n  </head>\n  <body>\n    <h1>Loading a web page into a DIV</h1>\n    <div id='info'>This sentence will be replaced</div>\n    <script>\n      nocache = \"&nocache=\" + Math.random() * 1000000\n      url     = \"rss.news.yahoo.com/rss/topstories\"\n      out     = \"\";\n      request = new ajaxRequest()\n      request.open(\"GET\", \"xmlget.php?url=\" + url + nocache, true)\n      request.onreadystatechange = function()\n      {\n        if (this.readyState == 4)\n        {\n          if (this.status == 200)\n          {\n            if (this.responseText != null)\n            {\n              titles = this.responseXML.getElementsByTagName('title')\n              for (j = 0 ; j < titles.length ; ++j)\n              {\n                out += titles[j].childNodes[0].nodeValue + '<br>'\n              }\n              document.getElementById('info').innerHTML = out\n            }\n            else alert(\"Ajax error: No data received\")\n          }\n          else alert( \"Ajax error: \" + this.statusText)\n        }\n      }\n      request.send(null)\n      function ajaxRequest()\n      {\n        try\n        {\n          var request = new XMLHttpRequest()\n        }\n        catch(e1)\n        {\n          try\n          {\n            request = new ActiveXObject(\"Msxml2.XMLHTTP\")\n          }\n          catch(e2)\n          {\nUsing XMLHttpRequest | 407"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 438,
    "text": "try\n            {\n              request = new ActiveXObject(\"Microsoft.XMLHTTP\")\n            }\n            catch(e3)\n            {\n              request = false\n            }\n          }\n        }\n        return request\n      }\n    </script>\n  </body>\n</html>\nAgain, the differences have been highlighted in bold, so you can see that this code is\nsubstantially similar to previous versions, except that the URL now being requested,\nrss.news.yahoo.com/rss/topstories , contains an XML document, the Yahoo! News Top\nStories  feed.\nThe other big change is the use of the responseXML  property, which replaces the\nresponseText  property. Whenever a server returns XML data, responseXML  will con‐\ntain the XML returned.\nHowever, responseXML  doesn’t simply contain a string of XML text: it is actually a\ncomplete XML document object that we can examine and parse using DOM tree\nmethods and properties. This means it is accessible, for example, by the JavaScript\ngetElementsByTagName  method.\nAbout XML\nAn XML document will generally take the form of the RSS feed shown in\nExample 17-8 . However, the beauty of XML is that we can store this type of structure\ninternally in a DOM tree (see Figure 17-3 ) to make it quickly searchable.\nExample 17-8. An XML document\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\">\n  <channel>\n    <title>RSS Feed</title>\n    <link>http://website.com</link>\n    <description>website.com's RSS Feed</description>\n    <pubDate>Mon, 11 May 2020 00:00:00 GMT</pubDate>\n    <item>\n      <title>Headline</title>\n      <guid>http://website.com/headline</guid>\n      <description>This is a headline</description>\n408 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 439,
    "text": "</item>\n    <item>\n      <title>Headline 2</title>\n      <guid>http://website.com/headline2</guid>\n      <description>The 2nd headline</description>\n    </item>\n  </channel>\n</rss>\nFigure 17-3. The DOM tree of Example 17-8\nTherefore, using the getElementsByTagName  method, you can quickly extract the val‐\nues associated with various tags without a lot of string searching. This is exactly what\nwe do in Example 17-7 , where the following command is issued:\ntitles = this.responseXML.getElementsByTagName('title')\nThis single command has the effect of placing all the values of the title  elements\ninto the array titles . From there, it is a simple matter to extract them with the fol‐\nlowing expression (where j is the title to access):\ntitles[j].childNodes[0].nodeValue\nAll the titles are then appended to the string variable out and, once all have been pro‐\ncessed, the result is inserted into the empty DIV at the document start. When you call\nup xmlget.html  in your browser, the result will be something like Figure 17-4 .\nUsing XMLHttpRequest | 409"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 440,
    "text": "Figure 17-4. Fetching a Yahoo! XML news feed via Ajax\nAs with all form data, you can use either the Post or the Get\nmethod when requesting XML data; your choice will make little\ndifference to the result.\nWhy use XML?\nY ou may ask why you would use XML other than for fetching XML documents such\nas RSS feeds.  Well, the simple answer is that you don’t have to, but if you wish to pass\nstructured data back to your Ajax applications, it could be a real pain to send a sim‐\nple, unorganized jumble of text that would need complicated processing in JavaScript.\nInstead, you can create an XML document and pass that back to the Ajax function,\nwhich will automatically place it into a DOM tree, as easily accessible as the HTML\nDOM object with which you are now familiar.\n410 | Chapter 17: Using Ajax"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 441,
    "text": "Using Frameworks for Ajax\nNow that you know how to code your own Ajax routines, you might like to investi‐\ngate some of the free frameworks that are available to make it even easier, and which\noffer many more advanced features. In particular, I would suggest you check out\njQuery, probably the most commonly used framework, and which I introduce in\nChapter 21 . In the following chapter, though, we’ll look at how to apply styling to\nyour websites with CSS.\nQuestions\n1.Why is it necessary to write a function for creating new XMLHttpRequest  objects?\n2.What is the purpose of the try...catch  construct?\n3.How many properties and how many methods does an XMLHttpRequest  object\nhave?\n4.How can you tell when an Ajax call has completed?\n5.How do you know whether an Ajax call completed successfully?\n6.What XMLHttpRequest  object’s property returns an Ajax text response?\n7.What XMLHttpRequest  object’s property returns an Ajax XML response?\n8.How can you specify a callback function to handle Ajax responses?\n9.What XMLHttpRequest  method is used to initiate an Ajax request?\n10.What are the main differences between an Ajax GET and POST  request?\nSee Chapter 17 Answers  in Appendix A  for the answers to these questions.\nQuestions | 411"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 442,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 443,
    "text": "CHAPTER 18\nIntroduction to CSS\nUsing CSS (Cascading Style Sheets) , you can apply styles to your web pages to make\nthem look exactly how you want. This works because CSS is connected to the DOM\n(Document Object Model), which I explained in Chapter 13 .\nWith CSS and its integration with the DOM, you can quickly and easily restyle any\nelement. For example, if you don’t like the default look of the <h1> , <h2> , and other\nheading tags, you can assign new styles to override the default settings for the font\nfamily and size used, or whether bold or italics should be set, and many more proper‐\nties too.\nOne way you can add styling to a web page is by inserting the required statements\ninto the head of a web page between the <head>  and </head>  tags. So, to change the\nstyle of the <h1>  tag, you might use the following code (I’ll explain the syntax later):\n<style>\n  h1 { color:red; font-size:3em; font-family:Arial; }\n</style>\nWithin an HTML page, this might look like Example 18-1  (see Figure 18-1 ), which,\nlike all the examples in this chapter, uses the standard HTML5 DOCTYPE  declaration.\nExample 18-1. A simple HTML page\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello World</title>\n    <style>\n      h1 { color:red; font-size:3em; font-family:Arial; }\n    </style>\n  </head>\n  <body>\n413"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 444,
    "text": "<h1>Hello there</h1>\n  </body>\n</html>\nFigure 18-1. Styling a tag, with the original style shown in the inset\nImporting a Style Sheet\nWhen you wish to style a whole site, rather than a single page, a better way to manage\nstyle sheets is to move them completely out of your web pages to separate files, and\nthen import the ones you need. This lets you apply different style sheets for different\nlayouts (such as web and print), without changing the HTML.\nThere are a couple of different ways you can achieve this, the first of which is by using\nthe CSS @import  directive, like this:\n<style>\n  @import url('styles.css');\n</style>\nThis statement tells the browser to fetch a style sheet with the name styles.css . The\n@import  command is quite flexible in that you can create style sheets that themselves\npull in other style sheets, and so on. Just make sure that there are no <style>  or\n</style>  tags in any of your external style sheets, or they will not work.\nImporting CSS from Within HTML\nY ou can also include a style sheet with the HTML <link>  tag, like this:\n<link rel='stylesheet' type='text/css' href='styles.css'>\nThis has the exact same effect as the @import  directive, except that <link>  is an\nHTML-only tag and is not a valid style directive, so it cannot be used from within one\nstyle sheet to pull in another, and also cannot be placed within a pair of\n<style>...</style>  tags.\n414 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 445,
    "text": "Just as you can use multiple @import  directives within your CSS to include multiple\nexternal style sheets, you can also use as many <link>  elements as you like in your\nHTML.\nEmbedded Style Settings\nThere’s also nothing stopping you from individually setting or overriding certain\nstyles for the current page on a case-by-case basis by inserting style declarations\ndirectly within HTML, like this (which results in italic, blue text within the tags):\n<div style='font-style:italic; color:blue;'>Hello there</div>\nBut this should be reserved only for the most exceptional circumstances, as it breaks\nthe separation of content and presentation.\nUsing IDs\nA better solution for setting the style of an element is to assign an ID to it in the\nHTML, like this:\n<div id='welcome'>Hello there</div>\nThis states that the contents of the <div>  with the ID welcome  should have applied to\nthem the style defined in the welcome  style setting. The matching CSS statement  for\nthis might look like the following\n#welcome { font-style:italic; color:blue; }\nNote the use of the # symbol, which specifies that only the ID with\nthe name welcome  should be styled with this statement.\nUsing Classes\nIf you would like to apply the same style to many elements, you do not have to give\neach one a different ID because you can specify a class to manage them all, like this:\n<div class='welcome'>Hello</div>\nThis states that the contents of this element (and any others that use the class) should\nhave applied to them the style defined in the welcome  class. Once a class is applied,\nyou can use the following rule, either in the page header or within an external style\nsheet for setting the styles for the class:\n.welcome { font-style:italic; color:blue; }\nUsing IDs | 415"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 446,
    "text": "Instead  of the # symbol, which is reserved for IDs, class statements are prefaced with\na . (period).\nUsing Semicolons\nIn CSS, semicolons are used to separate multiple CSS statements on the same line.\nBut if there is only one statement in a rule (or in an inline style setting within an\nHTML tag), you can omit the semicolon, as you can for the final statement in a\ngroup.\nHowever, to avoid hard-to-find CSS errors, you may prefer to always use a semicolon\nafter every CSS setting. Y ou can then copy and paste them, and otherwise modify\nproperties, without worrying about removing semicolons where they aren’t strictly\nnecessary or having to add them where they are required.\nCSS Rules\nEach statement in a CSS rule starts  with a selector , which is the item to which the rule\nwill be applied. For example, in this assignment, h1 is the selector being given a font\nsize 240 percent larger than the default:\nh1 { font-size:240%; }\nfont-size  is a property . Providing a value of 240%  to the font-size  property of the\nselector ensures that the contents of all <h1>...</h1>  pairs of tags will be displayed at\na font size that is 240 percent of the default size. All changes in rules must be within\nthe { and } symbols that follow the selector. In font-size:240%;  the part before the :\n(colon) is the property, while the remainder is the value applied to it.\nLast comes a ; (semicolon) to end the statement.  In this instance, because font-size\nis the last property in the rule, the semicolon is not required (but it would be if\nanother assignment were to follow).\nMultiple Assignments\nY ou can create multiple style declarations in a couple of different ways. First, you can\nconcatenate them on the same line, like this:\nh1 { font-size:240%; color:blue; }\nThis adds a second assignment that changes the color of all <h1>  headings to blue.\nY ou can also place the assignments one per line, like the following:\nh1 { font-size:240%;\ncolor:blue; }\n416 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 447,
    "text": "Or you can space out the assignments a little more, so that they line up below each\nother in a column at the colons, like this:\nh1 {\n  font-size:240%;\n  color    :blue;\n}\nThis way, you can easily see where each new set of rules begins, because the selector  is\nalways in the first column, and the assignments that follow are neatly lined up with all\nproperty values starting at the same horizontal offset. In the preceding examples, the\nfinal semicolon is unnecessary, but should you ever want to concatenate any such\ngroups of statements into a single line, it is very quick to do with all semicolons\nalready in place.\nY ou can specify the same selector as many times as you want, and CSS combines all\nthe properties. So the previous example could also be specified as follows:\nh1 { font-size: 240%; }\nh1 { color    : blue; }\nThere is no right or wrong way to lay out your CSS, but I recom‐\nmend that you at least try to keep each block of CSS consistent with\nitself, so that other people can take it in at a glance.\nWhat if you specified the same property to the same selector twice?\nh1 { color : red; }\nh1 { color : blue; }\nThe last value specified—in this case, blue—would apply. In a single file, repeating the\nsame property for the same selector would be pointless, but such repetition happens\nfrequently in real-life web pages when multiple style sheets are applied. It’s one of the\nvaluable features of CSS, and where the term cascading  comes from.\nUsing Comments\nIt is a good idea to comment  your CSS rules, even if you describe only the main\ngroups of statements rather than all or most of them. Y ou can do this in two different\nways. First, you can place a comment within a pair of /*...*/  tags, like this:\n/* This is a CSS comment */\nCSS Rules | 417"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 448,
    "text": "Or you can extend a comment over many lines, like this:\n/*\n    A Multi\n    line\n    comment\n*/\nWhen using multiline comments, note that you cannot nest single-\nline (or any other) comments within them. Doing so can lead to\nunpredictable errors.\nStyle Types\nThere are a number  of different style types, ranging from the default styles set up by\nyour browser (and any user styles you may have applied in your browser to override\nits defaults), through inline or embedded styles, to external style sheets. The styles\ndefined in each type have a hierarchy of precedence, from low to high.\nDefault Styles\nThe lowest level of style precedence is the default styling applied by a web browser.\nThese styles are created as a fallback for when a web page doesn’t have any styles, and\nthey are intended to be a generic set of styles that will display reasonably well in most\ninstances.\nPre-CSS, these were the only styles applied to a document, and only a handful of\nthem could be changed by a web page (such as font face, color, and size, and a few\nelement sizing arguments).\nUser Styles\nThese are the next highest precedence of styles, and they are supported by most\nmodern browsers but are implemented differently by each. If you would like to learn\nhow to create your own default styles for browsing, use a search engine to enter your\nbrowser name followed by “user styles” (for example, “Firefox user styles” or “Opera\nuser styles”) to find out how. Figure 18-2  shows a user style sheet being applied to\nMicrosoft Internet Explorer.\n418 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 449,
    "text": "Figure 18-2. Applying a user style to Internet Explorer\nIf a user style is assigned that has already been defined as a browser default, it will\nthen override the browser’s default setting. Any styles not defined in a user style sheet\nwill retain their default values as set up in the browser.\nExternal Style Sheets\nThe next types of styles are those assigned in an external style sheet. These settings\nwill override any assigned either by the user or by the browser. External style sheets\nare the recommended way to create your styles because you can produce different\nstyle sheets for different purposes such as styling for general web use, for viewing on a\nmobile browser with a smaller screen, for printing purposes, and so on. Just apply the\none needed for each type of media when you create the web page.\nInternal Styles\nThen there are internal styles, which you create within <style> ...</style>  tags, and\nwhich take precedence over all the preceding style types. At this point, though, you\nare beginning to break the separation between styling and content, as any external\nstyle sheets loaded in at the same time will have a lower precedence.\nStyle Types | 419"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 450,
    "text": "Inline Styles\nFinally, inline styles are where you assign a property directly to an element. They have\nthe highest precedence of any style type, and are used like this:\n<a href=\"http://google.com\" style=\"color:green;\">Visit Google</a>\nIn this example, the link specified will be displayed in green, regardless of any default\nor other color settings applied by any other type of style sheet, whether directly to this\nlink or generically for all links.\nWhen you use this type of styling, you are breaking the separation\nbetween layout and content; therefore, it is recommended that you\ndo so only when you have a very good reason.\nCSS Selectors\nThe means by which you access one or more elements is called selection , and the part\nof a CSS rule that does this is known as a selector . As you might expect, there are\nmany varieties of selector.\nThe Type Selector\nThe type selector works  on types of HTML elements such as <p> or <i>. For example,\nthe following rule will ensure that all text within <p>...</p>  tags is fully justified:\np { text-align:justify; }\nThe Descendant Selector\nDescendant selectors let you apply styles to elements that are contained within other\nelements. For example, the following rule sets all text within <b>...</b>  tags to red,\nbut only if they occur within <p>...</p>  tags (like this: <p><b>Hello</b> there</p> ):\np b { color:red; }\nDescendant selectors can continue nesting indefinitely, so the following is a perfectly\nvalid rule to make the text blue within bold text, inside a list element of an unordered\nlist:\nul li b { color:blue; }\nAs a practical example, suppose you want to use a different numbering system for an\nordered list that is nested within another ordered list. Y ou can achieve this in the fol‐\nlowing way, which will replace the default numeric numbering (starting from 1) with\nlowercase letters (starting from a):\n420 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 451,
    "text": "<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      ol ol { list-style-type:lower-alpha; }\n    </style>\n  </head>\n  <body>\n    <ol>\n      <li>One</li>\n      <li>Two</li>\n      <li>Three\n        <ol>\n          <li>One</li>\n          <li>Two</li>\n          <li>Three</li>\n        </ol>\n      </li>\n    </ol>\n  </body>\n</html>\nThe result of loading this HTML into a web browser is as follows, in which you can\nsee that the second list elements display differently:\n1. One\n2. Two\n3. Three\n  a. One\n  b. Two\n  c. Three\nThe Child Selector\nThe child selector is similar to the descendant selector but is more restrictive about\nwhen the style will be applied, by selecting only those elements that are direct chil‐\ndren of another element. For example, the following code uses a descendant selector\nthat will change any bold text within a paragraph to red, even if the bold text is itself\nwithin italics (like this <p><i><b>Hello</b> there</i></p> ):\np b { color:red; }\nIn this instance, the word Hello  displays in red. However, when this more general\ntype of behavior is not required, a child selector can be used to narrow the scope of\nthe selector. For example, the following child selector will set bold text to red only if\nthe element is a direct child of a paragraph, and is not itself contained within another\nelement:\np > b { color:red; }\nNow Hello  will not change color because it is not a direct child of the paragraph.\nCSS Selectors | 421"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 452,
    "text": "For a practical example, suppose you wish to make bold only those <li>  elements\nthat are direct children of <ol>  elements. Y ou can achieve this as follows, where the\n<li>  elements that are direct children of <ul>  elements are not made bold:\n<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      ol > li { font-weight:bold; }\n    </style>\n  </head>\n  <body>\n    <ol>\n      <li>One</li>\n      <li>Two</li>\n      <li>Three</li>\n    </ol>\n    <ul>\n      <li>One</li>\n      <li>Two</li>\n      <li>Three</li>\n    </ul>\n  </body>\n</html>\nThe result of loading this HTML into a browser will be as follows:\n1. One\n2. Two\n3. Three\n • One\n • Two\n • Three\nThe ID Selector\nIf you give an element an ID name (like this: <div id='mydiv'> ), you can directly\naccess it from CSS in the following way, which changes all text in the element to italic:\n#mydiv { font-style:italic; }\nIDs can be used only once within a document, so only the first occurrence found will\nreceive the new property value assigned by a CSS rule. But in CSS you can directly\nreference any IDs that have the same name, as long as they occur within different ele‐\nment types, like this:\n<div id='myid'>Hello</div> <span id='myid'>Hello</span>\nBecause IDs normally apply only to unique elements, the following rule will apply an\nunderline to only the first occurrence of myid :\n422 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 453,
    "text": "#myid { text-decoration:underline; }\nHowever, you can ensure that CSS applies the rule to both occurrences, like this:\nspan#myid { text-decoration:underline; }\ndiv#myid  { text-decoration:underline; }\nOr more succinctly, like this (see “Selecting by Group” on page 425 ):\nspan#myid, div#myid { text-decoration:underline; }\nI don’t recommend using this form of selection because any Java‐\nScript that also must access these elements cannot easily do so\nbecause the commonly used getElementByID()  function  will\nreturn only the first occurrence. To reference any other instances, a\nprogram would have to search through the whole list of elements\nin the document—a trickier task to undertake. So it’s generally bet‐\nter to always use unique ID names.\nThe Class Selector\nWhen there are a number of elements in a page that you want to share the same styl‐\ning, you can assign them all the same class name (like this: <span class='my\nclass'> ); then, create a single rule to modify all those elements at once, as in the\nfollowing rule, which creates a 10-pixel left margin offset for all elements using the\nclass:\n.myclass { margin-left:10px; }\nIn modern browsers, you can have HTML elements use more than one class by sepa‐\nrating the class names with spaces, like this: <span class='class1 class2\nclass3'> . Remember, though, that some very old browsers allow only a single class\nname in a class  argument.\nY ou can narrow the scope of action of a class by specifying the types of elements to\nwhich it should apply. For example, the following rule applies the setting only to\nparagraphs that use the class main :\np.main { text-indent:30px; }\nIn this example, only paragraphs using the class main  (like this: <p class=\"main\"> )\nwill receive the new property value. Any other element types that may try to use the\nclass (such as <div class=\"main\"> ) will not be affected by this rule.\nThe Attribute Selector\nMany HTML tags support  attributes, and using this type of selector can save you\nfrom having to use IDs and classes to refer to them. For example, you can directly\nCSS Selectors | 423"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 454,
    "text": "reference attributes in the following manner, which sets all elements with the\nattribute type=\"submit\"  to a width of 100 pixels:\n[type=\"submit\"] { width:100px; }\nIf you wish to narrow down the scope of the selector to, for example, only form  input\nelements with that attribute type, you could use the following rule instead:\nform input[type=\"submit\"] { width:100px; }\nAttribute selectors also work on IDs and classes so that, for exam‐\nple, [class~=\"classname\"]  works exactly like the class selec‐\ntor .classname  (except that the latter has a higher precedence).\nLikewise, [id=\"idname\"]  is equivalent to using the ID selector\n#idname . The class and ID selectors prefaced by # and . can there‐\nfore be viewed as shorthand for attribute selectors, but with a\nhigher precedence. The ~= operator  matches an attribute even if it\nis one of a space-separated group of attributes.\nThe Universal Selector\nThe * wildcard or universal selector matches  any element, so the following rule will\nmake a complete mess of a document by giving a green border to all of its elements:\n* { border:1px solid green; }\nIt’s therefore unlikely that you will use the * on its own, but as part of a compound\nrule it can be very powerful. For example, the following rule will apply the same styl‐\ning as the preceding one, but only to all paragraphs that are subelements of the ele‐\nment with the ID boxout , and only as long as they are not direct children:\n#boxout * p {border:1px solid green; }\nLet’s look at what’s going on here. The first selector following #boxout  is a * symbol,\nso it refers to any element within the boxout  object. The following p selector then\nnarrows down the selection focus by changing the selector to apply only to para‐\ngraphs (as defined by the p) that are subelements of elements returned by the * selec‐\ntor. Therefore, this CSS rule performs the following actions (in which I use the terms\nobject  and element  interchangeably):\n1.Find the object with the ID of boxout .\n2.Find all subelements of the object returned in step 1.\n3.Find all p subelements of the objects returned in step 2 and, since this is the final\nselector in the group, also find all p sub- and sub-subelements (and so on) of the\nobjects returned in step 2.\n424 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 455,
    "text": "4.Apply the styles within the {and } characters to the objects returned in step 3.\nThe net result of this is that the green border is applied only to paragraphs that are\ngrandchildren (or great-grandchildren, and so on) of the main element.\nSelecting by Group\nUsing CSS, you can apply a rule to  more than one element, class, or any other type of\nselector at the same time by separating the selectors with commas. So, for example,\nthe following rule will place a dotted orange line underneath all paragraphs, the ele‐\nment with the ID of idname , and all elements that use the class classname :\np, #idname, .classname { border-bottom:1px dotted orange; }\nFigure 18-3  shows various selectors in use, with the rules applied to them alongside.\nFigure 18-3. Some HTML and the CSS rules used by it\nThe CSS Cascade\nOne of the  most fundamental things about CSS properties is that they cascade, which\nis why they are called Cascading Style Sheets. But what does this mean?\nCascading is a method used to resolve potential conflicts between the various types of\nstyle sheet a browser supports, and apply them in order of precedence by who created\nthem, the method used to create the style, and the types of properties selected.\nThe CSS Cascade | 425"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 456,
    "text": "Style Sheet Creators\nThere are three main types of style sheet supported by all modern browsers. In order\nof precedence from high to low, they are as follows:\n1.Those created by a document’s author\n2.Those created by the user\n3.Those created by the browser\nThese three sets of style sheets are processed in reverse order. First, the defaults in the\nweb browser are applied to the document. Without these defaults, web pages that\ndon’t use style sheets would look terrible. They include the font face, size, and color;\nelement spacing; table borders and spacing; and all the other reasonable standards a\nuser would expect.\nNext, if the user has created any styles to use instead of the standard ones, these are\napplied, replacing any of the browser’s default styles that may conflict.\nLast, any styles created by the current document’s author are then applied, replacing\nany that have been created either as browser defaults or by the user.\nStyle Sheet Methods\nStyle sheets can be created via three different methods. In order of precedence from\nhigh to low, they are as follows:\n1.As inline styles\n2.In an embedded style sheet\n3.As an external style sheet\nAgain, these methods of style sheet creation are applied in reverse order of prece‐\ndence. Therefore, all external style sheets are processed first, and their styles are\napplied to the document.\nNext, any embedded styles (within <style> ...</style>  tags) are processed, and any\nthat conflict with external rules are given precedence and will override them.\nLast, any styles applied directly to an element as an inline style (such as <div\nstyle=\"...\"> ...</div> ) are given the highest precedence, and override all previously\nassigned properties.\nStyle Sheet Selectors\nThere are three different ways of selecting elements to be styled. Going from highest\nto lowest order of precedence, they are as follows:\n426 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 457,
    "text": "1.Referencing by individual ID or attribute selector\n2.Referencing in groups by class\n3.Referencing by element tags (such as <p> or <b>)\nSelectors are processed according to the number and types of elements affected by a\nrule, which is a little different from the previous two methods for resolving conflicts.\nThis is because rules do not have to apply only to one type of selector at a time, and\nmay reference many different selectors.\nTherefore, we need a method to determine the precedence of rules that can contain\nany combinations of selectors. It does this by calculating the specificity of each rule by\nordering them from the widest to narrowest scope of action.\nCalculating Specificity\nWe calculate the specificity of a rule by creating three-part numbers based on the\nselector types in the preceding numbered list. These compound numbers start off\nlooking like [0,0,0] . When processing a rule, each selector that references an ID\nincrements the first number by 1, so that the compound number would become\n[1,0,0] .\nLet’s look at the following rule, which has seven references, with three of them to the\nIDs #heading , #main , and #menu . So the compound number becomes [3,0,0] .\n#heading #main #menu .text .quote p span {\n  // Rules go here;\n}\nThen the number of classes in the selector is placed in the second part of the com‐\npound number. In this example, there are two of them ( .text  and .quote ), so the\ncompound number becomes [3,2,0] .\nFinally, all selectors that reference element tags are counted, and this number is\nplaced in the last part of the compound number. In the example, there are two ( p and\nspan ), so the final compound number becomes [3,2,2] , which is all that is needed to\ncompare this rule’s specificity with another, such as the following:\n#heading #main .text .quote .news p span {\n  // Rules go here;\n}\nHere, although seven elements are also referenced, there are now only two ID refer‐\nences, but three class references, which results in the compound number [2,3,2] .\nSince 322 is greater than 232, the former example has precedence over the latter.\nIn cases where there are nine or fewer of each type in a compound number, you can\nconvert it directly to a decimal number, which in this case is 352. Rules with a lower\nnumber than this will have lower precedence, and those with a higher number will\nThe CSS Cascade | 427"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 458,
    "text": "have greater precedence. Where two rules share the same value, the most recently\napplied one wins.\nUsing a different  number base\nWhere there are more than nine of a type in a number, you have to work in a higher\nnumber base. For example, you can’t convert the compound number [11,7,19]  to\ndecimal by simply concatenating the three parts. Instead, you can convert the number\nto a higher base such as base 20 (or higher if there are more than 19 of any type).\nTo do this, multiply the three parts out and add the results like this, starting with the\nrightmost number and working left:\n         20 × 19 = 380\n      20×20 ×  7 = 2800\n   20×20×20 × 11 = 88000\nTotal in decimal = 91180\nOn the left, replace the values of 20 with the base you are using. Once all of the com‐\npound numbers of a set of rules are converted from this base to decimal, it is easy to\ndetermine the specificity, and therefore the precedence, of each.\nThankfully, the CSS processor handles all of this for you, but knowing how it works\nhelps you to properly construct rules and understand what precedence they will have.\nIf all this precedence calculation sounds rather complicated, you’ll\nbe pleased to know that in most cases you can usually get by with\nthis simple rule of thumb: in general, the fewer elements that there\nare to be modified, and the more specific they are, the greater the\nprecedence that is given to a rule.\nSome rules are more equal than others\nWhere two or more style rules are exactly equivalent, only the most recently pro‐\ncessed rule will take precedence. However, you can force a rule to a higher precedence\nthan other equivalent rules by using the !important  declaration, like this:\np { color:#ff0000 !important; }\nWhen you do this, all previous equivalent settings are overridden (even ones using !\nimportant ) and any equivalent rules that are processed later will be ignored. So, for\nexample, the second of the two following rules would normally take precedence, but\nbecause of the use of !important  in the prior assignment, the second one is ignored:\np { color:#ff0000 !important; }\np { color:#ffff00 }\n428 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 459,
    "text": "User style sheets can be created for specifying default browser\nstyles, and they may use the !important  declaration, in which case\nthe user’s style setting will take precedence over the same proper‐\nties specified in the current web page. However, on very old brows‐\ners using CSS 1, this feature isn’t supported.\nThe Difference  Between Div and Span Elements\nBoth <div>  and <span>  elements are types of containers, but with some different\nqualities. By default, a <div>  element has infinite width (at least to the browser edge),\nwhich you can see by applying a border to one, like this:\n<div style=\"border:1px solid green;\">Hello</div>\nA <span>  element, however, is only as wide as the text it contains. Therefore, the fol‐\nlowing line of HTML creates a border only around the word Hello , which does not\nextend to the righthand edge of the browser.\n<span style=\"border:1px solid green;\">Hello</span>\nAlso, <span>  elements follow text or other objects as they wrap around, and can\ntherefore have a complicated border. For example, in Example 18-2 , I used CSS to\nmake the background of all <div>  elements yellow, to make all <span>  elements cyan,\nand to add a border to both, before then creating a few example <span>  and <div>\nsections.\nExample 18-2. Div and span example\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Div and span example</title>\n    <style>\n      div, span { border          :1px solid black; }\n      div       { background-color:yellow;          }\n      span      { background-color:cyan;            }\n    </style>\n  </head>\n  <body>\n    <div>This text is within a div tag</div>\n    This isn't. <div>And this is again.</div><br>\n    <span>This text is inside a span tag.</span>\n    This isn't. <span>And this is again.</span><br><br>\n    <div>This is a larger amount of text in a div that wraps around\n    to the next line of the browser</div><br>\n    <span>This is a larger amount of text in a span that wraps around\nThe CSS Cascade | 429"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 460,
    "text": "to the next line of the browser</span>\n  </body>\n</html>\nFigure 18-4  shows what this example looks like in a web browser. Although it is\nprinted only in shades of gray in this book, the figure clearly shows how <div>  ele‐\nments extend to the righthand edge of a browser, and force the following content to\nappear at the start of the first available position below them.\nFigure 18-4. A variety of elements of differing  width\nThe figure also shows how <span>  elements keep to themselves and take up only the\nspace required to hold their content, without forcing subsequent content to appear\nbelow them.\nFor example, in the bottom two examples of the figure, you can also see that when\n<div>  elements wrap around the screen edge, they retain a rectangular shape,\nwhereas <span>  elements simply follow the flow of the text (or other contents) they\ncontain.\nSince <div>  tags can be only rectangular, they are better suited for\ncontaining objects such as images, boxouts, quotations, and so on,\nwhile <span>  tags are best used for holding text or other attributes\nthat are placed one after another inline, and which should flow\nfrom left to right (or right to left in some languages).\n430 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 461,
    "text": "Measurements\nCSS supports an impressive range of units of measurement, enabling you to tailor\nyour web pages precisely to specific values, or by relative dimensions. The ones I gen‐\nerally use (and believe you will also find the most useful) are pixels, points, ems, and\npercent, but here’s the complete list:\nPixels\nThe size of a pixel varies according to the dimensions and pixel depth of the user’s\nmonitor. One pixel equals the width/height of a single dot on the screen, and so this\nmeasurement is best suited to monitors. For example:\n.classname { margin:5px; }\nPoints\nA point is equivalent  in size to 1/72 of an inch. The measurement comes from a print\ndesign background and is best suited for that medium, but is also commonly used on\nmonitors. For example:\n.classname { font-size:14pt; }\nInches\nAn inch is the equivalent of 72 points and is also a measurement type best suited for\nprint. For example:\n.classname { width:3in; }\nCentimeters\nCentimeters are another unit of measurement best suited for print. One centimeter is\na little over 28 points. For example:\n.classname { height:2cm; }\nMillimeters\nA millimeter is 1/10 of a centimeter (or almost 3 points). Millimeters are another\nmeasure best suited to print. For example:\n.classname { font-size:5mm; }\nPicas\nA pica is another print typographic measurement, which is equivalent to 12 points.\nFor example:\n.classname { font-size:1pc; }\nEms\nAn em is equal to the current font size and is therefore one of the more useful meas‐\nurements for CSS since it is used to describe relative dimensions. For example:\n.classname { font-size:2em; }\nExs\nAn ex is also related to the current font size; it is equivalent to the height of a\nlowercase letter x. This is a less popular unit of measurement that is most often\nMeasurements | 431"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 462,
    "text": "used as a good approximation for helping to set the width of a box that will con‐\ntain some text. For example:\n.classname { width:20ex; }\nPercent\nThis unit is related to the em in that it is exactly 100 times greater (when used on a\nfont). Whereas 1 em equals the current font size, the same size is 100 in percent.\nWhen not relating to a font, this unit is relative to the size of the container of the\nproperty being accessed. For example:\n.classname { height:120%; }\nFigure 18-5  shows each of these measurement types in turn being used to display text\nin almost identical sizes.\nFigure 18-5. Different  measurements that display almost the same\nFonts and Typography\nThere are four main font properties that you can style using CSS: family , style ,\nsize , and weight . Between them, you can fine-tune the way text displays in your web\npages and/or when printed.\n432 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 463,
    "text": "font-family\nThe font-family  property  assigns the font to use. It also supports listing a variety of\nfonts in order of preference from left to right, so that styling can fall back gracefully\nwhen the user doesn’t have the preferred font installed. For example, to set the default\nfont for paragraphs, you might use a CSS rule such as this:\np { font-family:Verdana, Arial, Helvetica, sans-serif; }\nWhere a font name is made up of two or more words, you must enclose the name in\nquotation marks, like this:\np { font-family:\"Times New Roman\", Georgia, serif; }\nBecause they should be available on virtually all web browsers and\noperating systems, the safest font families to use on a web page are\nArial , Helvetica , Times New Roman , Times , Courier New , and Cou‐\nrier. The Verdana , Georgia , Comic Sans MS , Trebuchet MS , Arial\nBlack , and Impact  fonts are safe for Mac and PC use, but may not\nbe installed on other operating systems such as Linux. Other com‐\nmon but less safe fonts are Palatino , Garamond , Bookman , and\nAvant Garde . If you use one of the less safe fonts, make sure you\noffer fallbacks of one or more safer fonts in your CSS so that your\nweb pages will degrade gracefully on browsers without your prefer‐\nred fonts.\nFigure 18-6  shows these two sets of CSS rules being applied.\nFigure 18-6. Selecting font families\nfont-style\nWith the font-style  property,  you can choose to display a font normally, in italics,\nor obliquely. The following rules create three classes ( normal , italic , and oblique )\nthat can be applied to elements to create these effects:\nFonts and Typography | 433"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 464,
    "text": ".normal  { font-style:normal;  }\n.italic  { font-style:italic;  }\n.oblique { font-style:oblique; }\nfont-size\nAs described in the earlier section on measurements, there are a large number of ways\nyou can change a font’s size.  But these all boil down to two main types: fixed and rela‐\ntive. A fixed setting looks like the following rule, which sets the default paragraph\nfont size to 14 point:\np { font-size:14pt; }\nAlternatively, you may wish to work with the current default font size, using it to style\nvarious types of text such as headings. In the following rules, relative sizes of some\nheaders are defined, with the <h4>  tag starting off 20 percent bigger than the default,\nand with each greater size another 40 percent larger than the previous one:\nh1 { font-size:240%; }\nh2 { font-size:200%; }\nh3 { font-size:160%; }\nh4 { font-size:120%; }\nFigure 18-7  shows a selection of font sizes in use.\nFigure 18-7. Setting four heading sizes and the default paragraph size\nfont-weight\nUsing the font-weight  property, you can choose how boldly to display a font. It sup‐\nports a number of values, but the main ones you will use are likely to be normal  and\nbold , like this:\n434 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 465,
    "text": ".bold { font-weight:bold; }\nManaging Text Styles\nRegardless of the font in use, you can  further modify the way text displays by altering\nits decoration, spacing, and alignment. There is a crossover between the text and font\nproperties, though, in that effects such as italics or bold text are achieved via the\nfont-style  and font-weight  properties, while others such as underlining require\nthe text-decoration  property.\nDecoration\nWith the text-decoration  property, you can apply effects to text such as underline ,\nline-through , overline , and blink . The following rule creates a new class called\nover  that applies overlines to text (the weight of over, under, and through lines will\nmatch that of the font):\n.over { text-decoration:overline; }\nIn Figure 18-8  you can see a selection of font styles, weight, and decorations.\nFigure 18-8. Examples of the styles and decoration rules available\nSpacing\nA number of different properties allow you to modify line, word, and letter spacing.\nFor example, the following rules change the line spacing for paragraphs by modifying\nthe line-height  property  to be 25 percent greater, the word-spacing  property  is set\nto 30 pixels, and letter-spacing  is set to 3 pixels:\nManaging Text Styles | 435"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 466,
    "text": "p {\n  line-height   :125%;\n  word-spacing  :30px;\n  letter-spacing:3px;\n}\nAlignment\nThere are four types of text alignment  available in CSS: left , right , center , and jus\ntify . In the following rule, default paragraph text is set to full justification:\np { text-align:justify; }\nTransformation\nThere are four properties available for transforming your text: none , capitalize ,\nuppercase , and lowercase . The following rule creates a class called upper  that will\nensure that all text is displayed in uppercase when it is used:\n.upper { text-transform:uppercase; }\nIndenting\nUsing the text-indent  property,  you can indent the first line of a block of text by a\nspecified amount. The following rule indents the first line of every paragraph by 20\npixels, although a different unit of measurement or a percent increase could also be\napplied:\np { text-indent:20px; }\nIn Figure 18-9  the following rules have been applied to a section of text:\np {          line-height   :150%;\n             word-spacing  :10px;\n             letter-spacing:1px;\n}\n.justify   { text-align    :justify;   }\n.uppercase { text-transform:uppercase; }\n.indent    { text-indent   :20px;      }\n436 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 467,
    "text": "Figure 18-9. Indenting, uppercase, and spacing rules being applied\nCSS Colors\nY ou can apply colors to the foreground and background of text and objects by using\nthe color  and background-color  properties  (or by supplying a single argument to\nthe background  property). The colors specified can be one of the named colors (such\nas red or blue ), colors created from hexadecimal RGB triplets (such as #ff0000  or\n#0000ff ), or colors created using the rgb CSS function.\nThe standard 16 color names as defined by the W3C ( http://www.w3.org/ ) standards\norganization are aqua , black , blue , fuchsia , gray , green , lime , maroon , navy , olive ,\npurple , red, silver , teal , white , and yellow . The following rule uses one of these\nnames to set the background color for an object with the ID of object .\n#object { background-color:silver; }\nIn this rule, the foreground color of text in all <div>  elements is set to yellow (because\non a computer display, hexadecimal levels of ff red, plus ff green, plus 00 blue cre‐\nates the color yellow):\ndiv { color:#ffff00; }\nOr, if you don’t wish to work in hexadecimal, you can specify your color triplets by\nusing the rgb function,  as in the following rule, which changes the background color\nof the current document to aqua:\nbody { background-color:rgb(0, 255, 255); }\nCSS Colors | 437"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 468,
    "text": "If you prefer not to work in ranges of 256 levels per color, you can\nuse percentages in the rgb function instead, with values from 0 to\n100 ranging from the lowest ( 0) amount of a primary color,\nthrough to the highest ( 100), like this: rgb(58%, 95%, 74%) . Y ou\ncan also use floating-point values for even finer color control, like\nthis: rgb(23.4%, 67.6%, 15.5%) .\nShort Color Strings\nThere is also a short form of the hex digit string in which only the first of each 2-byte\npair is used for each color. For example, instead of assigning the color #fe4692 , you\ninstead use #f49 , omitting the second hex digit from each pair, which equates to a\ncolor value of #ff4499 .\nThis results in almost the same color and is useful where exact colors are not\nrequired. The difference between a six-digit and three-digit string is that the former\nsupports 16 million different colors, while the latter supports four thousand.\nWherever you intend to use a color such as #883366 , this is the direct equivalent of\n#836  (since the repeated digits are implied by the shorter version), and you can use\neither string to create the exact same color.\nGradients\nIn place of using a solid background color, you can  choose to apply a gradient, which\nwill then automatically flow from a given initial color to a final color of your choice.\nIt is best used in conjunction with a simple color rule so that browsers that don’t sup‐\nport gradients will at least display a solid color.\nExample 18-3  uses a rule to display an orange gradient (or simply plain orange on\nnonsupporting browsers), as shown in the middle section of Figure 18-10 .\nExample 18-3. Creating a linear gradient\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Creating a linear gradient</title>\n    <style>\n      .orangegrad {\n        background:orange;\n        background:linear-gradient(top, #fb0, #f50);\n        background:-moz-linear-gradient(top, #fb0, #f50);\n        background:-webkit-linear-gradient(top, #fb0, #f50);\n        background:-o-linear-gradient(top, #fb0, #f50);\n        background:-ms-linear-gradient(top, #fb0, #f50); }\n    </style>\n438 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 469,
    "text": "</head>\n  <body>\n    <div class='orangegrad'>Black text<br>\n    on an orange<br>linear gradient</div>\n  </body>\n</html>\nFigure 18-10. A solid background color, a linear gradient, and a radial gradient\nAs shown in the preceding example, many CSS rules require\nbrowser-specific  prefixes such as -moz- , -webkit- , -o-, and -ms-\n(for Mozilla-based browsers such as Firefox; WebKit-based brows‐\ners such as Apple Safari, Google Chrome, and the iOS and Android\nbrowsers; and the Opera and Microsoft browsers). The website at\nhttp://caniuse.com  lists the major CSS rules and attributes, and\nwhether browser-specific versions are required.\nTo create a gradient, choose where it will begin out of top, bottom , left , right , and\ncenter  (or any combination, such as top left  or center right ), enter the start and\nend colors you require, and then apply either the linear-gradient  or radial-\ngradient  rule, making sure you also supply rules for all browsers you are targeting.\nY ou can also use more than just a start and end color by supplying what are termed\nstop colors in between as additional arguments. In this case, for example, if five argu‐\nments are supplied, each argument will control the color change over a fifth of the\narea represented by its location in the argument list.\nPositioning Elements\nElements within a web page fall where they are placed in the document, but you can\nmove them about by changing an element’s position  property from  the default of\nstatic  to one of absolute , relative , or fixed .\nPositioning Elements | 439"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 470,
    "text": "Absolute Positioning\nAn element with absolute positioning is removed from the document, and any other\nelements that are capable will flow into its released space. Y ou can then position the\nobject anywhere you like within the document by using the top, right , bottom , and\nleft  properties. It will then rest on top of (or behind) other elements.\nSo, for example, to move an object with the ID of object  to the absolute location of\n100 pixels down from the document start and 200 pixels in from the left, you would\napply the following rules to it (you can also use any of the other units of measurement\nsupported by CSS):\n#object {\n  position:absolute;\n  top     :100px;\n  left    :200px;\n}\nRelative Positioning\nLikewise, you can move the object relative to the location  it would occupy in the nor‐\nmal document flow. So, for example, to move object  10 pixels down and 10 pixels to\nthe right of its normal location, you would use the following rules:\n#object {\n  position:relative;\n  top     :10px;\n  left    :10px;\n}\nFixed Positioning\nThe final positioning property setting lets you move an object to an absolute location,\nbut only within the current browser viewport. Then, when the document is scrolled,\nthe object remains exactly where it has been placed, with the main document scroll‐\ning beneath it—a great way to create dock bars and other similar devices. To fix the\nobject to the top-left corner of the browser window, you use the following rules:\n#object {\n  position:fixed;\n  top     :0px;\n  left    :0px;\n}\nIn Figure 18-11 , Example 18-4  has been loaded into a browser, and the browser has\nbeen reduced in width and height so that you must scroll down to see all of the web\npage.\n440 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 471,
    "text": "Figure 18-11. Using different  positioning values\nWhen this is done, it is immediately obvious that the element with fixed positioning\nremains in place even through scrolling. Y ou can also see that the element with abso‐\nlute positioning is located exactly at 100 pixels down, with 0 horizontal offset, while\nthe element with relative positioning is actually moved up by 8 pixels and then offset\nfrom the left margin by 110 pixels in order to line up alongside the first element.\nExample 18-4. Applying different  positioning values\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Positioning</title>\n    <style>\n      #object1 {\n        position  :absolute;\n        background:pink;\n        width     :100px;\n        height    :100px;\n        top       :100px;\n        left      :0px;\n      }\n      #object2 {\n        position  :relative;\n        background:lightgreen;\n        width     :100px;\n        height    :100px;\n        top       :-8px;\n        left      :110px;\n      }\n      #object3 {\n        position  :fixed;\n        background:yellow;\n        width     :100px;\n        height    :100px;\n        top       :100px;\n        left      :236px;\nPositioning Elements | 441"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 472,
    "text": "}\n    </style>\n  </head>\n  <body>\n       <br><br><br><br><br>\n    <div id='object1'>Absolute Positioning</div>\n    <div id='object2'>Relative Positioning</div>\n    <div id='object3'>Fixed Positioning</div>\n  </body>\n</html>\nIn the figure, the element with fixed positioning initially lines up with the other two\nelements, but has stayed put while the others have been scrolled up the page, and now\nappears offset below them.\nPseudoclasses\nA number of selectors and classes are used only within a style sheet and do not have\nany matching tags or attributes within any HTML. Their task is to classify elements\nusing characteristics other than their name, attributes, or content—that is, character‐\nistics that cannot be deduced from the document tree. These include pseudoclasses\nsuch as link  and visited . There are also pseudoelements that make a selection,\nwhich may consist of partial elements such as first-line  or first-letter .\nPseudoclasses and pseudoelements are separated by a : (colon) character. For exam‐\nple, to create a class called bigfirst  for emphasizing the first letter of an element,\nyou would use a rule such as the following:\n.bigfirst:first-letter {\n  font-size:400%;\n  float    :left;\n}\nWhen the bigfirst  class is applied to an element, the first letter will be displayed\nmuch enlarged, with the remaining text shown at normal size, neatly flowing around\nit (due to the float  property) as if the first letter were an image or other object. Pseu‐\ndoclasses include hover , link , active , and visited , all of which are mostly useful for\napplying to anchor elements, as in the following rules, which set the default color of\nall links to blue, and that of links that have already been visited to light blue:\na:link    { color:blue;      }\na:visited { color:lightblue; }\nThe following rules are interesting in that they  use the hover  pseudoclass so that they\nare applied only when the mouse is placed over the element. In this example, they\nchange the link to white text on a red background, providing a dynamic effect you\nwould normally expect only from using JavaScript code:\n442 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 473,
    "text": "a:hover {\n  color     :white;\n  background:red;\n}\nHere I have used the background  property  with a single argument, instead of the\nlonger background-color  property.\nThe active  pseudoclass is also dynamic  in that it effects a change to a link during the\ntime between the mouse button being clicked and released, as with this rule, which\nchanges the link color to dark blue:\na:active { color:darkblue; }\nAnother interesting dynamic pseudoclass is focus , which is applied only when an ele‐\nment is given focus by the user selecting it with the keyboard or mouse. The follow‐\ning rule uses the universal selector to always place a mid-gray, dotted, 2-pixel border\naround the currently focused object:\n*:focus { border:2px dotted #888888; }\nExample 18-5  displays two links and an input field, as shown in Figure 18-12 . The\nfirst link shows up as gray since it has already been visited in this browser, but the\nsecond link has not and displays in blue. The Tab key has been pressed, and the focus\nof input is now the input field, so its background has changed to yellow. When either\nlink is clicked, it will display in purple, and when hovered over, it will appear red.\nExample 18-5. Link and focus pseudoclasses\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Pseudo-classes</title>\n    <style>\n      a:link    { color:blue; }\n      a:visited { color:gray; }\n      a:hover   { color:red; }\n      a:active  { color:purple; }\n      *:focus   { background:yellow; }\n    </style>\n  </head>\n  <body>\n    <a href='http://google.com'>Link to Google'</a><br>\n    <a href='nowhere'>Link to nowhere'</a><br>\n    <input type='text'>\n  </body>\n</html>\nPseudoclasses | 443"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 474,
    "text": "Figure 18-12. Pseudoclasses applied to a selection of elements\nOther pseudoclasses are also available, and you can get more information on them at\nhttp://tinyurl.com/pseudoclasses .\nBeware of applying the focus  pseudoclass to the universal selector,\n*, as shown in this example; Internet Explorer regards an unfo‐\ncused document as having focus applied to the entire web page,\nand (in this instance) the whole page will turn yellow until Tab is\npressed or focus is otherwise applied to one of the page’s elements.\nShorthand Rules\nTo save space, groups of related CSS properties can be concatenated into a single\nshorthand assignment. For example, I have already used the shorthand for creating a\nborder a few times, as in the focus  rule in the previous section:\n*:focus { border:2px dotted #ff8800; }\nThis is actually a shorthand concatenation of the following rule set:\n*:focus {\n  border-width:2px;\n  border-style:dotted;\n  border-color:#ff8800;\n}\nWhen using a shorthand rule, you need only apply the properties up to the point\nwhere you wish to change values. So you could use the following to set only a border’s\nwidth and style, choosing not to set its color:\n*:focus { border:2px dotted; }\n444 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 475,
    "text": "The order in which the properties are placed in a shorthand rule\ncan be important, and misplacing them is a common way to get\nunexpected results. Since there are far too many to detail in this\nchapter, if you wish to use shorthand CSS, you will need to look up\nthe default properties and their order of application using a CSS\nmanual or search engine. To get you started, I recommend visiting\nhttp://dustindiaz.com/css-shorthand .\nThe Box Model and Layout\nThe CSS properties affecting  the layout of a page are based  around the box model  (see\nChapter 13  for more details), a nested set of properties surrounding an element. Vir‐\ntually all elements have (or can have) these properties, including the document body,\nwhose margin you can (for example) remove with the following rule:\nbody { margin:0px; }\nThe box model of an object starts at the outside, with the object’s margin. Inside this\nis the border, then there is padding between the border and the inner contents, and\nfinally there’s the object’s contents.\nOnce you have the hang of the box model, you will be well on your way to creating\nprofessionally laid-out pages, since these properties alone will make up much of your\npage styling.\nSetting Margins\nThe margin is the outermost level of the box model. It separates elements from each\nother and its use is quite smart. For example, assume you give a number of elements a\ndefault margin of 10 pixels around each. When they are placed on top of each other,\nthis would create a gap of 20 pixels (the total of the adjacent border widths).\nCSS overcomes this potential issue, however: when two elements with borders are\npositioned directly one above the other, only the larger of the two margins is used to\nseparate them. If both margins are the same width, just one of the widths is used.\nThis way, you are much more likely to get the result you want. But you should note\nthat the margins of absolutely positioned or inline elements do not collapse.\nThe margins of an element can be changed en masse with  the margin  property, or\nindividually with margin-left , margin-top , margin-right , and margin-bottom .\nWhen setting the margin  property, you can supply one, two, three, or four arguments,\nwhich have the effects commented in the following rules:\n/* Set all margins to 1 pixel */\nmargin:1px;\n/* Set top and bottom to 1 pixel, and left and right to 2 */\nThe Box Model and Layout | 445"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 476,
    "text": "margin:1px 2px;\n/* Set top to 1 pixel, left and right to 2, and bottom to 3 */\nmargin:1px 2px 3px;\n/* Set top to 1 pixel, right to 2, bottom to 3, and left to 4 */\nmargin:1px 2px 3px 4px;\nFigure 18-13  shows Example 18-6  loaded into a browser, with the margin  property\nrule (highlighted in bold) applied to a square element that has been placed inside a\ntable element. The table has been given no dimensions, so it will simply wrap as\nclosely around the inner <div>  element as it can. As a consequence, there is a margin\nof 10 pixels above it, 20 pixels to its right, 30 pixels below it, and 40 pixels to its left.\nExample 18-6. How margins are applied\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Margins</title>\n    <style>\n      #object1 {\n        background  :lightgreen;\n        border-style:solid;\n        border-width:1px;\n        font-family :\"Courier New\";\n        font-size   :9px;\n        width       :100px;\n        height      :100px;\n        padding     :5px;\n        margin      :10px 20px 30px 40px;\n      }\n      table {\n        padding     :0;\n        border      :1px solid black;\n        background  :cyan;\n      }\n    </style>\n  </head>\n  <body>\n    <table>\n      <tr>\n        <td>\n          <div id='object1'>margin:<br>10px 20px 30px 40px;</div>\n        </td>\n      </tr>\n    </table>\n  </body>\n</html>\n446 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 477,
    "text": "Figure 18-13. The outer table expands according to the margin widths\nApplying Borders\nThe border level  of the box model is  similar to the margin except that there is no col‐\nlapsing. It is the next level as we move into the box model. The main properties used\nto modify borders are border , border-left , border-top , border-right , and\nborder-bottom , and each of these can have other subproperties added as suffixes,\nsuch as -color , -style , and -width .\nThe four ways of accessing individual property settings used for the margin  property\nalso apply with the border-width  property, so all the following are valid rules:\n/* All borders */\nborder-width:1px;\n/* Top/bottom left/right */\nborder-width:1px 5px;\n/* Top left/right bottom */\nborder-width:1px 5px 10px;\n/* Top right bottom left */\nborder-width:1px 5px 10px 15px;\nFigure 18-14  shows each of these rules applied in turn to a group of square elements.\nIn the first one, you can clearly see that all borders have a width of 1 pixel. The sec‐\nond element, however, has a top and bottom border width of 1 pixel, while its side\nwidths are 5 pixels each.\nThe third element has a 1-pixel-wide top, its sides are 5 pixels wide, and its bottom is\n10 pixels wide. The fourth element has a 1-pixel top border width, a 5-pixel right bor‐\nder width, a 10-pixel bottom border width, and a 15-pixel left border width.\nThe Box Model and Layout | 447"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 478,
    "text": "Figure 18-14. Applying long- and shorthand border rule values\nThe final element, under the previous ones, doesn’t use the shorthand rules; instead,\nit has each of the border widths set separately. As you can see, it takes a lot more typ‐\ning to achieve the same result.\nAdjusting Padding\nThe deepest of the box model levels (other than the contents of an element) is the\npadding, which is applied inside any borders and/or margins. The main properties\nused to modify padding are padding , padding-left , padding-top , padding-right ,\nand padding-bottom .\nThe four ways of accessing individual property settings used for the margin  and the\nborder  properties also apply with the padding  property, so all the following are valid\nrules:\n/* All padding */\npadding:1px;\n/* Top/bottom and left/right */\npadding:1px 2px;\n/* Top, left/right and bottom */\npadding:1px 2px 3px;\n/* Top, right, bottom and left */\npadding:1px 2px 3px 4px;\nFigure 18-15  shows the padding rule (shown in bold) in Example 18-7  applied to\nsome text within a table cell (as defined by the rule display:table-cell; , which\nmakes the encapsulating <div>  element display like a table cell), which has been given\n448 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 479,
    "text": "no dimensions so it will simply wrap as closely around the text as it can. As a conse‐\nquence, there is padding of 10 pixels above the inner element, 20 pixels to its right, 30\npixels below it, and 40 pixels to its left.\nExample 18-7. Applying padding\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Padding</title>\n    <style>\n      #object1 {\n        border-style:solid;\n        border-width:1px;\n        background  :orange;\n        color       :darkred;\n        font-family :Arial;\n        font-size   :12px;\n        text-align  :justify;\n        display     :table-cell;\n        width       :148px;\n        padding     :10px 20px 30px 40px; }\n    </style>\n  </head>\n  <body>\n    <div id='object1'>To be, or not to be that is the question:\n    Whether 'tis Nobler in the mind to suffer\n    The Slings and Arrows of outrageous Fortune,\n    Or to take Arms against a Sea of troubles,\n    And by opposing end them.</div>\n  </body>\n</html>\nFigure 18-15. Applying different  padding values to an object\nThe Box Model and Layout | 449"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 480,
    "text": "Object Contents\nDeep within the box model levels, at  its center, lies an element that can be styled in all\nthe ways discussed in this chapter, and which can (and usually will) contain further\nsubelements, which in turn may contain sub-subelements, and so on, each with its\nown styling and box model settings.\nQuestions\n1.Which directive do you use to import one style sheet into another (or the\n<style>  section of some HTML)?\n2.What HTML tag can you use to import a style sheet into a document?\n3.Which HTML tag attribute is used to directly embed a style into an element?\n4.What is the difference between a CSS ID and a CSS class?\n5.Which characters are used to prefix (a) IDs, and (b) class names in a CSS rule?\n6.In CSS rules, what is the purpose of the semicolon?\n7.How can you add a comment to a style sheet?\n8.Which character is used by CSS to represent any element?\n9.How can you select a group of different elements and/or element types in CSS?\n10.Given a pair of CSS rules with equal precedence, how can you make one have\ngreater precedence over the other?\nSee Chapter 18 Answers  in Appendix A  for the answers to these questions.\n450 | Chapter 18: Introduction to CSS"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 481,
    "text": "CHAPTER 19\nAdvanced CSS with CSS3\nThe first implementation of CSS was drawn up in 1996, was released in 1999, and has\nbeen supported by all browser releases since 2001. The standard for this version,\nCSS1, was revised in 2008. Beginning in 1998, developers began drawing up the sec‐\nond specification, CSS2; its standard was completed in 2007 and revised in 2009.\nDevelopment for the CSS3 specification commenced in 2001, with some features\nbeing proposed as recently as 2009. Therefore, the development process will likely\ncontinue for some time before a final recommendation for CSS3 is approved. And\neven though CSS3 isn’t yet complete, people are already beginning to put forward\nsuggestions for CSS4.\nIn this chapter, I’ll take you through the CSS3 features that have already been gener‐\nally adopted by the major browsers. Some of these features provide functionality that\nhitherto could be provided only with JavaScript.\nI recommend using CSS3 to implement dynamic features where you can, instead of\nJavaScript. The features provided by CSS make document attributes part of the docu‐\nment itself, instead of being tacked on through JavaScript. Making them part of the\ndocument is a cleaner design.\nAttribute Selectors\nIn the previous chapter, I detailed the various CSS attribute selectors, which I will\nnow quickly recap. Selectors are used in CSS to match HTML elements, and there are\n10 different types, as detailed in Table 19-1 .\n451"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 482,
    "text": "Table 19-1. CSS selectors, pseudoclasses, and pseudoelements\nSelector type Example\nUniversal selector * { color:#555; }\nType selectors b { color:red; }\nClass selectors .classname { color:blue; }\nID selectors #idname { background:cyan; }\nDescendant selectors span em { color:green; }\nChild selectors div > em { background:lime; }\nAdjacent sibling selectors i + b { color:gray; }\nAttribute selectors a[href='info.htm'] { color:red; }\nPseudoclasses a:hover { font-weight:bold; }\nPseudoelements P::first-letter { font-size:300%; }\nThe CSS3 designers decided that most of these selectors work just fine the way they\nare, but three enhancements have been made so that you can more easily match ele‐\nments based on the contents of their attributes.\nMatching Parts of Strings\nIn CSS2 you can use a selector  such as a[href='info.htm']  to match the string\ninfo.htm  when found in an href  attribute, but there’s no way to match only a portion\nof a string. However, CSS3 comes to the rescue with three new operators: ^, $, and *.\nIf one directly precedes the = symbol, you can match the start, end, or any part of a\nstring, respectively.\nThe ^ operator\nThis operator matches at  the start of a string so, for example, the following will match\nany href  attribute whose value begins with the string http://website :\na[href^='http://website']\nTherefore, the following element will match:\n<a href='http://website.com'>\nBut this will not:\n<a href='http://mywebsite.com'>\nThe $ operator\nTo match only at the end of a string, you can use a selector such as the following,\nwhich will match any img tag whose src attribute ends with .png :\nimg[src$='.png']\n452 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 483,
    "text": "For example, the following will match :\n<img src='photo.png'>\nBut this will not:\n<img src='snapshot.jpg'>\nThe * operator\nTo match any substring anywhere  in the attribute, you can use a selector such as the\nfollowing to find any links on a page that have the string google  anywhere within\nthem:\na[href*='google']\nFor example, the HTML segment <a href='http://google.com'>  will match, while\nthe segment <a href='http://gmail.com'>  will not.\nThe box-sizing Property\nThe W3C box model specifies that the width and height of an object should refer only\nto the dimensions of an element’s content, ignoring any padding or border. But some\nweb designers have expressed a desire to specify dimensions that refer to an entire\nelement, including any padding and border.\nTo provide this feature, CSS3 lets you choose the  box model you wish to use with the\nbox-sizing  property. For example, to use the total width and height of an object\nincluding padding and borders, you would use this declaration:\nbox-sizing:border-box;\nOr, to have an object’s width and height refer only to its content, you would use this\ndeclaration (the default):\nbox-sizing:content-box;\nSafari and Mozilla-based browsers (such as Firefox) require their\nown prefixes to this declaration ( -webkit-  and –moz- ), as detailed\nat http://caniuse.com .\nCSS3 Backgrounds\nCSS3 provides two new properties: background-clip  and background-origin .\nBetween them, you can specify where a background should start within an element,\nand how to clip the background so that it doesn’t appear in parts of the box model\nwhere you don’t want it to.\nThe box-sizing Property | 453"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 484,
    "text": "To accomplish these, both properties support the following values:\nborder-box\nRefers to the outer edge of the border\npadding-box\nRefers to the outer edge of the padding area\ncontent-box\nRefers to the outer edge of the content area\nThe background-clip Property\nThe background-clip  property specifies whether the background should be ignored\n(clipped) if it appears within either the border or padding area of an element. For\nexample, the following declaration states that the background may display in all parts\nof an element, all the way to the outer edge of the border:\nbackground-clip:border-box;\nTo keep the background from appearing within the border area of an element, you\ncan restrict it to only the section of an element inside the outer edge of its padding\narea, like this:\nbackground-clip:padding-box;\nOr to restrict the background to display only within the content area of an element,\nyou would use this declaration:\nbackground-clip:content-box;\nFigure 19-1  shows three rows of elements displayed in the Safari web browser, in\nwhich the first row uses border-box  for the background-clip  property, the second\nuses padding-box , and the third uses content-box .\n454 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 485,
    "text": "Figure 19-1. Different  ways of combining CSS3 background properties\nIn the first row, the inner box (an image file that has been loaded into the top left of\nthe element, with repeating disabled) is allowed to display anywhere in the element.\nY ou can also clearly see it displayed in the border area of the first box because the\nborder has been set to dotted.\nIn the second row, neither the background image nor the background shading dis‐\nplays in the border area, because they have been clipped to the padding area with a\nbackground-clip  property value of padding-box .\nCSS3 Backgrounds | 455"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 486,
    "text": "Then, in the third row, both the background shading and the image have been clip‐\nped to display only within the inner content area of each element (shown inside a\nlight-colored, dotted box), using a background-clip  property of content-box .\nThe background-origin Property\nWith the background-origin  property, you can control where a background image\nwill be located by specifying where the top left of the image should start. For example,\nthe following declaration states that the background image’s origin should be the top-\nleft corner of the outer edge of the border:\nbackground-origin:border-box;\nTo set the origin of an image to the top-left outer corner of the padding area, you\nwould use this declaration:\nbackground-origin:padding-box;\nOr to set the origin of an image to the top-left corner of an element’s inner content\nsection, you would use this declaration:\nbackground-origin:content-box;\nLooking again at Figure 19-1 , you can see in each row the first box uses a\nbackground-origin  property of border-box , the second uses padding-box , and the\nthird uses content-box . Consequently, in each row the smaller inner box displays at\nthe top left of the border in the first box, the top left of the padding in the second, and\nthe top left of the content in the third box.\nThe only differences to note between the rows, with regard to the\norigins of the inner box in Figure 19-1 , are that in rows 2 and 3 the\ninner box is clipped to the padding and content areas, respectively;\ntherefore, outside these areas no portion of the box is displayed.\nThe background-size Property\nIn the same way that you can specify the width and height of an image when used in\nthe <img>  tag, you can now also do so for background images on the latest versions of\nall browsers.\nY ou apply the property as follows (where ww is the width and hh is the height):\nbackground-size: wwpx hhpx;\nIf you prefer, you can use only one argument, and then both dimensions will be set to\nthat value. Also, if you apply this property to a block-level element such as a <div>\n(rather than one that is inline such as a <span> ), you can specify the width and/or\nheight as a percentage, instead of a fixed value.\n456 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 487,
    "text": "Using the auto Value\nIf you wish to scale only one dimension of a background image, and then have the\nother one scale automatically to retain the same proportions, you can use the value\nauto  for the other dimension, like this:\nbackground-size:100px auto;\nThis sets the width to 100 pixels, and the height to a value proportionate to the\nincrease or decrease in width.\nDifferent browsers may require different versions of the various\nbackground property names, so please refer to http://caniuse.com\nwhen using them to ensure you are applying all the versions\nrequired for the browsers you are targeting.\nMultiple Backgrounds\nWith CSS3 you can now attach multiple backgrounds to an element, each of which\ncan use the previously discussed CSS3 background properties. Figure 19-2  shows an\nexample of this; eight different images have been assigned to the background, to cre‐\nate the four corners and four edges of the certificate border.\nFigure 19-2. A background created with multiple images\nTo display multiple background images in a single CSS declaration, separate them\nwith commas. Example 19-1  shows the HTML and CSS that was used to create the\nbackground in Figure 19-2 .\nMultiple Backgrounds | 457"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 488,
    "text": "Example 19-1. Using multiple images in a background\n<!DOCTYPE html>\n<html> <!-- backgroundimages.html -->\n  <head>\n    <title>CSS3 Multiple Backgrounds Example</title>\n    <style>\n      .border {\n        font-family:'Times New Roman';\n        font-style :italic;\n        font-size  :170%;\n        text-align :center;\n        padding    :60px;\n        width      :350px;\n        height     :500px;\n        background :url('b1.gif') top    left  no-repeat,\n                    url('b2.gif') top    right no-repeat,\n                    url('b3.gif') bottom left  no-repeat,\n                    url('b4.gif') bottom right no-repeat,\n                    url('ba.gif') top          repeat-x,\n                    url('bb.gif') left         repeat-y,\n                    url('bc.gif') right        repeat-y,\n                    url('bd.gif') bottom       repeat-x\n      }\n    </style>\n  </head>\n  <body>\n    <div class='border'>\n      <h1>Employee of the month</h1>\n      <h2>Awarded To:</h2>\n      <h3>__________________</h3>\n      <h2>Date:</h2>\n      <h3>___/___/_____</h3>\n    </div>\n  </body>\n</html>\nLooking at the CSS section, you see that the first four lines of the background  declara‐\ntion place the corner images into the four corners of the element, and the final four\nplace the edge images, which are handled last because the order of priority for back‐\nground images goes from high to low. In other words, where they overlap, additional\nbackground images will appear behind already placed images. If the GIFs were in the\nreverse order, the repeating edge images would display on top of the corners, which\nwould be incorrect.\nUsing this CSS, you can resize the containing element to any\ndimensions, and the border will always correctly resize to fit, which\nis much easier than using tables or multiple elements for the same\neffect.\n458 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 489,
    "text": "CSS3 Borders\nCSS3 also brings a lot more flexibility to the way borders can be presented, by allow‐\ning you to independently change the colors of all four border edges, to display images\nfor the edges and corners, to provide a radius value for applying rounded corners to\nborders, and to place box shadows underneath elements.\nThe border-color Property\nThere are two ways you can apply colors  to a border. First, you can pass a single color\nto the property, as follows:\nborder-color:#888;\nThis property sets all the borders of an element to mid-gray. Y ou can also set border\ncolors individually, like this (which sets the border colors to various shades of gray):\nborder-top-color   :#000;\nborder-left-color  :#444;\nborder-right-color :#888;\nborder-bottom-color:#ccc;\nY ou can also set all the colors individually with a single declaration, as follows:\nborder-color:#f00 #0f0 #880 #00f;\nThis declaration sets the top border color to #f00 , the right one to #0f0 , the bottom\none to #880 , and the left one to #00f  (red, green, orange, and blue, respectively). Y ou\ncan also use color names for the arguments.\nThe border-radius Property\nPrior to CSS3, talented web developers came up with numerous tweaks and fixes in\norder to achieve rounded borders, generally using <table>  or <div>  tags.\nBut now adding rounded borders to an element is really simple, and it works on the\nlatest versions of all major browsers, as shown in Figure 19-3 , in which a 10-pixel\nborder is displayed in different ways. Example 19-2  shows the HTML for this.\nExample 19-2. The border-radius property\n<!DOCTYPE html>\n<html> <!-- borderradius.html -->\n  <head>\n    <title>CSS3 Border Radius Examples</title>\n    <style>\n      .box {\n        margin-bottom:10px;\n        font-family  :'Courier New', monospace;\n        font-size    :12pt;\nCSS3 Borders | 459"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 490,
    "text": "text-align   :center;\n        padding      :10px;\n        width        :380px;\n        height       :75px;\n        border       :10px solid #006;\n      }\n      .b1 {\n        -moz-border-radius   :40px;\n        -webkit-border-radius:40px;\n        border-radius        :40px;\n      }\n      .b2 {\n        -moz-border-radius   :40px 40px 20px 20px;\n        -webkit-border-radius:40px 40px 20px 20px;\n        border-radius        :40px 40px 20px 20px;\n      }\n      .b3 {\n        -moz-border-radius-topleft        :20px;\n        -moz-border-radius-topright       :40px;\n        -moz-border-radius-bottomleft     :60px;\n        -moz-border-radius-bottomright    :80px;\n        -webkit-border-top-left-radius    :20px;\n        -webkit-border-top-right-radius   :40px;\n        -webkit-border-bottom-left-radius :60px;\n        -webkit-border-bottom-right-radius:80px;\n        border-top-left-radius            :20px;\n        border-top-right-radius           :40px;\n        border-bottom-left-radius         :60px;\n        border-bottom-right-radius        :80px;\n      }\n      .b4 {\n        -moz-border-radius-topleft        :40px 20px;\n        -moz-border-radius-topright       :40px 20px;\n        -moz-border-radius-bottomleft     :20px 40px;\n        -moz-border-radius-bottomright    :20px 40px;\n        -webkit-border-top-left-radius    :40px 20px;\n        -webkit-border-top-right-radius   :40px 20px;\n        -webkit-border-bottom-left-radius :20px 40px;\n        -webkit-border-bottom-right-radius:20px 40px;\n        border-top-left-radius            :40px 20px;\n        border-top-right-radius           :40px 20px;\n        border-bottom-left-radius         :20px 40px;\n        border-bottom-right-radius        :20px 40px;\n      }\n    </style>\n  </head>\n  <body>\n    <div class='box b1'>\n      border-radius:40px;\n    </div>\n    <div class='box b2'>\n460 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 491,
    "text": "border-radius:40px 40px 20px 20px;\n    </div>\n    <div class='box b3'>\n      border-top-left-radius &nbsp;&nbsp;&nbsp;:20px;<br>\n      border-top-right-radius &nbsp;&nbsp;:40px;<br>\n      border-bottom-left-radius :60px;<br>\n      border-bottom-right-radius:80px;\n    </div>\n    <div class='box b4'>\n      border-top-left-radius &nbsp;&nbsp;&nbsp;:40px 20px;<br>\n      border-top-right-radius &nbsp;&nbsp;:40px 20px;<br>\n      border-bottom-left-radius :20px 40px;<br>\n      border-bottom-right-radius:20px 40px;\n    </div>\n  </body>\n</html>\nFigure 19-3. Mixing and matching various border radius properties\nCSS3 Borders | 461"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 492,
    "text": "So, for example, to create a rounded border with a radius of 19 pixels, you could sim‐\nply use the following declaration:\nborder-radius:20px;\nAlthough most browsers will work fine with border radius proper‐\nties (including IE), some current (and many older) versions of the\nmajor browsers use different property names. So, if you wish to\nsupport them all, you will need to also use the relevant browser-\nspecific prefixes for them, such as -moz-  and -webkit- . To ensure\nthat Example 19-2  works in all browsers, I have included all the\nrequired prefixes.\nY ou can specify a separate radius for each of the four corners, like this (applied in a\nclockwise direction starting from the top-left corner):\nborder-radius:10px 20px 30px 40px;\nIf you prefer, you can also address each corner of an element individually, like this:\nborder-top-left-radius    :20px;\nborder-top-right-radius   :40px;\nborder-bottom-left-radius :60px;\nborder-bottom-right-radius:80px;\nAnd, when referencing individual corners, you can supply two arguments to choose a\ndifferent vertical and horizontal radius (giving more interesting and subtle borders),\nlike this:\nborder-top-left-radius    :40px 20px;\nborder-top-right-radius   :40px 20px;\nborder-bottom-left-radius :20px 40px;\nborder-bottom-right-radius:20px 40px;\nThe first argument is the horizontal, and the second is the vertical radius.\nBox Shadows\nTo apply a box shadow, specify a horizontal and vertical  offset from the object, the\namount of blurring to add to the shadow, and the color to use, like this:\nbox-shadow:15px 15px 10px #888;\nThe two instances of 15px  specify the vertical and horizontal offset from the element,\nand these values can be negative, zero, or positive. The 10px  specifies the amount of\nblurring, with smaller values resulting in less blurring. And the #888  is the color for\nthe shadow, which can be any valid color value. The result of this declaration can be\nseen in Figure 19-4 .\n462 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 493,
    "text": "Figure 19-4. A box shadow displayed under an element\nY ou must use the WebKit and Mozilla prefixes to this property for\nthose browsers.\nElement Overflow\nIn CSS2, you can indicate what to do when one element is too large to be fully con‐\ntained by its parent by setting the overflow  property to hidden , visible , scroll , or\nauto . But with CSS3, you can now separately apply these values in the horizontal or\nvertical directions, too, as with these example declarations:\noverflow-x:hidden;\noverflow-x:visible;\noverflow-y:auto;\noverflow-y:scroll;\nMulticolumn Layout\nOne of the most requested features by web developers is multiple columns, and this\nhas finally been realized in CSS3, with Internet Explorer 10 being the last major\nbrowser to adopt it.\nNow, flowing text over multiple columns is as easy as specifying the number of col‐\numns, and then (optionally) choosing the spacing between them and the type of\ndividing line (if any), as shown in Figure 19-5  (created using Example 19-3 ).\nElement Overflow  | 463"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 494,
    "text": "Figure 19-5. Flowing text in multiple columns\nExample 19-3. Using CSS to create multiple columns\n<!DOCTYPE html>\n<html> <!-- multiplecolumns.html -->\n  <head>\n    <title>Multiple Columns</title>\n    <style>\n      .columns {\n        text-align          :justify;\n        font-size           :16pt;\n        -moz-column-count   :3;\n        -moz-column-gap     :1em;\n        -moz-column-rule    :1px solid black;\n        -webkit-column-count:3;\n        -webkit-column-gap  :1em;\n        -webkit-column-rule :1px solid black;\n        column-count        :3;\n        column-gap          :1em;\n        column-rule         :1px solid black;\n      }\n    </style>\n  </head>\n  <body>\n    <div class='columns'>\n      Now is the winter of our discontent\n      Made glorious summer by this sun of York;\n      And all the clouds that lour'd upon our house\n      In the deep bosom of the ocean buried.\n      Now are our brows bound with victorious wreaths;\n      Our bruised arms hung up for monuments;\n      Our stern alarums changed to merry meetings,\n      Our dreadful marches to delightful measures.\n      Grim-visaged war hath smooth'd his wrinkled front;\n      And now, instead of mounting barded steeds\n464 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 495,
    "text": "To fright the souls of fearful adversaries,\n      He capers nimbly in a lady's chamber\n      To the lascivious pleasing of a lute.\n    </div>\n  </body>\n</html>\nWithin the .columns  class, the first two lines simply tell the browser to right-justify\nthe text and to set it to a font size of 16pt . These declarations aren’t needed for multi‐\nple columns, but they improve the text display. The remaining lines set up the ele‐\nment so that, within it, text will flow over three columns, with a gap of 1em between\nthe columns, and with a single-pixel border down the middle of each gap.\nIn Example 19-3 , Mozilla- and WebKit-based browsers require\nbrowser-specific prefixes to the declarations.\nColors and Opacity\nThe ways in which you can define colors have been greatly expanded with CSS3, and\nyou can now also use CSS functions to apply colors in the common formats RGB\n(Red, Green, and Blue), RGBA (Red, Green, Blue, and Alpha), HSL (Hue, Saturation,\nand Luminance), and HSLA (Hue, Saturation, Luminance, and Alpha). The Alpha\nvalue specifies a color’s transparency, which allows underlying elements to show\nthrough.\nHSL Colors\nTo define a color with the hsl function, you must first  choose a value for the hue\nbetween 0 and 359 from a color wheel. Any higher color numbers simply wrap\naround to the beginning again, so the value of 0 is red, and so are the values 360 and\n720.\nIn a color wheel, the primary colors of red, green, and blue are separated by 120\ndegrees, so that pure red is 0, green is 120, and blue is 240. The numbers between\nthese values represent shades comprising different proportions of the primary colors\non either side.\nNext you need the saturation level, which is a value between 0 and 100 percent. This\nspecifies how washed-out or vibrant a color will appear. The saturation values com‐\nmence in the center of the wheel with a mid-gray color (a saturation of 0 percent) and\nthen become more and more vivid as they progress to the outer edge (a saturation of\n100 percent).\nColors and Opacity | 465"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 496,
    "text": "All that’s left then is for you to decide how bright you want the color to be, by choos‐\ning a luminance value of between 0 and 100 percent. A value of 50% for the lumi‐\nnance gives the fullest, brightest color; decreasing the value (down to a minimum of\n0%) darkens the color until it displays as black; and increasing the value (up to a max‐\nimum of 100%) lightens the color until it shows as white. Y ou can visualize this as if\nyou are mixing levels of either black or white into the color.\nTherefore, for example, to choose a fully saturated yellow color with standard percent\nbrightness, you would use a declaration such as this:\ncolor:hsl(60, 100%, 50%);\nOr, for a darker blue color, you might use a declaration such as this:\ncolor:hsl(240, 100%, 40%);\nY ou can also use this (and all other CSS color functions) with any property that\nexpects a color, such as background-color , and so on.\nHSLA Colors\nTo provide even further control over how colors will appear, you can use the hsla  \nfunction, supplying it with a fourth (or alpha) level for a color, which is a floating-\npoint value between 0 and 1. A value of 0 specifies that the color is totally transparent,\nwhile 1 means it is fully opaque.\nHere’s how you would choose a fully saturated yellow color with standard brightness\nand 30 percent opacity:\ncolor:hsla(60, 100%, 50%, 0.3);\nOr, for a fully saturated but lighter blue color with 82 percent opacity, you might use\nthis declaration:\ncolor:hsla(240, 100%, 60%, 0.82);\nRGB Colors\nY ou will probably  be more familiar with using the RGB system of selecting a color, as\nit’s similar to using the #nnnnnn  and #nnn  color formats. For example, to apply a yel‐\nlow color to a property, you can use either of the following declarations (the first sup‐\nporting 16 million colors, and the second supporting 4,000):\ncolor:#ffff00;\ncolor:#ff0;\nY ou can also use the CSS rgb function to achieve the same result, but you use decimal\nnumbers instead of hexadecimal (where 255 decimal is ff hexadecimal):\ncolor:rgb(255, 255, 0);\n466 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 497,
    "text": "But even better than that, you don’t even have to think in amounts of up to 256 any‐\nmore, because you can specify percentage values, like this:\ncolor:rgb(100%, 100%, 0);\nIn fact, you can now get very close to a desired color by simply thinking about its\nprimary colors. For example, green and blue make cyan, so to create a color close to\ncyan, but with more blue in it than green, you could make a good first guess at 0%\nred, 40% green, and 60% blue, and try a declaration such as this:\ncolor:rgb(0%, 40%, 60%);\nRGBA Colors\nAs with the hsla  function,  the rgba  function  supports a fourth alpha argument, so\nyou can, for example, apply the previous cyan-like color with an opacity of 40 percent\nby using a declaration such as this:\ncolor:rgba(0%, 40%, 60%, 0.4);\nThe opacity Property\nThe opacity  property provides the same alpha control as the hsla  and rgba  func‐\ntions, but lets you modify an object’s opacity (or transparency if you prefer) sepa‐\nrately from its color.\nTo use it, apply a declaration such as the following to an element (which in this exam‐\nple sets the opacity to 25 percent, or 75 percent transparent):\nopacity:0.25;\nWebKit- and Mozilla-based browsers require browser-specific pre‐\nfixes to this property.  And for backward compatibility with releases\nof Internet Explorer prior to version 9, you should add the follow‐\ning declaration (in which the opacity value is multiplied by 100):\nfilter:alpha(opacity='25');\nText Effects\nA number of new effects can now be applied to text with the help of CSS3, including\ntext shadows, text overlapping, and word wrapping.\nThe text-shadow Property\nThe text-shadow  property is similar to the box-shadow  property and takes the same\nset of arguments: a horizontal and vertical offset, an amount for the blurring, and the\ncolor to use. For example, the following declaration offsets the shadow by 3 pixels\nText Effects  | 467"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 498,
    "text": "both horizontally and vertically, and displays the shadow in dark gray, with a blurring\nof 4 pixels:\ntext-shadow:3px 3px 4px #444;\nThe result of this declaration looks like Figure 19-6 , and works in all recent versions\nof all major browsers (but not IE9 or lower).\nFigure 19-6. Applying a shadow to text\nThe text-overflow  Property\nWhen using any of the CSS overflow properties with a value of hidden , you can also\nuse the text-overflow  property to place an ellipsis (three dots) just before the cutoff\nto indicate that some text has been truncated, like this:\ntext-overflow:ellipsis;\nWithout this property, when the text “To be, or not to be. That is the question. ” is\ntruncated, the result will look like Figure 19-7 ; with the declaration applied, however,\nthe result is like Figure 19-8 .\nFigure 19-7. The text is automatically truncated\nFigure 19-8. Instead of being cut off, the text trails off using an ellipsis\nFor this to work, three things are required:\n•The element should have an overflow  property that is not visible, such as over\nflow:hidden .\n•The element must have the white-space:nowrap  property set to constrain  the\ntext.\n•The width of the element must be less than that of the text to truncate.\n468 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 499,
    "text": "The word-wrap Property\nWhen you have a really long word that is wider than the element containing it, it will\neither overflow or be truncated. But as an alternative to using the text-overflow\nproperty and truncating text, you can use the word-wrap  property with a value of\nbreak-word  to wrap long lines, like this:\nword-wrap:break-word;\nFor example, in Figure 19-9  the word Honorificabilitudinitatibus  is too wide for the\ncontaining box (whose righthand edge is shown as a solid vertical line between the\nletters t and a) and, because no overflow properties have been applied, it has over‐\nflowed its bounds.\nFigure 19-9. The word is too wide for its container and has overflowed\nBut in Figure 19-10 , the word-wrap  property of the element has been assigned a value\nof break-word , so the word has neatly wrapped around to the next line.\nFigure 19-10. The word now wraps at the right-hand edge\nWeb Fonts\nThe use of CSS3 web fonts vastly increases  the typography available to web designers\nby allowing fonts to be loaded in and displayed from across the Web, not just from\nthe user’s computer. To achieve this, declare a web font by using @font-face , like this:\n@font-face\n{\n  font-family:FontName;\n  src:url('FontName.otf');\n}\nThe url function  requires a value containing the path or URL of a font. On most\nbrowsers, you can use either TrueType ( .ttf) or OpenType ( .otf) fonts,  but Internet\nExplorer restricts you to TrueType fonts that have been converted to EOT ( .eot).\nWeb Fonts | 469"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 500,
    "text": "To tell the browser the type of font, you can use the format  function, like this (for\nOpenType fonts):\n@font-face\n{\n  font-family:FontName;\n  src:url('FontName.otf') format('opentype');\n}\nOr this for TrueType fonts:\n@font-face\n{\n  font-family:FontName;\n  src:url('FontName.ttf') format('truetype');\n}\nHowever, because Microsoft Internet Explorer accepts only EOT fonts, it ignores\n@font-face  declarations that contain the format  function.\nGoogle Web Fonts\nOne of the best ways to use web fonts is to load them in for free from Google’s\nservers. To find out more about this, check out the Google Fonts website (at http://\ngoogle.com/fonts , see Figure 19-11 ), where you can get access to over 630 font fami‐\nlies, and counting!\n470 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 501,
    "text": "Figure 19-11. It’s easy to include Google’s web fonts\nTo show you how easy it is to use one of these fonts, here’s how you load a Google\nfont (in this case, Lobster) into your HTML for use in <h1>  headings:\n<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      h1 { font-family:'Lobster', arial, serif; }\n    </style>\n    <link href='http://fonts.googleapis.com/css?family=Lobster'\n      rel='stylesheet' type='text/css'>\n  </head>\n  <body>\n    <h1>Hello</h1>\n  </body>\n</html>\nGoogle Web Fonts | 471"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 502,
    "text": "Transformations\nUsing transformations, you can skew, rotate, stretch, and squash elements in any of\nup to three  dimensions (yes, 3D is supported, but only in WebKit-based browsers for\nnow). This makes it easy to create great effects by stepping out of the uniform rectan‐\ngular layout of <div>  and other elements, because now they can be shown at a variety\nof angles and in many different forms.\nTo perform a transformation, use the transform  property (which unfortunately has\nbrowser-specific prefixes for Mozilla, WebKit, Opera, and Microsoft browsers, so\nonce again you’ll need to refer to http://caniuse.com ).\nY ou can apply various properties to the transform  property, starting with the value\nnone , which resets an object to a nontransformed state:\ntransform:none;\nY ou can supply one or more of the following functions to the transform  property:\nmatrix\nTransforms an object by applying a matrix of values to it\ntranslate\nMoves an element’s origin\nscale\nScales an object\nrotate\nRotates an object\nskew\nSkews an object\nThere are also single versions of many of these functions, such as translateX ,\nscaleY , and so on.\nSo, for example, to rotate an element clockwise by 45 degrees, you could apply this\ndeclaration to it:\ntransform:rotate(45deg);\nAt the same time, you could enlarge this object, as in the following declaration, which\nenlarges its width by 1.5 times and its height by 2 times, and then performs the rota‐\ntion. Figure 19-12  shows an object before the transformations are applied, and then\nafterward:\ntransform:scale(1.5, 2) rotate(45deg);\n472 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 503,
    "text": "Figure 19-12. An object before and after  transformation\n3D Transformations\nY ou can also transform objects in three dimensions by using the following CSS3 3D\ntransformation features:\nperspective\nReleases an element from 2D space and creates a third dimension within which it can\nmove\ntransform-origin\nSets the location at which all lines converge to a single point\ntranslate3d\nMoves an element to another location in its 3D space\nscale3d\nRescales one or more dimensions\nrotate3d\nRotates an element around any of the x-, y-, and z-axes\nFigure 19-13  shows a 2D object that has been rotated in 3D space with a CSS rule\nsuch as the following:\ntransform:perspective(200px) rotateX(10deg) rotateY(20deg) rotateZ(30deg);\n3D Transformations | 473"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 504,
    "text": "Figure 19-13. A figure  rotated in 3D space\nFor more information, please refer to the tutorial at http://tinyurl.com/3dcsstransforms\n(or use the direct URL http://24ways.org/2010/intro-to-css-3d-transforms ).\nTransitions\nAlso appearing on all the latest versions of the major browsers (including Internet\nExplorer 10, but not lower versions) is a dynamic new feature called transitions . These\nspecify an animation effect you want to occur when an element is transformed, and\nthe browser will automatically take care of all the in-between frames for you.\nThere are four properties you should supply in order to set up a transition, as follows:\ntransition-property       : property ;\ntransition-duration       : time;\ntransition-delay          : time;\ntransition-timing-function: type;\nY ou must preface these properties with the relevant browser pre‐\nfixes for Mozilla, WebKit, Opera, and Microsoft browsers.\nProperties to Transition\nTransitions have properties such as height  and border-color . Specify the properties\nyou want to change in the CSS property named transition-property  (here the word\nproperty  is used by different tools to mean different things). Y ou can include multiple\nproperties by separating them with commas, like this:\ntransition-property:width, height, opacity;\n474 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 505,
    "text": "Or, if you want absolutely everything about an element to transition (including col‐\nors), use the value all, like this:\ntransition-property:all;\nTransition Duration\nThe transition-duration  property  requires a value of 0 seconds or greater, like the\nfollowing, which specifies that the transition should take 1.25 seconds to complete:\ntransition-duration:1.25s;\nTransition Delay\nIf the transition-delay  property is given a value greater than 0 seconds (the\ndefault), it introduces a delay between the initial display of the element and the begin‐\nning of the transition. The following starts the transition after a 0.1-second delay:\ntransition-delay:0.1s;\nIf the transition-delay  property is given a value of less than 0 seconds (in other\nwords, a negative value), the transition will execute the moment the property is\nchanged, but will appear to have begun execution at the specified offset, partway\nthrough its cycle.\nTransition Timing\nThe transition-timing  function property requires one of the following values:\nease\nStart slowly, get faster, and then end slowly.\nlinear\nTransition at constant speed.\nease-in\nStart slowly, and then go quickly until finished.\nease-out\nStart quickly, stay fast until near the end, and then end slowly.\nease-in-out\nStart slowly, go fast, and then end slowly.\nUsing any of the values containing the word ease ensures that the transition looks\nextra fluid and natural, unlike a linear transition that somehow seems more mechani‐\ncal. And if these aren’t sufficiently varied for you, you can also create your own transi‐\ntions using the cubic-bezier  function.\nTransitions | 475"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 506,
    "text": "For example, following are the declarations used to create the preceding five transi‐\ntion types, illustrating how you can easily create your own:\ntransition-timing-function:cubic-bezier(0.25, 0.1, 0.25, 1);\ntransition-timing-function:cubic-bezier(0,    0,   1,    1);\ntransition-timing-function:cubic-bezier(0.42, 0,   1,    1);\ntransition-timing-function:cubic-bezier(0,    0,   0.58, 1);\ntransition-timing-function:cubic-bezier(0.42, 0,   0.58, 1);\nShorthand Syntax\nY ou may find it easier to use the shorthand version of this property and include all\nthe values in a single declaration like the following, which will transition all proper‐\nties in a linear  fashion, over a period of .3 seconds, after an initial (optional) delay of .\n2 seconds:\ntransition:all .3s linear .2s;\nDoing so will save you the trouble of entering many very similar declarations, partic‐\nularly if you are supporting all the major browser prefixes.\nExample 19-4  illustrates how you might use transitions and transformations together.\nThe CSS creates a square, orange element with some text in it, and a hover  pseudo‐\nclass  specifying that when the mouse passes over the object, it should rotate by 180\ndegrees and change from orange to yellow (see Figure 19-14 ).\nExample 19-4. A transition on hover effect\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Transitioning on hover</title>\n    <style>\n      #square {\n        position          :absolute;\n        top               :50px;\n        left              :50px;\n        width             :100px;\n        height            :100px;\n        padding           :2px;\n        text-align        :center;\n        border-width      :1px;\n        border-style      :solid;\n        background        :orange;\n        transition        :all .8s ease-in-out;\n        -moz-transition   :all .8s ease-in-out;\n        -webkit-transition:all .8s ease-in-out;\n        -o-transition     :all .8s ease-in-out;\n        -ms-transition    :all .8s ease-in-out;\n      }\n476 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 507,
    "text": "#square:hover {\n        background        :yellow;\n        -moz-transform    :rotate(180deg);\n        -webkit-transform :rotate(180deg);\n        -o-transform      :rotate(180deg);\n        -ms-transform     :rotate(180deg);\n        transform         :rotate(180deg);\n      }\n    </style>\n  </head>\n  <body>\n    <div id='square'>\n      Square shape<br>\n      created using<br>\n      a simple div<br>\n      element with<br>\n      a 1px border\n    </div>\n  </body>\n</html>\nFigure 19-14. The object rotates and changes color when hovered over\nThe sample code caters to all browsers by providing browser-specific versions of the\ndeclarations. On all the latest browsers (including IE10 or higher), the object will\nrotate clockwise when hovered over, while slowly changing from orange to yellow.\nCSS transitions are smart in that when they are cancelled, they smoothly return to\ntheir original value. So if you move the mouse away before the transition has comple‐\nted, it will instantly reverse and start transition back to its initial state.\nQuestions\n1.What do the CSS3 attribute selector operators ^=, $=, and *= do?\n2.What property do you use to specify the size of a background image?\nQuestions | 477"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 508,
    "text": "3.With which property can you specify the radius of a border?\n4.How can you flow text over multiple columns?\n5.Name the four functions with which you can specify CSS colors.\n6.How would you create a gray text shadow under some text, offset diagonally to\nthe bottom right by 5 pixels, with a blurring of 3 pixels?\n7.How can you indicate with an ellipsis that text is truncated?\n8.How can you include a Google web font in a web page?\n9.What CSS declaration would you use to rotate an object by 90 degrees?\n10.How do you set up a transition on an object so that when any of its properties are\nchanged, the change will transition immediately in a linear fashion over the\ncourse of half a second?\nSee Chapter 19 Answers  in Appendix A  for the answers to these questions.\n478 | Chapter 19: Advanced CSS with CSS3"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 509,
    "text": "CHAPTER 20\nAccessing CSS from JavaScript\nWith a good understanding of the DOM and CSS now under your belt, you’ll learn in\nthis chapter how to access both the DOM and CSS directly from JavaScript, enabling\nyou to create highly dynamic and responsive websites.\nI’ll also show you how to use interrupts so you can create animations or provide any\ncode that must continue running (such as a clock). Finally, I’ll explain how you can\nadd new elements to or remove existing ones from the DOM so you don’t have to\npre-create elements in HTML just in case JavaScript may need to access them later.\nRevisiting the getElementById Function\nTo help with the examples in the rest of this book, I would like to provide an\nenhanced version of the getElementbyId  function,  for handling DOM elements and\nCSS styles quickly and efficiently, without the need for including a framework such as\njQuery.\nHowever, to avoid conflicting with frameworks that use the $ character, I’ll use the\nuppercase O, since it’s the first letter of Object , which is what will be returned when\nthe function is called (the object represented by the ID passed to the function).\nThe O function\nHere’s what the bare-bones O function looks like:\nfunction O(i)\n{\n  return document.getElementById(i)\n}\n479"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 510,
    "text": "This alone saves 22 characters of typing each time it’s called. But I choose to extend\nthe function a little by allowing either an ID name or an object to be passed to this\nfunction, as shown in the complete version of the function in Example 20-1 .\nExample 20-1. The O() function\nfunction O(i)\n{\n  return typeof i == 'object' ? i : document.getElementById(i)\n}\nIf an object is passed to the function, it just returns that object back again. Otherwise,\nit assumes that an ID is passed and returns the object to which the ID refers.\nBut why on earth would I want to add this first statement, which simply returns the\nobject passed to it?\nThe S Function\nThe answer to this question becomes clear when you look at a partner function called\nS, which gives you easy access to the style  (or CSS) properties of an object, as shown\nin Example 20-2 .\nExample 20-2. The S() function\nfunction S(i)\n{\n  return O(i).style\n}\nThe S in this function name is the first letter of Style , and the function performs the\ntask of returning the style  property (or subobject) of the element referred to.\nBecause the embedded O function accepts either an ID or an object, you can pass\neither an ID or an object to S as well.\nLet’s look at what’s going on here by taking a <div>  element with the ID of myobj  and\nsetting its text color to green, like this:\n<div id='myobj'>Some text</div>\n<script>\n  O('myobj').style.color = 'green'\n</script>\nThe preceding code will do the job, but it’s much simpler to call the new S function,\nlike this:\nS('myobj').color = 'green'\n480 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 511,
    "text": "Now consider the case in which the object returned by calling O is stored in, for\nexample, an object called fred , like this:\nfred = O('myobj')\nBecause of the way function S works, we can still call it to change the text color to\ngreen, like this:\nS(fred).color = 'green'\nThis means that whether you wish to access an object directly or via its ID, you can\ndo so by passing it to either the O or S function as required. Just remember that when\nyou pass an object (rather than an ID), you must not place it in quotation marks.\nThe C Function\nSo far I’ve provided you with two simple functions that make it easy for you to access\nany element on a web page, and any style  property of an element. Sometimes,\nthough, you will want to access more than one element at a time, and you can do this\nby assigning a CSS class name to each such element, like these examples, which both\nemploy the class myclass :\n<div class='myclass'>Div contents</fiv>\n<p class='myclass'>Paragraph contents</p>\nIf you want to access all elements on a page that use a particular class, you can use the\nC function (for the first letter of Class ), shown in Example 20-3 , to return an array\ncontaining all the objects that match a class name provided.\nExample 20-3. The C() function\nfunction C(i)\n{\n  return document.getElementsByClassName(i)\n}\nTo use this function, simply call it as follows, saving the returned array so that you\ncan access each of the elements individually as required or (more likely to be the case)\nen masse via a loop:\nmyarray = C('myclass')\nNow you can do whatever you like with the objects returned, such as (for example)\nsetting their textDecoration  style property to underline , as follows:\nfor (i = 0 ; i < myarray.length ; ++i)\n  S(myarray[i]).textDecoration = 'underline'\nThis code iterates through the objects in myarray[]  and then uses the S function to\nreference each one’s style property, setting its textDecoration  property to underline .\nRevisiting the getElementById Function | 481"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 512,
    "text": "Including the Functions\nI use the O and S functions in the examples for the remainder of this chapter, as they\nmake the code shorter and easier to follow. Therefore, I have saved them in the file\nOSC.js  (along with the C function, as I think you’ll find it extremely useful) in the\nChapter 20  folder of the accompanying archive of examples, freely downloadable\nfrom the http://lpmj.net  website.\nY ou can include these functions in any web page by using the following statement—\npreferably in its <head>  section, anywhere before any script that relies on calling\nthem:\n<script src='OSC.js'></script>\nThe contents of OSC.js  are shown in Example 20-4 , where everything is neatened into\njust three lines.\nExample 20-4. The OSC.js file\nfunction O(i) { return typeof i == 'object' ? i : document.getElementById(i) }\nfunction S(i) { return O(i).style                                            }\nfunction C(i) { return document.getElementsByClassName(i)                    }\nAccessing CSS Properties from JavaScript\nThe textDecoration  property I used in an earlier  example represents a CSS property\nthat is normally hyphenated like this: text-decoration . But since JavaScript reserves\nthe hyphen character for use as a mathematical operator, whenever you access a\nhyphenated CSS property, you must omit the hyphen and set the character immedi‐\nately following it to uppercase.\nAnother example of this is the font-size  property (for example), which is referenced\nin JavaScript as fontSize  when placed after a period operator, like this:\nmyobject.fontSize = '16pt'\nAn alternative to this is to be more long-winded and use the setAttribute  function,\nwhich does support (and in fact requires) standard CSS property names, like this:\nmyobject.setAttribute('style', 'font-size:16pt')\nSome older versions of Microsoft Internet Explorer are picky in\ncertain instances about using the JavaScript-style CSS property\nnames when applying the browser-specific -ms-  prefixed versions\nof the rules. If you encounter this, use the setAttribute  function\nand you should be all right.\n482 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 513,
    "text": "Some Common Properties\nUsing JavaScript, you can modify any property of any element in a web document, in\na similar manner to using CSS. I’ve already shown you how to access CSS properties\nusing either the JavaScript short form or the setAttribute  function to use exact CSS\nproperty names, so I won’t bore you by detailing all of these hundreds of properties.\nRather, I’ d like to show you how to access just a few of the CSS properties as an over‐\nview of some of the things you can do.\nFirst, then, let’s look at modifying a few CSS properties from JavaScript using\nExample 20-5 , which loads in the three earlier functions, creates a <div>  element, and\nthen issues JavaScript statements within a <script>  section of HTML, to modify vari‐\nous of its attributes (see Figure 20-1 ).\nExample 20-5. Accessing CSS properties from JavaScript\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Accessing CSS Properties</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <div id='object'>Div Object</div>\n    <script>\n      S('object').border     = 'solid 1px red'\n      S('object').width      = '100px'\n      S('object').height     = '100px'\n      S('object').background = '#eee'\n      S('object').color      = 'blue'\n      S('object').fontSize   = '15pt'\n      S('object').fontFamily = 'Helvetica'\n      S('object').fontStyle  = 'italic'\n    </script>\n  </body>\n</html>\nAccessing CSS Properties from JavaScript | 483"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 514,
    "text": "Figure 20-1. Modifying styles from JavaScript\nY ou gain nothing by modifying properties like this, because you could just as easily\nhave included some CSS directly, but shortly we’ll be modifying properties in\nresponse to user interaction—and then you’ll see the real power of combining Java‐\nScript and CSS.\nOther Properties\nJavaScript also opens up access to a very wide range of other properties, such as the\nwidth and height of the browser and of any pop-up or in-browser windows or frames,\nhandy information such as the parent window (if there is one), and the history of\nURLs visited this session.\nAll these properties are accessed from the window  object via the period operator (for\nexample, window.name ), and Table 20-1  lists them all, along with descriptions of each.\nTable 20-1. Common window properties\nProperty Sets and/or returns\nclosed Returns a Boolean value indicating whether a window has been closed or not\ndefaultStatus Sets or returns the default text in the status bar of a window\ndocument Returns the document  object for the window\nframes Returns an array of all the frames and iframes in the window\nhistory Returns the history  object for the window\ninnerHeight Sets or returns the inner height of a window’s content area\ninnerWidth Sets or returns the inner width of a window’s content area\nlength Returns the number of frames and iframes in a window\nlocation Returns the location  object for the window\nname Sets or returns the name of a window\n484 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 515,
    "text": "Property Sets and/or returns\nnavigator Returns the navigator  object for the window\nopener Returns a reference to the window that created the window\nouterHeight Sets or returns the outer height of a window, including tool and scroll bars\nouterWidth Sets or returns the outer width of a window, including tool and scroll bars\npageXOffset Returns the pixels the document has been scrolled horizontally from the left of the window\npageYOffset Returns the pixels the document has been scrolled vertically from the top of the window\nparent Returns the parent window of a window\nscreen Returns the screen  object for the window\nscreenLeft Returns the x coordinate of the window relative to the screen in all recent browsers except Mozilla\nFirefox (for which you should use screenX )\nscreenTop Returns the y coordinate of the window relative to the screen in all recent browsers except Mozilla\nFirefox (for which you should use screenY )\nscreenX Returns the x coordinate of the window relative to the screen in all recent browsers except Opera, which\nreturns incorrect values; not supported in versions of IE prior to 9\nscreenY Returns the y coordinate of the window relative to the screen in all recent browsers except Opera, which\nreturns incorrect values; not supported in versions of IE prior to 9\nself Returns the current window\nstatus Sets or returns the text in the status bar of a window\ntop Returns the top browser window\nThere are a few points to note about some of these properties:\n•The defaultStatus  and status  properties can be  set only if users have modified\ntheir browsers to allow it (very unlikely).\n•The history  object cannot be read from (so you cannot see where your visitors\nhave been surfing). But it supports the length  property to determine how long\nthe history is, and the back , forward , and go methods to navigate to specific\npages in the history.\n•When you need to know how much space there is available in a current window\nof the web browser, just read  the values in window.innerHeight  and\nwindow.innerWidth . I often use these values for centering in-browser pop-up\nalert or “confirm dialog” windows.\n•The screen  object supports the read properties availHeight , availWidth , color\nDepth , height , pixelDepth , and width , and is therefore great for determining\ninformation about the user’s display.\nAccessing CSS Properties from JavaScript | 485"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 516,
    "text": "Many of these properties can be invaluable when you’re targeting\nmobile phones and tablet devices, as they will tell you exactly how\nmuch screen space you have to work with, the type of browser\nbeing used, and more.\nThese few items of information will get you started and already provide you with\nmany new and interesting things you can do with JavaScript. But, in fact, there are far\nmore properties and methods available than can be covered in this chapter. However,\nnow that you know how to access and use properties, all you need is a resource listing\nthem all, so I recommend that you check out tinyurl.com/domproperties as a good\nstarting point.\nInline JavaScript\nUsing <script>  tags isn’t the only  way you can execute JavaScript statements; you\ncan also access JavaScript from within HTML tags, which makes for great dynamic\ninteractivity. For example, to add a quick effect when the mouse passes over an object,\nyou can use code such as that in the <img>  tag in Example 20-6 , which displays an\napple by default, but replaces it with an orange when the mouse passes over, and\nrestores the apple again when the mouse leaves.\nExample 20-6. Using inline JavaScript\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Inline JavaScript</title>\n  </head>\n  <body>\n    <img src='apple.png'\n      onmouseover=\"this.src='orange.png'\"\n      onmouseout=\"this.src='apple.png'\">\n  </body>\n</html>\nThe this Keyword\nIn the preceding example, you see the this  keyword in use. It tells the JavaScript to\noperate on the calling object, namely the <img>  tag. Y ou can see the result in\nFigure 20-2 , where the mouse has yet to pass over the apple.\n486 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 517,
    "text": "Figure 20-2. Inline mouse hover JavaScript example\nWhen supplied from an inline JavaScript call, the this  keyword\nrepresents the calling object. When used in class methods, it repre‐\nsents an object to which the method applies.\nAttaching Events to Objects in a Script\nThe preceding code is the equivalent of providing an ID to the <img>  tag, and then\nattaching the actions to the tag’s mouse events, like Example 20-7 .\nExample 20-7. Non-inline JavaScript\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Non-inline JavaScript</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <img id='object' src='apple.png'>\n    <script>\n      O('object').onmouseover = function() { this.src = 'orange.png' }\n      O('object').onmouseout  = function() { this.src = 'apple.png'  }\n    </script>\n  </body>\n</html>\nIn the HTML section, this example gives the <img>  element an ID of object , and\nthen proceeds to manipulate it separately in the JavaScript section by attaching\nanonymous functions to each event.\nInline JavaScript | 487"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 518,
    "text": "Attaching to Other Events\nWhether you’re using inline or separate JavaScript, there are several events to which\nyou can attach actions, providing a wealth of additional features you can offer your\nusers. Table 20-2  lists these events and details when they will be triggered.\nTable 20-2. Events and when they are triggered\nEvent Occurs\nonabort When an image’s loading is stopped before completion\nonblur When an element loses focus\nonchange When any part of a form has changed\nonclick When an object is clicked\nondblclick When an object is double-clicked\nonerror When a JavaScript error is encountered\nonfocus When an element gets focus\nonkeydown When a key is being pressed (including Shift, Alt, Ctrl, and Esc)\nonkeypress When a key is being pressed (not including Shift, Alt, Ctrl, and Esc)\nonkeyup When a key is released\nonload When an object has loaded\nonmousedown When the mouse button is pressed over an element\nonmousemove When the mouse is moved over an element\nonmouseout When the mouse leaves an element\nonmouseover When the mouse passes over an element from outside it\nonmouseup When the mouse button is released\nonsubmit When a form is submitted\nonreset When a form is reset\nonresize When the browser is resized\nonscroll When the document is scrolled\nonselect When some text is selected\nonunload When a document is removed\nMake sure you attach events to objects that make sense. For exam‐\nple, an object that is not a form will not respond to the onsubmit\nevent.\n488 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 519,
    "text": "Adding New Elements\nWith JavaScript, you are not limited to manipulating the elements and objects sup‐\nplied to a document in its HTML. In fact, you can create objects at will by inserting\nthem into the DOM.\nFor example, suppose you need a new <div>  element. Example 20-8  shows one way \nyou can add it to the web page.\nExample 20-8. Inserting an element into the DOM\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Adding Elements</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    This is a document with only this text in it.<br><br>\n    <script>\n      alert('Click OK to add an element')\n      newdiv    = document.createElement('div')\n      newdiv.id = 'NewDiv'\n      document.body.appendChild(newdiv)\n      S(newdiv).border = 'solid 1px red'\n      S(newdiv).width  = '100px'\n      S(newdiv).height = '100px'\n      newdiv.innerHTML = \"I'm a new object inserted in the DOM\"\n      tmp              = newdiv.offsetTop\n      alert('Click OK to remove the element')\n      pnode = newdiv.parentNode\n      pnode.removeChild(newdiv)\n      tmp = pnode.offsetTop\n    </script>\n  </body>\n</html>\nFigure 20-3  shows this code being used to add a new <div>  element to a web docu‐\nment. First, the new element is created with createElement ; then the appendChild\nfunction is called, and the element gets inserted into the DOM.\nAdding New Elements | 489"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 520,
    "text": "Figure 20-3. Inserting a new element into the DOM\nAfter this, various properties are assigned to the element, including some text for its\ninner HTML. And then, in order to make sure the new element is instantly revealed,\nits offsetTop  property is read into the throwaway variable tmp. This forces a DOM\nrefresh and makes the element display in any browser that might otherwise delay\nbefore doing so—particularly Internet Explorer.\nThis new element is exactly the same as if it had been included in the original HTML,\nand has all the same properties and methods available.\nI sometimes use the technique of creating new elements when I\nwant to create in-browser pop-up windows, because it doesn’t rely\non there having to be a spare <div>  element available in the DOM.\nRemoving Elements\nY ou can also remove elements from the DOM, including ones  that you didn’t insert\nusing JavaScript; it’s even easier than adding an element. It works like this, assuming\nthe element to remove is in the object element :\nelement.parentNode.removeChild(element)\nThis code accesses the element’s parentNode  object so that it can remove the element\nfrom that node. Then it calls the removeChild  method on that object, passing the\nobject to be removed. However, to ensure the DOM instantly refreshes on all brows‐\ners, you may prefer to replace the preceding single statement with something like this:\npnode = element.parentNode\npnode.removeChild(element)\ntmp   = pnode.offsetTop\n490 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 521,
    "text": "This first statement makes a copy of element.parentNode  (the parent element of the\nobject) in pnode , which (after the child element is removed) has its offsetTop  prop‐\nerty looked up (and discarded in the throwaway variable tmp), thus ensuring that the\nDOM is fully refreshed.\nAlternatives to Adding and Removing Elements\nInserting an element is intended  for adding totally new objects into a web page. But if\nall you intend to do is hide and reveal objects according to an onmouseover  or other\nevent, don’t forget that there are always a couple of CSS properties  you can use for\nthis purpose, without taking such drastic measures as creating and deleting DOM ele‐\nments.\nFor example, when you want to make an element invisible but leave it in place (and\nwith all the elements surrounding it remaining in their positions), you can simply set\nthe object’s visibility  property to 'hidden' , like this:\nmyobject.visibility = 'hidden'\nAnd to redisplay the object, you can use the following:\nmyobject.visibility = 'visible'\nY ou can also collapse elements down to occupy zero width and height (with all\nobjects around it filling in the freed-up space), like this:\nmyobject.display = 'none'\nTo then restore an element to its original dimensions, you would use the following:\nmyobject.display = 'block'\nAnd, of course, there’s always the innerHTML  property, with which you can change the\nHTML applied to an element, like this, for example:\nmylement.innerHTML = '<b>Replacement HTML</b>'\nOr you can use the O function I outlined earlier, like this:\nO('someid').innerHTML = 'New contents'\nOr you can make an element seem to disappear, like this:\nO('someid').innerHTML = ''\nAdding New Elements | 491"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 522,
    "text": "Don’t forget other useful CSS properties you can access from Java‐\nScript, such as opacity  for setting the visibility of an object to\nsomewhere between visible and invisible, or width  and height  for\nresizing an object. And, of course, using the position  property\nwith values of 'absolute' , 'static' , or 'relative' , you can even\nlocate an object anywhere in (or outside) the browser window that\nyou like.\nUsing Interrupts\nJavaScript provides access to interrupts , a method by which you can ask the browser\nto call your code after a set period of time, or even to keep calling it at specified inter‐\nvals. This gives you a means of handling background tasks such as Ajax communica‐\ntions, or even things like animating web elements.\nTo accomplish this, you have two types of interrupt: setTimeout  and setInterval ,\nwhich have accompanying clearTimeout  and clearInterval  functions for turning\nthem off again.\nUsing setTimeout\nWhen you call setTimeout , you pass it some JavaScript code  or the name of a func‐\ntion, and the value in milliseconds representing how long to wait before the code\nshould be executed, like this:\nsetTimeout(dothis, 5000)\nAnd your dothis  function might look like this:\nfunction dothis()\n{\n  alert('This is your wakeup alert!');\n}\nIn case you’re wondering, you cannot simply specify alert()  (with\nbrackets) as a function to be called by setTimeout , because the\nfunction would be executed immediately. Only when you provide a\nfunction name without argument brackets (for example, alert )\ncan you safely pass the function name so that its code will be exe‐\ncuted only when the time-out occurs.\nPassing a string\nWhen you need to provide an argument to a function, you can also pass a string value\nto the setTimeout  function, which will not be executed until the correct time, like\nthis:\n492 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 523,
    "text": "setTimeout(\"alert('Hello!')\", 5000)\nIn fact, you can provide as many lines of JavaScript code as you like, if you place a\nsemicolon after each statement, like this:\nsetTimeout(\"document.write('Starting'); alert('Hello!')\", 5000)\nRepeating time-outs\nOne technique some programmers use to provide repeating interrupts using the\nfunction setTimeout  is to call the setTimeout  function  from the code called by it, as\nwith the following, which will initiate a never-ending loop of alert windows:\nsetTimeout(dothis, 5000)\nfunction dothis()\n{\n  setTimeout(dothis, 5000)\n  alert('I am annoying!')\n}\nNow the alert will pop up every five seconds.\nCancelling a Time-Out\nOnce a time-out has been set up, you can cancel it if you previously saved the value\nreturned from the initial call to setTimeout , like this:\nhandle = setTimeout(dothis, 5000)\nArmed with the value in handle , you can now cancel the interrupt at any point up\nuntil its due time, like this:\nclearTimeout(handle)\nWhen you do this, the interrupt is completely forgotten, and the code assigned to it\nwill not get executed.\nUsing setInterval\nAn easier way to set up regular interrupts is to use the setInterval  function. It works\nin just the same way, except that having popped up after the interval you specify in\nmilliseconds, it will do so again after that interval again passes, and so on forever,\nunless you cancel it.\nExample 20-9  uses this function to display a simple clock in the browser, as shown in\nFigure 20-4 .\nUsing Interrupts | 493"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 524,
    "text": "Example 20-9. A clock created using interrupts\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Using setInterval</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    The time is: <span id='time'>00:00:00</span><br>\n    <script>\n      setInterval(\"showtime(O('time'))\", 1000)\n      function showtime(object)\n      {\n        var date = new Date()\n        object.innerHTML = date.toTimeString().substr(0,8)\n      }\n    </script>\n  </body>\n</html>\nFigure 20-4. Maintaining the correct time with interrupts\nEvery time ShowTime  is called, it sets the object date  to the current date and time with\na call to Date :\nvar date = new Date()\nThen the innerHTML  property of the object passed to showtime  (namely, object ) is set\nto the current time in hours, minutes, and seconds, as determined by a call to the\nfunction toTimeString . This returns a string such as 09:57:17 UTC+0530 , which is\nthen truncated to just the first eight characters with a call to the substr  function:\nobject.innerHTML = date.toTimeString().substr(0,8)\nUsing the function\nTo use this function, you first have to create an object whose innerHTML  property will\nbe used for displaying the time, like this HTML:\n494 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 525,
    "text": "The time is: <span id='time'>00:00:00</span>\nThen, from a <script>  section of code, a call is placed to the setInterval  function,\nlike this:\nsetInterval(\"showtime(O('time'))\", 1000)\nIt then passes a string to setInterval , containing the following statement, which is\nset to execute once a second (every 1,000 milliseconds):\nshowtime(O('time'))\nIn the rare situation where somebody has disabled JavaScript (which people some‐\ntimes do for security reasons), your JavaScript will not run and the user will see the\noriginal 00:00:00 .\nCancelling an interval\nTo stop a repeating interval, when you first set up the interval with a call to the func‐\ntion setInterval , you must make a note of the interval’s handle, like this:\nhandle = setInterval(\"showtime(O('time'))\", 1000)\nNow you can stop the clock at any time by issuing the following call:\nclearInterval(handle)\nY ou can even set up a timer to stop the clock after a certain amount of time, like this:\nsetTimeout(\"clearInterval(handle)\", 10000)\nThis statement will issue an interrupt in 10 seconds that will clear the repeating inter‐\nvals.\nUsing Interrupts for Animation\nBy combining a few CSS properties with a repeating interrupt, you can produce all\nmanner of animations and effects.\nFor example, the code in Example 20-10  moves a square shape across the top of a\nbrowser, all the time ballooning in size, as shown in Figure 20-5 , before starting all\nover again when LEFT  is reset to 0.\nExample 20-10. A simple animation\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Simple Animation</title>\n    <script src='OSC.js'></script>\n    <style>\n      #box {\nUsing Interrupts | 495"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 526,
    "text": "position  :absolute;\n        background:orange;\n        border    :1px solid red;\n      }\n    </style>\n  </head>\n  <body>\n    <div id='box'></div>\n    <script>\n      SIZE = LEFT = 0\n      setInterval(animate, 30)\n      function animate()\n      {\n        SIZE += 10\n        LEFT += 3\n        if (SIZE == 200) SIZE = 0\n        if (LEFT == 600) LEFT = 0\n        S('box').width  = SIZE + 'px'\n        S('box').height = SIZE + 'px'\n        S('box').left   = LEFT + 'px'\n      }\n    </script>\n  </body>\n</html>\nFigure 20-5. This object slides in from the left while changing size\nIn the <head>  section of the document, the box object is set to a background  color of\n'orange'  with a border  value of '1px solid red' , and its position  property is set\nto absolute  so that it is allowed to be moved around in the browser.\n496 | Chapter 20: Accessing CSS from JavaScript"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 527,
    "text": "Then, in the animate  function, the global variables SIZE  and LEFT  are continuously\nupdated and then applied to the width , height , and left  style attributes of the box\nobject (with 'px'  added after each to specify that the values are in pixels), thus ani‐\nmating it at a frequency of once every 30 milliseconds—giving a rate of 33.33 frames \nper second (1,000/30 milliseconds).\nQuestions\n1.What are the O, S, and C functions provided to do?\n2.Name two ways to modify a CSS attribute of an object.\n3.Which properties provide the width and height available in a browser window?\n4.How can you make something happen when the mouse passes both over and out\nof an object?\n5.Which JavaScript function creates new elements, and which appends them to the\nDOM?\n6.How can you make an element (a) invisible, and (b) collapse to zero dimensions?\n7.Which function creates a single event at a future time?\n8.Which function sets up repeating events at set intervals?\n9.How can you release an element from its location in a web page to enable it to be\nmoved around?\n10.What delay between events should you set (in milliseconds) to achieve an anima‐\ntion rate of 50 frames per second?\nSee Chapter 20 Answers  in Appendix A  for the answers to these questions.\nQuestions | 497"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 528,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 529,
    "text": "CHAPTER 21\nIntroduction to jQuery\nPowerful and flexible as JavaScript is, with a plethora of built-in functions, you still\nneed additional layers of code for simple things that cannot be achieved natively or\nwith CSS, such as animations, event handling, and Ajax.\nWhat’s more, as a consequence of the various browser wars over the years, frustrating\nand annoying browser incompatibilities have come and gone, rearing their heads at\ndifferent times on different platforms and programs.\nAs a result, ensuring your web pages look the same on all devices can sometimes be\nachieved only through tedious JavaScript code that accounts for all the discrepancies\nacross the range of browsers and versions released over recent years. In a word—\nnightmare.\nAs I write (in 2014), we seem to be in the midst of a quieter spell, because Microsoft’s\nInternet Explorer has caught up with the standards in many (but not all) areas, Opera\nhas opted to use WebKit (the same technology used by Google) as the core of its\nbrowser, and Apple has bowed out of the PC browser marketplace.\nNevertheless, legacy inconsistencies remain, and plenty of people use older browsers.\nPlus there’s still the issue of needing to write a substantial amount of JavaScript when\nyou want to create anything more than basic special effects.\nTo fill these gaps, a number of libraries of functions to minimize the differences\nbetween browsers have been developed, many of which also provide easy hooks into\nthe DOM (Document Object Model), and for Ajax, and event and animation han‐\ndling. These include the likes of AngularJS , jQuery , MooTools , Prototype ,\nscript.aculo.us , and YUI (among many others).\n499"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 530,
    "text": "Why jQuery?\nThere’s room to cover only one library in this book, however, so I have opted for the\nmost widely used, jQuery, which is now installed on over 60 percent of all websites,\naccording to http://w3techs.com , and (as far as I can tell from their graphs) is more\nused than all its major competitors combined. Incidentally, if you ever want to see\nhow the various libraries stack up at any point, search for javascript  at\nsimilartech.com .\nWith jQuery, not only do you get a very high level of cross-browser compatibility\n(yes, even including Internet Explorer), you also have quick and easy access to HTML\nand DOM manipulation, special functions to interact directly with CSS, the ability to\ncontrol events, powerful tools to create professional effects and animations, and func‐\ntions for conducting Ajax communications with the web server. jQuery is also the\nbase for a wide range of plug-ins and other utilities too.\nY ou don’t need  to use jQuery, though, and some programming purists would never\ntouch a library, preferring to create their own bespoke collection of functions (and\nthere can be good reasons for this, such as not having to wait on others to correct\nbugs you find, implementing your own security features, and so on). But jQuery has\ndefinitely stood the test of time, and if you would like to take advantage of its gentle\nlearning curve, and be developing quality web pages as quickly as possible, this chap‐\nter will show how you can get started using it.\nIncluding jQuery\nThere are two ways you can include jQuery in your web pages.  Y ou can go to the\njQuery website , choose the version you need, download it to your website, and serve\nit up from there. Or, you can take advantage of a free content delivery network\n(CDN) and simply link to the version you require.\njQuery is released under the terms of the MIT license, which places\nalmost no restrictions on what you can do. Y ou are free to use any\njQuery project in any other project (even commercial projects) as\nlong as the copyright header is left intact.\nChoosing the Right Version\nBefore deciding whether to download and host jQuery  directly, or to use a CDN, you\nalso must pick a version of jQuery. In most cases this is straightforward because you’ll\nsimply opt for the latest release. However, if you are targeting particular browsers, or\nif you are maintaining a legacy website that relies on a particular version of jQuery,\nthen the latest one may not be right for you.\n500 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 531,
    "text": "Unlike most software, for which you simply download and install the newest avail‐\nable, jQuery has evolved over time to take account of the changing dynamics in the\nmarket of differing browser versions, with different features and bugs.\nAt the same time, improvements to jQuery have been made that might make newer\nversions operate differently on sites that have been specially tailored to a particular\nversion (and the quirks surrounding it), at the time it was released.\nOf course, each newer version is an improvement over the previous one, and is more\nand more likely to cover all the bases. But where identical operation is critical for a\nwebsite, until you have fully tested a new version, it is often best to stick with an ear‐\nlier one.\nTo IE or Not to IE\nAdditionally, as well as the 1.x series of jQuery, there’s now a 2.x series, which no-\nlonger supports versions of Internet Explorer lower than 9.  Both of these are running\nin parallel development. If you are sure all your users will have IE 9 or higher (for\nexample, because you are writing a mobile web app), then you can choose the latest\n2.x version to benefit from tighter, faster, and more-efficient code. But if any of your\nusers will be using older versions of IE, then you should use a 1.x release of jQuery.\nCompressed or Editable\nY ou also must decide if you wish to use a version of jQuery that has been minified\n(compressed) in size to minimize bandwidth and decrease loading time, or whether\nyou want to use an uncompressed version (perhaps because you want to make an edit\nto it yourself—which you are fully entitled to do). Generally, a minified version is\nbest, but most web servers support gzip for on-the-fly compression and decompres‐\nsion, so this is becoming less important (although minification does remove com‐\nments too).\nDownloading\nEvery released version of jQuery is listed in both compressed and minified forms at\njquery.com/download .\nAll you need to do is choose the one you need, right-click the link displayed along‐\nside, and save it to your hard disk. From there, you can upload it to your web server\nand then include it within <script>  tags, like this (for the minified version of release\n1.11.1):\n<script src='http://myserver.com/jquery-1.11.1.min.js'></script>\nIncluding jQuery | 501"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 532,
    "text": "If you have never used jQuery before (and have no special require‐\nments), then just download the latest minified version, or link to it\nvia a CDN, as described following.\nUsing a Content Delivery Network\nSeveral CDNs support jQuery. If you use one of them, you can save yourself the has‐\nsle of having to download new versions and then upload them to your server, by sim‐\nply linking directly to the URLs supplied by these networks.\nNot only that, but they provide this service free of charge, and usually on high-\ncapacity backbones that are probably the fastest in the world. Additionally, CDNs\nusually hold their content in a number of different geographic locations, and then\nsupply a file from the server closest to a surfer, ensuring the quickest possible deliv‐\nery.\nOverall, if you don’t need to modify the jQuery source code (requiring you to host it\non your own web servers), and your users are certain to have a live Internet connec‐\ntion, CDNs are probably the way to go. And it’s very easy. All you need to know is the\nfilename you wish to access and the root folder the CDN is using. For example, all\ncurrent and previous versions can be accessed though the CDN that jQuery uses, like\nthis:\n<script src='http://code.jquery.com/jquery-1.11.1.min.js'></script>\nThe base directory is at http://code.jquery.com/  and you simply follow this with the\nname of the file you need to include (in this case, jquery-1.11.1.min.js ).\nBoth Microsoft and Google offer jQuery on their networks, and so you can also\ninclude it in either of the following ways:\n<script src='http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.11.1.min.js'></script>\n<script src='http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js'>\n </script>\nIn the case of the Microsoft CDN (aspnetcdn.com), you should begin the URL with\nthe base directory of ajax.aspnetcdn.com/ajax/jQuery/ , and then follow that with the\nfilename you require.\nFor Google, however, you must split the filename (for example, jquery-1.11.1.min.js )\ninto a folder and filename (like this: 1.11.1/jquery.min.js ). Then precede that with\najax.googleapis.com/ajax/libs/jquery/ .\n502 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 533,
    "text": "An added benefit of using a CDN is that most other websites also\ndo this, so that jQuery may well already be cached in the user’s\nbrowser, and might not even require re-delivering. With 60 percent\nor more of websites using jQuery, this can be a lot of valuable\nbandwidth and time saved.\nAlways Using the Latest Version\nAnother advantage of CDNs is that you can choose  to always use the latest version of\njQuery, so that you can save a web page and forget all about ever having to update it\nfor a newer release.\nTo include the latest version (of release 1.x) from the jQuery or Google CDNs, use\none of the following forms of the <script>  tag:\n<script src='http://code.jquery.com/jquery-latest.min.js'></script>\n<script src='http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js'></script>\nBe careful if you do this, though, because something on your web page could possibly\nbreak with a future update, so be prepared to consider this possibility if any web\npages start to misbehave.\nIt’s worth knowing that both the jQuery and Google CDNs support\naccessing the jQuery files by either HTTP or HTTPS, using\nhttp://  or https://  prefixes. In the examples for this chapter\n(available to download at lpmj.net), though, I have opted to down‐\nload and serve up jQuery locally so that you can test all the exam‐\nple files, even if you are offline on a train or plane, for example.\nCustomizing jQuery\nIf it’s absolutely critical that you must keep the amount of data downloaded by a web\npage to the minimum, then you may still be able to use jQuery by making a special\nbuild of it that includes only the features your website will be using. Y ou won’t be able\nto rely on a CDN to deliver it, though, but in this circumstance you probably weren’t\nplanning on using one anyway.\nTo create your own custom build of jQuery, visit projects.jga.me/jquery-builder  and\nsimply check the boxes you want and uncheck those that you don’t. The bespoke ver‐\nsion of jQuery will then be loaded into a separate tab or window, from where you can\ncopy and paste it as required.\njQuery Syntax\nThe most striking thing about jQuery to people who are new to it is the $ symbol,\nwhich acts as the jQuery factory method. It was chosen because the symbol is legal in\njQuery Syntax | 503"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 534,
    "text": "JavaScript, is short, and is different from customary variable, object, or function/\nmethod names.\nIt takes the place of making a call to the jQuery  function (which you can also do if\nyou wish). The idea is to keep your code short and sweet, and to save on unnecessary\nextra typing each time you access jQuery. It also immediately shows other developers\nnew to your code that jQuery (or a similar library) is in use.\nA Simple Example\nAt its simplest, you access jQuery by typing a $ symbol, followed by a selector in\nparentheses, and then a period and a method to apply to the selected element(s).\nFor example, to change the font family of all paragraphs to monospace, you could use\nthis statement:\n$('p').css('font-family', 'monospace')\nOr to add a border to a <code>  element, you could use this:\n$('code').css('border', '1px solid #aaa')\nLet’s look at that as part of a complete example (see Example 21-1 , where the jQuery\nparts are highlighted in bold):\nExample 21-1. A simple jQuery example\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>First jQuery Example</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    The jQuery library uses either the <code>$()</code>\n      or <code>jQuery()</code> function names.\n    <script>\n      $('code').css('border', '1px solid #aaa')\n    </script>\n  </body>\n</html>\nWhen you load this example into a browser, the result will be similar to Figure 21-1 .\nOf course, this particular instruction simply replicates what you can do with normal\nCSS, but the idea is to illustrate jQuery syntax, so I’m keeping things simple, for now.\n504 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 535,
    "text": "Another way of issuing this command is by calling the jQuery\nfunction (which works in the same way as $), like this:\njQuery('code').css('border', '1px solid #aaa')\nFigure 21-1. Modifying elements with jQuery\nAvoiding Library Conflict\nIf you use other libraries alongside jQuery, you may find that they define their own $\nfunction. To resolve this issue, you can call the noConflict  method on the symbol,\nwhich releases control so that the other library can take over, like this:\n$.noConflict()\nOnce you do this, to access jQuery thereafter, you must call the jQuery  function. Or,\nyou can replace use of the $ symbol with an object name of your choice, like this:\njq = $.noConflict()\nNow you can use the keyword jq, wherever you had previously used $.\nTo distinguish and keep track of jQuery objects separately from\nstandard element objects, some developers prefix a $ to the front of\nany object created with jQuery (so that they end up looking like\nPHP variables!).\nSelectors\nNow that you’ve seen how easy it is to include jQuery in a web page and access its\nfeatures, let’s move on to looking at its selectors, which (I’m sure you’ll be pleased to\nlearn) work in exactly the same way as CSS. In fact, it’s at the heart of how most of\njQuery operates.\nAll you have to do is think about how you would style one or more elements using\nCSS, and then you can use the same selector(s) to apply jQuery operations on these\nselected elements. This means you can make use of element selectors, ID selectors,\nclass selectors, and any combinations.\nSelectors | 505"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 536,
    "text": "The css Method\nTo explain jQuery’s use of selectors, let’s first look at one of the more fundamental\njQuery methods, css, with which you can dynamically alter any CSS property. It takes\ntwo arguments: the property name to be accessed, and a value to be applied, like this:\ncss('font-family', 'Arial')\nAs you will see in the following sections, you cannot use this method on its own,\nbecause you must append it to a jQuery selector, which will select one or more ele‐\nments whose properties should be changed by the method. The following, which sets\nthe content of all <p> elements to display with full justification, is an example:\n$('p').css('text-align', 'justify')\nY ou can also use the css method to return (rather than set) a computed value by sup‐\nplying only a property name (and no second argument). In this case, the value of the\nfirst element that matches the selector is returned. For example, the following will\nreturn the text color of the element with the ID of elem , as an rgb method:\ncolor = $('#elem').css('color')\nRemember that the value returned is the computed  value. In other words, jQuery will\ncompute and return the value as used by the browser at the moment the method is\ncalled, not the original value that may have been assigned to the property via a style\nsheet or in any other way.\nSo, if the text color is blue (for example), the value assigned to the variable color  in\nthe preceding statement will be rgb(0, 0, 255) , even if the color was originally set\nusing the color name blue , or the hex strings #00f  or #0000ff . This computed value,\nthough, will always be in a form that can be assigned back to the element (or any\nother element) via the second argument of the css method.\nBe wary with any computed dimensions returned by this method\nbecause, depending on the current box-sizing  setting (see Chap‐\nter 19 ), they may or may not necessarily be what you expect. When\nyou need to get or set widths and heights without consideration for\nbox-sizing , you should use the width  and height  methods (and\ntheir siblings), as described in the section “Modifying Dimensions”\non page 535 .\nThe Element Selector\nTo select an element to  be manipulated by jQuery, just list its name within the paren‐\ntheses following the $ symbol (or jQuery  function name). For example, if you wish to\nchange the background color of all <blockquote>  elements, you could use a state‐\nment such as the following:\n506 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 537,
    "text": "$('blockquote').css('background', 'lime')\nThe ID Selector\nY ou can also refer to elements by their IDs if you place a # character in front of the ID\nname. So, to add a border to the element with the ID of advert  (for example), you\ncould use this:\n$('#advert').css('border', '3px dashed red')\nThe Class Selector\nAnd you can manipulate groups of elements according to the class they use. For\nexample, to underline all elements that use the class new, you could use this:\n$('.new').css('text-decoration', 'underline')\nCombining Selectors\nJust as with CSS, you may combine selectors into a single jQuery selection using com‐\nmas, as with the following example:\n$('blockquote, #advert, .new').css('font-weight', 'bold')\nExample 21-2  brings all these types of selectors together into a single example (with\nthe jQuery statements shown in bold), the result of which you can see in Figure 21-2 .\nExample 21-2. Using jQuery with different  selectors\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Second jQuery Example</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <blockquote>Powerful and flexible as JavaScript is, with a plethora of\n      built-in functions, it is still necessary to use additional code for\n      simple things that cannot be achieved natively or with CSS, such as\n      animations, event handling, and Ajax.</blockquote>\n    <div id='advert'>This is an ad</div>\n    <p>This is my <span class='new'>new</span> website</p>\n    <script>\n      $('blockquote').css('background', 'lime')\n      $('#advert').css('border', '3px dashed red')\n      $('.new').css('text-decoration', 'underline')\n      $('blockquote, #advert, .new').css('font-weight', 'bold')\n    </script>\n  </body>\n</html>\nSelectors | 507"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 538,
    "text": "Figure 21-2. Manipulating multiple elements\nHandling Events\nIf all jQuery could do was alter CSS styles, it wouldn’t be a great deal of help—but of\ncourse it can do far more than that. So let’s further investigate by seeing how it han‐\ndles events.\nAs you will recall, most events are triggered by user interaction: when a mouse passes\nover an element, the mouse button is clicked, or a key is pressed. But there are also\nother events that can be triggered, such as when a document completes loading.\nWith jQuery, it’s a simple matter to attach your own code to these events in a safe way\nthat doesn’t block other code from also gaining access to these events. For example,\nhere’s how to get jQuery to respond to an element being clicked:\n$('#clickme').click(function()\n{\n  $('#result').html('You clicked the button!')\n})\nWhen the element with the ID of clickme  is clicked, the innerHTML  property of the\nelement with the ID of result  is updated using the jQuery html  function.\njQuery objects (created with either the $ or jQuery  methods) are\nnot the same as JavaScript objects created with getElementById . In\nplain JavaScript, you can use a statement like object = docu\nment.getElementById('result')  followed by (for example)\nobject.innerHTML = 'something' . But in the preceding example,\n$('#result').innerHTML  would not work, because innerHTML  is\nnot a property of a jQuery object. Hence the use of the jQuery\nmethod html  to achieve the required result.\n508 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 539,
    "text": "Example 21-3  fleshes out the idea (which you can see running in Figure 21-3 ).\nExample 21-3. Processing an event\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>jQuery Events</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <button id='clickme'>Click Me</button>\n    <p id='result'>I am a paragraph</p>\n    <script>\n      $('#clickme').click(function()\n      {\n        $('#result').html('You clicked the button!')\n      })\n    </script>\n  </body>\n</html>\nFigure 21-3. Processing a click event\nWhen accessing an event with jQuery, omit the on prefix that you\nwould use in standard JavaScript. So, for example, the onmouseover\nevent name becomes the mouseover  function in jQuery, onclick\nbecomes click , and so on.\nWaiting Until the Document Is Ready\nSince jQuery is so closely related to the DOM in what it lets you achieve, more often\nthan not you will need to wait until a web page has loaded before manipulating parts\nof it. Without jQuery, this can be achieved with the onload  event,  but there’s a more\nefficient, cross-browser jQuery method called ready , which you can call to enable it\nat the earliest possible moment, even sooner than onload . This means jQuery can get\nWaiting Until the Document Is Ready | 509"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 540,
    "text": "working on a page that much more quickly, and un-user-friendly delays are mini‐\nmized.\nTo make use of this feature, place your jQuery code within the following structure:\n$('document').ready(function()\n{\n  // Your code goes here\n})\nNow the code will wait there until the document is ready, and only then will it be\ncalled by the ready  method. In fact, there’s a shorter version you can use that takes\neven less typing, as shown in Example 21-4 .\nExample 21-4. The smallest jQuery ‘ready’ code encapsulation function\n$(function()\n{\n  // Your code goes here\n})\nIf you get used to encapsulating your jQuery statements in one of these two struc‐\ntures, you won’t encounter the types of errors that can be generated by trying to\naccess the DOM too soon.\nAlternatively, another approach is to always place your JavaScript at\nthe end of every HTML page, so that it is executed only after the\nentire document has loaded. There is a secondary advantage too, in\nthat this ensures the web page contents gets priority with loading—\nand so you may well see improvements in user experience.\nThe only time end-of-page scripts may not be a good idea is if a\ndocument could appear to be ready when it isn’t, or if all external\nstyle sheets have not yet loaded (which can really be identified only\nby testing), causing users to think they can interact with it before\nyour script is ready. In such cases, implement the ready  function\nand all will be well. In fact, if in doubt, place your script at the page\nend and use the ready  function and you’ll get the best of both\nworlds.\nEvent Functions and Properties\nY ou’ve just seen the ready  event method, but there are several dozen jQuery event\nmethods and associated properties you can access (far too many to detail here). How‐\never, the following are some of the more commonly used and they’ll get you started\nfor most projects. For a comprehensive summary of all available events, though,\nplease check out api.jquery.com/category/events .\n510 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 541,
    "text": "The blur and focus Events\nThe blur  event triggers when focus is removed from an element, causing it to blur,\nand is a good partner for the focus  event. Both can be used to add a handler to the\nevent, or they will trigger the event if you omit any arguments from the method’s\nparentheses.\nIn Example 21-5 , there are four input fields, and the first is given immediate focus\nwith a quick call to the focus  method, applying it to the element with the ID of\nfirst . Then a pair of handlers are added to all input  elements. The focus  handler\nsets their background to yellow when focus is given, and the blur  handler sets their\nbackground to light gray when focus is removed (or blurred).\nExample 21-5. Using the focus and blur events\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Events: blur</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2>Click in and out of these fields</h2>\n    <input id='first'> <input> <input> <input>\n    <script>\n      $('#first').focus()\n      $('input').focus(function() { $(this).css('background', '#ff0') } )\n      $('input') .blur(function() { $(this).css('background', '#aaa') } )\n    </script>\n  </body>\n</html>\nY ou are allowed to include whitespace characters between the clos‐\ning parenthesis of a method, and the period operator used to attach\nanother method to it (and even after the period too if you like), as\nin the previous example where I have right-aligned the focus  and\nblur  event names under each other, to help the rest of the state‐\nments also line up in columns.\nIn Figure 21-4 , you can see how this code gives any input fields that have ever had\nfocus a light gray background color. If one currently has focus, its background color is\nset to yellow, while unvisited fields remain with a white background color.\nEvent Functions and Properties | 511"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 542,
    "text": "Figure 21-4. Attaching to blur and focus events\nThe this Keyword\nThis example also serves to illustrate the use of the this  keyword. When an event is\ncalled, the element on which it was triggered is passed in the object this , which can\nthen be given to the $ method for processing. Or, since this  is a standard JavaScript\nobject (and not a jQuery object), it can be used as such. So, if you prefer, you could\nreplace this:\n$(this).css('background', '#ff0')\nwith this:\nthis.style.background = '#ff0'\nThe click and dblclick Events\nY ou saw the click  event a little earlier, but there’s an event for handling double-clicks\ntoo. To use either, attach the event’s method to a jQuery selection, and for its argu‐\nment place a jQuery method to invoke when the event triggers, like this:\n$('.myclass')   .click( function() { $(this).slideUp() })\n$('.myclass').dblclick( function() { $(this).hide()    })\nHere I have opted to use in-line anonymous functions, but you can use named ones\ninstead if you like (but remember to supply only the name of the function without\nparentheses, or it will be called at the wrong time). The this  object will pass through\nas expected and be made available to the named function, like this:\n$('.myclass').click(doslide)\nfunction doslide()\n{\n  $(this).slideUp()\n}\nThe slideUp  and hide  methods are detailed in the section,  “Special Effects” on page\n521. For now, though, just try running Example 21-6 , and either click or double-click\n512 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 543,
    "text": "the buttons to see how some disappear with an animation (using slideUp ), and some\njust vanish (using hide ), as shown in Figure 21-5 .\nExample 21-6. Attaching to the click and dblclick events\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Events: click & dblclick</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2>Click and double click the buttons</h2>\n    <button class='myclass'>Button 1</button>\n    <button class='myclass'>Button 2</button>\n    <button class='myclass'>Button 3</button>\n    <button class='myclass'>Button 4</button>\n    <button class='myclass'>Button 5</button>\n    <script>\n      $('.myclass').click(    function() { $(this).slideUp() })\n      $('.myclass').dblclick( function() { $(this).hide()    })\n    </script>\n  </body>\n</html>\nFigure 21-5. Button 3 has been clicked once and is sliding up\nThe keypress Event\nFrom time to time, you need better control over user keyboard interaction, particu‐\nlarly when processing complex forms or when writing games. For cases such as these,\nyou can use the keypress  method,  which can be attached to anything that accepts\nkeyboard input, such as an input field, or even the document itself.\nIn Example 21-7 , the method has been attached to the document in order to intercept\nall key presses, and the result of running it can be seen in Figure 21-6 .\nEvent Functions and Properties | 513"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 544,
    "text": "Example 21-7. Intercepting key presses\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Events: keypress</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2>Press some keys</h2>\n    <div id='result'></div>\n    <script>\n      $(document).keypress(function(event)\n      {\n        key = String.fromCharCode(event.which)\n        if (key >= 'a' && key <= 'z' ||\n            key >= 'A' && key <= 'Z' ||\n            key >= '0' && key <= '9')\n        {\n          $('#result').html('You pressed: ' + key)\n          event.preventDefault()\n        }\n      })\n    </script>\n  </body>\n</html>\nFigure 21-6. Processing key presses from the keyboard\nThere are a few things of note in this example that you will need to bear in mind\nwhen writing your own keyboard handlers. For example, because browsers return\ndiffering values for this event, the which  property of the event  object is normalized\nby jQuery to return the same character codes across all browsers. So this is where to\nlook for which key was pressed.\nBeing a character code, though, the value in which  is a number, which you can turn\ninto a single letter string by passing it through String.fromCharCode . Y ou don’t have\n514 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 545,
    "text": "to do this because you can easily respond to ASCII values in your code. But this\nmethod is useful when you need to work with characters.\nWhen a key press is recognized, a simple statement to that effect is inserted into the\ninnerHTML  property of the div element with the ID of result .\nThis is a good example of where the document.write  function\nshould not be used, because the document will have already fully\nloaded by the time the user presses a key. If document.write  were\ncalled to display the information at this time, it would erase the\ncurrent document. So this is where writing into the HTML of an\nelement is the perfect, nondestructive means of supplying user\nfeedback, as explained in “ About document.write” on page 328 in\nChapter 13 .\nConsiderate Programming\nWhen you are anticipating user input, you should decide which values you will\nrespond to, and then ignore all others, just in case another event handler needs access\nto them. This is considerate practice for any other utilities (and the main browser\nitself) that may also be running. For example, in the preceding example I have chosen\nto accept only the characters a–z, A–Z and 0–9, ignoring all others.\nThere are two ways you can pass keyboard interrupts onto (or deny them from) other\nhandlers. First, do nothing, and when your code exits, other handlers will also see and\nbe able to react to the same key presses. This can cause confusion, though, if multiple\nactions occur from a single key press.\nAlternatively, when you don’t want the event to trigger any other handlers, you can\nmake a call to the preventDefault  method of event , which then keeps the event\nfrom “bubbling” up to other handlers.\nBe careful where you place your call to preventDefault  because if\nit’s outside the part of code in which you process the key presses,\nthen it will prevent all other keyboard events from bubbling, and\nyou may lock the user out of the browser (or at least out of using\ncertain features).\nThe mousemove Event\nSome of the most commonly intercepted events are for mouse handling.  I’ve already\ncovered mouse button clicks, but now let’s take a look at attaching to mouse move‐\nment events.\nEvent Functions and Properties | 515"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 546,
    "text": "It’s time, I think, for a slightly more interesting example, so in Example 21-8  I have\nput together a rudimentary drawing program using jQuery in conjunction with an\nHTML5 canvas. Although the canvas is not fully explained until Chapter 23 , don’t\nworry because the code is very simple.\nExample 21-8. Intercepting mouse movement and mouse key events\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Events: Mouse Handling</title>\n    <script src='jquery-1.11.1.min.js'></script>\n    <style>\n      #pad {\n        background:#def;\n        border    :1px solid #aaa;\n      }\n    </style>\n  </head>\n  <body>\n    <canvas id='pad' width='480' height='320'></canvas>\n    <script>\n      canvas  = $('#pad')[0]\n      context = canvas.getContext(\"2d\")\n      pendown = false\n      $('#pad').mousemove(function(event)\n      {\n        var xpos = event.pageX - canvas.offsetLeft\n        var ypos = event.pageY - canvas.offsetTop\n        if (pendown) context.lineTo(xpos, ypos)\n        else         context.moveTo(xpos, ypos)\n        context.stroke()\n      })\n      $('#pad').mousedown(function() { pendown = true  } )\n      $('#pad')  .mouseup(function() { pendown = false } )\n    </script>\n  </body>\n</html>\nIn Figure 21-7 , you can see how this very simple set of instructions can be used to\ncreate line drawings (well, if you have artistic ability, that is :). Here’s how it works.\nFirst, a canvas  object is created by referencing the first (or zeroth) element of the\njQuery selector, like this:\ncanvas = $('#pad')[0]\n516 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 547,
    "text": "Figure 21-7. Capturing mouse movement and mouse key events\nThis is one way you can quickly take a jQuery object and extract a standard JavaScript\nelement object. Another would be to use the get method, like this:\ncanvas  = $('#pad').get(0)\nThe two are interchangeable with each other, but get has the edge because, without\nany argument passed, it will return all the element node objects from a jQuery object\nas an array.\nAnyway, as you’ll learn in Chapter 23 , the canvas will be written to using a special\ncontext  object, which is now created:\ncontext = canvas.getContext(\"2d\")\nThere’s one more thing to initialize, which is to create a Boolean variable called pen\ndown  to track the status of the mouse button (initially false  because the pen is up):\npendown = false\nAfter this, the canvas (with the ID of pad) has its mousemove  event intercepted by the\nanonymous function shown following, within which three sets of things happen:\n$('#pad').mousemove(function(event)\n{\n  ...\n})\nFirst, the xpos  and ypos  local variables (local because of the var keywords) are\nassigned values representing the position of the mouse within the canvas area.\nEvent Functions and Properties | 517"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 548,
    "text": "These values are taken from the jQuery properties pageX  and pageY , which refer to\nthe mouse pointer’s offset from the top lefthand corner of the containing document.\nTherefore, since the canvas is itself offset slightly from that location, the canvas  offset\nvalues (in offsetLeft  and offsetTop ) are subtracted from both pageX  and pageY :\nvar xpos = event.pageX - canvas.offsetLeft\nvar ypos = event.pageY - canvas.offsetTop\nNow that we know where the mouse pointer is in relation to the canvas, the next pair\nof lines test the value of pendown . If it is true , then the mouse button is being pressed,\nand so a lineTo  call is made to draw a line to the current location. Otherwise, the pen\nis up, and so moveTo  is called to simply update the current location:\nif (pendown) context.lineTo(xpos, ypos)\nelse         context.moveTo(xpos, ypos)\nThen, the stroke  method is called to apply whichever drawing command was just\nmade to the canvas. These five lines are all that is responsible for handling the draw‐\ning, but it’s still necessary to track the mouse button state, and so the final two lines of\ncode intercept the mousedown  and mouseup  events, setting pendown  to true  when the\nmouse button is pressed, and false  when it’s released:\n$('#pad').mousedown(function() { pendown = true  } )\n$('#pad')  .mouseup(function() { pendown = false } )\nIn this example, you see the combination of three different event handlers working\ntogether to create a simple utility, using both local variables for internal expressions,\nand global variables where an object or the state of something must be made available\nacross multiple functions.\nOther Mouse Events\nThe mouseenter  and mouseleave  events  trigger whenever the mouse passes into an\nelement or leaves it. No position values are supplied because you are simply assumed\nto want to make a Boolean decision about what to do regarding these events.\nIn Example 21-9 , a pair of anonymous functions are attached to these events, altering\nthe HTML of an element accordingly, as shown in Figure 21-8 .\nExample 21-9. Detecting the mouse entering and leaving an element\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Events: Further Mouse Handling</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2 id='test'>Pass the mouse over me</h2>\n518 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 549,
    "text": "<script>\n      $('#test').mouseenter(function() { $(this).html('Hey, stop tickling!') } )\n      $('#test').mouseleave(function() { $(this).html('Where did you go?')   } )\n    </script>\n  </body>\n</html>\nFigure 21-8. Detecting when the mouse enters and leaves an element\nWhen the mouse enters the bounds of the selected element, that element’s innerHTML\nproperty is updated (with a call to html ). Then when the mouse leaves again, a further\nupdate is made to the element’s HTML.\nAlternative Mouse Methods\nA number of other jQuery mouse event functions  are available to cover a wide range\nof circumstances, all of which are detailed at api.jquery.com/category/events/mouse-\nevents .\nFor example, you can use the following alternative mouseover  and mouseout  methods\nto achieve similar results:\n$('#test').mouseover(function() { $(this).html('Cut it out!')         } )\n$('#test') .mouseout(function() { $(this).html('Try it this time...') } )\nOr you could use the hover  method to bind two handlers with a single function call,\nlike this:\n$('#test').hover(function() { $(this).html('Cut it out!')         },\n                 function() { $(this).html('Try it this time...') } )\nIf you are planning on creating mouseover  and mouseout  combined effects, clearly the\nhover  method is the logical function to choose, but there’s also another way you can\nachieve the same result, which is chaining (explained later on in the section “Method\nchaining” on page 529 ), using code like this:\n$('#test').mouseover(function() { $(this).html('Cut it out!')         } )\n           .mouseout(function() { $(this).html('Try it this time...') } )\nHere the period operator at the start of the second statement attaches it to the first, so\nthat it creates a chain of methods.\nEvent Functions and Properties | 519"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 550,
    "text": "The preceding examples show how to capture mouse click, mouse\nmovement, and keyboard events, and therefore they are mostly\nsuitable for desktop environments—which is what jQuery is pri‐\nmarily targeted at. However, there is a  version of jQuery for mobile\ndevices that provides all the touch-handling event control you\ncould wish for (and much more), available at jquerymobile.com .\nThe submit Event\nWhen a form is submitted, you may often want to perform some error checking on\nthe data entered, before it gets submitted to the server. One way to do this is to inter‐\ncept the submit  event of the form as in Example 21-10 . Figure 21-9  shows the result\nof loading this document and then submitting the form with one or more fields left\nempty:\nExample 21-10. Intercepting the submit event of a form\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Events: submit</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <form id='form'>\n      First name: <input id='fname' type='text' name='fname'><br>\n      Last name:  <input id='lname' type='text' name='lname'><br>\n      <input type='submit'>\n    </form>\n    <script>\n      $('#form').submit(function()\n      {\n        if ($('#fname').val() == '' ||\n            $('#lname').val() == '')\n        {\n          alert('Please enter both names')\n          return false\n        }\n      })\n    </script>\n  </body>\n</html>\n520 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 551,
    "text": "Figure 21-9. Checking user input upon submission\nThe key parts of this example are where the event is attached to an anonymous func‐\ntion, like this:\n$('#form').submit(function()\nAnd where the values of the two input fields are tested for being empty:\nif ($('#fname').val() == '' ||\n    $('#lname').val() == '')\nHere the jQuery val method is used to retrieve the value in the value  property of\neach field. This is neater than using $('#fname')[0]  (as in Example 21-8 ) to get\naccess to the DOM object, and then appending value  to it to read the field’s value,\nlike this: $('#fname')[0].value .\nIn this example, by returning the value false  if one or more fields is empty, the nor‐\nmal submission process is cancelled. To enable the submission to proceed, you can\nreturn true , or just not return anything.\nSpecial Effects\njQuery really begins  to come into its own when processing special effects. Although\nyou can use CSS3 transitions, they are not so easy to manage dynamically from Java‐\nScript, but with jQuery it really is as simple as selecting one or more elements and\nthen applying one or more effects to them.\nThe core effects available are hiding and showing, fading in and out, sliding, and ani‐\nmations, and these can be used singly, together in synchronization, or in sequence.\nThey also support the use of  callbacks, which are functions or methods that get called\nonly once an operation has completed.\nSpecial Effects  | 521"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 552,
    "text": "The following section lists some of the more useful jQuery effects, each of which sup‐\nports up to three arguments, as follows:\nNo Arguments\nWhen no arguments are given, the method is called immediately without being\nplaced in the animation queue.\nDuration\nWhen a duration value is supplied, the effect will take place over the assigned time,\nwhich can be a value in milliseconds, or the strings fast  or slow .\nEasing\nThere are only two easing options in the jQuery library, swing  and linear . The\ndefault is swing  and it gives a more natural effect than linear . For more easing\noptions, you can check out plug-ins like the jQuery UI easing options at jquer\nyui.com/easing .\nCallback\nIf you supply a callback function, it will be called after the effect method completes.\nSo, for example, you can call the hide  method in a variety of ways, such as these:\n$('#object').hide()\n$('#object').hide(1000)\n$('#object').hide('fast')\n$('#object').hide('linear')\n$('#object').hide('slow', 'linear')\n$('#object').hide(myfunction)\n$('#object').hide(333, myfunction)\n$('#object').hide(200, 'linear', function() { alert('Finished!') } )\nAs you’ll see in the section “Method chaining” on page 529, you can attach function\ncalls (that supply arguments) to each other and they will then be animated in turn,\nlike the following, which will hide and then reveal an element:\n$('#object').hide(1000).show(1000)\nOther less commonly used arguments are also supported by many of these methods,\nand you can get full details on them (and all the other supported effects methods) by\nvisiting api.jquery.com/category/effects .\nHiding and Showing\nProbably the simplest effect is to hide and show elements in response to user interac‐\ntion. As shown in the previous section, you can provide no, or a variety of arguments\nto the hide  and show  methods and, by default, when none are supplied, the result is\njust like instantly hiding or revealing an element.\nThe way these two methods work when arguments are supplied is to modify the\nwidth , height , and opacity  properties of an element simultaneously, until they reach\n522 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 553,
    "text": "0 for hide , or reach their original values for show . When hiding, the display  property\nof the element is set to none  when fully hidden, and after calling show , its previous\nvalue is reassigned once the element is fully restored.\nExample 21-11  lets you try hide  and show  for yourself (as shown in Figure 21-10 ).\nExample 21-11. Hiding and showing an element\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Effects: hide & show</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <button id='hide'>Hide</button>\n    <button id='show'>Show</button>\n    <p id='text'>Click the Hide and Show buttons</p>\n    <script>\n      $('#hide').click(function() { $('#text').hide('slow', 'linear') })\n      $('#show').click(function() { $('#text').show('slow', 'linear') })\n    </script>\n  </body>\n</html>\nFigure 21-10. The element is in the process of being revealed\nThe toggle Method\nAs an alternative to calling both the hide  and show  methods, you  can use the toggle\nmethod instead, which enables you to replace the previous example with\nExample 21-12 .\nExample 21-12. Using the toggle method\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Effects: toggle</title>\nSpecial Effects  | 523"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 554,
    "text": "<script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <button id='toggle'>Toggle</button>\n    <p id='text'>Click the Toggle button</p>\n    <script>\n      $('#toggle').click(function() { $('#text').toggle('slow', 'linear') })\n    </script>\n  </body>\n</html>\nThe toggle  method takes the same arguments as hide  and show  but keeps internal\ntrack of the state of the element so that it knows whether to hide or show it.\nThere are four main jQuery methods that set either one state or\nanother, and which offer toggling versions to simplify coding. In\naddition to toggle , there’s fadeToggle , slideToggle , and toggle\nClass , all described in this chapter.\nFading In and Out\nThere are four methods for  managing fades: fadeIn , fadeOut , fadeToggle , and\nfadeTo . Y ou should be getting  the idea of how jQuery works by now, and realize that\nthe first three are similar to show , hide , and toggle . The last one, though, is a little\ndifferent in that it lets you specify an opacity value to which an element (or elements)\nshould be faded, between 0 and 1.\nExample 21-13  provides four buttons with which to try out each of these methods, as\nshown in Figure 21-11 .\nExample 21-13. The four fade methods\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Effects: Fading</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <button id='fadeout'>fadeOut</button>\n    <button id='fadein'>fadeIn</button>\n    <button id='fadetoggle'>fadeToggle</button>\n    <button id='fadeto'>fadeTo</button>\n    <p id='text'>Click the buttons above</p>\n    <script>\n      $('#fadeout')   .click(function() { $('#text').fadeOut(   'slow'     ) })\n      $('#fadein')    .click(function() { $('#text').fadeIn(    'slow'     ) })\n      $('#fadetoggle').click(function() { $('#text').fadeToggle('slow'     ) })\n524 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 555,
    "text": "$('#fadeto')    .click(function() { $('#text').fadeTo(    'slow', 0.5) })\n    </script>\n  </body>\n</html>\nFigure 21-11. The text has been faded to 50 percent opacity\nSliding Elements Up and Down\nAnother way to make elements disappear and reappear is to alter their height over\ntime to make them appear to slide up and down. There are three methods available to\ndo this: slideDown , slideUp , and slideToggle . They work in a similar way to the\nprevious functions, as coded in Example 21-14 , and shown in Figure 21-12 .\nExample 21-14. Using the slide methods\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Effects: Sliding</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <button id='slideup'>slideUp</button>\n    <button id='slidedown'>slideDown</button>\n    <button id='slidetoggle'>slideToggle</button>\n    <div id='para' style='background:#def'>\n      <h2>From A Tale of Two Cities - By Charles Dickens</h2>\n      <p>It was the best of times, it was the worst of times, it was the age of\n      wisdom, it was the age of foolishness, it was the epoch of belief, it was\n      the epoch of incredulity, it was the season of Light, it was the season of\n      Darkness, it was the spring of hope, it was the winter of despair, we had\n      everything before us, we had nothing before us, we were all going direct to\n      Heaven, we were all going direct the other way - in short, the period was so\n      far like the present period, that some of its noisiest authorities insisted\n      on its being received, for good or for evil, in the superlative degree of\n      comparison only</p>\n    </div>\n    <script>\n      $('#slideup')    .click(function() { $('#para').slideUp(    'slow') })\nSpecial Effects  | 525"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 556,
    "text": "$('#slidedown')  .click(function() { $('#para').slideDown(  'slow') })\n      $('#slidetoggle').click(function() { $('#para').slideToggle('slow') })\n    </script>\n  </body>\n</html>\nFigure 21-12. The paragraph is sliding up\nThese methods work well when you have menus and submenus that you want to\nopen up or close dynamically, according to the sections clicked by the user.\nAnimations\nNow we can really start to have some fun by actually moving elements around in the\nbrowser. To do this, though, because the default value of static  will not allow them\nto move, you must remember to first give your elements’ position  properties, values\nof relative , fixed , or absolute .\nTo animate an element, all you do is supply a list  of CSS properties (excluding colors)\nto the animate  method.  Unlike the previous effects methods, animate requires this\nlist of properties first, and then you can supply any duration, easing, and callback\narguments you need.\nSo, for example, to animate a bouncing ball, you could use code such as\nExample 21-15  (which displays like Figure 21-13 ).\n526 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 557,
    "text": "Example 21-15. Creating a bouncing ball animation\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Effects: Animation</title>\n    <script src='jquery-1.11.1.min.js'></script>\n    <style>\n      #ball {\n        position  :relative;\n      }\n      #box {\n        width     :640px;\n        height    :480px;\n        background:green;\n        border    :1px solid #444;\n      }\n    </style>\n  </head>\n  <body>\n    <div id='box'>\n      <img id='ball' src='ball.png'>\n    </div>\n    <script>\n      bounce()\n      function bounce()\n      {\n        $('#ball')\n          .animate( { left:'270px', top :'380px' }, 'slow', 'linear')\n          .animate( { left:'540px', top :'190px' }, 'slow', 'linear')\n          .animate( { left:'270px', top :'0px'   }, 'slow', 'linear')\n          .animate( { left:'0px',   top :'190px' }, 'slow', 'linear')\n      }\n    </script>\n  </body>\n</html>\nSpecial Effects  | 527"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 558,
    "text": "Figure 21-13. The ball is bouncing around in the browser\nIn the <style>  section of this example, the position  property  of the ball is set rela‐\ntive to its container,  which is a <div>  element that has been given a border and green\nbackground.\nThen the <script>  section features a function called bounce , in which there are four\ncalls to animate  placed one after the other.\nNotice how the names of the properties to animate are supplied without quotation\nmarks and are separated from the values to which they should be changed with\ncolons—in other words, in the form of associative arrays.\nY ou can also supply relative values in place of absolute ones by using the += and -=\noperators.  So, for example, the following will animate the ball to the right and up by\n50 pixels relative to its current position:\n.animate( { left:' +=50px', top:' -=50px' }, 'slow', 'linear')\nAnd you can even use the string values of hide , show , and toggle  to update a prop‐\nerty, like this:\n528 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 559,
    "text": ".animate( { height:' hide', width:' toggle' }, 'slow', 'linear')\nIf you wish to modify any hyphenated CSS properties and they’re\nnot being passed within quotation marks (as with height  and\nwidth  in this example), you must convert their names to camelCase\nfirst, by removing the hyphens and capitalizing the letter following.\nFor example, to animate the left-margin  property of an element,\nyou would supply the name of leftMargin . However, when supply‐\ning a hyphenated property name within a string (for example:\ncss('font-weight', 'bold') , you shouldn’t convert it to camel‐\nCase.\nMethod chaining\nBecause of the way that method chaining works, when jQuery methods have been\ngiven arguments, they will run sequentially. So each of these methods is called only\nafter the previous one has finished animating. Any methods you call without argu‐\nments, however, will run immediately and quickly, without animation.\nWhen you load this example into a web browser, the animation is kicked off (so to\nspeak) with a single call to bounce , causing the ball to bounce off the bottom, right,\nand top edges of its container, and then come to rest back at the middle of the left-\nhand edge.\nUsing callbacks\nAs it stands, the preceding example stops after four animations, but you can use a\ncallback function to make the animation start over again every time it completes.\nThis is why I chose to place the animation in a named function.\nY ou see, now that the animation is in a function named bounce , it is only necessary to\nadd that name as a callback to the fourth animation in the group in order to make the\nanimation repeat forever, as shown in bold here:\n.animate( { left:'0px', top :'190px' }, 'slow', 'linear' , bounce )\nUsing the animate  method,  you can animate many CSS properties with the notable\nexception of colors. However, even color animation is possible with the addition of\nthe jQuery UI add-in, which adds the facility to create very eye-pleasing color-\nchanging effects (plus many more goodies). Please refer to jqueryui.com  for details.\nStopping Animations\nThere are several methods available for cutting off animations midway through, or\nending a chain of animations. For example, with clearQueue  you can empty all stored\nanimations that are queued up, with stop  you can immediately stop any animation\nSpecial Effects  | 529"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 560,
    "text": "currently in progress, or the finish  method will stop the currently running anima‐\ntion, and remove any that are queued.\nSo let’s turn the previous example into a sort of game by making the ball clickable,\nsuch that when the click event triggers, the animation will cease. To do this, all that’s\nrequired is to add the following single line of code underneath the bounce  function:\n$('#ball').click(function() { $(this).finish() })\nIf you successfully manage to click the ball, the finish  method will stop the current\nanimation, empty the queue, and ignore any callbacks—in other words, the ball will\ncome to rest.\nFor more information on managing jQuery queues, check out api.jquery.com/queue ,\nwhere you’ll also learn how to directly manipulate the contents of queues to get\nexactly the effects you need.\nManipulating the DOM\nBecause  jQuery  is so tightly linked with the DOM, of necessity  the examples in this\nchapter have already utilized some of its DOM-accessing methods, such as html  and\nval. But let’s now look at all the DOM methods in detail to discover exactly what you\ncan get access to with jQuery, and how.\nIn Example 21-3 , you saw how to use the html  method  to change the innerHTML\nproperty of an element. This method can be used either to set the HTML or retrieve it\nfrom an HTML document. Example 21-16  (with the jQuery highlighted in bold)\nshows how to retrieve the HTML content of an element (as shown in Figure 21-14 ).\nExample 21-16. Displaying the HTML of an element using an alert window\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>The DOM: html & text</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2>Example Document</h2>\n    <p id='intro'>This is an example document</p>\n    <script>\n      alert( $('#intro').html() )\n    </script>\n  </body>\n</html>\n530 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 561,
    "text": "Figure 21-14. Retrieving and displaying the HTML of an element\nWhen you omit any argument from a call to this method the result is to read rather\nthan set the HTML of the element.\nThe Difference  Between The text and html Methods\nWhen you are working with XML documents, you cannot use the html  method\nbecause it simply won’t work (it’s designed for use only with HTML). But you can use\nthe text  method to achieve a similar result (in XML or HTML documents), like this:\ntext = $('#intro').text()\nThe difference between the two is quite simply that html  treats the content as HTML\nand text  treats it as text. So, for example, let’s assume you wish to assign the follow‐\ning string to an element:\n<a href='http://google.com'>Visit Google</a>\nIf you assign it to an HTML element using the html  method, the DOM will be upda‐\nted with the new <a> element and the link will become clickable. But if you do so to\neither an XML or HTML document using the text  method, then that string will first\nbe escaped into text (for example, by converting HTML characters such as < into the\n&lt;  entity, and so on), and then inserted into the element—no element is added to\nthe DOM.\nThe val and attr Methods\nThere are a couple more methods for interacting with the content of elements. First,\nyou can set and get the value of an input element with the val method, as illustrated\nin Example 21-10 , in which the first and last name fields are read. To set a value, sim‐\nply provide it as an argument to the method, like this:\n$('#password').val('mypass123')\nManipulating the DOM | 531"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 562,
    "text": "With the attr  method,  you can get and set the attributes of elements, as shown in\nExample 21-17 , in which a link to the Google website has been completely replaced\nwith one to Y ahoo!\nExample 21-17. Modifying attributes with the attr method\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>The DOM: attr</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2>Example Document</h2>\n    <p><a id='link' href='http://google.com' title='Google'>Visit Google</a></p>\n    <script>\n      $('#link').text('Visit Yahoo!')\n      $('#link').attr( { href :'http://yahoo.com', title:'Yahoo!' } )\n      alert('The new HTML is:\\n' + $('p').html())\n    </script>\n  </body>\n</html>\nThe first jQuery statement uses the text  method to change the text inside the <a>\nelement, and the second one changes the href  and title  attribute values to match,\nby supplying the data in the form of an associative array. The third statement displays\nthe changed element contents in an alert  window, by first retrieving it with the html\nmethod, as shown in Figure 21-15 .\nFigure 21-15. The link has now been completely modified\nY ou can also read the value of an attribute like this:\nurl = $('#link').attr('href')\n532 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 563,
    "text": "Adding and Removing Elements\nWhile it is possible to insert elements into the DOM using the html  method, this is\nsuitable only for creating child elements of a particular element. Therefore, jQuery\nprovides a number of methods for manipulating any part of the DOM.\nThese methods are append , prepend , after , before , remove , and empty , and  an\nexample of each is included in Example 21-18 .\nExample 21-18. Adding and removing elements\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Modifying The DOM</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <h2>Example Document</h2>\n    <a href='http://google.com' title='Google'>Visit Google</a>\n    <code>\n      This is a code section\n    </code>\n    <p>\n      <button id='a'>Remove the image</button>\n      <button id='b'>Empty the quote</button>\n    </p>\n    <img id='ball' src='ball.png'>\n    <blockquote id='quote' style='border:1px dotted #444; height:20px;'>\n      test\n    </blockquote>\n    <script>\n      $('a').prepend('Link: ')\n      $(\"[href^='http']\").append(\" <img src='link.png'>\")\n      $('code').before('<hr>').after('<hr>')\n      $('#a').click(function() { $('#ball').remove() } )\n      $('#b').click(function() { $('#quote').empty() } )\n    </script>\n  </body>\n</html>\nIn Figure 21-16 , you can see the result of applying the prepend , append , before , and\nafter  methods to some elements.\nManipulating the DOM | 533"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 564,
    "text": "Figure 21-16. A document with a variety of different  elements\nThe prepend  method has been  used to insert the string Link:  before the inner text or\nHTML of all <a> elements, like this:\n$('a').prepend('Link: ')\nThen an attribute selector is used to select all elements that have an href  attribute\nstarting with http . The string http  denotes links that are not relative (and therefore\nare absolute), in which case an external link icon is appended to the end of the inner\ntext or HTML of all matching elements, like this:\n$(\"[href^='http']\").append(\" <img src='link.png'>\")\nThe ^= operator  is how only the start of the string is matched. If\njust the = operator were used, only entire strings that matched\nwould be selected. CSS selectors are covered in detail in Chapter 18\nand Chapter 19 .\nNext, using chained methods, the before  and after  methods are employed to place\nsibling elements either before or after another one. In this instance, I have chosen to\nplace an <hr>  element both before and after <code>  elements, like this:\n$('code').before('<hr>').after('<hr>')\n534 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 565,
    "text": "Then I added a little user-interaction with a couple of buttons. When clicked, using\nthe remove  method, the first button removes the <img>  element containing the ball,\nlike this:\n$('#a').click(function() { $('#ball').remove() } )\nThe image is now no longer in the DOM, which you can verify if\nyou highlight the browser contents, right-click it, and use Inspect\nElement in most major desktop browsers, or press F12 in Internet\nExplorer.\nFinally, the empty  method  is applied to the <blockquote>  element when the second\nbutton is clicked, which simply empties out the element’s contents, but leaves the ele‐\nment in the DOM, like this:\n$('#b').click(function() { $('#quote').empty() } )\nDynamically Applying Classes\nSometimes it can be convenient to change the class an element employs, or maybe\njust add a class to an element or remove it from one. For example, suppose you have a\nclass called read  that you use to style blog posts that have been read. Using the add\nClass  method, it’s a simple matter to add a class to that post, like this:\n$('#post23').addClass('read')\nY ou can add more than one class at a time by separating them with spaces, like this:\n$('#post23').addClass('read liked')\nBut what if a reader chooses to mark a post as unread again, perhaps to be reminded\nto read it again later? In this case, all you need to do is use removeClass , like this:\n$('#post23').removeClass('read')\nAll other classes that the post uses remain unaffected when you do this.\nWhere you are supporting the ability of a class to be continuously added or removed,\nyou might, however, find it simpler to use the toggleClass  method, like this:\n$('#post23').toggleClass('read')\nNow, if the post doesn’t use the class, it is added; otherwise, it is removed.\nModifying Dimensions\nWorking with dimensions is always a tricky web development task because different\nbrowsers tend to utilize slightly differing values. One of jQuery’s big strengths,\nDynamically Applying Classes | 535"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 566,
    "text": "though, is that it does a great job of normalizing these types of values, so that your\npages will look how you intend them to appear in all major browsers.\nThere are three types of dimensions: element width and height, inner width and\nheight, and outer width and height. Let’s look at these in turn.\nThe width and height Methods\nBoth the width  and height  methods can get the width or height of the first element\nthat matches a selector, or set the width or height of all matching elements. For exam‐\nple, to get the width of an element with the ID of elem , you could use this statement:\nwidth = $('#elem').width()\nThe value returned to the variable width  is a numeric value, which is different than\nreturning the CSS value from a call to the css method,  such as the following, which\nwould return (for example) 230px , rather than just the number 230.\nwidth = $('#elem').css('width')\nY ou can also obtain the width of either the current window or the document, like this:\nwidth = $(window).width()\nwidth = $(document).width()\nWhen you pass the window  or document  objects to jQuery, you can‐\nnot fetch their width or height with the css method. Instead you\nmust use the width  or height  methods.\nThe value returned is independent of the box-sizing  setting (see Chapter 19 ). If you\nneed to take box-sizing  into account, use the css method with an argument of\nwidth  instead, like this (but remember to remove the px that will be added after the\nnumeric part if you intend to work with the values returned):\nwidth = $('#elem').css('width')\nSetting values is just as easy. For example, to set all elements that use the class box to\n100 × 100 pixels, you could use this statement:\n$('.box').width(100).height(100)\nExample 21-19  combines these actions into a single program that displays as\nFigure 21-17 .\nExample 21-19. Getting and setting element dimensions\n<!DOCTYPE html>\n<html>\n536 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 567,
    "text": "<head>\n    <title>Dimensions</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <p>\n      <button id='getdoc'>Get document width</button>\n      <button id='getwin'>Get window width</button>\n      <button id='getdiv'>Get div width</button>\n      <button id='setdiv'>Set div width to 150 pixels</button>\n    </p>\n    <div id='result' style='width:300px; height:50px; background:#def;'></div>\n    <script>\n      $('#getdoc').click(function()\n      {\n        $('#result').html('Document width: ' + $(document).width())\n      } )\n      $('#getwin').click(function()\n      {\n        $('#result').html('Window width: ' + $(window).width())\n      } )\n      $('#getdiv').click(function()\n      {\n        $('#result').html('Div width: ' + $('#result').width())\n      } )\n      $('#setdiv').click(function()\n      {\n        $('#result').width(150)\n        $('#result').html('Div width: ' + $('#result').width())\n      } )\n    </script>\n  </body>\n</html>\nFigure 21-17. Getting and setting element dimensions\nModifying Dimensions | 537"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 568,
    "text": "At the start of the body, there are four buttons: three for reporting the widths of the\ndocument, window, and a <div>  element that appears just below the buttons, and one\nto set the div’s width to a new value. In the script section, there are four jQuery state‐\nments, of which the first three simply fetch the widths of the objects given, and then\nreport these values by writing into the HTML of the div.\nThe final statement has two parts: the first reduces the width of the <div>  element to\n150 pixels, and then the second displays the new width value within the div, by fetch‐\ning it using the width  method, to ensure the computed value is displayed.\nWhen the page has been zoomed (either in or out) by the user, this\nevent is not noted in any major browser, in any way that JavaScript\ncan reliably detect. Therefore, jQuery cannot take zooming into\naccount when it applies or returns dimensional values. So it is\ntherefore possible to get unexpected results in this circumstance.\nThe innerWidth and innerHeight Methods\nIt’s often necessary to also take borders, padding, and other properties into account\nwhen working with dimensions, and therefore you can use the innerWidth  and inner\nHeight  methods to return the width and height of the first element that matches the\nselector, including  the padding but not including  any border.\nFor example, the following returns the innerWidth  of the element with an ID of elem\nincluding padding:\niwidth = $('#elem').innerWidth()\nThe outerWidth and OuterHeight Methods\nTo return the dimensions of an element including both  padding and border, you can\ncall the outerWidth  and outerHeight  methods, like this:\nowidth = $('#elem').outerWidth()\nIf you wish to also include any margin in the returned value, you can pass the value of\ntrue  when you call either of these methods, like this:\nowidth = $('#elem').outerWidth(true)\nThe values returned for any of the inner...  or outer...  methods\nare not necessarily integers and may be fractional in some cases.\nUser page zooming is not detected by these methods, and you can‐\nnot use these methods on window  or document  objects—for these,\nuse the width  or height  methods instead.\n538 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 569,
    "text": "DOM Traversal\nIf you refer back  to the section on the Document  Object Model (DOM) in Chap‐\nter 13 , you’ll recall that all web pages are constructed in much the same way as exten‐\nded families. There are parent and child objects, siblings, grandparents and\ngrandchildren, and even element relationships that could be referred to as cousins,\naunts, and so forth. For example, in the following snippet, the <li>  elements are chil‐\ndren of the <ul>  element which, in turn, is parent to the <li>  elements:\n<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>\nAnd, like families, there are multiple ways you can refer to HTML elements, such as\nabsolutely, starting at the window level and moving on down, also known as travers‐\ning the DOM. Or you can use the relationship between one element and another to\nrefer to elements. Really it’s a matter of what makes sense to your particular project.\nFor example, if you want a web page to be as self-contained as possible so that you\nhave a better chance of cutting and pasting elements into other web documents, it\nmakes a lot of sense to refer to elements near each other by relative addressing. What‐\never you choose, though, jQuery offers a wide range of functions to help you accu‐\nrately address elements.\nParent Elements\nTo refer to an element’s direct parent, you use the parent  method, like this:\nmy_parent = $('#elem').parent()\nWhatever type of element elem  may be, the my_parent  object now contains a jQuery\nobject that refers to its parent element. In fact, since selectors can refer to multiple\nelements, this call actually returns an object that refers to a list of parent elements\n(although the list can have only one item), one for each matching element.\nSince a parent may have many children, you might wonder whether more elements\ncan be returned by this method than there are parents. Take the preceding snippet\nwith three <li>  elements. In this case, will three parent elements be returned (because\nthree matches will be made), even though there is just a single <ul>  parent?\nmy_parent = $('li').parent()\nThe answer is no, because jQuery is smart enough to recognize all duplicates and fil‐\nter them out. To verify this, if you ask for the number of elements returned like this,\nthe result will be 1:\nalert($('li').parent().length)\nDOM Traversal | 539"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 570,
    "text": "Let’s now make something happen when the selector matches, such as changing the\nfont-weight  property of the parent element in the previous snippet to bold , like this:\n$('li').parent().css('font-weight', 'bold')\nUsing a filter\nOptionally, a selector can be passed to parent , to filter out which of the parents the\ndesired changes should apply to. To illustrate, Example 21-20  has three small lists and\na couple of jQuery statements.\nExample 21-20. Accessing parent elements\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>DOM Traversal: Parent</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <ul>\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </ul>\n    <ul class='memo'>\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </ul>\n    <ul>\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </ul>\n    <script>\n      $('li').parent()       .css('font-weight',     'bold')\n      $('li').parent('.memo').css('list-style-type', 'circle')\n    </script>\n  </body>\n</html>\nThe three lists are all the same, except that the middle one’s <ul>  element uses a class\nof memo . In the script section, the first statement applies a value of bold  to the font-\nweight  property of all parents of <li>  elements. In this instance, it causes all the <ul>\nelements to display in bold.\nThe second statement is similar, but also passes the class name memo  to the parent\nmethod, so that only that parent will be selected. Then the css method is called to set\n540 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 571,
    "text": "the list-style-type  property of the selected list to circle . Figure 21-18  shows\nthese two statements in effect.\nFigure 21-18. Accessing parent elements with and without filters\nSelecting all ancestor elements\nWe’ve just seen how to select direct parents of elements, but you can also select ances‐\ntors, all the way back to the <html>  root element by using the parents  method. But\nwhy might you want to do this? Well, how about wanting to access the first <div>\nelement up the ancestry chain in order to style it according to something dynamic\nthat has gone on further down the chain?\nThis type of selection may be slightly more advanced than you can think of a reason\nfor right now, but you’ll be pleased it’s there when you need it, and here’s how you\nmight proceed:\n$('#elem').parents('div').css('background', 'yellow')\nActually, that may not be exactly what you want, because it will select all <div>  ele‐\nments in the ancestry chain, and there may be others further up that you don’t want\nto style. So, for this type of eventuality, you can further filter the selection by using the\nparentsUntil  method instead.\nThe parentsUntil  method traverses up the ancestry chain in the same way as\nparents , but stops at the first element that matches the selection filter (in this case, it’s\na <div>  element), so you can use it in the same way as the preceding statement, cer‐\ntain in the knowledge that you will select only exactly the element you want:\n$('#elem').parentsUntil('div').css('background', 'yellow')\nTo illustrate the difference between these two methods, take a look at Example 21-21 ,\nwhich contains two sets of nested elements, both of which are within one parent\nDOM Traversal | 541"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 572,
    "text": "<div>  element. Then, in the script section, there is one example each of the parents\nand parentsUntil  methods being called.\nExample 21-21. Using the parents and parentsUntil methods\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>DOM Traversal: Parents</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <div>\n      <div>\n        <section>\n          <blockquote>\n            <ul>\n              <li>Item 1</li>\n              <li id='elem'>Item 2</li>\n              <li>Item 3</li>\n            </ul>\n          </blockquote>\n        </section>\n      </div>\n      <div>\n        <section>\n          <blockquote>\n            <ul>\n              <li>Item 1</li>\n              <li>Item 2</li>\n              <li>Item 3</li>\n            </ul>\n          </blockquote>\n        </section>\n      </div>\n    </div>\n    <script>\n      $('#elem').parents('div')     .css('background',      'yellow')\n      $('#elem').parentsUntil('div').css('text-decoration', 'underline')\n    </script>\n  </body>\n</html>\nIf you take a look  at Figure 21-19 , you’ll see that the first  jQuery statement has set the\nbackground color of all the contents to yellow. This is because the ancestry tree has\nbeen traversed all the way up to the <html>  element using the parents  method, and\nboth <div>  elements encountered on the way up the tree have been selected (the one\ncontaining the list with the <li>  element—highlighted in bold—with the ID of elem ,\nand its parent <div> , which contains both sets of nested elements).\n542 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 573,
    "text": "Figure 21-19. Comparing the parents and parentsUntil methods\nHowever, the second statement uses parentsUntil  so that the selection stops at the\nfirst <div>  element encountered. This means that when the underline styling is\napplied, it is applied only to the closest parent <div>  that contains the <li>  element\nwith the ID of elem . The outer <div>  is not reached, and because it doesn’t get styled,\nthe second list doesn’t display underlined.\nChild Elements\nTo access the children of an element, you use the children  method, like this:\nmy_children = $('#elem').children()\nJust like the parent  method, this goes only one level and returns a list of none, one,\nor more matching selections. Y ou can also pass a filter argument to it to select\nbetween the children, like this:\nli_children = $('#elem').children('li')\nHere only children that are <li>  elements will be selected.\nTo delve deeper down the generations, you need to  use the find  method, which is the\ninverse of parents , like this:\nli_descendants = $('#elem').find('li')\nHowever, unlike parents , you must  provide a filter selector to the find  method, but if\nyou need to select all descendants, you can use the universal selector, like this:\nall_descendants = $('#elem').find('*')\nSibling Elements\nWhen it comes to selecting siblings, there’s an even wider range of methods available,\nstarting with siblings .\nDOM Traversal | 543"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 574,
    "text": "The siblings  method will return all the matching elements that are children of the\nsame parent, except  for the element used for selecting. So, taking the example of the\nfollowing snippet, if you look up the siblings of the <li>  element with the ID of two,\nit will return only the first and third <li>  elements.\n<ul>\n  <li>Item 1</li>\n  <li id='two'>Item 2</li>\n  <li>Item 3</li>\n</ul>\nHere is such a statement that will cause the sibling elements to be bold:\n$('#two').siblings().css('font-weight', 'bold')\nY ou can also use a filter in the siblings  method to further narrow down the siblings\nreturned. For example, to select only those siblings that use the class new, you might\nuse a statement such as this:\n$('#two').siblings('.new').css('font-weight', 'bold')\nExample 21-22  (liberally whitespaced to line up the attributes in columns) displays an\nunordered list of seven items, of which four of them use the class new, and the second\nitem also has the ID of two:\nExample 21-22. Selecting and filtering  sibling elements\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>DOM Traversal: Siblings</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <ul>\n      <li          class='new'>Item 1</li>\n      <li id='two' class='new'>Item 2</li>\n      <li                     >Item 3</li>\n      <li          class='new'>Item 4</li>\n      <li          class='new'>Item 5</li>\n      <li                     >Item 6</li>\n      <li                     >Item 7</li>\n    </ul>\n    <script>\n      $('#two').siblings('.new').css('font-weight', 'bold')\n    </script>\n  </body>\n</html>\nWhen loaded into a browser, the result of issuing the jQuery statement is\nFigure 21-20 , in which only Item 1, Item 4, and Item 5 have been bold, even though\n544 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 575,
    "text": "Item 2 also uses the class new (because the method is called on that element, and so it\nis excluded from the selection).\nFigure 21-20. Selecting sibling elements\nSince the siblings  method omits the element on which it is called\n(which I will refer to as the callee ), it cannot be used to select from\nall children of a parent element. However, to achieve that with the\npreceding example, you could use a statement such as the follow‐\ning, which will, for example, return all siblings (including the\ncallee) that use the class new:\n$('#two').parent().children('.new').css('font-\nweight', 'bold')\nOr you can add the andSelf  method to the selection to achieve the\nsame result, like this:\n$('#two').siblings('.new').andSelf().css('font-\nweight', 'bold')\nSelecting the Next and Previous Elements\nWhen you need finer control over the selection of siblings, you can further narrow\ndown the elements returned using the next  and prev  methods,  and their extended\nversions . For example, to refer to the element immediately following a selector, you\ncan use a statement such as this (which sets the matched element(s) to display in\nbold):\n$('#new').next().css('font-weight', 'bold')\nIn the case of the following liberally whitespaced snippet, for example, the third item\nhas the ID new, and therefore the fourth item is returned:\n<ul>\n  <li         >Item 1</li>\n  <li         >Item 2</li>\n  <li id='new'>Item 3</li>\nDOM Traversal | 545"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 576,
    "text": "<li         >Item 4</li>\n  <li         >Item 5</li>\n</ul>\nSo far, so simple. But what if you would like to reference all the siblings following a\nparticular element? Well, you can do that with nextAll  method,  like this (which in\nthe preceding snippet would style the last two items):\n$('#new').nextAll().css('font-weight', 'bold')\nWhen calling nextAll , you can also supply a filter to select from the elements that are\nmatched, such as the following, which will style only the following siblings that use\nthe class info : (in this snippet, however, there are no elements that use that class, so\nthe statement will do nothing):\n$('#new').nextAll('.info').css('font-weight', 'bold')\nOr, consider the case of this snippet, in which one item has the ID new and another\nhas the ID old.\n<ul>\n  <li         >Item 1</li>\n  <li id='new'>Item 2</li>\n  <li         >Item 3</li>\n  <li id='old'>Item 4</li>\n  <li         >Item 5</li>\n</ul>\nNow it’s possible to select only those siblings following the one with the ID of new, up\nto (but not including) the one with the ID of old, like this (in which just the third\nitem will be styled):\n$('#new').nextUntil('#old').css('font-weight', 'bold')\nIf no argument is supplied to nextUntil , it behaves exactly like nextAll , returning all\nfollowing siblings. Y ou can also supply a second argument to nextUntil  to act as a\nfilter for selecting from the elements that are matched by it, like this:\n$('#new').nextUntil('#old', '.info').css('font-weight', 'bold')\nIn this statement, only those elements that use the class info  will be styled, which in\nthe case of the preceding snippet is none of them, so no action will be taken.\nY ou can do exactly the same working backward through groups of siblings by using\nthe prev , prevAll , and prevUntil  methods.\nTraversing jQuery Selections\nAs well as traversing throughout the DOM, once you have returned a set of elements\nas a jQuery selection, you can also traverse those elements, choosing which ones to\nact on.\n546 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 577,
    "text": "For example, to style just the first element returned by a selection, you can use the\nfirst  method, like this (to set the first list item in the first unordered list to display\nunderlined):\n$('ul>li').first().css('text-decoration', 'underline')\nOr you can choose to style only the last item by using the last  method, like this:\n$('ul>li').last().css('font-style', 'italic')\nOr, to access an element by index (starting from 0), you can use  the eq method, like\nthis (which styles the second item in the list due to starting at 0):\n$('ul>li').eq(1).css('font-weight', 'bold')\nY ou can also apply a filter to a selection using the filtert  method, like this (which\nchanges the background color of every other element starting at the first, element 0):\n$('ul>li').filter(':even').css('background', 'cyan')\nRemember that when indexing into jQuery selections, the first ele‐\nment is the zeroth. So, for example, when you use the selec‐\ntor :even  in this manner, elements 1, 3, 5, and so on will be\nselected (not 2, 4, 6...).\nTo exclude one or more elements you can apply the not method, like this (where ele‐\nments that don’t  use the ID new are styled in blue):\n$('ul>li').not('#new').css('color', 'blue')\nAnd you can also select an element depending on what descendants it has. To select\nonly elements that have descendant <ol>  elements, for example, you could use this\nstatement, to place a line through those that match:\n$('ul>li').has('ol').css('text-decoration', 'line-through')\nExample 21-23  brings all these together to style an unordered list, one of whose ele‐\nments also contains an ordered list:\nExample 21-23. Traversing a jQuery selection\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Selection Traversal</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <ul>\n      <li>Item 1</li>\n      <li>Item 2</li>\nDOM Traversal | 547"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 578,
    "text": "<li id='new'>Item 3</li>\n      <li>Item 4\n        <ol type='a'>\n          <li>Item 4a</li>\n          <li>Item 4b</li>\n        </ol></li>\n      <li>Item 5</li>\n    </ul>\n    <script>\n      $('ul>li').first()        .css('text-decoration', 'underline')\n      $('ul>li').last()         .css('font-style',      'italic')\n      $('ul>li').eq(1)          .css('font-weight',     'bold')\n      $('ul>li').filter(':even').css('background',      'cyan')\n      $('ul>li').not('#new')    .css('color',           'blue')\n      $('ul>li').has('ol')      .css('text-decoration', 'line-through')\n    </script>\n  </body>\n</html>\nAs you will see from studying Figure 21-21 , every element in each list has been styled\nby one or more of the jQuery statements.\nFigure 21-21. Uniquely addressing elements in a jQuery selection\nThe is Method\nThere is also a way you can query a jQuery selector to return a Boolean value for use\nin plain JavaScript, which is the is method.  Unlike other jQuery filtering methods,\nthis function doesn’t create a new jQuery object that can then have other methods\nappended to it, or that can then be further filtered.\nInstead it returns just true  or false , making the method most suitable for using in\nconditional statements. Example 21-24  uses the is method attached to a call to\nparent  in an event handler for a set of buttons. When any button is clicked, the han‐\ndler is called, and the is method is able to return a value of true  or false , when\nasked whether the parent element is a <div> , as shown in Figure 21-22 .\n548 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 579,
    "text": "Example 21-24. Reporting the parent element with is\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Using is</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <div><button>Button in a div</button></div>\n    <div><button>Button in a div</button></div>\n    <span><button>Button in a span</button></span>\n    <div><button>Button in a div</button></div>\n    <span><button>Button in a span</button></span>\n    <p id='info'></p>\n    <script>\n      $('button').click(function()\n      {\n        var elem = ''\n        if ($(this).parent().is('div')) elem = 'div'\n        else                            elem = 'span'\n        $('#info').html('You clicked a ' + elem)\n      })\n    </script>\n  </body>\n</html>\nFigure 21-22. Using the is method to report the parent element\nUsing jQuery Without Selectors\nThere  are also a couple of jQuery methods that are for use with standard JavaScript\nobjects, and which make handling them a lot simpler. These are $.each , and $.map ,\nwhich are similar but have subtle differences.\nUsing jQuery Without Selectors | 549"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 580,
    "text": "The $.each Method\nUsing $.each , you can iterate through arrays or array-like objects by simply attaching\na function to be called for each iteration. Example 21-25  shows an array of pet names\nand types (called pets ), from which another array (called guineapigs ) needs to be\nextracted, containing only the names of the guinea pigs.\nExample 21-25. Calling the each method\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Using each</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body>\n    <div id='info'></div>\n    <script>\n      pets =\n      {\n        Scratchy : 'Guinea Pig',\n        Squeeky  : 'Guinea Pig',\n        Fluffy   : 'Rabbit',\n        Thumper  : 'Rabbit',\n        Snoopy   : 'Dog',\n        Tiddles  : 'Cat'\n      }\n      guineapigs = []\n      $.each(pets, function(name, type)\n      {\n        if (type == 'Guinea Pig') guineapigs.push(name)\n      })\n      $('#info').html('The guinea pig names are: ' + guineapigs.join(' & '))\n    </script>\n  </body>\n</html>\nTo do this, the $.each  method is passed the array, along with an anonymous function\nto process it. The function takes two arguments, the index into the array (called\nname ), and the contents of each element (called type ).\nThe value in type is then tested to see if it is Guinea Pig , and if so, the value in name\nis pushed onto the guineapigs  array. Upon completion, the contents of guineapigs  is\ndisplayed by writing into the <div>  element with the ID of info . To separate the\nitems in the array, the JavaScript join  method  is used with the & symbol as a\n550 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 581,
    "text": "separator.  The result of loading this example into a browser is simply to display the\ntext “The guinea pig names are: Scratchy & Squeeky. ”\nThe $.map Method\nAnother way to achieve this is with the $.map  method, which  returns all the values\nthat your function returns in an array, saving you from having to create an array, and\nthen push matches onto it—as we had to in the preceding example.\nInstead you can create and populate the array at the same time, by assigning the array\nreturned by $.map  to it, like this (the end result being the same but with less code):\nguineapigs = $.map(pets, function(type, name)\n{\n  if (type == 'Guinea Pig') return name\n})\nWatch out when you change between using the $.each  and $.map\nmethods, because $.each  passes arguments to the function in the\norder index , value , but map uses the order value , index . This is why\nthe two arguments are swapped in the preceding $.map  example.\nUsing Ajax\nIn Chapter 17 , I showed in detail how to implement Ajax communications between\nJavaScript in a browser, and PHP running on a web server. I also provided some\nhandy and compact functions you can call to simplify the process.\nBut if you have jQuery loaded, you can use its Ajax functionality instead if you prefer\n—it works in a very similar way, in that you choose whether to make a Post or a Get\nrequest, and then take it from there.\nUsing the Post Method\nExample 21-26  is the direct jQuery equivalent to Example 17-2  (which loads the\nAmazon Mobile website into a <div>  element), but since all the Ajax-handling code is\ntidied away in the jQuery library file, it’s much shorter—using just a single call to the\n$.post  method, passing it the following three items:\n•The URL of a PHP program on the server to access.\n•The data to pass to that URL.\n•An anonymous function to process the returned data.\nUsing Ajax | 551"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 582,
    "text": "Example 21-26. Sending a Post Ajax request\n<!DOCTYPE html>\n<html> <!-- jqueryajaxpost.htm -->\n  <head>\n    <title>jQuery Ajax Post</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body style='text-align:center'>\n    <h1>Loading a web page into a DIV</h1>\n    <div id='info'>This sentence will be replaced</div>\n    <script>\n      $.post('urlpost.php', { url : 'amazon.com/gp/aw' }, function(data)\n      {\n        $('#info').html(data)\n      } )\n    </script>\n  </body>\n</html>\nThe urlpost.php  program remains unchanged from Example 17-3 , because this exam‐\nple and Example 17-2  are interchangeable.\nUsing the Get Method\nCommunicating with Ajax by using the Get method is just as easy, requiring only the\nfollowing two arguments—so Example 21-27  is therefore the jQuery equivalent to\nExample 17-4 :\n•The URL of a PHP program on the server to access (including a query string\ncontaining the data to pass to it)\n•An anonymous function to process the returned data\nExample 21-27. Sending a Get Ajax request\n<!DOCTYPE html>\n<html> <!-- jqueryajaxget.htm -->\n  <head>\n    <title>jQuery Ajax Get</title>\n    <script src='jquery-1.11.1.min.js'></script>\n  </head>\n  <body style='text-align:center'>\n    <h1>Loading a web page into a DIV</h1>\n    <div id='info'>This sentence will be replaced</div>\n    <script>\n      $.get('urlget.php?url=amazon.com/gp/aw', function(data)\n      {\n552 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 583,
    "text": "$('#info').html(data)\n      } )\n    </script>\n  </body>\n</html>\nThe urlget.php  program remains unchanged from Example 17-5 , because this exam‐\nple and Example 17-4  are interchangeable.\nRemember that the security restrictions of Ajax require that the\ncommunication takes place with the same server that supplied the\nmain web document. Y ou must also use a web server for Ajax com‐\nmunication, not a local file system. These examples are therefore\nbest tested using a production or development server, as described\nin Chapter 2 .\nPlug-Ins\nThere’s room in this chapter to cover only the core jQuery library, and while that’s\nmore than enough for a beginner to be getting on with, the time will come when\nyou’ll find you need even more features and functionality. Thankfully, other jQuery\nprojects can help you there, because a range of official and third-party plug-ins are\nnow available to provide just about any features you can imagine.\nThe jQuery User Interface\nFirst, there’s the jQuery User Interface (known as jQuery UI), which takes off directly\nwhere jQuery leaves off. With it you can add dragging and dropping, resizing, and\nsorting methods to your web pages, as well as more animations and effects, animated\ncolor transitions, more easing effects, and a bunch of widgets to create menus and\nother features such as accordions, buttons, pickers, progress bars, sliders, spinners,\ntabs, tool tips, and much more.\nIf you want to see some demos before deciding whether to download, check out\njqueryui.com/demos .\nThe whole package is under 400 KB zipped and is freely downloadable and usable\nwith almost no restrictions (just the very generous MIT license), from jqueryui.com .\nOther Plug-Ins\nY ou can also add a wide variety of free, ready-made plug-ins to jQuery from numer‐\nous developers, all brought together at plugins.jquery.com .\nSome of the plug-ins include extensive form handling and verification, slideshows,\nuser responsiveness, image manipulation, even more animations, and much more.\nPlug-Ins | 553"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 584,
    "text": "jQuery Mobile\nIf you are developing for mobile  browsers, you will also want to take a look at jQuery\nmobile, which is more of a framework than a library, offering sophisticated, touch-\noptimized ways to navigate the wide range of different types of mobile hard and soft‐\nware, to provide the best possible user experience.\nThe jQuery Mobile download is fully customizable and can be tailored exactly to your\nrequirements, as shown in Figure 21-23 , where the ThemeRoller app is being used.\nFigure 21-23. Creating a mobile theme with the ThemeRoller  app\nY ou’ll find jQuery mobile especially useful if you are writing web apps, and can find\nout more and download it from jquerymobile.com .\nY ou’ve come a long way in this chapter, learning material that sometimes takes up\nentire books. I hope you’ve found everything clear, though, because jQuery is very\neasy to learn and use. Please take a moment now to peruse Appendix E , which lists all\nthe main jQuery objects, events, and methods, and should serve as a handy reference.\nIf you need any other information, please check out jquery.com .\nFor the remaining chapters, we’ll turn our gaze to all the new goodies available in\nHTML5, and then bring everything we’ve learned together into a mini social net‐\nworking project.\n554 | Chapter 21: Introduction to jQuery"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 585,
    "text": "Questions\n1.What is the symbol commonly used as the factory method for creating jQuery\nobjects, and what is the alternative method name?\n2.How would you link to the minified release 1.11.1 of jQuery from the Google\nCDN?\n3.What types of argument does the jQuery factory method accept?\n4.With which jQuery method can you get or set a CSS property value?\n5.What statement would you use to attach a method to the click event of an ele‐\nment with the ID of elem , to make it slowly hide?\n6.What element property must you modify in order to allow it to be animated, and\nwhat are the acceptable values?\n7.How can you cause several methods to run at once (or sequentially, in the case of\nanimations)?\n8.How can you retrieve an element node object from a jQuery selection object?\n9.What statement would set the sibling element immediately preceding one with\nthe ID of news  to display in bold?\n10.With which method can you make a jQuery Ajax Get request?\nSee Chapter 21 Answers  in Appendix A  for the answers to these questions.\nQuestions | 555"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 586,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 587,
    "text": "CHAPTER 22\nIntroduction to HTML5\nHTML5 represents a substantial leap forward in web design, layout,  and usability. It\nprovides a simple way to manipulate graphics in a web browser without resorting to\nplug-ins such as Flash, offers methods to insert audio and video into web pages (again\nwithout plug-ins), and irons out several annoying inconsistencies that crept into\nHTML during its evolution.\nIn addition, HTML5 includes numerous other enhancements such as geolocation\nhandling, web workers to manage background tasks, improved form handling, access\nto bundles of local storage (far in excess of the limited capabilities of cookies), and\neven the facility to turn web pages into web applications for mobile browsers.\nWhat’s curious about HTML5, though, is that it has been an ongoing evolution, in\nwhich browsers have adopted different features at different times. Fortunately, all the\nbiggest and most popular HTML5 additions are finally  supported by all major brows‐\ners (those with more than 1 percent or so of the market, such as Chrome, Internet\nExplorer, Firefox, Safari, and Opera, and the Android and iOS browsers).\nBut with HTML5 having been officially submitted to the W3C in only early 2013,\nthere remain a number of features outstanding in several browsers, which I outline\nlater in the book so you will be prepared when they are adopted.\nNevertheless, we are now fully into the second big surge toward dynamic web interac‐\ntivity (the first being the adoption of what became known as Web 2.0). I would hesi‐\ntate to call it Web 3.0, though, because the term HTML5  says it all to most people, and\nin my view it could be considered a later version of Web 2.0 (maybe something like\nWeb 2.7).\nActually, I think it will be very interesting to see what Web 3.0 will turn out to be. If I\nwere to hazard a prediction, though, I would say it will result from the application of\nartificial intelligence (AI) in the form of much more capable versions of software such\n557"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 588,
    "text": "as Apple’s Siri, Microsoft’s Cortana, OK Google, and IBM’s Watson, combined with\nwearable technology that uses visual and voice input—like Google Glass and the Gal‐\naxy Gear watch—rather than keyboards. I look forward to covering these things in\nfuture editions of this book.\nBut for now, having written about what’s to come in HTML5 for some years, and now\nthat so many parts of the specification are usable on virtually all devices and brows‐\ners, I’m pleased to finally be able to bring it into this edition of the book. So let me\ntake you on an overview of what’s available to you in HTML5 right now.\nThe Canvas\nOriginally introduced by Apple for the WebKit rendering engine (which had itself\noriginated in the KDE HTML layout engine) for its Safari browser (and now also\nimplemented in iOS, Android, Kindle, Chrome, BlackBerry, Opera, and Tizen), the\ncanvas  element enables us to draw graphics in a web page without having to rely on a\nplug-in such as Java or Flash.  After being standardized, the canvas was adopted by all\nother browsers and is now a mainstay of modern web development.\nLike other HTML elements, a canvas is simply an element within a web page with\ndefined dimensions, and within which you can use JavaScript to draw graphics. Y ou\ncreate a canvas by using the <canvas>  tag, to which you must also assign an ID so that\nJavaScript will know which canvas it is accessing (as you can have more than one can‐\nvas on a page).\nIn Example 22-1  I’ve created a <canvas>  element, with the ID mycanvas , that contains\nsome text that is displayed only in browsers that don’t support the canvas. Beneath\nthis there is a section of JavaScript, which draws the Japanese flag on the canvas (as\nshown in Figure 22-1 ).\nExample 22-1. Using the HTML5 canvas element\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>The HTML5 Canvas</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <canvas id='mycanvas' width='320' height='240'>\n      This is a canvas element given the ID <i>mycanvas</i>\n      This text is only visible in non-HTML5 browsers\n    </canvas>\n    <script>\n      canvas            = O('mycanvas')\n      context           = canvas.getContext('2d')\n558 | Chapter 22: Introduction to HTML5"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 589,
    "text": "context.fillStyle = 'red'\n      S(canvas).border  = '1px solid black'\n      context.beginPath()\n      context.moveTo(160, 120)\n      context.arc(160, 120, 70, 0, Math.PI * 2, false)\n      context.closePath()\n      context.fill()\n    </script>\n  </body>\n</html>\nFigure 22-1. Drawing the Japanese flag using an HTML5 canvas\nAt this point, it’s not necessary to detail exactly what is going on, as I explain that in\nthe following chapter, but you should already see how using the canvas is not hard,\nbut does require learning a few new JavaScript functions. Note that this example\ndraws on the OSC.js  set of functions from the previous chapter to help keep the code\nneat and compact.\nGeolocation\nUsing geolocation , your browser can return information to a web server about your\nlocation. This information can come from a GPS chip in the computer or mobile\ndevice you’re using, from your IP address, or from analysis of nearby Wi-Fi hotspots.\nFor security purposes, the user is always in control and can refuse to provide this\ninformation on a one-off basis, or can enable settings to either permanently block or\nallow access to this data from one or all websites.\nThere are numerous uses for this technology, including giving you turn-by-turn navi‐\ngation; providing local maps; notifying you of nearby restaurants, Wi-Fi hotspots, or\nGeolocation | 559"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 590,
    "text": "other places; letting you know which friends are near you; directing you to the near‐\nest gas station; and more.\nExample 22-2  will display a Google map of the user’s location, as long as the browser\nsupports geolocation and the user grants access to his location (as shown in\nFigure 22-2 ). Otherwise, it will display an error.\nExample 22-2. Displaying the map at a user’s location\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Geolocation Example</title>\n    <script src='OSC.js'></script>\n    <script src=\"https://maps.googleapis.com/maps/api/js?sensor=false\"></script>\n  </head>\n  <body>\n    <div id='status'></div>\n    <div id='map'></div>\n    <script>\n      if (typeof navigator.geolocation == 'undefined')\n         alert(\"Geolocation not supported.\")\n      else\n        navigator.geolocation.getCurrentPosition(granted, denied)\n      function granted(position)\n      {\n        O('status').innerHTML = 'Permission Granted'\n        S('map').border       = '1px solid black'\n        S('map').width        = '640px'\n        S('map').height       = '320px'\n        var lat   = position.coords.latitude\n        var long  = position.coords.longitude\n        var gmap  = O('map')\n        var gopts =\n        {\n          center: new google.maps.LatLng(lat, long),\n          zoom: 9, mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n        var map = new google.maps.Map(gmap, gopts)\n      }\n      function denied(error)\n      {\n        var message\n        switch(error.code)\n        {\n          case 1: message = 'Permission Denied'; break;\n560 | Chapter 22: Introduction to HTML5"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 591,
    "text": "case 2: message = 'Position Unavailable'; break;\n          case 3: message = 'Operation Timed Out'; break;\n          case 4: message = 'Unknown Error'; break;\n        }\n        O('status').innerHTML = message\n      }\n    </script>\n  </body>\n</html>\nFigure 22-2. The user’s location has been used to display a map\nAgain, here is not the place to describe how this all works, as I will detail that in\nChapter 25 . For now, though, this example serves to show you how easy managing\ngeolocation can be, especially given that much of the code is dedicated to handling\nerrors and calling up the Google map, so the core geolocation code you need is\nactually minimal.\nAudio and Video\nAnother great addition to HTML5 is support for in-browser audio and video. While\nplaying these types of media can be a little complicated due to the variety of encoding\ntypes and licenses, the <audio>  and <video>  elements provide the flexibility you need\nto display the types of media you have available.\nAudio and Video | 561"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 592,
    "text": "In Example 22-3 , the same video file has been encoded in different formats to ensure\nthat all major browsers are accounted for. Browsers will simply select the first type\nthey recognize and play it, as shown in Figure 22-3 .\nExample 22-3. Playing a video with HTML5\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>HTML5 Video</title>\n  </head>\n  <body>\n    <video width='560' height='320' controls>\n      <source src='movie.mp4'  type='video/mp4'>\n      <source src='movie.webm' type='video/webm'>\n      <source src='movie.ogv'  type='video/ogg'>\n    </video>\n  </body>\n</html>\nFigure 22-3. Displaying video using HTML5\nInserting audio into a web page is just as easy, as you will discover in Chapter 24 .\nForms\nAs you already saw in Chapter 12 , HTML5 forms are in the process of being\nenhanced, but support across all browsers remains patchy. What you can safely use\n562 | Chapter 22: Introduction to HTML5"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 593,
    "text": "today has been detailed in Chapter 12 , and future editions of this book will include\nother aspects of forms as they become adopted across the board. In the meantime,\nyou can keep up-to-date with the latest developments on HTML5 forms at http://\ntinyurl.com/h5forms .\nLocal Storage\nWith local storage, your ability to save data on a  local device is substantially increased\nfrom the meager space provided by cookies. This opens up the possibility of your\nusing web apps to work on documents offline and then syncing them with the web\nserver only when an Internet connection is available. It also raises the prospect of\nstoring small databases locally for access with WebSQL, perhaps for keeping a copy of\nyour music collection’s details, or all your personal statistics as part of a diet or weight\nloss plan, for example. In Chapter 25 , I show you how to make the most of this new\nfacility in your web projects.\nWeb Workers\nIt has been possible to run interrupt-driven applications in the background using\nJavaScript for many years, but it is a clumsy and inefficient process. It makes much\nmore sense to let the underlying browser technology run background tasks on your\nbehalf, which it can do far more quickly than you can by continuously interrupting\nthe browser to check how things are going.\nInstead, with web workers you set everything up and pass your code to the web\nbrowser, which then runs it. When anything significant occurs, your code simply has\nto notify the browser, which then reports back to your main code. In the meantime,\nyour web page can be doing nothing or a number of other tasks, and can forget about\nthe background task until it makes itself known.\nIn Chapter 25 , I demonstrate how you can use web workers to create a simple clock\nand to calculate prime numbers.\nWeb Applications\nMore and more these days, web pages are beginning to resemble apps, and with\nHTML5 they can become web apps very easily. All you have to do is tell the web\nbrowser about the resources used in your application, and it will download them to\nwhere they can be run and accessed locally, offline, and without any Internet connec‐\ntion if necessary.\nChapter 25  shows how you can do this to turn the clock example in the web workers\nsection into a web app.\nLocal Storage | 563"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 594,
    "text": "Microdata\nAlso in Chapter 25  I show how you  can mark up your code with microdata  to make it\ntotally understandable to any browser or other technology that needs to access it.\nMicrodata is sure to become more and more important to search engine optimization\ntoo, so it’s important that you begin to incorporate it or at least understand what\ninformation it can provide about your websites.\nSummary\nAs you can see, there’s quite a lot to HTML5, and it’s all goodies that many people\nwaited a long time for—but they’re finally here. Starting with the canvas, the follow‐\ning few chapters will explain these features to you in glorious detail, so you can be up\nand running with them, and enhancing your websites, in no time.\nQuestions\n1.What new HTML5 element enables drawing of graphics in web pages?\n2.What programming language is required to access many of the advanced\nHTML5 features?\n3.Which tags would you use to incorporate audio and video in a web page?\n4.What feature is new in HTML5 and offers greater capability than cookies?\n5.Which HTML5 technology supports running background JavaScript tasks?\nSee Chapter 22 Answers  in Appendix A  for the answers to these questions.\n564 | Chapter 22: Introduction to HTML5"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 595,
    "text": "CHAPTER 23\nThe HTML5 Canvas\nAlthough the collective term given to the new web technologies is HTML5 , they are\nnot all simply HTML tags and properties. Such is the case with the canvas element.\nY es, you create a canvas by using the <canvas>  tag, and maybe supply a width and\nheight, and can modify it a little with CSS, but to actually write to (or read from) a\ncanvas, you must use JavaScript.\nThankfully, the JavaScript you need to learn is minimal and very easy to implement,\nplus I’ve already provided you with a set of three ready-made functions in Chapter 21\n(in the file OSC.js ) to make accessing objects such as the canvas even more straight‐\nforward. So let’s dive right in and start using the new <canvas>  tag.\nCreating and Accessing a Canvas\nIn the previous chapter, I showed you how  to draw a simple circle to display the Japa‐\nnese flag, as in Example 23-1 . Let’s now look at what exactly is going on.\nExample 23-1. Displaying the Japanese flag by using a canvas\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>The HTML5 Canvas</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <canvas id='mycanvas' width='320' height='240'>\n      This is a canvas element given the ID <i>mycanvas</i>\n      This text is only visible in non-HTML5 browsers\n    </canvas>\n565"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 596,
    "text": "<script>\n      canvas            = O('mycanvas')\n      context           = canvas.getContext('2d')\n      context.fillStyle = 'red'\n      S(canvas).border  = '1px solid black'\n      context.beginPath()\n      context.moveTo(160, 120)\n      context.arc(160, 120, 70, 0, Math.PI * 2, false)\n      context.closePath()\n      context.fill()\n    </script>\n  </body>\n</html>\nFirst, the <!DOCTYPE html>  declaration is issued to tell the browser that the document\nwill use HTML5. After this, a title is displayed and the three functions in the OSC.js\nfile are loaded in.\nIn the body of the document, a canvas  element is defined, given an ID of mycanvas ,\nand given a width and height of 320 by 240 pixels.\nThis is followed by a section of JavaScript that styles and draws on the canvas. We\nbegin by creating a canvas  objec t by calling the O function on the canvas  element. As\nyou will recall, this calls the document.getElementById  function, and is therefore a\nmuch shorter way of referencing the element.\nThis is all stuff you’ve seen before, but next comes something new:\ncontext = canvas.getContext('2d')\nThis command calls the getContext  method of the new canvas  object  just created,\nrequesting two-dimensional access to the canvas by passing the value '2d' .\nAs you might guess, there are plans for a three-dimensional context\navailable for the canvas (probably based on the OpenGL ES API),\nwhich will support the argument '3d' . But for now, if you want to\ndisplay 3D on a canvas, you’ll need to do the math yourself and\n“fake” it in 2D. Or you could investigate WebGL (which is based on\nOpenGL ES). There’s no room to cover it here, but you can find a\ngreat tutorial at http://learningwebgl.com .\nArmed with this context in the object context , we prime the subsequent drawing\ncommands by setting the fillStyle  property of context to the value 'red' :\ncontext.fillStyle = 'red'\nThen the S function is called to set the border property of the canvas to a 1-pixel,\nsolid black line to outline the flag image:\n566 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 597,
    "text": "S(canvas).border = '1px solid black'\nWith everything prepared, a path is opened on the context and the drawing position\nis moved to the location 160,120:\ncontext.beginPath()\ncontext.moveTo(160, 120)\nAfter that, an arc is drawn centered on that coordinate, with a radius of 70 pixels,\nbeginning at an angle of 0 degrees (which is the righthand edge of the circle as you\nlook at it), and continuing all the way around the circle in radians as determined by a\nvalue of 2 × π:\ncontext.arc(160, 120, 70, 0, Math.PI * 2, false)\nThe final value of false  indicates a clockwise direction for drawing the arc; a value of\ntrue  would indicate that the drawing should occur in a counterclockwise direction.\nFinally, we close and fill the path, using the preselected value in the fillStyle  prop‐\nerty that we set to 'red'  a few lines earlier:\ncontext.closePath()\ncontext.fill()\nThe result of loading this document into a web browser looks like Figure 22-1  in the\nprevious chapter.\nThe toDataURL Function\nWhen you have created an image in a canvas, you will sometimes want to make a\ncopy of it, perhaps to repeat elsewhere on a web page, to save to local storage, or to\nupload to a web server. This is particularly handy since users cannot use drag and\ndrop to save a canvas image.\nTo illustrate how you do this, in Example 23-2  I have added a few lines of code to the\nprevious example (highlighted in bold). These create a new <img>  element with the\nID 'myimage' , give it a solid black border, and then copy the canvas image into the\n<img>  element (see Figure 23-1 ).\nExample 23-2. Copying a canvas image\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>The HTML5 Canvas</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <canvas id='mycanvas' width='320' height='240'>\n      This is a canvas element given the ID <i>mycanvas</i>\nCreating and Accessing a Canvas | 567"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 598,
    "text": "This text is only visible in non-HTML5 browsers\n    </canvas>\n    <img id='myimage'>\n    <script>\n      canvas            = O('mycanvas')\n      context           = canvas.getContext('2d')\n      context.fillStyle = 'red'\n      S(canvas).border  = '1px solid black'\n      context.beginPath()\n      context.moveTo(160, 120)\n      context.arc(160, 120, 70, 0, Math.PI * 2, false)\n      context.closePath()\n      context.fill()\n      S('myimage').border = '1px solid black'\n      O('myimage').src    = canvas.toDataURL()\n    </script>\n  </body>\n</html>\nFigure 23-1. The image on the right is copied from the lefthand  canvas\nIf you try this code for yourself, you will notice that while you cannot drag and drop\nthe lefthand canvas image, you can do so with the righthand picture, which you could\nalso save to local storage or upload to a web server using the right JavaScript (and\nPHP on the server end).\n568 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 599,
    "text": "Specifying an Image Type\nWhen creating an image from a canvas, you can specify the type of image you want\nout of .jpg and .png. The default is .png ('image/png' ), but should you prefer .jpg, you\ncan alter the call to toDataURL . At the same time, you can also specify the amount of\ncompression to use between 0 (for lowest quality) and 1 (for highest quality). The fol‐\nlowing uses a compression value of 0.4, and should generate a reasonably good-\nlooking image at a fairly low file size:\nO('myimage').src = canvas.toDataURL('image/jpeg', 0.4)\nY ou should remember that the toDataURL  method applies to a\ncanvas  object, not to any context created from that object.\nNow that you know how to create canvas images and then copy or otherwise use\nthem, it’s time to look at the drawing commands available, starting with rectangles.\nThe fillRect  Method\nThere are two different methods you can call for drawing rectangles, the first of\nwhich is fillRect . To use it, you simply supply the top-left coordinates of your rec‐\ntangle, followed by the width and height in pixels, like this:\ncontext.fillRect(20, 20, 600, 200)\nBy default, the rectangle will be filled with black, but you can use any other color you\nlike by first issuing a command such as the following, where the argument can be any\nacceptable CSS color name or value:\ncontext.fillStyle = 'blue'\nThe clearRect Method\nY ou can also draw a rectangle in which  all its color values (red, green, blue, and alpha\ntransparency) have been set to 0, like the following, which uses the same order of\ncoordinates, and width and height arguments:\ncontext.clearRect(40, 40, 560, 160)\nOnce the clearRect  method  is applied, the new clear rectangle will strip all color\nfrom the area it covers, leaving only any underlying CSS color that has been applied\nto the canvas  element.\nCreating and Accessing a Canvas | 569"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 600,
    "text": "The strokeRect Method\nWhen you want only an outlined rectangle, you can use a command such as the fol‐\nlowing, which will use the default of black or the currently selected stroke color:\ncontext.strokeRect(60, 60, 520, 120)\nTo change the color used, you can first issue a command such as the following, sup‐\nplying any valid CSS color argument:\ncontext.strokeStyle = 'green'\nCombining These Commands\nIn Example 23-3 , the preceding rectangle-drawing commands have been combined to\ndisplay the image shown in Figure 23-2 .\nExample 23-3. Drawing several rectangles\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Drawing Rectangles</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <canvas id='mycanvas' width='640' height='240'></canvas>\n    <script>\n      canvas               = O('mycanvas')\n      context              = canvas.getContext('2d')\n      S(canvas).background = 'lightblue'\n      context.fillStyle    = 'blue'\n      context.strokeStyle  = 'green'\n      context.fillRect(  20, 20, 600, 200)\n      context.clearRect( 40, 40, 560, 160)\n      context.strokeRect(60, 60, 520, 120)\n    </script>\n  </body>\n</html>\n570 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 601,
    "text": "Figure 23-2. Drawing concentric rectangles\nLater in this chapter, you’ll see how you can further modify output by changing\nstroke types and widths, but first let’s turn to modifying fills by applying gradients.\nThe createLinearGradient Method\nThere are a couple of ways  to apply a gradient to a fill, but the simplest is with the\ncreateLinearGradient  method.  Y ou specify start and end x and y coordinates rela‐\ntive to the canvas (not the object being filled). This allows for greater subtlety. For\nexample, you can specify that a gradient begin at the far left and end at the far right of\na canvas, but apply it only within the area defined in a fill command, as shown in\nExample 23-4 .\nExample 23-4. Applying a gradient fill\ngradient = context.createLinearGradient(0, 80, 640,80)\ngradient.addColorStop(0, 'white')\ngradient.addColorStop(1, 'black')\ncontext.fillStyle = gradient\ncontext.fillRect(80, 80, 480,80)\nFor brevity and clarity in this and many of the following examples,\nonly salient lines of code are shown. Complete examples with the\nsurrounding HTML, setup, and other sections  of code are available\nto freely download from the companion website at http://lpmj.net .\nIn this example, we create a gradient fill object named gradient  by making a call to\nthe createLinearGradient  method of the context  object. The start position of 0,80\nCreating and Accessing a Canvas | 571"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 602,
    "text": "is halfway down the lefthand canvas edge, while the end of 640,80 is halfway down\nthe right-hand edge.\nThen a couple of color stops are provided such that the very first color of the gradient\nis white, and the final color is black. The gradient will then transition smoothly\nbetween these colors across the canvas from left to right.\nWith the gradient  object now ready, it is applied to the fillStyle  property of the\ncontext  object, so that the final fillRect  call can use it. In this call, the fill is applied\nonly in a central rectangular area of the canvas, so, although the gradient goes from\nthe far left to the far right of the canvas, the portion of it shown is only from 80 pixels\nin and down from the top-left corner, to a width of 480 and depth of 80 pixels. The\nresult (when added to the previous example code) looks like Figure 23-3 .\nFigure 23-3. The central rectangle has a horizontal gradient fill\nBy specifying different start and end coordinates for a gradient, you can make it slant\nin any direction, as demonstrated with Example 23-5  and shown in Figure 23-4 .\nExample 23-5. A variety of gradients at different  angles and colors\ngradient = context.createLinearGradient(0, 0, 160, 0)\ngradient.addColorStop(0, 'white')\ngradient.addColorStop(1, 'black')\ncontext.fillStyle = gradient\ncontext.fillRect(20, 20, 135, 200)\ngradient = context.createLinearGradient(0, 0, 0, 240)\ngradient.addColorStop(0, 'yellow')\ngradient.addColorStop(1, 'red')\ncontext.fillStyle = gradient\ncontext.fillRect(175, 20, 135, 200)\n572 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 603,
    "text": "gradient = context.createLinearGradient(320, 0, 480, 240)\ngradient.addColorStop(0, 'green')\ngradient.addColorStop(1, 'purple')\ncontext.fillStyle = gradient\ncontext.fillRect(330, 20, 135, 200)\ngradient = context.createLinearGradient(480, 240, 640, 0)\ngradient.addColorStop(0, 'orange')\ngradient.addColorStop(1, 'magenta')\ncontext.fillStyle = gradient\ncontext.fillRect(485, 20, 135, 200)\nFigure 23-4. A range of different  linear gradients\nIn this example, I chose to place the gradients directly on top of the areas to be filled\nin order to more clearly show the maximum variation in color from start to end.\nTo create your gradient, determine the direction in which you want it to flow and\nthen locate two points to represent the start and end. No matter what values you sup‐\nply for these points, the gradient will smoothly transition in the direction given, even\nif the points are outside the fill area.\nThe addColorStop Method in Detail\nY ou can use as many color stops in a gradient as you like, not just the two start and\nend colors used so far in these examples. This makes it possible to clearly describe\nalmost any type of gradient effect you can imagine. To do this, you must specify the\npercent of the gradient that each color should take up, by allocating a floating-point\nstart position along the gradient range between 0 and 1. Y ou do not enter a color’s\nCreating and Accessing a Canvas | 573"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 604,
    "text": "end position, as it is deduced from the start position of the next color stop, or the\ngradient end if there isn’t another color.\nIn the preceding examples, only the two start and end values were chosen, but to cre‐\nate a rainbow effect, you could set up your color stops as shown in Example 23-6  (and\ndisplayed in Figure 23-5 ).\nExample 23-6. Adding multiple color stops\ngradient.addColorStop(0.00, 'red')\ngradient.addColorStop(0.14, 'orange')\ngradient.addColorStop(0.28, 'yellow')\ngradient.addColorStop(0.42, 'green')\ngradient.addColorStop(0.56, 'blue')\ngradient.addColorStop(0.70, 'indigo')\ngradient.addColorStop(0.84, 'violet')\nFigure 23-5. A rainbow effect  with seven stop colors\nIn Example 23-6 , all the colors are spaced roughly equidistantly (with each color\ngiven 14 percent of the gradient, and the final one 16), but you don’t have to stick to\nthat; you can squish several colors near each other, while spacing others out. It’s\nentirely up to you as to how many colors you use and where in the gradient they start\nand end.\nThe createRadialGradient Method\nY ou aren’t restricted to only linear gradients in HTML; you can create radial gradients\non a canvas too. It’s a little more complex than with a linear gradient, but not much\nmore so.\n574 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 605,
    "text": "What you need to do is pass the center location as a pair of x and y coordinates, along\nwith a radius in pixels. These are used as the start of the gradient and outer circum‐\nference, respectively. Then you also pass another set of coordinates and a radius to\nspecify the end of the gradient.\nSo, for example, to create a gradient that simply starts at the center of a circle and\nthen expands out, you could issue a command such as the one in Example 23-7  (and\ndisplayed in Figure 23-6 ).\nExample 23-7. Creating a radial gradient\ngradient = context.createRadialGradient (320, 120, 0, 320, 120, 320)\nFigure 23-6. A centered radial gradient\nOr you can be fancy and move the location of the start and end of a radial gradient, as\nin Example 23-8  (displayed in Figure 23-7 ), which starts centered on location 0,120\nwith a radius of 0 pixels, and ends centered at 480,120 with a radius of 480 pixels.\nExample 23-8. Stretching a radial gradient\ngradient = context.createRadialGradient(0, 120, 0, 480, 120, 480)\nCreating and Accessing a Canvas | 575"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 606,
    "text": "Figure 23-7. A stretched radial gradient\nBy manipulating the figures supplied to this method, you can cre‐\nate a wide range of weird and wonderful effects—try it for yourself\nwith the supplied examples.\nUsing Patterns for Fills\nIn a similar manner to gradient fills, you can also apply an image as a fill pattern. This\ncan be an image anywhere in the current document, or even one created from a can‐\nvas via the toDataURL  method (explained earlier in this chapter).\nExample 23-9  loads a 100×100-pixel image (the yin-yang symbol) into the new image\nobject image , and then the onload  event of the object has a function attached to it that\ncreates a repeating pattern for the fillStyle  property of the context. This is then\nused to fill a 600×200-pixel area within the canvas, as shown in Figure 23-8 .\nExample 23-9. Using an image for a pattern fill\nimage     = new Image()\nimage.src = 'image.png'\nimage.onload = function()\n{\n  pattern           = context.createPattern(image, 'repeat')\n  context.fillStyle = pattern\n  context.fillRect(20, 20, 600, 200)\n}\n576 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 607,
    "text": "Figure 23-8. Tiling an image by using it as a pattern fill\nWe create the pattern by using the createPattern  method, which also supports non‐\nrepeating patterns, or ones that just repeat in the x- or y-axes. We achieve this by\npassing one of the following values to it as the second argument after the image to\nuse:\nrepeat\nRepeat the image both vertically and horizontally.\nrepeat-x\nRepeat the image horizontally.\nrepeat-y\nRepeat the image vertically.\nno-repeat\nDo not repeat the image.\nThe fill pattern is based on the entire canvas area, so where the fill command is set to\napply only to a smaller area within the canvas, the images appear cut off at the top\nand left.\nIf the onload  event had not been used in this example and, instead,\nthe code was simply executed as soon as encountered, the image\nmight not have already loaded in time, and may not be displayed.\nAttaching to this event ensures that the image is available for use in\nthe canvas, because the event triggers only upon successful loading\nof an image.\nCreating and Accessing a Canvas | 577"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 608,
    "text": "Writing Text to the Canvas\nAs you would expect from a set of graphics features, writing to the canvas with text is\nfully supported with a variety of font, alignment, and fill methods. But why would\nyou want to write text to the canvas when there’s already such good support for web\nfonts in CSS these days?\nWell, suppose you wish to display a graph or table with graphical elements. Y ou’ll\nsurely also want to label parts of it. What’s more, using the available commands, you\ncan produce much more than simply a colored font. So let’s start by assuming you’ve\nbeen tasked to create a header for a website on basket weaving, called WickerpediA\n(actually there’s already one of these, but let’s go ahead anyway).\nTo start with, you need to select a suitable  font and size it appropriately, perhaps as in\nExample 23-10 , in which a font  style of bold, a size of 140 pixels, and a typeface of\nTimes have been selected. Also, the textBaseline  property has been set to top so that\nthe strokeText  method can pass coordinates of 0,0 for the top-left origin of the text,\nplacing it at the top left of the canvas. Figure 23-9  shows what this looks like.\nExample 23-10. Writing text to the canvas\ncontext.font         = 'bold 140px Times'\ncontext.textBaseline = 'top'\ncontext.strokeText('WickerpediA', 0, 0)\nFigure 23-9. The text has been written to the canvas\nThe strokeText Method\nTo write text to the canvas, you send the text string and a pair of coordinates to the\nstrokeText  method, like this:\ncontext.strokeText('WickerpediA', 0, 0)\nThe x and y coordinates supplied will be used as a relative reference by the textBase\nLine  and textAlign  properties.\n578 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 609,
    "text": "This method—using line drawing—is only one way of drawing text to the canvas. So,\nin addition to all the following properties that affect text, line-drawing properties\nsuch as lineWidth  (detailed later in this chapter) will also affect how text displays.\nThe textBaseLine Property\nThe textBaseLine  property can be given any of the following values:\ntop\nAligns to the top of the text\nmiddle\nAligns to the middle of the text\nalphabetic\nAligns to the alphabetic baseline of the text\nbottom\nAligns to the bottom of the font\nThe font Property\nThe font  style can be any of bold , italic , or normal  (the default), or a combination\nof italic bold , and the size values can be specified in em, ex, px, %, in, cm, mm, pt, or\npc measures, just as with CSS. The font should be one available to the current\nbrowser, which generally means one of Helvetica , Impact , Courier , Times , or Arial ,\nor you can choose the default Serif  or Sans-serif  font of the user’s system. How‐\never, if you know that a particular font is available to the browser, you can use it.\nIf you want to use a font such as Times New Roman , which incorpo‐\nrates spaces in its name, you should change the relevant line to\nsomething like this, in which the outer quotes are different from\nthe ones surrounding the font name:\ncontext.font = 'bold 140px \"Times New Roman\"'\nThe textAlign Property\nAs well as choosing how to align your text vertically, you can specify horizontal align‐\nment by giving the textAlign  property one of the following values:\nstart\nAligns the text to the left if the document direction is left to right; otherwise, right.\nThis is the default setting.\nend\nAligns the text to the right if the document direction is left to right; otherwise, left.\nWriting Text to the Canvas | 579"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 610,
    "text": "left\nAligns the text to the left.\nright\nAligns the text to the right.\ncenter\nCenters the text.\nY ou use the property like this:\ncontext.textAlign = 'center'\nIn the case of the current example, you need the text left-aligned so that it butts up\nneatly to the edge of the canvas, so the textAlign  property is not used, and therefore\nthe default left alignment occurs.\nThe fillText  Method\nY ou can also choose to use a fill property to fill in canvas  text, which can be any of a\nsolid color, a linear or radial gradient, or a pattern fill. So let’s use a pattern fill for\nyour heading, based on the texture of a wicker basket, as in Example 23-11 , the result\nof which is shown in Figure 23-10 .\nExample 23-11. Filling in the text with a pattern\nimage     = new Image()\nimage.src = 'wicker.jpg'\nimage.onload = function()\n{\n  pattern           = context.createPattern(image, 'repeat')\n  context.fillStyle = pattern\n  context.fillText(  'WickerpediA', 0, 0)\n  context.strokeText('WickerpediA', 0, 0)\n}\nFigure 23-10. The text now has a pattern fill\n580 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 611,
    "text": "For good measure, I also kept the strokeText  call in this example to ensure a black\noutline to the text; without it, there wasn’t enough definition at the edges.\nA wide variety of other fill types or patterns can also be used here, and the simplicity\nof the canvas makes it easy to experiment. What’s more: if you wish, once you have\nthe heading just right, you can also choose to save a copy by issuing a call toDataURL ,\nas detailed earlier in the chapter. Then you can use the image as a logo for uploading\nto other sites, for example.\nThe measureText Method\nWhen working with canvas text, you may sometimes need to know how much space\nit will occupy so that you can best position it. Y ou can achieve this with the measure\nText  method, as follows (assuming all the various text properties have already been\ndefined at this point):\nmetrics = context.measureText('WickerpediA')\nwidth   = metrics.width\nSince the height of the text in pixels is equal to the font size in points when the font is\ndefined, the metrics  object doesn’t provide a height metric.\nDrawing Lines\nThe canvas provides a plethora of line-drawing functions to cater to almost every\nneed, including choices of lines, line caps and joins, and paths and curves of all types.\nBut let’s start with a property I touched on in the previous section on writing text to\nthe canvas.\nThe lineWidth Property\nAll the canvas methods that draw using lines make use of lineWidth  and a number of\nother line properties. Using it is as simple as specifying a line width in pixels, like this,\nwhich sets the width to 3 pixels:\ncontext.lineWidth = 3\nThe lineCap and lineJoin Properties\nWhen lines you draw come to an end and they are more than a pixel wide, you can\nchoose how this line cap  (as it is called) should appear by using the lineCap  property,\nwhich can have the values butt , round , or square . For example:\ncontext.lineCap = 'round'\nDrawing Lines | 581"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 612,
    "text": "Also, when you are joining lines together that are wider than a single pixel, it is\nimportant to specify exactly how they should meet. Y ou achieve this with the line\nJoin  property, which can have values of round , bevel , or miter , like this:\ncontext.lineJoin = 'bevel'\nExample 23-12  (shown here in full since it’s a little more complicated) applies all three\nvalues of each property used in combination, creating the informative result shown in\nFigure 23-11 . The beginPath , closePath , moveTo , and lineTo  methods used by this\nexample are explained next.\nExample 23-12. Displaying combinations of line caps and joins\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Drawing Lines</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <canvas id='mycanvas' width='535' height='360'></canvas>\n    <script>\n      canvas               = O('mycanvas')\n      context              = canvas.getContext('2d')\n      S(canvas).background = 'lightblue'\n      context.fillStyle    = 'red'\n      context.font         = 'bold 13pt Courier'\n      context.strokeStyle  = 'blue'\n      context.textBaseline = 'top'\n      context.textAlign    = 'center'\n      context.lineWidth    = 20\n      caps                 = ['  butt', ' round', 'square']\n      joins                = [' round', ' bevel', ' miter']\n      for (j = 0 ; j < 3 ; ++j)\n      {\n        for (k = 0 ; k < 3 ; ++k)\n        {\n          context.lineCap  = caps[j]\n          context.lineJoin = joins[k]\n          context.fillText(' cap:' + caps[j],  88 + j * 180, 45 + k * 120)\n          context.fillText('join:' + joins[k], 88 + j * 180, 65 + k * 120)\n          context.beginPath()\n          context.moveTo( 20 + j * 180, 100 + k * 120)\n          context.lineTo( 20 + j * 180,  20 + k * 120)\n          context.lineTo(155 + j * 180,  20 + k * 120)\n          context.lineTo(155 + j * 180, 100 + k * 120)\n          context.stroke()\n582 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 613,
    "text": "context.closePath()\n        }\n      }\n    </script>\n  </body>\n</html>\nThis code sets up a few properties and then nests a pair of loops: one for the line caps\nand one for the joins. Inside the central loop, the current values for the lineCap  and\nlineJoin  properties are first set, and then displayed in the canvas with the fillText\nmethod.\nUsing these settings, the code then draws nine shapes with a 20-pixel-wide line, each\nof which has a different combination of line cap and join settings, as shown in\nFigure 23-11 .\nFigure 23-11. All the combinations of line caps and joins\nAs you can see, butted line caps are short, square ones are longer, and the round ones\nare somewhere between the two. At the same time, rounded line joins are curved,\nbeveled ones are cut across the corner, and mitered ones have sharp corners. Line\njoins also apply to joins at angles other than 90 degrees.\nDrawing Lines | 583"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 614,
    "text": "The miterLimit Property\nIf you find that your mitered joins get  cut off too short, you can extend them by using\nthe miterLimit  property, like this:\ncontext.miterLimit = 15\nThe default value is 10, so you can reduce the miter limit too. If miterLimit  is not set\nto a sufficiently large enough value for a miter, then sharply mitered joins will simply\nbevel instead. So, if you are having trouble with your pointed miters, simply increase\nthe value you supply for miterLimit  until the miter displays.\nUsing Paths\nThe previous example made use of two methods to set up paths for the line-drawing\nmethods to follow. The beginPath  method sets the start of a path, and closePath  sets\nthe end. Inside each path, you can then use various methods for moving the location\nof drawing, and creating lines, curves, and other shapes. So let’s examine the relevant\nsection from Example 23-12 , simplified to create just a single instance of the pattern:\ncontext.beginPath()\ncontext.moveTo(20, 100)\ncontext.lineTo(20,  20)\ncontext.lineTo(155, 20)\ncontext.lineTo(155,100)\ncontext.stroke()\ncontext.closePath()\nIn this code snippet, a path is started in the first line, and then the drawing location is\nmoved to a position 20 pixels across and 100 down from the top-left corner of the\ncanvas, using a call to the moveTo  method. \nThis is followed by three calls to lineTo , which then draw three lines, first upward to\nthe location 20,20, then to the right to 155,20, and then down again to 155,100. Once\nthis path has been set out, the stroke  method is called to lay it down, and finally the\npath is closed because it’s no longer needed.\nIt is essential to close paths as soon as you finish with them; other‐\nwise, you can get some very unexpected results when using multi‐\nple paths.\nThe moveTo and LineTo Methods\nThe moveTo  and LineTo  methods  both take simple x and y coordinates as their argu‐\nments, with the difference being that MoveTo  picks up an imaginary pen from the cur‐\n584 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 615,
    "text": "rent location and then moves it to a new one, while LineTo  draws a line from the\ncurrent location of the imaginary pen to the new one specified. Or, at least, a line will\nbe drawn if the stroke  method is called, but not otherwise. So let’s just say that\nLineTo  creates a potential  drawn line, but it could equally be part of the outline for a\nfill area, for example.\nThe stroke Method\nThe stroke  method has the job of actually drawing all the lines created so far in a\npath onto the canvas. If it is issued from inside an unclosed path, this has the effect of\nimmediately drawing everything up to the most recent imaginary pen location.\nHowever, if you close a path and then issue a call to stroke , it has the effect of also\njoining a path from the current location back to the start location, which in this\nexample would turn the shapes into rectangles (which we don’t want because we need\nto see the line caps as well as joins).\nThis joining effect on closing a path is required (as you will see a\nlittle later) so that paths are properly closed before any fill  meth‐\nods are used on them; otherwise, they might overflow the bounds\nof the path.\nThe rect Method\nShould it have been necessary to create four-sided rectangles instead of the three-\nsided shapes in the preceding example (and you didn’t wish to close the path yet),\nanother lineTo  call could have been issued to join everything up, like this (highligh‐\nted in bold):\ncontext.beginPath()\ncontext.moveTo(20, 100)\ncontext.lineTo(20, 20)\ncontext.lineTo(155, 20)\ncontext.lineTo(155, 100)\ncontext.lineTo(20, 100)\ncontext.closePath()\nBut there’s a much simpler way to draw outlined rectangles, which is with the rect\nmethod, like this:\nrect(20, 20, 155, 100)\nIn just a single call, this command takes two pairs of x and y coordinates and draws a\nrectangle with its top-left corner at location 20,20, and bottom-right corner at\n155,100.\nUsing Paths | 585"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 616,
    "text": "Filling Areas\nUsing paths, you can create complicated areas that can also be filled in with solid, gra‐\ndient, or pattern fills. In Example 23-13 , some basic trigonometry is used to create a\ncomplex star pattern. I won’t detail how the math works because that’s not important\nto the example (although if you want to play with the code, try changing the values\nassigned to points , and the scale1  and scale2  variables, for different effects).\nAll you really need to look at, however, are the lines highlighted in bold, in which a\npath is started, a pair of lineTo  calls defines the shape, the path is closed, and then\nthe stroke  and fill  methods are used to draw the shape outline in orange and fill it\nin with yellow (as shown in Figure 23-12 ).\nExample 23-13. Filling in a complex path\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Drawing Lines</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <canvas id='mycanvas' width='320' height='320'></canvas>\n    <script>\n      canvas               = O('mycanvas')\n      context              = canvas.getContext('2d')\n      S(canvas).background = 'lightblue'\n      context.strokeStyle  = 'orange'\n      context.fillStyle    = 'yellow'\n      orig   = 160\n      points = 21\n      dist   = Math.PI / points * 2\n      scale1 = 150\n      scale2 = 80\n      context.beginPath()\n      for (j = 0 ; j < points ; ++j)\n      {\n        x = Math.sin(j * dist)\n        y = Math.cos(j * dist)\n        context.lineTo(orig + x * scale1, orig + y * scale1)\n        context.lineTo(orig + x * scale2, orig + y * scale2)\n      }\n      context.closePath()\n      context.stroke()\n      context.fill()\n586 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 617,
    "text": "</script>\n  </body>\n</html>\nFigure 23-12. Drawing and filling  in a complex path\nWith paths, it’s possible to create as complex an object as you like,\neither using formulae or loops (as in this example), or simply with\na long string of moveTo  and/or LineTo  or other calls.\nThe clip Method\nSometimes when you are building a path, you may want to ignore sections of the can‐\nvas (perhaps if you are drawing partly “behind” another object, and wish only the\nvisible part to display. Y ou can achieve this using the clip  method, which creates a\nboundary outside of which stroke , fill , or other methods will not have any effect.\nTo illustrate this, Example 23-14  creates an effect similar to window blinds by moving\nthe imaginary pen pointer to the lefthand edge, then drawing a lineTo  over to the\nrighthand edge, another down by 30 pixels, and then another back to the lefthand\nedge, and so on. This creates a sort of snaking pattern in which a series of 30-pixel-\ndeep, horizontal bars are drawn on the canvas, as shown in Figure 23-13 .\nThe clip Method | 587"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 618,
    "text": "Example 23-14. Creating a clip area\ncontext.beginPath()\nfor (j = 0 ; j < 10 ; ++j)\n{\n  context.moveTo(20,  j * 48)\n  context.lineTo(620, j * 48)\n  context.lineTo(620, j * 48 + 30)\n  context.lineTo(20,  j * 48 + 30)\n}\ncontext.stroke()\ncontext.closePath()\nFigure 23-13. A path of horizontal bars\nTo turn this example into a clipped area of the canvas, you simply need to replace the\ncall to stroke  (highlighted in bold in the example) with one to clip , like this:\ncontext.clip()\n588 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 619,
    "text": "Now the outline of the bars won’t be seen, but the clipping area will be in place. To\nillustrate this, Example 23-15  makes this method substitution and then adds to the\nprevious example by drawing a simple picture on the canvas, of green grass below a\nblue sky containing a shining sun (modified from Example 23-12 ), with the changes\nhighlighted in bold, and as shown in Figure 23-14 .\nExample 23-15. Drawing within the clipped area’s bounds\ncontext.fillStyle = 'white'\ncontext.strokeRect(20, 20, 600, 440)  // Black border\ncontext.fillRect(  20, 20, 600, 440)  // White background\ncontext.beginPath()\nfor (j = 0 ; j < 10 ; ++j)\n{\n  context.moveTo(20,  j * 48)\n  context.lineTo(620, j * 48)\n  context.lineTo(620, j * 48 + 30)\n  context.lineTo(20,  j * 48 + 30)\n}\ncontext.clip()\ncontext.closePath()\ncontext.fillStyle   = 'blue'          // Blue sky\ncontext.fillRect(20, 20,  600, 320)\ncontext.fillStyle   = 'green'         // Green grass\ncontext.fillRect(20, 320, 600, 140)\ncontext.strokeStyle = 'orange'\ncontext.fillStyle   = 'yellow'\norig   = 170\npoints = 21\ndist   = Math.PI / points * 2\nscale1 = 130\nscale2 = 80\ncontext.beginPath()\nfor (j = 0 ; j < points ; ++j)\n{\n  x = Math.sin(j * dist)\n  y = Math.cos(j * dist)\n  context.lineTo(orig + x * scale1, orig + y * scale1)\n  context.lineTo(orig + x * scale2, orig + y * scale2)\n}\ncontext.closePath()\ncontext.stroke()                      // Sun outline\ncontext.fill()                        // Sun fill\nThe clip Method | 589"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 620,
    "text": "Figure 23-14. Drawing occurs only within the allowed clipped area\nOK, we’re not going to win any competitions here, but you can see how powerful clip‐\nping can be when used effectively.\nThe isPointInPath Method\nSometimes you need to know whether a particular point lies in a path you’ve con‐\nstructed.  However, you will probably want to use this function only if you’re quite\nproficient with JavaScript and writing a fairly complex program—and will generally\ncall it as part of a conditional if statement, like this:\nif (context.isPointInPath(23, 87))\n{\n  // Do something here\n}\nIf the location specified lies along any of the points in the path, the method returns\nthe value true , so the contents of the if statement are executed. Otherwise, the value\nfalse  is returned, and the contents of the if don’t get executed.\n590 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 621,
    "text": "A perfect use for the isPointInPath  method is for creating games\nusing the canvas in which you wish to check for a missile hitting a\ntarget, a ball hitting a wall or bat, or similar boundary conditions.\nWorking with Curves\nIn addition to straight paths, you can create an almost infinite variety of curved paths,\nwith a selection of different methods, ranging from simple arcs and circles to complex\nquadratic and Bézier curves.\nActually, you don’t need to use paths to create many lines, rectangles, and curves,\nbecause you can draw them directly by simply calling their methods. But using paths\ngives you more precise control, so I tend to almost always draw on the canvas within\ndefined paths, as with the following examples.\nThe arc Method\nThe arc method requires you to pass it the x and y location of the center of the arc,\nand the radius in pixels. As well as these values, you need to pass a pair of radian off‐\nsets and an optional direction, like this:\ncontext.arc(55, 85, 45, 0, Math.PI / 2, false)\nSince the default direction is clockwise (a value of false ), this can be omitted, or\nchanged to true  to draw the arc in a counterclockwise direction.\nExample 23-16  creates three sets of four arcs, the first two of which draw in a clock‐\nwise direction, and the third of which draws counterclockwise. Additionally, the first\nset of four arcs has its paths closed before the stroke  method is called, so the start\nand end points are joined up, whereas the other two sets of arcs are drawn before the\npath is closed, so they are not joined up.\nExample 23-16. Drawing a variety of arcs\ncontext.strokeStyle = 'blue'\narcs =\n[\n  Math.PI,\n  Math.PI * 2,\n  Math.PI / 2,\n  Math.PI / 180 * 59\n]\nfor (j = 0 ; j < 4 ; ++j)\n{\n  context.beginPath()\nWorking with Curves | 591"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 622,
    "text": "context.arc(80 + j * 160, 80, 70, 0, arcs[j])\n  context.closePath()\n  context.stroke()\n}\ncontext.strokeStyle = 'red'\nfor (j = 0 ; j < 4 ; ++j)\n{\n  context.beginPath()\n  context.arc(80 + j * 160, 240, 70, 0, arcs[j])\n  context.stroke()\n  context.closePath()\n}\ncontext.strokeStyle = 'green'\nfor (j = 0 ; j < 4 ; ++j)\n{\n  context.beginPath()\n  context.arc(80 + j * 160, 400, 70, 0, arcs[j], true)\n  context.stroke()\n  context.closePath()\n}\nTo create shorter code, I drew all the arcs using loops, so that the length of each arc is\nstored in the array arcs . These values are in radians, and since a radian is equivalent\nto 180 ÷ π (π being the ratio of a circle’s circumference to its diameter, or approxi‐\nmately 3.1415927), they evaluate as follows:\nMath.PI\nEquivalent to 180 degrees\nMath.PI * 2\nEquivalent to 360 degrees\nMath.PI / 2\nEquivalent to 90 degrees\nMath.PI / 180 * 59\nEquivalent to 59 degrees\nFigure 23-15  shows the three rows of arcs and illustrates both the use of the direction\nargument true  in the final set, and the importance of carefully choosing where you\nclose paths depending on whether you want to draw a line connecting the start and\nend points.\n592 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 623,
    "text": "Figure 23-15. A variety of arc types\nIf you prefer to work with degrees instead of radians, you could\ncreate a new Math  library function, like this:\nMath.degreesToRadians = function(degrees)\n{\n  return degrees * Math.PI / 180\n}\nAnd then replace the array-creating code, starting at the second\nline of Example 23-16 , with the following:\narcs =\n[\n  Math.degreesToRadians(180),\n  Math.degreesToRadians(360),\n  Math.degreesToRadians(90),\n  Math.degreesToRadians(59)\n]\nWorking with Curves | 593"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 624,
    "text": "The arcTo Method\nRather than creating a whole arc at once, you can choose to arc from the current loca‐\ntion in the path to another one, like the following call to arcTo  (which simply\nrequires two pairs of x and y coordinates and a radius):\ncontext.arcTo(100, 100, 200, 200, 100)\nThe locations you pass to the method represent the points where imaginary tangent\nlines touch the circumference of the arc at its start and end points.\nTo illustrate how this works, Example 23-17  draws eight different arcs with radii from\n0 up to 280 pixels. Each time around the loop, a new path is created with a start point\nat location 20,20. Then an arc is drawn using imaginary tangent lines from that loca‐\ntion to position 240,20, and from there to location 460,20. In this instance, it defines a\npair of tangents at 90 degrees to each other, in a V shape.\nExample 23-17. Drawing eight arcs of different  radii\nfor (j = 0 ; j <= 280 ; j += 40)\n{\n  context.beginPath()\n  context.moveTo(20, 20)\n  context.arcTo(240, 240, 460, 20, j)\n  context.lineTo(460, 20)\n  context.stroke()\n  context.closePath()\n}\nThe arcTo  method draws only up to the point at which the arc touches the second\nimaginary tangent. So, after each call to arcTo , the lineTo  method creates the\nremainder of the line from wherever arcTo  left off to location 460,20. Then the result\nis drawn to the canvas with a call to stroke , and the path is closed.\nAs you can see in Figure 23-16 , when arcTo  is called with a radius value of 0, it cre‐\nates a sharp join. In this case, it’s a right angle (but if the two imaginary tangents are\nat other angles to each other, then the join will be at that angle). Then, as the radius\nincreases in size, you can see the arcs getting larger and larger.\n594 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 625,
    "text": "Figure 23-16. Drawing arcs of different  radii\nEssentially, what you can best use arcTo  for is to curve from one section of drawing to\nanother, following an arc based on the previous and subsequent positions, as if they\nwere tangential to the arc to be created. If this sounds complicated, don’t worry: you’ll\nsoon get the hang of it and find it’s actually a handy and logical way to draw arcs.\nThe quadraticCurveTo Method\nUseful as arcs are, they are only one type of curve and can be limiting for more-\ncomplex designs. But have no fear: there are still more ways to draw curves, such as\nthe quadraticCurveTo  method.  Using this method, you can place an imaginary\nattractor near (or far from) a curve to pull it in that direction, in a similar way to the\npath of an object in space being pulled by the gravity of the planets and stars it passes.\nUnlike with gravity, though, the farther away the attractor is, the more  it pulls!\nIn Example 23-18 , there are six calls to this method, creating the path for a fluffy\ncloud, which is then filled in white. Figure 23-17  illustrates how the angles of the\ndashed line outside the cloud represent the attractor points applied to each curve.\nExample 23-18. Drawing a cloud with quadratic curves\ncontext.beginPath()\ncontext.moveTo(180, 60)\ncontext.quadraticCurveTo(240,   0, 300,  60)\ncontext.quadraticCurveTo(460,  30, 420, 100)\ncontext.quadraticCurveTo(480, 210, 340, 170)\ncontext.quadraticCurveTo(240, 240, 200, 170)\ncontext.quadraticCurveTo(100, 200, 140, 130)\ncontext.quadraticCurveTo( 40,  40, 180,  60)\ncontext.fillStyle = 'white'\nWorking with Curves | 595"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 626,
    "text": "context.fill()\ncontext.closePath()\nFigure 23-17. Drawing with quadratic curves\nIncidentally, to achieve the dotted line around the cloud in this\nimage, I used the stroke  method  in conjunction with the setLine\nDash  method, which takes a list representing the dash and space\nlengths. In this instance, I used setLineDash([2, 3]) , but you can\ncreate dash lines as complicated as you like, such as setLine\nDash([1, 2, 1, 3, 5, 1, 2, 4]) . However, I haven’t docu‐\nmented this feature because it’s been implemented only in IE,\nOpera, and Chrome so far. Fingers crossed that it’ll be added to the\nother browsers soon, though, as it will be a great enhancement for\ncreating contours and boundaries for mapping purposes, for\nexample.\nThe bezierCurveTo Method\nIf you still don’t find quadratic curves flexible  enough for your needs, how about hav‐\ning access to two attractors for each curve? Using this method, you can do just that, as\nin Example 23-19 , where a curve is created between location 24,20 and 240,220, but\nwith invisible attractors off the canvas (in this case) at locations 720,480 and\n–240,–240. Figure 23-18  shows how this curve gets warped.\nExample 23-19. Creating a Bézier curve with two attractors\ncontext.beginPath()\ncontext.moveTo(240, 20)\ncontext.bezierCurveTo(720, 480, -240, -240, 240, 220)\n596 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 627,
    "text": "context.stroke()\ncontext.closePath()\nFigure 23-18. A Bézier curve with two attractors\nAttractors do not need to be at opposite sides of a canvas, because you can place them\nanywhere, and when they are near each other, they will exert a combined pull (rather\nthan opposing pulls, as in the preceding example). Using these various types of curve\nmethods, it’s possible for you to draw every type of curve you could ever need.\nManipulating Images\nNot only can you draw and write on the canvas with graphical methods, but you can\nalso place images on or extract them from a canvas.  And you’re not limited to simple\ncopy and paste commands, because you can stretch and distort images when reading\nor writing them, and also have full control over compositing and shadow effects.\nThe drawImage Method\nUsing the drawImage  method, you can take an image object that was loaded from a\nwebsite, uploaded to a server, or even extracted from a canvas, and draw it onto a\ncanvas. The method supports a wide variety of arguments, many of which are\noptional, but at its simplest you call drawImage  as follows, in which just the image and\na pair of x and y coordinates are passed:\ncontext.drawImage(myimage, 20, 20)\nThis command draws the image contained in the myimage  object onto the canvas with\nthe context of context , with its top-left corner at location 20,20.\nManipulating Images | 597"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 628,
    "text": "To ensure that an image has been loaded before you use it, best\npractice is to enclose your image-handling code within a function\nthat is triggered only upon image load, like this:\nmyimage     = new Image()\nmyimage.src = 'image.gif'\nmyimage.onload = function()\n{\n  context.drawImage(myimage, 20, 20)\n}\nResizing an Image\nIf you need to resize an image when it is placed on the canvas, you add a second pair\nof arguments to the call representing the width and height you require, like this\n(highlighted in bold):\ncontext.drawImage(myimage, 140,  20, 220, 220)\ncontext.drawImage(myimage, 380,  20,  80, 220)\nHere the image is placed at two locations: the first is at 140,20, where the image is\nenlarged (from a 100-pixel square to a 220-pixel square), while the second goes to\nlocation 380,20 with the image being squashed horizontally and expanded vertically,\nto a width and height of 80×220 pixels.\nSelecting an Image Area\nY ou’re not stuck having to use an entire image; it’s also possible to choose an area\nwithin an image when using drawImage . This can be handy, for example, if you wish\nto place all the graphical images you intend to use in a single image file, and then just\ngrab the sections of the image that you need. This is a trick developers often use to\nspeed up page loading and decrease server hits.\nIt’s a little trickier to do this, though, because rather than add more arguments at the\nend of the list for this method, when extracting a portion of an image, you must place\nthose arguments first.\nSo, for example, to place an image at location 20,140, you might issue this command:\ncontext.drawImage(myimage, 20, 140)\nAnd to give it a width and height of 100×100 pixels, you would modify the call like\nthis (highlighted in bold):\ncontext.drawImage(myimage, 20, 140, 100, 100)\nBut to grab (or crop) just a 40×40-pixel subsection (for example), with its top-left\ncorner at location 30,30 of the image, you would call the method like this (with the\nnew arguments in bold):\n598 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 629,
    "text": "context.drawImage(myimage, 30, 30, 40, 40,  20, 140)\nAnd to resize the grabbed portion to 100 pixels square, you would use the following:\ncontext.drawImage(myimage, 30, 30, 40, 40 , 20, 140, 100, 100)\nI find this very confusing and cannot think of a logical reason for\nwhy this method works this way. But, since it does, I’m afraid\nthere’s nothing you can do other than force yourself to remember\nwhich arguments go where under which conditions.\nExample 23-20  uses a variety of calls to the drawImage  method to obtain the result\nshown in Figure 23-19 . To make things clearer, I have spaced out the arguments so\nthat values in each column provide the same information.\nExample 23-20. Various ways of drawing an image on the canvas\nmyimage     = new Image()\nmyimage.src = 'image.png'\nmyimage.onload = function()\n{\n  context.drawImage(myimage,                  20,  20          )\n  context.drawImage(myimage,                 140,  20, 220, 220)\n  context.drawImage(myimage,                 380,  20,  80, 220)\n  context.drawImage(myimage, 30, 30, 40, 40,  20, 140, 100, 100)\n}\nFigure 23-19. Drawing images to a canvas with resizing and cropping\nManipulating Images | 599"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 630,
    "text": "Copying from a Canvas\nY ou can also use a canvas as a source image for drawing to the same (or another) can‐\nvas. Just supply the canvas object name in place of an image object, and use all the\nremaining arguments in the same way as you would with an image.\nAt this point, I would have loved to show  you how to use a <video>\nelement (explained in the following chapter) as an image source for\ndrawing on the canvas. But sadly, Internet Explorer doesn’t yet sup‐\nport this functionality, so it’s still too early to recommend the excit‐\ning features you can create this way—such as live video\nmanipulation, colorization, embossing, and much more. However,\nif you’re curious, you can learn more about how you can combine\nvideo with the canvas at http://html5doctor.com/video-canvas-\nmagic .\nAdding Shadows\nWhen you draw an image (or image section) or, indeed, anything else on the canvas,\nyou can also specify a shadow that should be placed under it by setting one or more\nof the following properties:\nshadowOffsetX\nThe horizontal offset in pixels by which the shadow should be shifted to the right (or\nto the left if the value is negative).\nshadowOffsetY\nThe vertical offset in pixels by which the shadow should be shifted down (or up if the\nvalue is negative).\nshadowBlur\nThe number of pixels over which to blur the shadow’s outline.\nshadowColor\nThe base color to use for the shadow. If a blur is in use, this color will blend with the\nbackground in the blurred area.\nThese properties can apply to text and lines as well as solid images, as in\nExample 23-21 , in which some text, an image, and an object created using a path all\nhave shadows added to them. In Figure 23-20 , you can see the shadows intelligently\nflow around the visible portions of images, not just their rectangular boundaries.\nExample 23-21. Applying shadows when drawing on the canvas\nmyimage     = new Image()\nmyimage.src = 'apple.png'\n600 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 631,
    "text": "orig   = 95\npoints = 21\ndist   = Math.PI / points * 2\nscale1 = 75\nscale2 = 50\nmyimage.onload = function()\n{\n  context.beginPath()\n  for (j = 0 ; j < points ; ++j)\n  {\n    x = Math.sin(j * dist)\n    y = Math.cos(j * dist)\n    context.lineTo(orig + x * scale1, orig + y * scale1)\n    context.lineTo(orig + x * scale2, orig + y * scale2)\n  }\n  context.closePath()\n  context.shadowOffsetX = 5\n  context.shadowOffsetY = 5\n  context.shadowBlur    = 6\n  context.shadowColor   = '#444'\n  context.fillStyle     = 'red'\n  context.stroke()\n  context.fill()\n  context.shadowOffsetX = 2\n  context.shadowOffsetY = 2\n  context.shadowBlur    = 3\n  context.shadowColor   = 'yellow'\n  context.font          = 'bold 36pt Times'\n  context.textBaseline  = 'top'\n  context.fillStyle     = 'green'\n  context.fillText('Sale now on!', 200, 5)\n  context.shadowOffsetX = 3\n  context.shadowOffsetY = 3\n  context.shadowBlur    = 5\n  context.shadowColor   = 'black'\n  context.drawImage(myimage, 245, 45)\n}\nManipulating Images | 601"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 632,
    "text": "Figure 23-20. Shadows under different  types of drawing objects\nEditing at the Pixel Level\nNot only does the HTML5 canvas provide you with a powerful range of drawing\nmethods, but it also lets you get your hands dirty and work under the hood directly at\nthe pixel level with a trio of powerful methods.\nThe getImageData Method\nWith the getImageData  method, you can grab a portion (or all) of a canvas so that\nyou can alter the retrieved data in any way you like, and then save it back or else‐\nwhere in the canvas (or to another canvas).\nTo illustrate how this works, Example 23-22  first loads in a ready-made image and\ndraws it onto a canvas. Then the canvas data is read back into an object called idata ,\nwhere  all the colors are averaged together to change each pixel to grayscale, and then\ntweaked a little to shift each color toward sepia, as shown in Figure 23-21 .\nExample 23-22. Manipulating image data\nmyimage     = new Image()\nmyimage.src = 'photo.jpg'\nmyimage.onload = function()\n{\n  context.drawImage(myimage, 0, 0)\n  idata = context.getImageData(0, 0, myimage.width, myimage.height)\n  for (y = 0 ; y < myimage.height ; ++y)\n  {\n    pos = y * myimage.width * 4\n602 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 633,
    "text": "for (x = 0 ; x < myimage.width ; ++x)\n    {\n      average =\n      (\n        idata.data[pos]     +\n        idata.data[pos + 1] +\n        idata.data[pos + 2]\n      ) / 3\n      idata.data[pos]     = average + 50\n      idata.data[pos + 1] = average\n      idata.data[pos + 2] = average - 50\n      pos += 4;\n    }\n  }\n  context.putImageData(idata, 320, 0)\n}\nFigure 23-21. Converting an image to sepia (only a minor difference  will be seen when\nthis figure  is viewed in grayscale)\nThe data Array\nThis image manipulation works thanks to the data  array, which is a property of the\nidata  object returned by the call to getImageData . This method returns an array\ncontaining all the picture pixel data in its component parts of red, green, blue, and\nalpha transparency. Therefore, four items of data are used to store each colored pixel.\nAll the data is stored sequentially in the data array, such that the value for red is fol‐\nlowed by that for blue, then green, and then alpha; then, the next item in the array is\nthe red value for the following pixel, and so on, like the following (for the pixel at\nlocation 0,0):\nidata.data[0] // Red level\nidata.data[1] // Green level\nEditing at the Pixel Level | 603"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 634,
    "text": "idata.data[2] // Blue level\nidata.data[3] // Alpha level\nLocation 1,0 then follows, like this:\nidata.data[4] // Red level\nidata.data[5] // Green level\nidata.data[6] // Blue level\nidata.data[7] // Alpha level\nIn this image, everything continues in the same fashion until the rightmost pixel of\nthe image in row 0 (which is the 320th pixel, at location 319,0) is reached. At that\npoint, the value 319 is multiplied by 4 (the number of items of data in each pixel) to\narrive at the following array elements, which contain this pixel’s data:\nidata.data[1276] // Red level\nidata.data[1277] // Green level\nidata.data[1278] // Blue level\nidata.data[1279] // Alpha level\nThen the data pointer moves all the way back to the first column of the image, but\nthis time of row 1, at location 0,1 which (because each row in this image is 320 pixels\nwide), is at an offset of (0 × 4) + (1 × 320 × 4), or 1,280:\nidata.data[1280] // Red level\nidata.data[1281] // Green level\nidata.data[1282] // Blue level\nidata.data[1283] // Alpha level\nSo, if the image data is stored in idata , the image width in w, and the pixel location to\naccess in x and y, the key formulae to use when directly accessing image data are:\nred   = idata.data[x * 4 + y * w * 4    ]\ngreen = idata.data[x * 4 + y * w * 4 + 1]\nblue  = idata.data[x * 4 + y * w * 4 + 2]\nalpha = idata.data[x * 4 + y * w * 4 + 3]\nUsing this knowledge, we create the  sepia effect in Figure 23-12  by taking just the red,\nblue, and green components of each pixel and averaging them, like this (where pos is\na variable pointer to the location in the array of the current pixel):\naverage =\n(\n  idata.data[pos]     +\n  idata.data[pos + 1] +\n  idata.data[pos + 2]\n) / 3\nWith average  now containing the average color value (which we attain by adding all\nthe pixel values and dividing by 3), this value is written back to all colors of the pixel,\nbut with the red boosted by a value of 50, and the blue reduced by the same amount:\n604 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 635,
    "text": "idata.data[pos]     = average + 50\nidata.data[pos + 1] = average\nidata.data[pos + 2] = average - 50\nThe result is to increase the red and reduce the blue level of each pixel (of what would\notherwise now become a monochrome image, if only the average value were written\nback to these colors), giving it a sepia cast.\nIf you’re interested in performing more advanced image manipula‐\ntions, you may wish to refer to Halfpap  or HTML5 Rocks , which\nboth cover using convolution on an HTML5 canvas in detail.\nThe putImageData Method\nWhen you’ve modified the image data array to your requirements, all you need to do\nto write it to the canvas is call the putImageData  method,  passing it the idata  object\nand the coordinates of the top-left corner at which it should appear—as in the previ‐\nous example, and as follows, which (in this case) places the modified copy of the\nimage to the right of the original:\ncontext.putImageData(idata, 320, 0)\nIf you wish to modify only part of a canvas, you don’t have to grab\nthe entire canvas; just fetch a section containing the area in which\nyou are interested. And neither do you have to write back image\ndata to the location from where you got it; image data can be writ‐\nten to any part of a canvas.\nThe createImageData Method\nY ou don’t have to create an object directly from a canvas; you can also create a new\none with blank data by calling the createImageData  method. The following example\ncreates an object with a width of 320 and height of 240 pixels:\nidata = createImageData(320, 240)\nAlternatively, you can create a new object from an existing object, like this:\nnewimagedataobject = createImageData(imagedata)\nIt’s then up to you what you do with these objects to add pixel data to them or other‐\nwise modify them, how you paste them onto the canvas or create other objects from\nthem, and so on.\nEditing at the Pixel Level | 605"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 636,
    "text": "Advanced Graphical Effects\nAmong the more advanced features available on the  HTML5 canvas are  the ability to\nassign various compositing and transparency effects, as well as to apply powerful\ntransformations such as scaling, stretching, and rotating.\nThe globalCompositeOperation Property\nThere are 12 different methods available to fine-tune the way you place an object on\nthe canvas, taking into account existing and future objects. These are called composit‐\ning options, and they are applied like this:\ncontext.globalCompositeOperationProperty = 'source-over'\nThe compositing types are as follows:\nsource-over\nThe default. The source image is copied over the destination image.\nsource-in\nOnly parts of the source image that will appear within the destination are shown, and\nthe destination image is removed. Any alpha transparency in the source image causes\nthe destination under it to be removed.\nsource-out\nOnly parts of the source image that do not appear within the destination are shown,\nand the destination image is removed. Any alpha transparency in the source image\ncauses the destination under it to be removed.\nsource-atop\nThe source image is displayed where it overlays the destination. The destination\nimage is displayed where the destination image is opaque and the source image is\ntransparent. Other regions are transparent.\ndestination-over\nThe source image is drawn under the destination image.\ndestination-in\nThe destination image displays where the source and destination image overlap, but\nnot in any areas of source image transparency. The source image does not display.\ndestination-out\nOnly those parts of the destination outside of the source image’s nontransparent sec‐\ntions are shown. The source image does not display.\n606 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 637,
    "text": "destination-atop\nThe source image displays where the destination is not displayed. Where the destina‐\ntion and source overlap, the destination image is displayed. Any transparency in the\nsource image prevents that area of the destination image being shown.\nlighter\nThe sum of the source and destination is applied such that where they do not overlap,\nthey display as normal; where they do overlap, the sum of both images is shown but\nlightened.\ndarker\nThe sum of the source and destination is applied such that where they do not overlap,\nthey display as normal; where they do overlap, the sum of both images is shown but\ndarkened.\ncopy\nThe source image is copied over the destination. Any transparent area of the source\ncauses any destination that it overlaps to not display.\nxor\nWhere the source and destination images do not overlap, they display as normal.\nWhere they do overlap, their color  values are exclusive-or ed.\nExample 23-23  illustrates the effect of all of these compositing types by creating 12\ndifferent canvases, each with two objects (a filled circle and the yin-yang image) offset\nfrom each other but overlapping.\nExample 23-23. Using all 12 types of compositing effects\nimage     = new Image()\nimage.src = 'image.png'\nimage.onload = function()\n{\n  types =\n  [\n    'source-over',     'source-in',        'source-out',\n    'source-atop',     'destination-over', 'destination-in',\n    'destination-out', 'destination-atop', 'lighter',\n    'darker',          'copy',             'xor'\n  ]\n  for (j = 0 ; j < 12 ; ++j)\n  {\n    canvas               = O('c' + (j + 1))\n    context              = canvas.getContext('2d')\n    S(canvas).background = 'lightblue'\n    context.fillStyle    = 'red'\nAdvanced Graphical Effects  | 607"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 638,
    "text": "context.arc(50, 50, 50, 0, Math.PI * 2, false)\n    context.fill()\n    context.globalCompositeOperation = types[j]\n    context.drawImage(image, 20, 20, 100, 100)\n  }\n}\nAs with some others in this chapter, this example (downloadable\nfrom the companion website) includes some HTML and/or CSS to\nenhance the display, which isn’t shown here because it’s not essen‐\ntial to the program’s operation.\nThis program uses a for loop to iterate through each compositing type, as stored in\nthe array types . Each time around the loop, a new context is created on the next of\nthe 12 canvas elements already created in some earlier HTML (not shown), with the\nIDs of c1 through c12.\nIn each canvas, a 100-pixel-diameter red circle is first placed at the top left, and then\nthe compositing type is selected and the yin-yang image is placed over the circle but\noffset to the right and down by 20 pixels. Figure 23-22  shows the results of each type\nin action. As you can see, it’s possible to achieve a wide variety of effects.\nFigure 23-22. The 12 compositing effects  in action\n608 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 639,
    "text": "The globalAlpha Property\nWhen drawing on the canvas, you can specify the amount of transparency to apply\nusing the globalAlpha  property,  which supports values from 0 (fully transparent) to\n1 (fully opaque). The following command sets the alpha to a value of 0.9, such that\nfuture draw operations will be 90 percent opaque (or 10 percent transparent):\ncontext.globalAlpha = 0.9\nThis property can be used with all other properties, including the compositing\noptions.\nTransformations\nThe canvas supports four functions for applying transformations to elements when\ndrawing them to the HTML5 canvas: scale , rotate , translate , and transform .\nThey can be used alone, or together to produce even more interesting effects.\nThe scale Method\nY ou can scale future drawing operations by first calling  the scale  method, supplying\nhorizontal and vertical scaling factors, which can be negative, zero, or positive values.\nIn Example 23-24  the yin-yang image is drawn to the canvas at its original size of\n100×100 pixels. Then scaling of 3 times horizontally and 2 times vertically is applied,\nand the drawImage  function is called again to place the stretched image next to the\noriginal. Finally, scaling is reapplied with values of 0.33  and 0.5 to restore everything\nback to normal, and the image is once more drawn, this time below the original.\nFigure 23-23  shows the result.\nExample 23-24. Scaling up and down in size\ncontext.drawImage(myimage, 0, 0)\ncontext.scale(3, 2)\ncontext.drawImage(myimage, 40, 0)\ncontext.scale(.33, .5)\ncontext.drawImage(myimage, 0, 100)\nTransformations | 609"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 640,
    "text": "Figure 23-23. Scaling an image up and then down again\nIf you look carefully, you may notice that the copy image under the original is a little\nbit fuzzy due to the scaling up and then down.\nIf you use negative values for one or more scaling parameters, you\ncan reverse an element in either the horizontal or vertical direction\n(or both), at the same time as (or instead of) scaling. For example,\nthe following flips the context to create a mirror image:\ncontext.scale(-1, 1)\nThe save and restore Methods\nIf you need to use several scaling operations on different drawing elements, not only\ncan you introduce fuzziness into the results, but it can be very time-consuming to cal‐\nculate that a three-times upward scaling requires a 0.33  value to scale back down\nagain (and a two-times upscale requires a value of 0.5 to reverse).\nFor this reason, you can call save  to save the current context before issuing a scale\ncall, and later return scaling back to normal by issuing a restore  call. Check out the\nfollowing, which can replace the code in Example 23-24 :\ncontext.drawImage(myimage, 0, 0)\ncontext.save()\ncontext.scale(3, 2)\ncontext.drawImage(myimage, 40, 0)\ncontext.restore()\ncontext.drawImage(myimage, 0, 100)\nThe save  and restore  methods are very powerful because they don’t just apply to\nimage scaling. In fact, they apply across all the following properties, and can therefore\nbe used at any time to save the current properties, and then restore them later: fill\n610 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 641,
    "text": "Style , font , globalAlpha , globalCompositeOperation , lineCap , lineJoin , line\nWidth , miterLimit , shadowBlur , shadowColor , shadowOffsetX , shadowOffsetY ,\nstrokeStyle , textAlign , and textBaseline . The properties of the following meth‐\nods are also managed by save  and restore : scale , rotate , translate , and trans\nform .\nThe rotate Method\nUsing the rotate  method, you can choose the angle at which to apply an object (or\nany of the drawing methods) to the canvas, specified in radians, which are the same\nas 180 / π, or about 57 degrees, each.\nRotation takes place around the canvas origin, which, by default, is its top-left corner\n(but as you’ll see shortly, this can be changed). Example 23-25  displays the yin-yang\nimage four times, rotating each consecutive image by Math.PI  / 25 radians.\nExample 23-25. Rotating an image\nfor (j = 0 ; j < 4 ; ++j)\n{\n  context.drawImage(myimage, 20 + j * 120 , 20)\n  context.rotate(Math.PI / 25)\n}\nAs you can see in Figure 23-24 , the result may not be quite what you expect, because\nthe image hasn’t been rotated about itself. Rather, the rotations have taken place\naround the canvas origin at location 0,0. What’s more, each new rotation has com‐\npounded the previous one. However, to correct for these things, you can always use\nthe translate  method  in conjunction with the save  and restore  methods.\nRadians are a sensible unit of measurement because there are π × 2\nradians in a complete circle. So π radians is a half circle, π ÷ 2 radi‐\nans is a quarter circle, and π ÷ 2 × 3 (or π × 1.5) radians is three-\nquarters of a circle, and so on. To save having to remember the\nvalue of π, you can always refer to the value in Math.PI .\nTransformations | 611"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 642,
    "text": "Figure 23-24. An image at four different  rotations\nThe translate Method\nTo change the origin of a rotation, you can call the translate  method  to shift it to\nsomewhere else, which can be anywhere inside (or outside) the canvas or, more usu‐\nally, somewhere within the destination location of the object (usually its center).\nExample 23-26  performs this translation prior to each call to rotate , now resulting in\nthe effect that was probably intended. Additionally, the save  and restore  methods\nare called before and after each operation to ensure that each rotation is applied inde‐\npendently, not compounded on the previous one.\nExample 23-26. Rotating objects in place\nw = myimage.width\nh = myimage.height\nfor (j = 0 ; j < 4 ; ++j)\n{\n  context.save()\n  context.translate(20 + w / 2 + j * (w + 20), 20 + h / 2)\n  context.rotate(Math.PI / 5 * j)\n  context.drawImage(myimage, -(w / 2), -(h / 2))\n  context.restore()\n}\nIn this example, before each rotation the context is saved and the origin is translated\nto a point exactly in the center of where each image will be drawn. We then issue the\nrotation and draw the image up and to the left of the new origin by supplying nega‐\n612 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 643,
    "text": "tive values, such that its center matches the origin point. The result of this is shown in\nFigure 23-25 .\nFigure 23-25. Rotating images in place\nTo recap: when you wish to rotate or transform (described next) an object in place,\nyou should perform the following actions:\n1.Save the context.\n2.Translate the canvas origin to the center of where the object is to be placed.\n3.Issue the rotation or transformation instruction.\n4.Draw the object with any drawing method supported, using a negative destina‐\ntion location point half the object’s width to the left, and half its height upward.\n5.Restore the context to revert the origin.\nThe transform Method\nWhen you’ve exhausted all the other canvas features  and still can’t  manipulate objects\nin just the way you need, it’s time to turn to the transform  method. With it, you can\napply a transformation matrix to the objects you draw to the canvas, giving you a\nmultitude of possibilities, and powerful features that can combine scaling and rotat‐\ning in a single instruction.\nThe transformation matrix used by this method is a 3×3 matrix of nine values, but\nonly six of these are supplied externally to the transform  method. So, rather than\nexplain how this matrix multiplication works, I only need to explain the effects of its\nsix arguments, which, in order, are as follows:\n1.Horizontal scale\n2.Horizontal skew\n3.Vertical skew\nTransformations | 613"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 644,
    "text": "4.Vertical scale\n5.Horizontal translate\n6.Vertical translate\nY ou can apply these values in many ways—for example, by emulating the scale\nmethod from Example 23-24  by replacing this call:\ncontext.scale(3, 2)\nwith the following:\ncontext.transform( 3, 0, 0, 2, 0, 0)\nOr, in the same way, you can replace this call from Example 23-26 :\ncontext.translate(20 + w / 2 + j * (w + 20), 20 + h / 2)\nwith the following:\ncontext.transform(1, 0, 0, 1, 20 + w / 2 + j * (w + 20) , 20 + h / 2 )\nNote how the horizontal and vertical scaling arguments are given\nvalues of 1 to ensure a 1:1 result, while the skew values are 0 to pre‐\nvent the result from being skewed.\nY ou could even combine the previous two lines of code to get a translation and scale\nat the same time, like this:\ncontext.transform( 3, 0, 0, 2, 20 + w / 2 + j * (w + 20) , 20 + h / 2 )\nAs you look at the skew arguments, as you might expect they result in an element\nbeing skewed in the direction specified—for example, creating a rhombus from a\nsquare.\nFor example, Example 23-27  draws the yin-yang image on the canvas, followed by a\nskewed copy created with the transform  method. The skew value can be any nega‐\ntive, zero, or positive amount, but I chose a horizontal value of 1, which has skewed\nthe bottom of the image by one image width to the right, and pulled everything else\nalong with it proportionally (see Figure 23-26 ).\nExample 23-27. Creating an original and skewed image\ncontext.drawImage(myimage, 20, 20)\ncontext.transform(1, 0, 1, 1, 0, 0)\ncontext.drawImage(myimage, 140, 20)\n614 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 645,
    "text": "Figure 23-26. Horizontally skewing an object to the right\nY ou can even rotate an object with transform  by supplying one\nnegative and one opposite positive skew value. But beware: when\nyou do this, you’ll modify the size of an element, and will therefore\nalso need to adjust the scale arguments at the same time. Plus,\nyou’ll also need to remember to translate the origin. Thus, I recom‐\nmend sticking with the rotate  method  for this until you are fully\nexperienced with using transform .\nThe setTransform Method\nAs an alternative to using the save  and restore  methods, you can set an absolute\ntransform, which has the effect of resetting the transformation matrix and then\napplying the supplied values. Use the setTransform  method just like transform , as in\nthis example (which applies a horizontal positive skew with the value 1):\ncontext.setTransform(1, 0, 1, 1, 0, 0)\nTo learn more about transformation matrixes, see the comprehen‐\nsive Wikipedia article .\nSummary\nAs of this writing, the HTML5 standard is still not 100 percent applied across all\nmajor browsers but, thankfully, most of the canvas functionality is. And even though\nthere’s more to come, such as 3D contexts, the HTML5 canvas already represents a\ntremendous new asset for web developers to continue making bigger, better, and\nmore-professional and compelling websites. In the following chapter, we’ll take a look\nat two other major new enhancements to HTML: in-browser, plug-in-free audio and\nvideo.\nSummary | 615"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 646,
    "text": "Questions\n1.How do you create a canvas element in HTML?\n2.How do you give JavaScript access to a canvas element?\n3.How do you start and finish the creation of a canvas path?\n4.What method can you use to extract data from a canvas into an image?\n5.How can you create gradient fills of more than two colors?\n6.How can you adjust the width of lines when drawing?\n7.Which method would you use to specify a section of a camera such that future\ndrawing takes place only within that area?\n8.How can you draw a complex curve with two imaginary attractors?\n9.How many items of data per pixel are returned by the getImageData  method?\n10.Which two parameters to the transform  method apply to scaling operations?\nSee Chapter 23 Answers  in Appendix A  for the answers to these questions.\n616 | Chapter 23: The HTML5 Canvas"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 647,
    "text": "CHAPTER 24\nHTML5 Audio and Video\nOne of the biggest  driving forces behind the  growth of the Internet has been the insa‐\ntiable demand from users for ever more multimedia in the form of audio and video.\nInitially, bandwidth was so precious that there was no such thing as live streaming,\nand it could take minutes or even hours to download an audio track, let alone a video.\nThe high cost of bandwidth and limited availability of fast modems drove the devel‐\nopment of faster and more efficient compression algorithms, such as MP3 audio and\nMPEG video, but even then the only way to download files in any reasonable length\nof time was to drastically reduce their quality.\nOne of my earlier Internet projects, back in 1997, was the UK’s first online radio sta‐\ntion licensed by the music authorities. Actually, it was more of a podcast (before the\nterm was coined) because we made a daily half-hour show and then compressed it\ndown to 8-bit, 11KHz mono using an algorithm originally developed for telephony,\nand it sounded like phone quality, or worse. Still, we quickly gained thousands of lis‐\nteners who would download the show and then listen to it as they surfed to the sites\ndiscussed in it by means of a pop-up browser window containing a plug-in.\nThankfully for us, and everyone publishing multimedia, it soon became possible to\noffer greater audio and video quality, but still only by asking the user to download\nand install a plug-in player. Flash became the most popular of these players, after\nbeating rivals such as RealAudio, but it gained a bad reputation as the cause of many a\nbrowser crash, and constantly required upgrading when new versions were released.\nSo it was generally agreed that the way ahead was to come up with some web stand‐\nards for supporting multimedia directly within the browser.  Of course, browser\ndevelopers such as Microsoft and Google had differing visions of what these stand‐\nards should look like, but after the dust had settled, they had agreed on a subset of file\n617"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 648,
    "text": "types that all browsers should play natively, and these were introduced into the\nHTML5 specification.\nFinally, it is possible (as long as you encode your audio and video in a few different\nformats) to upload multimedia to a web server, place a couple of HTML tags in a web\npage, and have the media play on any major desktop browser, smartphone, or tablet\ndevice, without the user having to download a plug-in or make any other changes.\nThere are still a lot of older browsers out there, so Flash remains\nimportant for supporting them. In this chapter, I show you how to\nadd code to use Flash as a backup to HTML5 audio and video, to\ncover as many hardware and software combinations as possible.\nAbout Codecs\nThe term codec  stands for en coder/decoder.  It describes the functionality provided by\nsoftware that encodes and decodes media such as audio and video. In HTML5 there\nare a number of different sets of codecs available, depending on the browser used.\nFollowing are the codecs supported by the HTML5 <audio>  tag (and also when audio\nis attached to HTML5 video):\nAAC\nThis audio codec, which stands for Advanced Audio Encoding, is used by Apple’s\niTunes store, and is a proprietary patented technology supported by Apple, Google,\nand Microsoft. It generally uses the .aac file extension. Its mime type is audio/aac .\nMP3\nThis audio codec, which stands for MPEG Audio Layer 3, has been available for\nmany years. While the term is often (incorrectly) used to refer to any type of digital\naudio, it is a proprietary patented technology that is supported by Apple, Google,\nMozilla Firefox, and Microsoft. The file extension it uses is .mp3 . Its mime type is\naudio/mpeg .\nPCM\nThis audio codec, which stands for Pulse Coded Modulation, stores the full data as\nencoded by an analog-to-digital converter, and is the format used for storing data on\naudio CDs. Because it does not use compression, it is called a lossless  codec and its\nfiles are generally many times larger than AAC or MP3 files. It is supported by Apple,\nMozilla Firefox, and Opera. Usually this type of file has the extension .wav . Its mime\ntype is audio/wav , but you may also see audio/wave .\nVorbis\nSometimes referred to as Ogg Vorbis—because it generally uses the .ogg file extension\n—this audio codec is unencumbered by patents and free of royalty payments. It is\n618 | Chapter 24: HTML5 Audio and Video"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 649,
    "text": "supported by Google Chrome, Mozilla Firefox, and Opera. Its mime type is audio/\nogg, or sometimes audio/oga .\nThe following list summarizes the major operating systems and browsers, along with\nthe audio types their latest versions support:\n•Apple iOS : AAC, MP3, PCM\n•Apple Safari : AAC, MP3, PCM\n•Google Android : 2.3+ AAC, MP3, Vorbis\n•Google Chrome : AAC, MP3, Vorbis\n•Microsoft  Internet Explorer : AAC, MP3\n•Mozilla Firefox : MP3, PCM, Vorbis\n•Opera : PCM, Vorbis\nThe outcome of these different levels of codec support is that you always need at least\ntwo versions of each audio file to ensure it will play on all platforms. One of these\nshould be Vorbis to support Opera, but for the second you have a choice of either\nAAC or MP3.\nThe <audio> Element\nTo cater to all platforms, you need to record or convert your content using multiple\ncodecs and then list them all within <audio>  and </audio>  tags, as in Example 24-1 .\nThe nested <source>  tags then contain the various media you wish to offer to a\nbrowser. Because the controls  attribute is supplied, the result looks like Figure 24-1 .\nExample 24-1. Embedding three different  types of audio files\n<audio controls>\n  <source src='audio.m4a' type='audio/aac'>\n  <source src='audio.mp3' type='audio/mp3'>\n  <source src='audio.ogg' type='audio/ogg'>\n</audio>\nThe <audio> Element | 619"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 650,
    "text": "Figure 24-1. Playing an audio file\nIn this example I included three different audio types, because that’s perfectly accepta‐\nble, and can be a good idea if you wish to ensure that each browser can locate its pre‐\nferred format rather than just one it knows how to handle. However, the example will\nstill play on all platforms if one or the other (but not both) of the MP3 or the AAC\nfiles is dropped.\nThe <audio>  element and its partner <source>  tag support several attributes:\nautoplay\nCauses the audio to start playing as soon as it is ready\ncontrols\nCauses the control panel to be displayed\nloop\nSets the audio to play over and over\npreload\nCauses the audio to begin loading even before the user selects Play\nsrc\nSpecifies the source location of an audio file\ntype\nSpecifies the codec used in creating the audio\nIf you don’t supply the controls  attribute to the <audio>  tag, and don’t use the auto\nplay  attribute either, the sound will not play and there won’t be a Play button for the\nuser to click to start playback. This would leave you no option other than to offer this\nfunctionality in JavaScript, as in Example 24-2  (with the additional code required\nhighlighted in bold), which provides the ability to play and pause the audio,  as shown\nin Figure 24-2 .\n620 | Chapter 24: HTML5 Audio and Video"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 651,
    "text": "Example 24-2. Playing audio using JavaScript\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Playing Audio with JavaScript</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <audio id='myaudio' >\n      <source src='audio.m4a' type='audio/aac'>\n      <source src='audio.mp3' type='audio/mp3'>\n      <source src='audio.ogg' type='audio/ogg'>\n    </audio>\n    <button onclick='playaudio()'>Play Audio</button>\n    <button onclick='pauseaudio()'>Pause Audio</button>\n    <script>\n      function playaudio()\n      {\n        O('myaudio').play()\n      }\n      function pauseaudio()\n      {\n        O('myaudio').pause()\n      }\n    </script>\n  </body>\n</html>\nFigure 24-2. HTML5 audio can be controlled with JavaScript\nThis works by calling the play  or pause  methods of the myaudio  element when the\nbuttons are clicked.\nSupporting Non-HTML5 Browsers\nIt will probably be necessary to support older browsers for the foreseeable future by\nproviding a fallback to Flash. Example 24-3  shows how you can do this using a Flash\nplug-in saved as audioplayer.swf  (available, along with all the examples, in the free\nSupporting Non-HTML5 Browsers | 621"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 652,
    "text": "download at the http://lpmj.net  companion website). The code to add is highlighted\nin bold.\nExample 24-3. Providing a Flash fallback for non-HTML5 browsers\n<audio controls>\n  <object type=\"application/x-shockwave-flash\"\n    data=\"audioplayer.swf\" width=\"300\" height=\"30\">\n    <param name=\"FlashVars\"\n      value=\"mp3=audio.mp3&showstop=1&showvolume=1\">\n  </object>\n  <source src='audio.m4a' type='audio/aac'>\n  <source src='audio.mp3' type='audio/mp3'>\n  <source src='audio.ogg' type='audio/ogg'>\n</audio>\nHere we take advantage of the fact that on non-HTML5 browsers, anything inside the\n<audio>  tag (other than the <source>  elements, which are ignored) will be acted on\nby the browser. Therefore, by placing an <object>  element there that calls up a Flash\nplayer, we ensure that any non-HTML5 browsers will at least have a chance of playing\nthe audio, as long as they have Flash installed, as shown in Figure 24-3 .\nFigure 24-3. The Flash audio player has been loaded\nThe particular audio player used in this example, audioplayer.swf , takes the following\narguments and values to the FlashVars  attribute of the <param>  element:\nmp3\nThe URL of an MP3 audio file.\nshowstop\nIf 1, shows the Stop button; otherwise, it is not displayed.\nshowvolume\nIf 1, shows the volume bar; otherwise, it is not displayed.\n622 | Chapter 24: HTML5 Audio and Video"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 653,
    "text": "As with many elements, you can easily resize the object to (for example) 300×30 pix‐\nels by providing these values to its width  and height  attributes.\nThe <video> Element\nPlaying video in HTML5 is quite similar to audio; you just use the <video>  tag and\nprovide <source>  elements  for the media you are offering. Example 24-4  shows how\nyou do this with three different video  codec types, as displayed in Figure 24-4 .\nExample 24-4. Playing HTML5 video\n<video width='560' height='320' controls>\n  <source src='movie.mp4'  type='video/mp4'>\n  <source src='movie.webm' type='video/webm'>\n  <source src='movie.ogv'  type='video/ogg'>\n</video>\nFigure 24-4. Playing HTML5 video\nThe Video Codecs\nAs with audio, there are a number of video codecs available, with differing support\nacross multiple browsers. These codecs come in different containers, as follows:\nThe <video> Element | 623"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 654,
    "text": "MP4\nA license-encumbered, multimedia container format standard specified as a part of\nMPEG-4, supported by Apple, Microsoft, and, to a lesser extent Google, since it has\nits own WebM container format. Its mime type is video/mp4 .\nOGG\nA free, open container format maintained by the Xiph.Org Foundation. The creators\nof the OGG format state that it is unrestricted by software patents and is designed to\nprovide for efficient streaming and manipulation of high-quality digital multimedia.\nIts mime type is video/ogg , or sometimes video/ogv .\nWebM\nAn audio-video format designed to provide a royalty-free, open video compression\nformat for use with HTML5 video. The project’s development is sponsored by Goo‐\ngle. There are two versions: VP8 and the newer VP9. Its mime type is video/webm .\nThese may then contain one of the following video codecs:\nH.264\nA patented, proprietary video codec for which playback is free for the end user, but\nwhich may incur royalty fees for all parts of the encoding and transmission process.\nAt the time of writing, all of Apple, Google, Mozilla Firefox, and Microsoft Internet\nExplorer support this codec, while Opera (the remaining major browser) doesn’t.\nTheora\nThis is a video codec unencumbered by patents, and free of royalty payments at all\nlevels of encoding, transmission, and playback. This codec is supported by Google\nChrome, Mozilla Firefox, and Opera.\nVP8\nThis video codec is similar to Theora but is owned by Google, which has published it\nas open source, making it royalty free. It is supported by Google Chrome, Mozilla\nFirefox, and Opera.\nVP9\nAs VP8 but more powerful, using half the bitrate.\nThe following list details the major operating systems and browsers, along with the\nvideo types their latest versions support:\n•Apple iOS : MP4/H.264\n•Apple Safari : MP4/H.264\n•Google Android : MP4, OGG, WebM/H.264, Theora, VP8\n•Google Chrome : MP4, OGG, WebM/H.264, Theora, VP8, VP9\n•Internet Explorer : MP4/H.264\n•Mozilla Firefox : MP4, OGG, WebM/H.264, Theora, VP8, VP9\n624 | Chapter 24: HTML5 Audio and Video"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 655,
    "text": "•Opera : OGG, WebM/Theora, VP8\nLooking at this list, it’s clear that MP4/H.264 is almost unanimously supported,\nexcept for the Opera browser. So if you’re prepared to ignore the 1 percent or so of\nusers this comprises (and hope that Opera will soon have to adopt the format any‐\nway), you need to supply your video using only one file type: MP4/H.264. But for\nmaximum viewing, you really ought to encode in OGG/Theora or OGG/VP8 as well\n(but not VP9, as it’s not yet been adopted by Opera).\nTherefore, the movie.webm  file in Example 24-4  isn’t strictly needed, but shows how\nyou can add all the different file types you like, to give browsers the opportunity to\nplay back the formats they prefer.\nThe <video>  element and accompanying <source>  tag support  the following\nattributes:\nautoplay\nCauses the video to start playing as soon as it is ready\ncontrols\nCauses the control panel to be displayed\nheight\nSpecifies the height at which to display the video\nloop\nSets the video to play over and over\nmuted\nMutes the audio output\nposter\nLets you choose an image to display where the video will play\npreload\nCauses the video to begin loading before the user selects Play\nsrc\nSpecifies the source location of a video file\ntype\nSpecifies the codec used in creating the video\nwidth\nSpecifies the width at which to display the video\nThe <video> Element | 625"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 656,
    "text": "If you wish to control video playback from JavaScript, you can do so using code such \nas that in Example 24-5  (with the additional code required highlighted in bold), and\nshown in Figure 24-5 .\nExample 24-5. Controlling video playback from JavaScript\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Playing Video with JavaScript</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <video id='myvideo'  width='560' height='320'>\n      <source src='movie.mp4'  type='video/mp4'>\n      <source src='movie.webm' type='video/webm'>\n      <source src='movie.ogv'  type='video/ogg'>\n    </video><br>\n    <button onclick='playvideo()'>Play Video</button>\n    <button onclick='pausevideo()'>Pause Video</button>\n    <script>\n      function playvideo()\n      {\n        O('myvideo').play()\n      }\n      function pausevideo()\n      {\n        O('myvideo').pause()\n      }\n    </script>\n  </body>\n</html>\n626 | Chapter 24: HTML5 Audio and Video"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 657,
    "text": "Figure 24-5. JavaScript is being used to control the video\nThis code is just like controlling audio from JavaScript. Simply call the play  and/or\npause  methods of the myvideo  object to play and pause the video.\nSupporting Older Browsers\nAlso as with audio, older  versions of browsers will still be in general use for a while to\ncome, so it makes sense to offer a Flash video fallback to people with non-HTML5\nbrowsers. Example 24-6  shows you how to do this (highlighted in bold) using the\nflowplayer.swf  file (available in the free download at http://lpmj.net ), and Figure 24-6\nshows how it displays in a browser that doesn’t support HTML5 video.\nExample 24-6. Providing Flash as a fallback video player\n<video width='560' height='320' controls>\n  <object width='560' height='320'\n    type='application/x-shockwave-flash'\n    data='flowplayer.swf'>\n    <param name='movie' value='flowplayer.swf'>\n    <param name='flashvars'\n      value='config={\"clip\": {\n        \"url\": \"http://tinyurl.com/html5video-mp4\",\n        \"autoPlay\":false, \"autoBuffering\":true}}'>\n    </object>\n  <source src='movie.mp4'  type='video/mp4'>\nThe <video> Element | 627"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 658,
    "text": "<source src='movie.webm' type='video/webm'>\n  <source src='movie.ogv'  type='video/ogg'>\n</video>\nFigure 24-6. Flash provides a handy fallback for non-HTML5 browsers\nThis Flash video player is particular about security, so it won’t play videos from a local\nfile system, only from a web server, so I have supplied a file on the Web (at\ntinyurl.com/html5video-mp4 ) for this example to play.\nHere are the argument s to supply to the flashvars  attribute of the <param>  element:\nurl\nA URL on a web server of a .mp4  file to play.\nautoPlay\nIf true , plays automatically; otherwise, waits for the Play button to be clicked.\nautoBuffering\nIf true , in order to minimize buffering later on with slow connections, before it starts\nplaying, the video will be preloaded sufficiently for the available bandwidth.\nFor more information on the Flash flowplayer  program (and an\nHTML5 version), check out http://flowplayer.org .\n628 | Chapter 24: HTML5 Audio and Video"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 659,
    "text": "Summary\nUsing the information in this chapter, you will be able to embed any audio and video\non almost all browsers and platforms without worrying about whether users may or\nmay not be able to play it.\nIn the following chapter, I’ll demonstrate the use of a number of other HTML5 fea‐\ntures, including geolocation and local storage.\nQuestions\n1.Which two HTML element tags are used to insert audio and video into an\nHTML5 document?\n2.Which two audio codecs should you use to guarantee maximum playability on all\nplatforms?\n3.Which methods can you call to play and pause HTML5 media playback?\n4.How can you support media playback in a non-HTML5 browser?\n5.Which two video codecs should you use to guarantee maximum playability on all\nplatforms?\nSee Chapter 24 Answers  in Appendix A  for the answers to these questions.\nSummary | 629"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 660,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 661,
    "text": "CHAPTER 25\nOther HTML5 Features\nIn this final chapter on HTML5, I explain how to use geolocation, local storage, and\nweb workers; show you how to allow web apps to run offline; and demonstrate the\nuse of in-browser dragging and dropping.\nStrictly speaking, most of these features (like much of HTML5) aren’t really exten‐\nsions to HTML, because you access them with JavaScript rather than with HTML\nmarkup. They are simply technologies that are being embraced by browser develop‐\ners, and have been given the handy umbrella name of HTML5.\nThis means, though, that you need to have fully understood the JavaScript tutorial in\nthis book in order to use them properly. That said, once you get the hang of them,\nyou’ll wonder how you ever did without these powerful new features.\nGeolocation and the GPS Service\nThe GPS (Global Positioning Satellite)  service  consists  of multiple satellites orbiting\nthe earth whose positions are very precisely known. When a GPS-enabled device\ntunes into them, the different times at which signals from these various satellites\narrive enable the device to quite accurately know where it is; because the speed of\nlight (and therefore radio waves) is a known constant, the time it takes a signal to get\nfrom a satellite to a GPS device indicates the satellite’s distance.\nBy noting the different times at which signals arrive from different satellites, which\nare in precisely known orbital locations at any one time, a simple triangulation calcu‐\nlation gives the device its position relative to the satellites within a few meters or less.\nMany mobile devices, such as phones and tablets, have GPS chips and can provide\nthis information. But some don’t, others have them tuned off, and others may be used\nindoors where they are shielded from the GPS satellites and therefore cannot receive\n631"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 662,
    "text": "any signals. In these cases, additional techniques may be used to attempt to determine\nyour location.\nOther Location Methods\nIf your device has mobile phone hardware but not GPS, it may attempt to triangulate\nits location by checking the timing of signals received from the various communica‐\ntion towers with which it can communicate (and whose positions are very precisely\nknown). If there are a few towers, this can get almost as close to your location as GPS.\nBut where there’s only a single tower, the signal strength can be used to determine a\nrough radius around the tower, and the circle it creates represents the area in which\nyou are likely to be located. This could place you anywhere within a mile or two of\nyour actual location, down to within a few tens of meters.\nFailing that, there may be known Wi-Fi access points whose positions are known\nwithin range of your device, and since all access points have a unique identifying\naddress called a MAC (Media Access Control)  address, a reasonably good approxima‐\ntion of location can be obtained, perhaps to within a street or two. This is the type of\ninformation that Google Street View vehicles have been collecting.\nAnd if that fails, the IP (Internet Protocol)  address used by your device can be queried\nand used as a rough indicator of your location. Often, though, this provides only the\nlocation of a major switch belonging to your Internet provider, which could be doz‐\nens or even hundreds of miles away. But at the very least, your IP address can (usu‐\nally) narrow down the country and sometimes the region you are in.\nIP addresses are commonly used by media companies for restrict‐\ning playback of their content by territory. However, it’s a simple\nmatter to set up proxy servers that use a forwarding IP address (in\nthe territory that is blocking outside access) to fetch and pass con‐\ntent through the blockade directly to a “foreign” browser. Proxy\nservers are also often employed to disguise a user’s real IP address\nor bypass censorship restrictions, and can be shared across many\nusers on a Wi-Fi hotspot (for example). Therefore, if you locate\nsomeone by IP address, you can’t be completely sure that you have\nidentified the right location, or even country, and should treat this\ninformation as only a best guess.\nGeolocation and HTML5\nIn Chapter 22 , I briefly introduced HTML5 geolocation. Now it’s time to look at it in\ndepth, starting with the example I gave you before, shown again in Example 25-1 .\n632 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 663,
    "text": "Example 25-1. Displaying a map of your current location\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Geolocation Example</title>\n    <script src='OSC.js'></script>\n    <script src=\"https://maps.googleapis.com/maps/api/js?sensor=false\"></script>\n  </head>\n  <body>\n    <div id='status'></div>\n    <div id='map'></div>\n    <script>\n      if (typeof navigator.geolocation == 'undefined')\n         alert(\"Geolocation not supported.\")\n      else\n        navigator.geolocation.getCurrentPosition(granted, denied)\n      function granted(position)\n      {\n        O('status').innerHTML = 'Permission Granted'\n        S('map').border       = '1px solid black'\n        S('map').width        = '640px'\n        S('map').height       = '320px'\n        var lat   = position.coords.latitude\n        var long  = position.coords.longitude\n        var gmap  = O('map')\n        var gopts =\n        {\n          center: new google.maps.LatLng(lat, long),\n          zoom: 9, mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n        var map = new google.maps.Map(gmap, gopts)\n      }\n      function denied(error)\n      {\n        var message\n        switch(error.code)\n        {\n          case 1: message = 'Permission Denied'; break;\n          case 2: message = 'Position Unavailable'; break;\n          case 3: message = 'Operation Timed Out'; break;\n          case 4: message = 'Unknown Error'; break;\n        }\n        O('status').innerHTML = message\n      }\n    </script>\nGeolocation and HTML5 | 633"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 664,
    "text": "</body>\n</html>\nLet’s walk through this code and see how it works, starting with the <head>  section,\nwhich displays a title; loads in the OSC.js  file containing the O, S, and C functions I\nprovided to make accessing HTML elements from JavaScript easier; and then also\npulls in the JavaScript code for the Google Maps service, which is drawn on later in\nthe program.\nAfter this, two <div>  elements are created—one for displaying the connection status,\nand the other for the map:\n<div id='status'></div>\n<div id='map'></div>\nThe remainder of the document is JavaScript, which immediately starts by interrogat‐\ning the navigator.geolocation  property. If the value returned is undefined , then\ngeolocation is not supported by the browser and an error alert window is popped up.\nOtherwise, the getCurrentPosition  method of the property is called, passing it the\nnames of two functions: granted  and denied  (remember that by passing function\nnames, we pass the actual function code, not the result of calling the function, which\nwould be the case if the function names had brackets attached):\nnavigator.geolocation.getCurrentPosition(granted, denied)\nThese functions appear later in the script and are for handling the two possibilities of\npermission to provide the user’s location data: granted  or denied . The granted  func‐\ntion comes first and is entered only if the data can be accessed.\nIn this function, the innerHTML  property of the div element with the ID of status  is\nset to the string Permission Granted  to indicate success during the delay while the\nmap is being fetched. Then the map div has some CSS styles applied to give it a border\nand set its dimensions:\nO('status').innerHTML = 'Permission Granted'\nS('map').border       = '1px solid black'\nS('map').width        = '640px'\nS('map').height       = '320px'\nNext, the variables lat and long  are given the values returned by the geolocation rou‐\ntines in the browser, and the object gmap  is created to access the map div element:\nvar lat  = position.coords.latitude\nvar long = position.coords.longitude\nvar gmap = O('map')\nAfter this, the object gopts  is populated with the values in lat and long , the zoom\nlevel is set (in this case to 9), and the ROADMAP  map type is selected:\n634 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 665,
    "text": "var gopts =\n{\n  center: new google.maps.LatLng(lat, long),\n  zoom: 9, mapTypeId: google.maps.MapTypeId.ROADMAP\n}\nLast, in this function, we create a new map object  by passing gmap  and gopts  to the\nMap method of the google.maps  object (the code for which you will recall was loaded\nin just after the OSC.js  file).\nvar map = new google.maps.Map(gmap, gopts)\nIf permission is granted to access the user’s location, the result looks like Figure 25-1 .\nFigure 25-1. An interactive map of the user’s location is displayed\nIf permission is denied or there is another issue, an error message is the only thing\ndisplayed, as output to the innerHTML  property of the status  div by the denied  func‐\ntion, according to the problem encountered:\nswitch(error.code)\n{\n  case 1: message = 'Permission Denied'; break;\n  case 2: message = 'Position Unavailable'; break;\n  case 3: message = 'Operation Timed Out'; break;\n  case 4: message = 'Unknown Error'; break;\n}\nO('status').innerHTML = message\nGeolocation and HTML5 | 635"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 666,
    "text": "The Google map will be fully interactive and zoomable by the user, who can also\nchange the map type to satellite imagery.\nY ou can set a different zoom level or imagery type by providing different values to the\ngopts  object. For example, a value of 1 for zoom  will zoom out the furthest, and 20\nwill zoom in the most. A value of SATELLITE  for the google.maps.MapTypeId  prop‐\nerty will switch to satellite imagery, or HYBRID  will combine map and satellite data.\nThe sensor=false  setting from the tail of the URL where the script\nis loaded in (near the start of the document), should be set to true\nif you know that the user’s device has a GPS sensor; otherwise,\nleave it as it is. If you simply want to display a Google map for a\nspecific location, and not access the user’s location data, you can\nuse the core code in the granted  function, replacing the lat and\nlong  (and other) values with ones of your choosing. Also, if you\nwould prefer to use Bing maps instead of Google, refer to http://\ntinyurl.com/bingmapsapi , or the following long URL: http://micro\nsoft.com/web/post/using-the-bing-maps-api .\nLocal Storage\nCookies  are an essential part of the modern Internet because they enable websites to\nsave on each user’s machine small snippets of information that can be used for track‐\ning purposes. Now this isn’t as ominous as it sounds, because most of the tracking\ngoing on helps web surfers by saving usernames and passwords, keeping them logged\ninto a social network such as Twitter or Facebook, and more.\nCookies can also locally save your preferences for the way you access a website (rather\nthan having those settings stored on the website’s server) or can be used to keep track\nof a shopping cart as you build up an order on an ecommerce website.\nBut yes, they can also be used more aggressively to track the websites you frequent\nand gain a picture of your interests to try to target advertising more effectively. That’s\nwhy the European Union now requires all websites within its borders to alert you to\nthis, and let you disable cookies if you so choose.\nBut, as a web developer, think how useful it can be keeping data on user’s devices,\nespecially if you have a small budget for computer servers and disk space. For exam‐\nple, you could create in-browser web apps and services for editing word processing\ndocuments, spreadsheets, and graphic images, saving all this data offsite on users’\ncomputers and keeping your server purchasing budget as low as possible.\nFrom the user’s point of view, think about how much faster a document can be loaded\nup locally than from across the Web, especially on a slow connection. Plus, there’s\nmore security if you know that a website is not storing copies of your documents. Of\n636 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 667,
    "text": "course, you can never guarantee that a website or web app is totally secure, and\nshould never work on highly sensitive documents using software (or hardware) that\ncan go online. But for minimally private documents such as family photographs, you\nmight feel more comfortable using a web app that saves locally than one that saves\nfiles to an external server.\nUsing Local Storage\nThe biggest problem with using cookies for local storage is that you can save a maxi‐\nmum of 4KB of data in each. Cookies also have to be passed back and forth on every\npage reload. And, unless your server  uses SSL (Secure Sockets Layer)  encryption, each\ntime a cookie is transmitted, it travels in the clear.\nBut with HTML5, you have access to a much larger local storage space (typically\nbetween 5MB and 10MB per domain depending on the browser) that remains over\npage loads, and between website visits (and even after powering a computer down\nand back up again). Also, the local storage data is not sent to the server on each page\nload.\nY ou handle local storage data in key/value pairs. The key is the name assigned for ref‐\nerencing the data, and the value can hold any type of data, but it is saved as a string.\nAll data is unique to the current domain, and for security reasons any local storage\ncreated by websites with different domains is separate from the current local storage,\nand is not accessible by any domain other than the one that stored the data.\nThe localStorage Object\nY ou gain access to local storage by means of the localStorage  object. To test whether\nthis object is available, you query its type to check whether or not it has been defined,\nlike this:\nif (typeof localStorage == 'undefined')\n{\n  // Local storage is not available, tell the user and quit.\n  // Or maybe offer to save data on the web server instead?\n}\nHow you handle the lack of local storage being available will depend on what you\nintend to use it for, so the code you place inside the if statement will be up to you.\nOnce you’ve ascertained that local storage is available, you can start making use of it\nwith the setItem  and getItem  methods of the localStorage  object, like this:\nlocalStorage.setItem('username', 'ceastwood')\nlocalStorage.setItem('password', 'makemyday')\nTo later retrieve this data, pass the keys to the getItem  method, like this:\nLocal Storage | 637"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 668,
    "text": "username = localStorage.getItem('username')\npassword = localStorage.getItem('password')\nUnlike saving and reading cookies, you can call these methods at any time you like,\nnot simply before any headers have been sent by the web server. The saved values will\nremain in local storage until erased in the following manner:\nlocalStorage.removeItem('username')\nlocalStorage.removeItem('password')\nOr, you can totally wipe the local storage for the current domain by calling the clear\nmethod, like this:\nlocalStorage.clear()\nExample 25-2  combines the preceding examples into a single document that displays\nthe current values of the two keys in a pop-up alert message, which initially will be\nnull . Then the keys and values are saved to local storage, retrieved, and redisplayed,\nthis time having assigned values. Finally, the keys are removed and then an attempt at\nretrieving these values is again made, but the returned values are once again null .\nFigure 25-2  shows the second of these three alert messages.\nExample 25-2. Getting, setting, and removing local storage data\nif (typeof localStorage == 'undefined')\n{\n  alert(\"Local storage is not available\")\n}\nelse\n{\n  username = localStorage.getItem('username')\n  password = localStorage.getItem('password')\n  alert(\"The current values of 'username' and 'password' are\\n\\n\" +\n    username + \" / \" + password + \"\\n\\nClick OK to assign values\")\n  localStorage.setItem('username', 'ceastwood')\n  localStorage.setItem('password', 'makemyday')\n  username = localStorage.getItem('username')\n  password = localStorage.getItem('password')\n  alert(\"The current values of 'username' and 'password' are\\n\\n\" +\n    username + \" / \" + password + \"\\n\\nClick OK to clear values\")\n  localStorage.removeItem('username')\n  localStorage.removeItem('password')\n  username = localStorage.getItem('username')\n  password = localStorage.getItem('password')\n  alert(\"The current values of 'username' and 'password' are\\n\\n\" +\n    username + \" / \" + password)\n}\n638 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 669,
    "text": "Figure 25-2. Two keys and their values are read from local storage\nY ou are not restricted to just storing usernames and passwords;\nyou can include virtually any and all data, and as many key/value\npairs as you like, up to the available storage limit for your domain.\nWeb Workers\nWith web workers , you can create sections of JavaScript code that will run in the back‐\nground, without having to set up and monitor interrupts. Instead, whenever it has\nsomething to report, your background process communicates with the main Java‐\nScript through the use of an event.\nThis means the JavaScript interpreter gets to decide how to allocate time slices most\nefficiently, and your code only needs to worry about communicating with the back‐\nground task whenever there’s information to convey.\nExample 25-3  shows how you can set up web workers to compute a repetitive task in\nthe background—in this instance, calculating prime numbers.\nExample 25-3. Setting up and communicating with a web worker\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Web Workers</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    Current highest prime number:\nWeb Workers | 639"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 670,
    "text": "<span id='result'>0</span>\n    <script>\n      if (!!window.Worker)\n      {\n        var worker = new Worker('worker.js')\n        worker.onmessage = function (event)\n        {\n          O('result').innerHTML = event.data;\n        }\n      }\n      else\n      {\n        alert(\"Web workers not supported\")\n      }\n    </script>\n  </body>\n</html>\nThis example first creates a <span>  element with the ID of result  in which output\nfrom the web worker will be placed. Then, in the <script>  section, window.Worker  is\ntested via a !! pair of not operators. This has the effect of returning a Boolean value\nof true  if the Worker  method exists, and false  otherwise. If it is not true , a message\nis displayed in the else  section, alerting us that web workers are not available.\nOtherwise, a new worker  object is created by calling Worker , passing it the filename\nworker.js  (shown shortly). Then the onmessage  event of the new worker  object is\nattached to an anonymous function that places any message passed to it by worker.js\ninto the innerHTML  property of the previously created <span>  element.\nThe web worker itself is saved in the file worker.js , in Example 25-4 .\nExample 25-4. The worker.js web worker\nvar n = 1\nsearch: while (true)\n{\n  n += 1\n  for (var i = 2; i <= Math.sqrt(n); i += 1)\n  {\n    if (n % i == 0) continue search\n  }\n  postMessage(n)\n}\n640 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 671,
    "text": "This file assigns the value 1 to the variable n. It then loops continuously, incrementing\nn and checking it for primality by a brute-force method of testing all values from 1 to\nthe square root of n to see if they divide exactly into n, with no remainder. Should a\nfactor be found, the continue  command stops the brute-force attack immediately\nbecause the number is not prime, and starts processing at the next higher value of n.\nBut if all possible factors are tested and none result in a zero remainder, then n must\nbe prime, so its value is passed to postMessage , which sends a message back to the\nonmessage  event of the object that set up this web worker.\nThe result looks like the following:\nCurrent highest prime number: 30477191\nTo stop a web worker from running, issue a call to the terminate  method of the\nworker  object, like this:\nworker.terminate()\nIf you wish to stop this particular example from running, you can\nenter the following into your browser’s address bar:\njavascript:worker.terminate()\nAlso note that due to the way Chrome handles security, you cannot\nuse web workers on a file system, only from a web server (or run‐\nning the files from localhost  on a development server such as\nZend Server, detailed in Chapter 2 ).\nOffline  Web Applications\nBy providing the right information  to a browser, you can tell  it how to download all\nthe components of a web page to enable it to be loaded and run offline. The main file\nyou need is a manifest file with the file  extension .appcache . To illustrate a simple web\napp, I chose to create a clock, so the manifest file is given the filename clock.appcache\nand looks like Example 25-5 .\nExample 25-5. The clock.appcache file\nCACHE MANIFEST\nclock.html\nOSC.js\nclock.css\nclock.js\nThe first line in this file declares it to be a manifest file. The lines following list the\nfiles the browser needs to download and store, starting with Example 25-6 , the\nOffline  Web Applications | 641"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 672,
    "text": "clock.html  file, and followed by the OSC.js  file, which is the same one used by many\nexamples in this book.\nExample 25-6. The clock.html file\n<!DOCTYPE html>\n<html manifest='clock.appcache'>\n  <head>\n    <title>Offline Web Apps</title>\n    <script src='OSC.js'></script>\n    <script src='clock.js'></script>\n    <link rel='stylesheet' href='clock.css'>\n  </head>\n  <body>\n    <p>The time is: <output id='clock'></output></p>\n  </body>\n</html>\nThis file declares that it has a manifest file available from within the <html>  tag:\n<html manifest='clock.appcache'>\nTo support offline web apps, you will need to add the MIME type\ntext/cache-manifest  for the file extension .appcache  to your\nserver, in order for it to send the manifest file using the correct\ntype. There’s a neat shortcut you can use for this, which is to create\na file called .htaccess  in the same folder as the files to be made avail‐\nable offline, with the following contents:\nAddType text/cache-manifest .appcache\nThe files OSC.js , clock.js , and clock.css  are then imported and used by the document.\nThe JavaScript in clock.js  is listed in Example 25-7 .\nExample 25-7. The clock.js file\nsetInterval(function()\n{\n  O('clock').innerHTML = new Date()\n}, 1000)\nThis is a very simple anonymous function attached to an interval that repeats once a\nsecond to save the current date and time into the innerHTML  property of the <output>\nelement that has the ID of clock .\nThe final file is the clock.css  file (see Example 25-8 ), which simply applies bold styling\nto the <output>  element.\n642 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 673,
    "text": "Example 25-8. The clock.css file\noutput { font-weight:bold; }\nAs long as the clock.appcache  file lists them all, these four files ( clock.html , OSC.js ,\nclock.css , and clock.js ) together make up a working offline web application, which will\nbe downloaded and made available locally by any web browser that understands off‐\nline web apps. When run, the output looks like this:\nThe time is: Thu Jul 19 2018 15:24:26 GMT+0000 (GMT Standard Time)\nFor details on the offline web application specifications, you can\ncheck out the official website at http://tinyurl.com/offlinewebapps .\nDrag and Drop\nY ou can easily support dragging and dropping  of objects on a web page by setting up\nevent handlers for the ondragstart , ondragover , and ondrop  events, as in\nExample 25-9 .\nExample 25-9. Dragging and dropping objects\n<!DOCTYPE HTML>\n<html>\n  <head>\n    <title>Drag and Drop</title>\n    <script src='OSC.js'></script>\n    <style>\n      #dest {\n        background:lightblue;\n        border    :1px solid #444;\n        width     :320px;\n        height    :100px;\n        padding   :10px;\n      }\n    </style>\n  </head>\n  <body>\n    <div id='dest' ondrop='drop(event)' ondragover='allow(event)'></div><br>\n    Drag the image below into the above element<br><br>\n    <img id='source1' src='image1.png' draggable='true' ondragstart='drag(event)'>\n    <img id='source2' src='image2.png' draggable='true' ondragstart='drag(event)'>\n    <img id='source3' src='image3.png' draggable='true' ondragstart='drag(event)'>\n    <script>\nDrag and Drop | 643"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 674,
    "text": "function allow(event)\n      {\n        event.preventDefault()\n      }\n      function drag(event)\n      {\n        event.dataTransfer.setData('image/png', event.target.id)\n      }\n      function drop(event)\n      {\n        event.preventDefault()\n        var data=event.dataTransfer.getData('image/png')\n        event.target.appendChild(O(data))\n      }\n    </script>\n  </body>\n</html>\nAfter setting up the HTML, title, and loading in the OSC.js  file, this document styles\nthe div element with the ID of dest , giving it a background color, border, set dimen‐\nsions, and padding.\nThen, in the <body>  section, the div element is created, and its ondrop  and ondrag\nover  events have the event handler functions drop  and allow  attached to them. After\nthis there’s some text, and then three images are displayed with their draggable  prop‐\nerties set to true , and the function drag  is attached to the ondragstart  event of each.\nIn the <script>  section, the allow  event handler function simply prevents the default\naction for dragging (which is to disallow it), while the drag  event handler function\ncalls the setData  method of the dataTransfer  object of the event, passing it the\nMIME type image/png  and the target.id  of the event (which is the object being\ndragged). The dataTransfer  object holds the data that is being dragged during a\ndrag-and-drop operation.\nFinally, the drop  event handler function also intercepts its default action so that drop‐\nping is allowed, and then it fetches the contents of the object being dragged from the\ndataTransfer  object, passing it the MIME type of the object. Then the dropped data\nis appended to the target (which is the dest  div) using its appendChild  method.\nIf you try this example for yourself, you’ll be able to drag and drop the images into\nthe div element, where they will stay, as shown in Figure 25-3 .\n644 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 675,
    "text": "Figure 25-3. Two images have been dragged and dropped\nOther events you can attach to include ondragenter  for when a drag operation enters\nan element, ondragleave  for when one leaves an element, and ondragend  for when a\ndragging operation ends, which you can use (for example) to modify the cursor dur‐\ning these operations.\nCross-Document Messaging\nY ou’ve already seen messaging in use a little earlier, in the web worker section. I didn’t\ngo into any details, however, as it wasn’t the core topic being discussed, and the mes‐\nsage was being posted only to the same document anyway. But for obvious security\nreasons, cross-document messaging does need to be applied with caution, so you\nneed to fully understand its workings if you plan to use it.\nBefore HTML5, browser developers disallowed cross-site scripting, but as well as\nblocking potential attack sites, this prevented communication between legitimate\npages. Document interaction of any kind generally had to occur through Ajax and a\nthird-party web server, which was cumbersome and fiddly to build and maintain.\nBut web messaging now allows scripts to interact across these boundaries by using\nsome sensible security restraints to prevent malicious hacking attempts. It is achieved\nthrough use of the postMessage  method, allowing plain-text messages to be sent\nfrom one domain to another.\nThis requires that JavaScript first obtain the Window  object of the receiving document,\nletting messages post to a variety of other windows, frames, or iframes directly related\nto the sender’s document. The received message event has the following attributes:\nCross-Document Messaging | 645"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 676,
    "text": "data\nThe incoming message\norigin\nThe origin of the sender document, including the scheme, hostname, and port\nsource\nThe source window of the sender document\nThe code to send messages is just a single instruction, in which you pass the message\nto be sent and the domain to which it applies, as in Example 25-10 .\nExample 25-10. Sending web messages to an iframe\n<!DOCTYPE HTML>\n<html>\n  <head>\n    <title>Web Messaging (a)</title>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <iframe id='frame' src='example25-11.html' width='360' height='75'></iframe>\n    <script>\n      count = 1\n      setInterval(function()\n      {\n        O('frame').contentWindow.postMessage('Message ' + count++, '*')\n      }, 1000)\n    </script>\n  </body>\n</html>\nHere the usual use is made of the OSC.js  file to pull in the O function, and then an\niframe element with the ID of frame  is created, which loads in Example 25-11 . Then,\nwithin the <script>  section, the variable count  is initialized to 1 and a repeating\ninterval is set up to occur every second to post the string 'Message '  (using the post\nMessage  method) along with the current value of count , which is then incremented.\nThe postMessage  call is attached to the contentWindow  property of the iframe object,\nnot the iframe object itself. This is important because web messaging requires posts to\nbe made to a window, not to an object within a window.\nExample 25-11. Receiving messages from another document\n<!DOCTYPE HTML>\n<html>\n  <head>\n646 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 677,
    "text": "<title>Web Messaging (b)</title>\n    <style>\n      #output {\n        font-family:\"Courier New\";\n        white-space:pre;\n      }\n    </style>\n    <script src='OSC.js'></script>\n  </head>\n  <body>\n    <div id='output'>Received messages will display here</div>\n    <script>\n      window.onmessage = function(event)\n      {\n        O('output').innerHTML =\n          '<b>Origin:</b> ' + event.origin + '<br>' +\n          '<b>Source:</b> ' + event.source + '<br>' +\n          '<b>Data:</b>   ' + event.data\n      }\n    </script>\n  </body>\n</html>\nThis example sets up a little styling to make output clearer, and then creates a div\nelement with the ID output , in which the contents of received messages will be\nplaced. In the <script>  section, there’s a single anonymous function attached to the\nonmessage  event of the window. In this function, the event.origin , event.source ,\nand event.data  property values are then displayed, as shown in Figure 25-4 .\nFigure 25-4. The iframe has so far received 17 messages\nWeb messaging works only across domains, so you cannot test it by loading files in\nfrom a file system; you must use a web server. As you can see from Figure 25-4 , the\norigin is http://localhost  because these examples are running on a local development\nserver. The source is the Window  object, and the current message value is Message 17 .\nAt the moment, Example 25-10  is not at all secure because the domain value passed to\npostMessage  is the wildcard *:\nCross-Document Messaging | 647"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 678,
    "text": "O('frame').contentWindow.postMessage('Message ' + count++, '*')\nTo direct messages only to documents originating from a particular domain, you can\nchange this parameter. In the current case, a value of http://localhost  would\nensure that only documents loaded from the local server will be sent any messages:\nO('frame').contentWindow.postMessage('Message ' + count++, 'http://localhost' )\nLikewise, as it stands, the listener program displays any and all messages it receives.\nThis is also not a very secure state of affairs, because malicious documents also\npresent in the browser can attempt to send messages that unwary listener code in\nother documents might otherwise access. Therefore, you can restrict the messages\nyour listeners react to by using an if statement, like this:\nwindow.onmessage = function(event)\n{\n  if (event.origin) == 'http://localhost')\n  {\n    O('output').innerHTML =\n      '<b>Origin:</b> ' + event.origin + '<br>' +\n      '<b>Source:</b> ' + event.source + '<br>' +\n      '<b>Data:</b>   ' + event.data\n  }\n}\nIf you always use the proper domain for the site you are working\nwith, your web messaging communications will be more secure.\nHowever, be aware that since messages are sent in the clear, there\nmay be insecurities in some browsers or browser plug-ins that\nmight make this kind of communication insecure. One way to\nboost your security, then, is to create your own obfuscation or\nencryption scheme for all your web messages, and also consider\nintroducing your own two-way communication protocols to verify\neach message as being authentic.\nNormally, you won’t alert the user to the origin  or source  values, and will simply\nmake use of them for security checking. These examples, however, display those val‐\nues to help you experiment with web messaging and see what is going on. As well as\niframes, documents in pop-up windows and other tabs may also talk to each other\nusing this method.\nMicrodata\nMicrodata  is a subset  of HTML designed to  provide metadata to a document in order\nto make it have meaning to software, just as it has meaning to a reader of the docu‐\nment. Microdata makes available the following new tag attributes: itemscope , item\ntype , itemid , itemref , and itemprop . Using these, you can clearly define the\n648 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 679,
    "text": "properties of an item such as a book, providing a range of information that a com‐\nputer can use to understand, for example, its authors, publishers, contents, and so on.\nOr, more frequently these days, microdata is important for search engines and social\nnetworking sites. Example 25-12  creates a short bio for George Washington as if it\nwere a profile on a social networking site, with microdata added to the various ele‐\nments (shown highlighted in bold). The result looks like Figure 25-5 , which will look\nthe same with or without microdata, because it is never visible to the user.\nExample 25-12. Adding microdata to HTML\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Microdata</title>\n  </head>\n  <body>\n    <section itemscope itemtype='http://schema.org/Person' >\n      <img itemprop='image'  src='gw.jpg' alt='George Washington'\n        align='left' style='margin-right:10px'>\n      <h2 itemprop='name' >George Washington</h2>\n      <p>I am the first <span itemprop='jobTitle' >US President</span>.\n      My website is: <a itemprop='url'\n        href='http://georgewashington.si.edu'>georgewashington.si.edu</a>.\n      My address is:</p>\n      <address itemscope itemtype='http://schema.org/PostalAddress'\n        itemprop='address'>\n        <span itemprop='streetAddress' >1600 Pennsylvania Avenue</span>,<br>\n        <span itemprop='addressLocality' >Washington</span>,<br>\n        <span itemprop='addressRegion' >DC</span>,<br>\n        <span itemprop='postalCode' >20500</span>,<br>\n        <span itemprop='addressCountry' >United States</span>.\n      </address>\n    </section>\n  </body>\n</html>\nMicrodata | 649"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 680,
    "text": "Figure 25-5. This document contains microdata, which is not visible\nBrowsers don’t yet really do anything with microdata, but it’s still very worth getting\nto know it. Using the right microdata gives lots of information to search engines like\nGoogle or Bing, and may help to promote clearly annotated pages in the rankings as\ncompared to sites that don’t implement microdata.\nHowever, at some point, browsers may also find a use for this information, and you’ll\nbe able to determine whether or not they support microdata by checking whether the\ngetItems  method exists, like this:\nif (!!document.getItems)\n{\n  // Microdata is supported\n}\nelse\n{\n  // Microdata is not supported\n}\nThe !! pair of not operators is a shorthand way of returning a Boolean value repre‐\nsenting the existence (or lack thereof) of the getItems  method. If it exists, then true\nis returned and microdata is supported; otherwise, false  is returned.\nCurrently, only the  Mozilla Firefox and Opera browsers support accessing microdata,\nbut the other browsers are sure to follow soon. When they do, you’ll be able to extract\nthis data in the following manner, in which (after the page has loaded) the data  object\nis retrieved from a call to getItems , and the value for the key 'jobTitle'  (just as an\nexample) is retrieved by accessing the data  object’s properties  object, and then\nfetching the latter object’s textContent  property:\nwindow.onload = function()\n{\n  if (!!document.getItems)\n650 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 681,
    "text": "{\n    data = document.getItems('http://schema.org/Person')[0]\n    alert(data.properties['jobTitle'][0].textContent)\n  }\n}\nBrowsers that support this feature will display as Figure 25-6 , but other browsers will\nnot trigger the pop-up window.\nFigure 25-6. Displaying the value for the ‘jobTitle’ microdata key\nGoogle has stated that it definitely uses microdata when it finds it, and that microdata\nis also the preferred snippet format for Google+, so it’s well worth starting to add it to\nyour HTML where applicable. For a complete breakdown of the myriad of microdata\nproperties available, check out http://schema.org , which is also the reference for the\nmicrodata schemes as declared in the itemType  properties.\nOther HTML5 Tags\nA number of other new HTML5 tags that have not yet been implemented in many\nbrowsers, and therefore I won’t cover them (particularly since their specs could\nchange). But, for the sake of completeness, these tags are <article> , <aside> ,\n<details> , <figcaption> , <figure> , <footer> , <header> , <hgroup> , <keygen> ,\n<mark> , <menuitem> , <meter> , <nav> , <output> , <progress> , <rp> , <rt> , <ruby> ,\n<section> , <summary> , <time> , and <wbr> . Y ou can get more information on these\nand all other HTML5 tags at http://tinyurl.com/h5markup  (check out the elements\nsporting a NEW icon).\nOther HTML5 Tags | 651"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 682,
    "text": "Summary\nThis concludes your introduction to HTML5. Y ou now have a number of powerful\nnew features with which to make even more dynamic and compelling websites. In the\nfinal chapter, I’ll show you how you can bring all the different technologies in this\nbook together to create a mini–social networking site.\nQuestions\n1.What method do you call to request geolocation data from a web browser?\n2.How can you determine whether or not a browser supports local storage?\n3.What method can you call to erase all local storage data for the current domain?\n4.What is the best way for web workers to communicate with a main program?\n5.How can your code inform a web browser that the document can be run offline\nas a local web app?\n6.To support drag-and-drop operations, how can you prevent the default action of\ndisallowing drag-and-drop for these events?\n7.How can you make cross-document messaging more secure?\n8.What is the purpose of microdata?\nSee Chapter 25 Answers  in Appendix A  for the answers to these questions.\n652 | Chapter 25: Other HTML5 Features"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 683,
    "text": "CHAPTER 26\nBringing It All Together\nNow that you’ve reached the end of your journey into learning the hows, whys, and\nwherefores of dynamic web programming, I want to leave you with a real example\nthat you can sink your teeth into. In fact, it’s a collection of examples, because I’ve put\ntogether a simple social networking project comprising all the main features you’ d\nexpect from such a site.\nAcross the various files, there are examples of MySQL table creation and database\naccess, CSS style sheets, file inclusion, session control, DOM access, Ajax calls, event\nand error handling, file uploading, image manipulation, the HTML5 canvas, and a\nwhole lot more.\nEach example file is complete and self-contained, yet works with all the others to\nbuild a fully working social networking site, even including a style sheet you can\nmodify to completely change the look and feel of the project. Being small and light,\nthe end product is particularly usable on mobile platforms such as a smartphone or\ntablet, but will run equally well on a full-size desktop computer.\nI leave it up to you to take any pieces of code you think you can use and expand on\nthem for your own purposes. Perhaps you may even wish to build on these files to\ncreate a social networking site of your own.\nDesigning a Social Networking Site\nBefore writing any code, I sat down and came up with several things that I decided\nwere essential to such a site. These included the following:\n•A sign-up process\n•A login form\n653"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 684,
    "text": "•A logout facility\n•Session control\n•User profiles with uploaded thumbnails\n•A member directory\n•Adding members as friends\n•Public and private messaging between members\n•How to style the project\nI decided to name the project Robin’s Nest , but you have to modify only one line of\ncode (in functions.php ) to change this to a name of your choice.\nOn the Website\nAll the examples in this chapter can be found on the companion website located at\nhttp://lpmj.net . Y ou can also download the examples from there to your computer by\nclicking the Download Examples link. This will download an archive file called exam‐\nples.zip , which you should extract to a suitable location on your computer.\nOf particular interest to this chapter, within the zip file you’ll find there’s a folder\ncalled robinsnest , in which all the following examples have been saved with the correct\nfilenames required by this sample application. So you can easily copy them all to your\nweb development folder to try them out.\nfunctions.php\nLet’s jump right into the  project, starting with Example 26-1 , functions.php , the\ninclude file of the main functions. This file contains a little more than just the func‐\ntions, though, because I have added the database login details here instead of using\nyet another separate file. So the first half-dozen lines of code define the host, database\nname, username, and password of the database to use.\nIt doesn’t matter what you call the database, as long as it already exists (see Chapter 8\nfor instructions on how to create a new database). Also make sure to correctly assign\na MySQL username and password to $dbuser  and $dbpass . With correct values, the\nsubsequent two lines will open a connection to MySQL and select the database. The\nlast of the initial instructions sets the name of the social networking site by assigning\nthe value Robin's Nest  to the variable $appname . If you want to change the name,\nthis is the place to do so.\nThe Functions\nThe project uses five main functions:\n654 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 685,
    "text": "createTable\nChecks whether a table already exists and, if not, creates it\nqueryMysql\nIssues a query to MySQL, outputting an error message if it fails\ndestroySession\nDestroys a PHP session and clears its data to log users out\nsanitizeString\nRemoves potentially malicious code or tags from user input\nshowProfile\nDisplays a user’s image and “about me” message if he has one\nAll of these should be obvious in their action to you by now, with the possible excep‐\ntion of showProfile , which looks for an image of the name user.jpg  (where user is the\nusername of the current user), and if it finds it, displays it. It also displays any “about\nme” text the user may have saved.\nI have ensured that error handling is in place for all the functions that need it, so that\nthey can catch any typographical or other errors you may introduce, and generate\nerror messages. However, if you use any of this code on a production server, you will\nprobably want to provide your own error-handling routines to make the code more\nuser-friendly.\nSo type Example 26-1  and save it as functions.php  (or download it from the compan‐\nion website), and you’ll be ready to move on to the next section.\nExample 26-1. functions.php\n<?php\n  $dbhost  = 'localhost';    // Unlikely to require changing\n  $dbname  = 'robinsnest';   // Modify these...\n  $dbuser  = 'robinsnest';   // ...variables according\n  $dbpass  = 'rnpassword';   // ...to your installation\n  $appname = \"Robin's Nest\"; // ...and preference\n  $connection = new mysqli($dbhost, $dbuser, $dbpass, $dbname);\n  if ($connection->connect_error) die($connection->connect_error);\n  function createTable($name, $query)\n  {\n    queryMysql(\"CREATE TABLE IF NOT EXISTS $name($query)\");\n    echo \"Table '$name' created or already exists.<br>\";\n  }\n  function queryMysql($query)\n  {\n    global $connection;\nfunctions.php | 655"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 686,
    "text": "$result = $connection->query($query);\n    if (!$result) die($connection->error);\n    return $result;\n  }\n  function destroySession()\n  {\n    $_SESSION=array();\n    if (session_id() != \"\" || isset($_COOKIE[session_name()]))\n      setcookie(session_name(), '', time()-2592000, '/');\n    session_destroy();\n  }\n  function sanitizeString($var)\n  {\n    global $connection;\n    $var = strip_tags($var);\n    $var = htmlentities($var);\n    $var = stripslashes($var);\n    return $connection->real_escape_string($var);\n  }\n  function showProfile($user)\n  {\n    if (file_exists(\"$user.jpg\"))\n      echo \"<img src='$user.jpg' style='float:left;'>\";\n    $result = queryMysql(\"SELECT * FROM profiles WHERE user='$user'\");\n    if ($result->num_rows)\n    {\n      $row = $result->fetch_array(MYSQLI_ASSOC);\n      echo stripslashes($row['text']) . \"<br style='clear:left;'><br>\";\n    }\n  }\n?>\nIf you read a previous edition of this book, in which these examples\nused the old mysql  extension, you should note that in order to ref‐\nerence the MySQL database using mysqli , you must apply the\nglobal  keyword in the queryMysql  and sanitizeString  functions,\nto allow them to use the value in $connection .\nheader.php\nFor uniformity, each  page of the project needs to have access to the same set of fea‐\ntures. Therefore, I placed these things in Example 26-2 , header.php . This is the file\n656 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 687,
    "text": "that is actually included by the other files and it includes functions.php . This means\nthat only a single require_once  is needed in each file.\nheader.php  starts by calling the function session_start . As you’ll recall from Chap‐\nter 12 , this sets up a session that will remember certain values we want stored across\ndifferent PHP files.\nWith the session started, the program then checks whether the session variable user\nis currently assigned a value. If so, a user has logged in and the variable $loggedin  is\nset to TRUE .\nAfter the main setup code in which a style sheet is loaded, a canvas element is created\nfor the logo, and a div is also created. The file javascript.js  (see Example 26-14 , later\non) is loaded to pull in the O, S, and C functions; these would normally be in the\nOSC.js  file, but to keep the number of files down I’ve added them to the JavaScript\nused to create the logo.\nUsing the value of $loggedin , an if block displays one of two sets of menus. The\nnon-logged-in set simply offers options of Home, Sign up, and Log in, whereas the\nlogged-in version offers full access to the project’s features. Additionally, if a user is\nlogged in, his or her username is appended in brackets to the page title and placed\nafter the main heading. We can freely refer to $user  wherever we want to put in the\nname, because if the user is not logged in, that variable is empty and will have no\neffect on the output.\nThe styling applied to this file is in the file styles.css  (Example 26-13 , detailed at the\nend of this chapter) and includes creating a wide heading with a colored background,\nand turning the links in the lists to rounded buttons.\nExample 26-2. header.php\n<?php\n  session_start();\n  echo \"<!DOCTYPE html>\\n<html><head>\";\n  require_once 'functions.php';\n  $userstr = ' (Guest)';\n  if (isset($_SESSION['user']))\n  {\n    $user     = $_SESSION['user'];\n    $loggedin = TRUE;\n    $userstr  = \" ($user)\";\n  }\n  else $loggedin = FALSE;\nheader.php | 657"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 688,
    "text": "echo \"<title>$appname$userstr</title><link rel='stylesheet' \" .\n       \"href='styles.css' type='text/css'>\"                     .\n       \"</head><body><center><canvas id='logo' width='624' \"    .\n       \"height='96'>$appname</canvas></center>\"                 .\n       \"<div class='appname'>$appname$userstr</div>\"            .\n       \"<script src='javascript.js'></script>\";\n  if ($loggedin)\n    echo \"<br ><ul class='menu'>\" .\n         \"<li><a href='members.php?view=$user'>Home</a></li>\" .\n         \"<li><a href='members.php'>Members</a></li>\"         .\n         \"<li><a href='friends.php'>Friends</a></li>\"         .\n         \"<li><a href='messages.php'>Messages</a></li>\"       .\n         \"<li><a href='profile.php'>Edit Profile</a></li>\"    .\n         \"<li><a href='logout.php'>Log out</a></li></ul><br>\";\n  else\n    echo (\"<br><ul class='menu'>\" .\n          \"<li><a href='index.php'>Home</a></li>\"                .\n          \"<li><a href='signup.php'>Sign up</a></li>\"            .\n          \"<li><a href='login.php'>Log in</a></li></ul><br>\"     .\n          \"<span class='info'>&#8658; You must be logged in to \" .\n          \"view this page.</span><br><br>\");\n?>\nUsing the <br>  tag, as in the preceding example, is a quick and\ndirty way of creating spacing in page layout. In this instance it\nworks well, but generally you will probably want to use CSS mar‐\ngins to fine-tune the spacing around elements.\nsetup.php\nWith the pair of  included files written, it’s now time  to set up the  MySQL tables they\nwill use. We do this with Example 26-3 , setup.php , which you should type and load\ninto your browser before calling up any other files; otherwise, you’ll get numerous\nMySQL errors.\nThe tables created are short and sweet, and have the following names and columns:\n•members : username user  (indexed), password pass\n•messages : ID id (indexed), author auth  (indexed), recipient recip , message type\npm, message message\n•friends : username user  (indexed), friend’s username friend\n•profiles : username user  (indexed), “about me” text\nBecause the function createTable  first checks whether a table already exists, this\nprogram can be safely called multiple times without generating any errors.\n658 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 689,
    "text": "It is very likely that you will need to add many more columns to these tables if you\nchoose to expand on this project. If so, you may need to issue a MySQL DROP TABLE\ncommand before re-creating a table.\nExample 26-3. setup.php\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Setting up database</title>\n  </head>\n  <body>\n    <h3>Setting up...</h3>\n<?php\n  require_once 'functions.php';\n  createTable('members',\n              'user VARCHAR(16),\n              pass VARCHAR(16),\n              INDEX(user(6))');\n  createTable('messages',\n              'id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n              auth VARCHAR(16),\n              recip VARCHAR(16),\n              pm CHAR(1),\n              time INT UNSIGNED,\n              message VARCHAR(4096),\n              INDEX(auth(6)),\n              INDEX(recip(6))');\n  createTable('friends',\n              'user VARCHAR(16),\n              friend VARCHAR(16),\n              INDEX(user(6)),\n              INDEX(friend(6))');\n  createTable('profiles',\n              'user VARCHAR(16),\n              text VARCHAR(4096),\n              INDEX(user(6))');\n?>\n    <br>...done.\n  </body>\n</html>\nsetup.php | 659"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 690,
    "text": "For this example to work, you must first ensure that you have\nalready created the database specified in the variable $dbname  in\nExample 26-1 , and also have granted access to it by the user given\nthe name in $dbuser , with the password in $dbpass .\nindex.php\nThis file is a  trivial file  but necessary nonetheless to give the project a home page. All\nit does is display a simple welcome message. In a finished application, this would be\nwhere you sell the virtues of your site to encourage sign-ups.\nIncidentally, seeing as all the MySQL tables have been created and the include files\nsaved, you can now load Example 26-4 , index.php , into your browser to get your first\npeek at the new application. It should look like Figure 26-1 .\nExample 26-4. index.php\n<?php\n  require_once 'header.php';\n  echo \"<br><span class='main'>Welcome to $appname,\";\n  if ($loggedin) echo \" $user, you are logged in.\";\n  else           echo ' please sign up and/or log in to join in.';\n?>\n    </span><br><br>\n  </body>\n</html>\n660 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 691,
    "text": "Figure 26-1. The main page of the site\nsignup.php\nNow we need a module to enable  users to join the new network, and that’s\nExample 26-5 , signup.php . This is a slightly longer program, but you’ve seen all its\nparts before.\nLet’s start by looking at the end block of HTML. This is a simple form that allows a\nusername and password to be entered. But note the use of the empty span  given the\nid of 'info' . This will be the destination of the Ajax call in this program that checks\nwhether a desired username is available. See Chapter 18  for a complete description of\nhow this works.\nChecking for Username Availability\nNow go back to the program start and you’ll see a block of JavaScript that starts with\nthe function checkUser . This is called by the JavaScript onBlur  event when focus is\nremoved from the username field of the form. First it sets the contents of the span I\nmentioned (with the id of info ) to an empty string, which clears it in case it previ‐\nously had a value.\nsignup.php | 661"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 692,
    "text": "Next a request is made to the program checkuser.php , which reports whether the user‐\nname user  is available. The returned result of the Ajax call, a friendly message, is then\nplaced in the info  span.\nAfter the JavaScript section comes some PHP code that you should recognize from\nthe Chapter 16  discussion of form validation. This section also uses the sanitize\nString  function to remove potentially malicious characters before looking up the\nusername in the database and, if it’s not already taken, inserting the new username\n$user  and password $pass .\nLogging In\nUpon successfully signing up, the user is then prompted to log in. A more fluid\nresponse at this point might be to automatically log in a newly created user, but, as I\ndon’t want to overly complicate the code, I have kept the sign-up and login modules\nseparate from each other. Y ou can easily implement this if you want to, however.\nThis file uses the CSS class fieldname  to arrange the form fields, aligning them neatly\nunder each other in columns. When loaded into a browser (and in conjunction with\ncheckuser.php , shown later), this program will look like Figure 26-2 , where you can\nsee that the Ajax call has identified that the username Robin  is available. If you would\nlike the password field to show only asterisks, change its type from text  to password .\nExample 26-5. signup.php\n<?php\n  require_once 'header.php';\n  echo <<<_END\n    <script>\n      function checkUser(user)\n      {\n        if (user.value == '')\n        {\n          O('info').innerHTML = ''\n          return\n        }\n        params  = \"user=\" + user.value\n        request = new ajaxRequest()\n        request.open(\"POST\", \"checkuser.php\", true)\n        request.setRequestHeader(\"Content-type\",\n          \"application/x-www-form-urlencoded\")\n        request.setRequestHeader(\"Content-length\", params.length)\n        request.setRequestHeader(\"Connection\", \"close\")\n        request.onreadystatechange = function()\n        {\n662 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 693,
    "text": "if (this.readyState == 4)\n            if (this.status == 200)\n              if (this.responseText != null)\n                O('info').innerHTML = this.responseText\n        }\n        request.send(params)\n      }\n      function ajaxRequest()\n      {\n        try { var request = new XMLHttpRequest() }\n        catch(e1) {\n          try { request = new ActiveXObject(\"Msxml2.XMLHTTP\") }\n          catch(e2) {\n            try { request = new ActiveXObject(\"Microsoft.XMLHTTP\") }\n            catch(e3) {\n              request = false\n        } } }\n        return request\n      }\n    </script>\n    <div class='main'><h3>Please enter your details to sign up</h3>\n_END;\n  $error = $user = $pass = \"\";\n  if (isset($_SESSION['user'])) destroySession();\n  if (isset($_POST['user']))\n  {\n    $user = sanitizeString($_POST['user']);\n    $pass = sanitizeString($_POST['pass']);\n    if ($user == \"\" || $pass == \"\")\n      $error = \"Not all fields were entered<br><br>\";\n    else\n    {\n      $result = queryMysql(\"SELECT * FROM members WHERE user='$user'\");\n      if ($result->num_rows)\n        $error = \"That username already exists<br><br>\";\n      else\n      {\n        queryMysql(\"INSERT INTO members VALUES('$user', '$pass')\");\n        die(\"<h4>Account created</h4>Please Log in.<br><br>\");\n      }\n    }\n  }\n  echo <<<_END\n    <form method='post' action='signup.php'>$error\n    <span class='fieldname'>Username</span>\n    <input type='text' maxlength='16' name='user' value='$user'\nsignup.php | 663"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 694,
    "text": "onBlur='checkUser(this)'><span id='info'></span><br>\n    <span class='fieldname'>Password</span>\n    <input type='text' maxlength='16' name='pass'\n      value='$pass'><br>\n_END;\n?>\n    <span class='fieldname'>&nbsp;</span>\n    <input type='submit' value='Sign up'>\n    </form></div><br>\n  </body>\n</html>\nFigure 26-2. The sign-up page\nOn a production server, I wouldn’t recommend storing user pass‐\nwords in the clear as I’ve done here (for reasons of space and sim‐\nplicity). Instead, you should salt them and store them as one-way\nhash strings. See Chapter 13  for more details on how to do this.\n664 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 695,
    "text": "checkuser.php\nTo go with signup.php , here’s Example 26-6 , checkuser.php , which looks up a username\nin the database and returns a string indicating whether it has already been taken.\nBecause it relies on the functions sanitizeString  and queryMysql , the program first\nincludes the file functions.php .\nThen, if the $_POST  variable user  has a value, the function looks it up in the database\nand, depending on whether it exists as a username, outputs either “Sorry, this user‐\nname is taken” or “This username is available. ” Just checking the function\nmysql_num_rows  against the result is sufficient for this, as it will return 0 for not\nfound, or 1 if it is found.\nThe HTML entities &#x2718;  and &#x2714;  are also used to preface the string with\neither a cross or a checkmark.\nExample 26-6. checkuser.php\n<?php\n  require_once 'functions.php';\n  if (isset($_POST['user']))\n  {\n    $user   = sanitizeString($_POST['user']);\n    $result = queryMysql(\"SELECT * FROM members WHERE user='$user'\");\n    if ($result->num_rows)\n      echo  \"<span class='taken'>&nbsp;&#x2718; \" .\n            \"This username is taken</span>\";\n    else\n      echo \"<span class='available'>&nbsp;&#x2714; \" .\n           \"This username is available</span>\";\n  }\n?>\nlogin.php\nWith users now able to sign up to the site, Example 26-7 , login.php , provides the code\nneeded to let them log in. Like the sign-up page, it features a simple HTML form and\nsome basic error checking, as well as using sanitizeString  before querying the\nMySQL database.\nThe main thing to note here is that, upon successful verification of the username and\npassword, the session variables user  and pass  are given the username and password\nvalues. As long as the current session remains active, these variables will be accessible\nby all the programs in the project, allowing them to automatically provide access to\nlogged-in users.\ncheckuser.php | 665"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 696,
    "text": "Y ou may be interested in the use of the die function upon successfully logging in.\nThis is there because it combines an echo  and an exit  command in one, thus saving a\nline of code. For styling, this (and most of the files) applies the class main  to indent\nthe content from the left-hand edge.\nWhen you call this program up in your browser, it should look like Figure 26-3 . Note\nhow the input type of password  has been used here to mask the password with aster‐\nisks to prevent it from being viewed by anyone looking over the user’s shoulder.\nExample 26-7. login.php\n <?php\n  require_once 'header.php';\n  echo \"<div class='main'><h3>Please enter your details to log in</h3>\";\n  $error = $user = $pass = \"\";\n  if (isset($_POST['user']))\n  {\n    $user = sanitizeString($_POST['user']);\n    $pass = sanitizeString($_POST['pass']);\n    if ($user == \"\" || $pass == \"\")\n        $error = \"Not all fields were entered<br>\";\n    else\n    {\n      $result = queryMySQL(\"SELECT user,pass FROM members\n        WHERE user='$user' AND pass='$pass'\");\n      if ($result->num_rows == 0)\n      {\n        $error = \"<span class='error'>Username/Password\n                  invalid</span><br><br>\";\n      }\n      else\n      {\n        $_SESSION['user'] = $user;\n        $_SESSION['pass'] = $pass;\n        die(\"You are now logged in. Please <a href='members.php?view=$user'>\" .\n            \"click here</a> to continue.<br><br>\");\n      }\n    }\n  }\n  echo <<<_END\n    <form method='post' action='login.php'>$error\n    <span class='fieldname'>Username</span><input type='text'\n      maxlength='16' name='user' value='$user'><br>\n    <span class='fieldname'>Password</span><input type='password'\n      maxlength='16' name='pass' value='$pass'>\n_END;\n666 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 697,
    "text": "?>\n    <br>\n    <span class='fieldname'>&nbsp;</span>\n    <input type='submit' value='Login'>\n    </form><br></div>\n  </body>\n</html>\nFigure 26-3. The login page\nprofile.php\nOne of  the  first  things that new users may want to do  after signing up and logging\nin is to create a profile, which can be done via Example 26-8 , profile.php . I think you’ll\nfind some interesting code here, such as routines to upload, resize, and sharpen\nimages.\nLet’s start by looking at the main HTML at the end of the code. This is like the forms\nyou’ve just seen, but this time it has the parameter enctype='multipart/form-data' .\nThis allows us to send more than one type of data at a time, enabling the posting of\nprofile.php  | 667"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 698,
    "text": "an image as well as some text. There’s also an input type of file , which creates a\nBrowse button that a user can press to select a file to be uploaded.\nWhen the form is submitted, the code at the start of the program is executed. The\nfirst thing it does is ensure that a user is logged in before allowing program execution\nto proceed. Only then is the page heading displayed.\nAdding the “About Me” Text\nThen the Post variable text  is checked to see whether some text was posted to the\nprogram. If so, it is sanitized and all long whitespace sequences (including returns\nand line feeds) are replaced with a single space. This function incorporates a double\nsecurity check, ensuring that the user actually exists in the database and that no\nattempted hacking can succeed before inserting this text into the database, where it\nwill become the user’s “about me” details.\nIf no text was posted, the database is queried to see whether any text already exists in\norder to prepopulate the textarea  for the user to edit it.\nAdding a Profile  Image\nNext we move on to the section where the $_FILES  system  variable is checked to see\nwhether an image has been uploaded. If so, a string variable called $saveto  is created,\nbased on the user’s username followed by the extension .jpg. For example, user Jill will\ncause $saveto  to have the value Jill.jpg . This is the file where the uploaded image will\nbe saved for use in the user’s profile.\nFollowing this, the uploaded image type is examined and is accepted only if it is a\njpeg, png, or gif image. Upon success, the variable $src  is populated with the uploaded\nimage using one of the imagecreatefrom  functions according to the image type\nuploaded. The image is now in a raw format that PHP can process. If the image is not\nof an allowed type, the flag $typeok  is set to FALSE , preventing the final section of\nimage upload code from being processed.\nProcessing the Image\nFirst, we store the image’s dimensions in $w and $h using the  following statement,\nwhich is a quick way of assigning values from an array to separate variables:\nlist($w, $h) = getimagesize($saveto);\nThen, using the value of $max  (which is set to 100), we calculate new dimensions that\nwill result in a new image of the same ratio, but with no dimension greater than 100\npixels. This results in giving the variables $tw and $th the new values needed. If you\nwant smaller or larger thumbnails, simply change the value of $max  accordingly.\n668 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 699,
    "text": "Next, the function imagecreatetruecolor  is called to create a new, blank canvas $tw\nwide and $th high in $tmp . Then imagecopyresampled  is called to resample the image\nfrom $src , to the new $tmp . Sometimes resampling images can result in a slightly\nblurred copy, so the next piece of code uses the imageconvolution  function to\nsharpen the image up a bit.\nFinally, the image is saved as a jpeg file in the location defined by the variable\n$saveto , after which we remove both the original and the resized image canvases\nfrom memory using the imagedestroy  function, returning the memory that was\nused.\nDisplaying the Current Profile\nLast but not least, so that the user can see what the current profile looks like before\nediting it, the showProfile  function from functions.php  is called prior to outputting\nthe form HTML. If no profile exists yet, nothing will be displayed.\nWhen a profile image is displayed, CSS is applied to it to provide a border, shadow,\nand a margin to its right—to separate the profile text from the image. The result of\nloading Example 26-8  into a browser is shown in Figure 26-4 , where you can see that\nthe textarea  has been prepopulated with the “about me” text.\nExample 26-8. profile.php\n<?php\n  require_once 'header.php';\n  if (!$loggedin) die();\n  echo \"<div class='main'><h3>Your Profile</h3>\";\n  $result = queryMysql(\"SELECT * FROM profiles WHERE user='$user'\");\n  if (isset($_POST['text']))\n  {\n    $text = sanitizeString($_POST['text']);\n    $text = preg_replace('/\\s\\s+/', ' ', $text);\n    if ($result->num_rows)\n         queryMysql(\"UPDATE profiles SET text='$text' where user='$user'\");\n    else queryMysql(\"INSERT INTO profiles VALUES('$user', '$text')\");\n  }\n  else\n  {\n    if ($result->num_rows)\n    {\n      $row  = $result->fetch_array(MYSQLI_ASSOC);\n      $text = stripslashes($row['text']);\nprofile.php  | 669"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 700,
    "text": "}\n    else $text = \"\";\n  }\n  $text = stripslashes(preg_replace('/\\s\\s+/', ' ', $text));\n  if (isset($_FILES['image']['name']))\n  {\n    $saveto = \"$user.jpg\";\n    move_uploaded_file($_FILES['image']['tmp_name'], $saveto);\n    $typeok = TRUE;\n    switch($_FILES['image']['type'])\n    {\n      case \"image/gif\":   $src = imagecreatefromgif($saveto); break;\n      case \"image/jpeg\":  // Both regular and progressive jpegs\n      case \"image/pjpeg\": $src = imagecreatefromjpeg($saveto); break;\n      case \"image/png\":   $src = imagecreatefrompng($saveto); break;\n      default:            $typeok = FALSE; break;\n    }\n    if ($typeok)\n    {\n      list($w, $h) = getimagesize($saveto);\n      $max = 100;\n      $tw  = $w;\n      $th  = $h;\n      if ($w > $h && $max < $w)\n      {\n        $th = $max / $w * $h;\n        $tw = $max;\n      }\n      elseif ($h > $w && $max < $h)\n      {\n        $tw = $max / $h * $w;\n        $th = $max;\n      }\n      elseif ($max < $w)\n      {\n        $tw = $th = $max;\n      }\n      $tmp = imagecreatetruecolor($tw, $th);\n      imagecopyresampled($tmp, $src, 0, 0, 0, 0, $tw, $th, $w, $h);\n      imageconvolution($tmp, array(array(-1, -1, -1),\n        array(-1, 16, -1), array(-1, -1, -1)), 8, 0);\n      imagejpeg($tmp, $saveto);\n      imagedestroy($tmp);\n      imagedestroy($src);\n    }\n670 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 701,
    "text": "}\n  showProfile($user);\n  echo <<<_END\n    <form method='post' action='profile.php' enctype='multipart/form-data'>\n    <h3>Enter or edit your details and/or upload an image</h3>\n    <textarea name='text' cols='50' rows='3'>$text</textarea><br>\n_END;\n?>\n    Image: <input type='file' name='image' size='14'>\n    <input type='submit' value='Save Profile'>\n    </form></div><br>\n  </body>\n</html>\nFigure 26-4. Editing a user profile\nprofile.php  | 671"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 702,
    "text": "members.php\nUsing Example 26-9 , members.php , your  users  will be able  to find other  members\nand choose to add them as friends (or drop them if they are already friends). This\nprogram has two modes. The first lists all members and their relationships to you,\nand the second shows a user’s profile.\nViewing a User’s Profile\nThe code for the latter mode comes first, where a test is made for the Get variable\nview . If it exists, a user wants to view someone’s profile, so the program does that\nusing the showProfile  function, along with providing a couple of links to the user’s\nfriends and messages.\nAdding and Dropping Friends\nAfter that, the two Get variables, add and remove , are tested.  If one or the other has a\nvalue, it will be the username of a user to either add or drop as a friend. We achieve\nthis by looking up the user in the MySQL friends  table and either inserting a friend\nusername or removing it from the table.\nAnd, of course, every posted variable is first passed through sanitizeString  to\nensure that it is safe to use with MySQL.\nListing All Members\nThe final section of code issues a SQL query to list  all usernames. The code places the\nnumber returned in the variable $num  before outputting the page heading.\nA for loop then iterates through each and every member, fetching their details and\nthen looking them up in the friends  table to see if they are either being followed by\nor a follower of the user. If someone is both a follower and a followee, she is classed as\na mutual friend.\nThe variable $t1 is nonzero when the user is following another member, and $t2 is\nnonzero when another member is following the user. Depending on these values, text\nis displayed after each username, showing the relationship (if any) to the current user.\nIcons are also displayed to show the relationships. A double pointing arrow means\nthat the users are mutual friends. A left-pointing arrow indicates the user is following\nanother member. And a right-pointing arrow indicates that another member is fol‐\nlowing the user.\nFinally, depending on whether the user is following another member, a link is pro‐\nvided to either add or drop that member as a friend.\n672 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 703,
    "text": "When you call Example 26-9  up in a browser, it will look like Figure 26-5 . See how\nthe user is invited to “follow” a nonfollowing member, but if the member is already\nfollowing the user, a “recip” link to reciprocate the friendship is offered. In the case of\na user already following another member, the user can select “drop” to end the follow‐\ning.\nExample 26-9. members.php\n<?php\n  require_once 'header.php';\n  if (!$loggedin) die();\n  echo \"<div class='main'>\";\n  if (isset($_GET['view']))\n  {\n    $view = sanitizeString($_GET['view']);\n    if ($view == $user) $name = \"Your\";\n    else                $name = \"$view's\";\n    echo \"<h3>$name Profile</h3>\";\n    showProfile($view);\n    echo \"<a class='button' href='messages.php?view=$view'>\" .\n         \"View $name messages</a><br><br>\";\n    die(\"</div></body></html>\");\n  }\n  if (isset($_GET['add']))\n  {\n    $add = sanitizeString($_GET['add']);\n    $result = queryMysql(\"SELECT * FROM friends WHERE user='$add'\n      AND friend='$user'\");\n    if (!$result->num_rows)\n      queryMysql(\"INSERT INTO friends VALUES ('$add', '$user')\");\n  }\n  elseif (isset($_GET['remove']))\n  {\n    $remove = sanitizeString($_GET['remove']);\n    queryMysql(\"DELETE FROM friends WHERE user='$remove' AND friend='$user'\");\n  }\n  $result = queryMysql(\"SELECT user FROM members ORDER BY user\");\n  $num    = $result->num_rows;\n  echo \"<h3>Other Members</h3><ul>\";\n  for ($j = 0 ; $j < $num ; ++$j)\n  {\nmembers.php | 673"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 704,
    "text": "$row = $result->fetch_array(MYSQLI_ASSOC);\n    if ($row['user'] == $user) continue;\n    echo \"<li><a href='members.php?view=\" .\n      $row['user'] . \"'>\" . $row['user'] . \"</a>\";\n    $follow = \"follow\";\n    $result1 = queryMysql(\"SELECT * FROM friends WHERE\n      user='\" . $row['user'] . \"' AND friend='$user'\");\n    $t1      = $result1->num_rows;\n    $result1 = queryMysql(\"SELECT * FROM friends WHERE\n      user='$user' AND friend='\" . $row['user'] . \"'\");\n    $t2      = $result1->num_rows;\n    if (($t1 + $t2) > 1) echo \" &harr; is a mutual friend\";\n    elseif ($t1)         echo \" &larr; you are following\";\n    elseif ($t2)       { echo \" &rarr; is following you\";\n      $follow = \"recip\"; }\n    if (!$t1) echo \" [<a href='members.php?add=\"    .\n      $row['user'] . \"'>$follow</a>]\";\n    else      echo \" [<a href='members.php?remove=\" .\n      $row['user'] . \"'>drop</a>]\";\n  }\n?>\n    </ul></div>\n  </body>\n</html>\n674 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 705,
    "text": "Figure 26-5. Using the members module\nOn a production server, there could be thousands or even hun‐\ndreds of thousands of users, so you would probably substantially\nmodify this program to include searching the “about me” text, sup‐\nport paging of the output a screen at a time, and so on.\nfriends.php\nThe module that shows  a user’s friends and followers is Example 26-10 , friends.php .\nThis interrogates the friends  table just like the members.php  program, but only for a\nsingle user. It then shows all of that user’s mutual friends and followers along with the\npeople he is following.\nAll the followers are saved into an array called $followers , and all the people being\nfollowed are placed in an array called $following . Then a neat piece of code is used\nto extract all those who are both following and followed by the user, like this:\n$mutual = array_intersect($followers, $following);\nfriends.php | 675"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 706,
    "text": "The array_intersect  function extracts all members common to both arrays and\nreturns a new array containing only those people. This array is then stored in\n$mutual . Now it’s possible to use the array_diff  function for each of the $followers\nand $following  arrays to keep only those people who are not mutual friends, like\nthis:\n$followers = array_diff($followers, $mutual);\n$following = array_diff($following, $mutual);\nThis results in the array $mutual  containing only mutual friends, $followers  con‐\ntaining only followers (and no mutual friends), and $following  containing only peo‐\nple being followed (and no mutual friends).\nNow that we’re armed with these arrays, it’s a simple matter to separately display each\ncategory of members, as can be seen in Figure 26-6 . The PHP sizeof  function\nreturns the number of elements in an array; here I use it just to trigger code when the\nsize is nonzero (that is, friends of that type exist). Note how, by using the variables\n$name1 , $name2 , and $name3  in the relevant places, the code can tell when you’re look‐\ning at your own friends list, using the words Your  and You are , instead of simply dis‐\nplaying the username. The commented line can be uncommented if you wish to\ndisplay the user’s profile information on this screen.\nExample 26-10. friends.php\n<?php\n  require_once 'header.php';\n  if (!$loggedin) die();\n  if (isset($_GET['view'])) $view = sanitizeString($_GET['view']);\n  else                      $view = $user;\n  if ($view == $user)\n  {\n    $name1 = $name2 = \"Your\";\n    $name3 =          \"You are\";\n  }\n  else\n  {\n    $name1 = \"<a href='members.php?view=$view'>$view</a>'s\";\n    $name2 = \"$view's\";\n    $name3 = \"$view is\";\n  }\n  echo \"<div class='main'>\";\n  // Uncomment this line if you wish the user's profile to show here\n  // showProfile($view);\n676 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 707,
    "text": "$followers = array();\n  $following = array();\n  $result = queryMysql(\"SELECT * FROM friends WHERE user='$view'\");\n  $num    = $result->num_rows;\n  for ($j = 0 ; $j < $num ; ++$j)\n  {\n    $row           = $result->fetch_array(MYSQLI_ASSOC);\n    $followers[$j] = $row['friend'];\n  }\n  $result = queryMysql(\"SELECT * FROM friends WHERE friend='$view'\");\n  $num    = $result->num_rows;\n  for ($j = 0 ; $j < $num ; ++$j)\n  {\n      $row           = $result->fetch_array(MYSQLI_ASSOC);\n      $following[$j] = $row['user'];\n  }\n  $mutual    = array_intersect($followers, $following);\n  $followers = array_diff($followers, $mutual);\n  $following = array_diff($following, $mutual);\n  $friends   = FALSE;\n  if (sizeof($mutual))\n  {\n    echo \"<span class='subhead'>$name2 mutual friends</span><ul>\";\n    foreach($mutual as $friend)\n      echo \"<li><a href='members.php?view=$friend'>$friend</a>\";\n    echo \"</ul>\";\n    $friends = TRUE;\n  }\n  if (sizeof($followers))\n  {\n    echo \"<span class='subhead'>$name2 followers</span><ul>\";\n    foreach($followers as $friend)\n      echo \"<li><a href='members.php?view=$friend'>$friend</a>\";\n    echo \"</ul>\";\n    $friends = TRUE;\n  }\n  if (sizeof($following))\n  {\n    echo \"<span class='subhead'>$name3 following</span><ul>\";\n    foreach($following as $friend)\n      echo \"<li><a href='members.php?view=$friend'>$friend</a>\";\n    echo \"</ul>\";\n    $friends = TRUE;\n  }\nfriends.php | 677"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 708,
    "text": "if (!$friends) echo \"<br>You don't have any friends yet.<br><br>\";\n  echo \"<a class='button' href='messages.php?view=$view'>\" .\n       \"View $name2 messages</a>\";\n?>\n    </div><br>\n  </body>\n</html>\nFigure 26-6. Displaying a user’s friends and followers\nmessages.php\nThe last of the main modules is Example 26-11 , messages.php . The program starts by\nchecking whether a message has been posted in variable text . If so, it is inserted into\nthe messages  table. At the same time, the value of pm is also stored. This indicates\n678 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 709,
    "text": "whether a message is private or public. A 0 represents a public message, and 1 is pri‐\nvate.\nNext, the user’s profile and a form for entering a message are displayed, along with\nradio buttons to choose between a private or public message. After this, all the mes‐\nsages are shown, depending on whether they are private or public. If they are public,\nall users can see them, but private messages are visible only to the sender and recipi‐\nent. This is all handled by a couple of queries to the MySQL database. Additionally,\nwhen a message is private, it is introduced by the word whispered  and shown in italic.\nFinally, the program displays a couple of links to refresh the messages (in case\nanother user has posted one in the meantime) and to view the user’s friends. The trick\nusing the variables $name1  and $name2  is again used so that when you view your own\nprofile, the word Your  is displayed instead of the username.\nY ou can see the result of viewing this program with a browser in Figure 26-7 . Note\nhow users viewing their own messages are provided with links to erase any they don’t\nwant.\nExample 26-11. messages.php\n<?php\n  require_once 'header.php';\n  if (!$loggedin) die();\n  if (isset($_GET['view'])) $view = sanitizeString($_GET['view']);\n  else                      $view = $user;\n  if (isset($_POST['text']))\n  {\n    $text = sanitizeString($_POST['text']);\n    if ($text != \"\")\n    {\n      $pm   = substr(sanitizeString($_POST['pm']),0,1);\n      $time = time();\n      queryMysql(\"INSERT INTO messages VALUES(NULL, '$user',\n        '$view', '$pm', $time, '$text')\");\n    }\n  }\n  if ($view != \"\")\n  {\n    if ($view == $user) $name1 = $name2 = \"Your\";\n    else\n    {\n      $name1 = \"<a href='members.php?view=$view'>$view</a>'s\";\n      $name2 = \"$view's\";\nmessages.php | 679"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 710,
    "text": "}\n    echo \"<div class='main'><h3>$name1 Messages</h3>\";\n    showProfile($view);\n    echo <<<_END\n      <form method='post' action='messages.php?view=$view'>\n      Type here to leave a message:<br>\n      <textarea name='text' cols='40' rows='3'></textarea><br>\n      Public<input type='radio' name='pm' value='0' checked='checked'>\n      Private<input type='radio' name='pm' value='1'>\n      <input type='submit' value='Post Message'></form><br>\n_END;\n    if (isset($_GET['erase']))\n    {\n      $erase = sanitizeString($_GET['erase']);\n      queryMysql(\"DELETE FROM messages WHERE id=$erase AND recip='$user'\");\n    }\n    $query  = \"SELECT * FROM messages WHERE recip='$view' ORDER BY time DESC\";\n    $result = queryMysql($query);\n    $num    = $result->num_rows;\n    for ($j = 0 ; $j < $num ; ++$j)\n    {\n      $row = $result->fetch_array(MYSQLI_ASSOC);\n      if ($row['pm'] == 0 || $row['auth'] == $user || $row['recip'] == $user)\n      {\n        echo date('M jS \\'y g:ia:', $row['time']);\n        echo \" <a href='messages.php?view=\" . $row['auth'] . \"'>\" .\n          $row['auth']. \"</a> \";\n        if ($row['pm'] == 0)\n          echo \"wrote: &quot;\" . $row['message'] . \"&quot; \";\n        else\n          echo \"whispered: <span class='whisper'>&quot;\" .\n            $row['message'] . \"&quot;</span> \";\n        if ($row['recip'] == $user)\n          echo \"[<a href='messages.php?view=$view\" .\n            \"&erase=\" . $row['id'] . \"'>erase</a>]\";\n        echo \"<br>\";\n      }\n    }\n  }\n  if (!$num) echo \"<br><span class='info'>No messages yet</span><br><br>\";\n  echo \"<br><a class='button' href='messages.php?view=$view'>Refresh messages</a>\";\n680 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 711,
    "text": "?>\n    </div><br>\n  </body>\n</html>\nFigure 26-7. The messaging module\nlogout.php\nThe final ingredient  in our social networking recipe is Example 26-12 , logout.php , the\nlogout page that closes a session and deletes any associated data and cookies. The\nresult of calling up this program is shown in Figure 26-8 , where the user is now asked\nto click a link that will take her to the un-logged-in home page and remove the\nlogged-in links from the top of the screen. Of course, you could write a JavaScript or\nPHP redirect to do this (probably a good idea if you wish to keep logout looking\nclean).\nlogout.php | 681"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 712,
    "text": "Example 26-12. logout.php\n<?php\n  require_once 'header.php';\n  if (isset($_SESSION['user']))\n  {\n    destroySession();\n    echo \"<div class='main'>You have been logged out. Please \" .\n         \"<a href='index.php'>click here</a> to refresh the screen.\";\n  }\n  else echo \"<div class='main'><br>\" .\n            \"You cannot log out because you are not logged in\";\n?>\n    <br><br></div>\n  </body>\n</html>\nFigure 26-8. The logout page\nstyles.css\nThe style sheet used for this project is shown in Example 26-13 . There are a number\nof sets of declarations, as follows:\n*\nSets the default font family and size for the project using the universal selector.\n682 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 713,
    "text": "body\nSets the width of the project window, centers it horizontally, specifies a background\ncolor, and gives it a border.\nhtml\nSets the background color of the HTML section.\nimg\nGives all images a border, shadow, and a righthand margin.\nli a  and .button\nRemove underlines from hyperlinks in all <a> tags that are within a <li>  element,\nand all elements employing the button  class.\nli a:hover  and .button:hover\nSets the color in which <li>  elements and the button  class should display text when\nhovered over.\n.appname\nSets the properties for the heading (which uses the appname  class), including center‐\ning, background and text colors, the font family and size, and the padding.\n.fieldname\nSets the width of elements using the fieldname  class by first floating them.\n.main\nThis class applies an indent to elements that use it.\n.info\nThis class is used for displaying important information. It sets a background and\nforeground text color, applies a border and padding, and indents elements that\nemploy it.\n.menu li  and .button\nThese declarations ensure that all <li>  elements and the button  class display inline,\nhave padding applied, and include a border, a background and foreground text color,\na right margin, rounded borders, and a shadow—resulting in a button effect.\n.subhead\nEmphasizes sections of text.\n.taken , .available , .error , and .whisper\nThese declarations set the colors and font styles to be used for displaying different\ntypes of information.\n#logo\nThese rules style the logo text as a fallback in case a non-HTML5 browser is in use\nand the canvas logo doesn’t get created.\nstyles.css | 683"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 714,
    "text": "Example 26-13. styles.css\n* {\n  font-family:verdana,sans-serif;\n  font-size  :14pt;\n}\nbody {\n  width     :700px;\n  margin    :20px auto;\n  background:#f8f8f8;\n  border    :1px solid #888;\n}\nhtml {\n  background:#fff\n}\nimg {\n  border            :1px solid black;\n  margin-right      :15px;\n  -moz-box-shadow   :2px 2px 2px #888;\n  -webkit-box-shadow:2px 2px 2px #888;\n  box-shadow        :2px 2px 2px #888;\n}\nli a, .button {\n  text-decoration:none;\n}\nli a:hover, .button:hover {\n  color:green;\n}\n.appname {\n  text-align :center;\n  background :#eb8;\n  color      :#40d;\n  font-family:helvetica;\n  font-size  :20pt;\n  padding    :4px;\n}\n.fieldname {\n  float:left;\n  width:120px;\n}\n.main {\n  margin-left:40px;\n}\n684 | Chapter 26: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 715,
    "text": ".info {\n  background :lightgreen;\n  color      :blue;\n  border     :1px solid green;\n  padding    :5px 10px;\n  margin-left:40px;\n}\n.menu li, .button {\n  display           :inline;\n  padding           :4px 6px;\n  border            :1px solid #777;\n  background        :#ddd;\n  color             :#d04;\n  margin-right      :8px;\n  border-radius     :5px;\n  -moz-box-shadow   :2px 2px 2px #888;\n  -webkit-box-shadow:2px 2px 2px #888;\n  box-shadow        :2px 2px 2px #888;\n}\n.subhead {\n  font-weight:bold;\n}\n.taken, .error {\n  color:red;\n}\n.available {\n  color:green;\n}\n.whisper {\n  font-style:italic;\n  color     :#006600;\n}\n#logo {\n  font-family:Georgia;\n  font-weight:bold;\n  font-style :italic;\n  font-size  :97px;\n}\njavascript.js\nFinally, there’s the JavaScript file (see Example 26-14 ), which  contains the O, S, and C\nfunctions used throughout this book, along with some code to draw the logo for the\nsite using an HTML5 canvas, as explained in Chapter 23 .\njavascript.js | 685"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 716,
    "text": "Example 26-14. javascript.js\ncanvas               = O('logo')\ncontext              = canvas.getContext('2d')\ncontext.font         = 'bold italic 97px Georgia'\ncontext.textBaseline = 'top'\nimage                = new Image()\nimage.src            = 'robin.gif'\nimage.onload = function()\n{\n  gradient = context.createLinearGradient(0, 0, 0, 89)\n  gradient.addColorStop(0.00, '#faa')\n  gradient.addColorStop(0.66, '#f00')\n  context.fillStyle = gradient\n  context.fillText(  \"R  bin's Nest\", 0, 0)\n  context.strokeText(\"R  bin's Nest\", 0, 0)\n  context.drawImage(image, 64, 32)\n}\nfunction O(obj)\n{\n  if (typeof obj == 'object') return obj\n  else return document.getElementById(obj)\n}\nfunction S(obj)\n{\n  return O(obj).style\n}\nfunction C(name)\n{\n  var elements = document.getElementsByTagName('*')\n  var objects  = []\n  for (var i = 0 ; i < elements.length ; ++i)\n    if (elements[i].className == name)\n      objects.push(elements[i])\n  return objects\n}\nAnd that, as they say, is that. If you write anything based on this code or any other\nexamples in this book, or have gained in any other way from it, then I am glad to have\nbeen of help and thank you for reading this book.\nBut before you go and try out your newly learned skills on the Web at large, please\nbrowse through the appendixes that follow, as there’s a lot of additional information\nthere you should find useful.\n686 | Chapter 0: Bringing It All Together"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 717,
    "text": "APPENDIX A\nSolutions to the Chapter Questions\nChapter 1  Answers\n1. A web server (such as Apache), a server-side scripting language (PHP), a database\n(MySQL), and a client-side scripting language (JavaScript).\n2. HyperText Markup Language: the web page itself, including text and markup tags.\n3. Like nearly all database engines, MySQL accepts commands in Structured Query\nLanguage (SQL). SQL is the way that every user (including a PHP program) com‐\nmunicates with MySQL.\n4. PHP runs on the server, whereas JavaScript runs on the client. PHP can communi‐\ncate with the database to store and retrieve data, but it can’t alter the user’s web\npage quickly and dynamically. JavaScript has the opposite benefits and drawbacks.\n5. Cascading Style Sheets: styling and layout rules applied to the elements in an\nHTML document.\n6. Probably the most interesting new elements in HTML5 are <audio> , <video> , and\n<canvas> , although there are many others such as <article> , <summary> ,\n<footer> , and more.\n7. Some of these technologies are controlled by companies that accept bug reports\nand fix the errors like any software company. But open source software also\ndepends on a community, so your bug report may be handled by any user who\nunderstands the code well enough. Y ou may someday fix bugs in an open source\ntool yourself.\n687"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 718,
    "text": "Chapter 2  Answers\n1. W AMP stands for Windows, Apache, MySQL, and PHP . M in MAMP stands for\nMac  instead of Windows; and the L in LAMP stands for Linux . They all refer to a\ncomplete solution for hosting dynamic web pages.\n2. Both 127.0.0.1 and http://localhost  are ways of referring to the local computer.\nWhen a W AMP or MAMP is properly configured, you can type either into a\nbrowser’s address bar to call up the default page on the local server.\n3. FTP stands for File Transfer Protocol. An FTP program is used to transfer files back\nand forth between a client and a server.\n4. It is necessary to FTP files to a remote server in order to update it, which can sub‐\nstantially increase development time if this action is carried out many times in a\nsession.\n5. Dedicated program editors are smart and can highlight problems in your code\nbefore you even run it.\nChapter 3  Answers\n1. The tag used to start PHP interpreting code is <?php...?> , which can be shortened\nto <?...?>  but is not recommended practice.\n2. Y ou can use // for a single-line comment or / *...*/  to span multiple lines.\n3. All PHP statements must end with a semicolon ( ;).\n4. With the exception of constants, all PHP variables must begin with $.\n5. Variables hold a value that can be a string, a number, or other data.\n6.$variable = 1  is an assignment statement, whereas $variable == 1  is a compari‐\nson operator. Use $variable = 1  to set the value of $variable . Use $variable ==\n1 to find out later in the program whether $variable  equals 1. If you mistakenly\nuse $variable = 1  where you meant to do a comparison, it will do two things you\nprobably don’t want: set $variable  to 1 and return a true  value all the time, no\nmatter what its previous value was.\n7. A hyphen is reserved for the subtraction operators. A construct like $current-\nuser  would be harder to interpret if hyphens were also allowed in variable names\nand, in any case, would lead programs to be ambiguous.\n8. Variable names are case-sensitive. $This_Variable  is not the same as $this_vari\nable .\n688 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 719,
    "text": "9. Y ou cannot use spaces in variable names, as this would confuse the PHP parser.\nInstead, try using the _ (underscore).\n10. To convert one variable type to another, reference it and PHP will automatically\nconvert it for you.\n11. There is no difference between ++$j  and $j++  unless the value of $j is being tested,\nassigned to another variable, or passed as a parameter to a function. In such cases,\n++$j  increments $j before the test or other operation is performed, whereas $j++\nperforms the operation and then increments $j.\n12. Generally, the operators && and and are interchangeable except where precedence\nis important, in which case && has a high precedence, while and has a low one.\n13. Y ou can use multiple lines within quotations marks or the <<<_END..._END;  con‐\nstruct to create a multiline echo  or assignment. The closing tag must begin at the\nstart of a line, and end with a semicolon followed by a new line.\n14. Y ou cannot redefine constants because, by definition, once defined they retain\ntheir value until the program terminates.\n15. Y ou can use \\' or \\\" to escape either a single or double quote.\n16. The echo  and print  commands are similar in that they are both constructs, except\nthat print  behaves like a PHP function and takes a single argument, while echo\ncan take multiple arguments.\n17. The purpose of functions is to separate discrete sections of code into their own,\nself-contained sections that can be referenced by a single function name.\n18. Y ou can make a variable accessible to all parts of a PHP program by declaring it as\nglobal .\n19. If you generate data within a function, you can convey the data to the rest of the\nprogram by returning a value or modifying a global variable.\n20. When you combine a string with a number, the result is another string.\nChapter 4  Answers\n1. In PHP , TRUE  represents the value 1, and FALSE  represents NULL , which can be\nthought of as “nothing” and is output as the empty string.\n2. The simplest forms of expressions are literals (such as numbers and strings) and\nvariables, which simply evaluate to themselves.\n3. The difference between unary, binary, and ternary operators is the number of\noperands each requires (one, two, and three, respectively).\nSolutions to the Chapter Questions | 689"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 720,
    "text": "4. The best way to force your own operator precedence is to place parentheses\naround subexpressions to which you wish to give high precedence.\n5. Operator associativity  refers to the direction of processing (left to right, or right to\nleft).\n6. Y ou use the identity operator when you wish to bypass PHP’s automatic operand\ntype changing (also called type casting ).\n7. The three conditional statement types are if, switch , and the ?: operator.\n8. To skip the current iteration of a loop and move on to the next one, use a continue\nstatement.\n9. Loops using for statements are more powerful than while  loops, because they sup‐\nport two additional parameters to control the loop handling.\n10. Most conditional expressions in if and while  statements are literal (or Boolean)\nand therefore trigger execution when they evaluate to TRUE . Numeric expressions\ntrigger execution when they evaluate to a nonzero value. String expressions trigger\nexecution when they evaluate to a nonempty string. A NULL  value is evaluated as\nfalse and therefore does not trigger execution.\nChapter 5  Answers\n1. Using functions avoids the need to copy or rewrite similar code sections many\ntimes over by combining sets of statements so that they can be called by a simple\nname.\n2. By default, a function can return a single value. But by utilizing arrays, references,\nand global variables, any number of values can be returned.\n3. When you reference a variable by name, such as by assigning its value to another\nvariable or by passing its value to a function, its value is copied. The original does\nnot change when the copy is changed. But if you reference a variable, only a\npointer (or reference) to its value is used, so that a single value is referenced by\nmore than one name. Changing the value of the reference will change the original\nas well.\n4. Scope  refers to which parts of a program can access a variable. For example, a vari‐\nable of global scope can be accessed by all parts of a PHP program.\n5. To incorporate one file within another, you can use the include  or require  direc‐\ntives, or their safer variants, include_once  and require_once .\n6. A function is a set of statements referenced by a name that can receive and return\nvalues. An object may contain zero or many functions (which are then called\n690 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 721,
    "text": "methods) as well as variables (which are called properties), all combined in a single\nunit.\n7. To create a new object in PHP , use the new keyword like this:\n$object = new Class;\n8. To create a subclass, use the extends  keyword with syntax such as this:\nclass Subclass extends Parentclass ...\n9. To call a piece of initializing code when an object is created, create a constructor\nmethod called __construct  within the class and place your code there.\n10. Explicitly declaring properties within a class is unnecessary, as they will be implic‐\nitly declared upon first use. But it is considered good practice as it helps with code\nreadability and debugging, and is especially useful to other people who may have\nto maintain your code.\nChapter 6  Answers\n1. A numeric array can be indexed numerically using numbers or numeric variables.\nAn associative array uses alphanumeric identifiers to index elements.\n2. The main benefit of the array  keyword is that it enables you to assign several val‐\nues at a time to an array without repeating the array name.\n3. Both the each  function and the foreach...as  loop construct return elements from\nan array; both start at the beginning and increment a pointer to make sure the next\nelement is returned each time; and both return FALSE  when the end of the array is\nreached. The difference is that the each  function returns just a single element, so it\nis usually wrapped in a loop. The foreach...as  construct is already a loop, execut‐\ning repeatedly until the array is exhausted or you explicitly break out of the loop.\n4. To create a multidimensional array, you need to assign additional arrays to ele‐\nments of the main array.\n5. Y ou can use the count  function to count the number of elements in an array.\n6. The purpose of the explode  function is to extract sections from a string that are\nseparated by an identifier, such as extracting words separated by spaces within a\nsentence.\n7. To reset PHP’s internal pointer into an array back to the first element, call the\nreset  function.\nChapter 7  Answers\n1. The conversion specifier you would use to display a floating-point number is %f.\nSolutions to the Chapter Questions | 691"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 722,
    "text": "2. To take the input string \"Happy Birthday\"  and output the string \"**Happy\" ,\nyou could use a printf  statement such as this:\nprintf(\"%'*7.5s\", \"Happy Birthday\");\n3. To send the output from printf  to a variable instead of to a browser, you would\nuse sprintf  instead.\n4. To create a Unix timestamp for 7:11 a.m. on May 2nd, 2016, you could use the\nfollowing command:\n$timestamp = mktime(7, 11, 0, 5, 2, 2016);\n5. Y ou would use the w+ file access mode with fopen  to open a file in write and read\nmode, with the file truncated and the file pointer at the start.\n6. The PHP command for deleting the file file.txt  is as follows:\nunlink('file.txt');\n7. The PHP function file_get_contents  is used to read in an entire file in one go. It\nwill also read them from across the Internet if provided with a URL.\n8. The PHP superglobal associative array $_FILES  contains the details about uploa‐\nded files.\n9. The PHP exec  function enables the running of system commands.\n10. In HTML5, you can use either the XHTML style of tag (such as <hr / >) or the\nstandard HTML4 style (such as <hr> ). It’s entirely up to you or your company’s\ncoding style.\nChapter 8  Answers\n1. The semicolon is used by MySQL to separate or end commands. If you forget to\nenter it, MySQL will issue a prompt and wait for you to enter it. (In the answers in\nthis section, I’ve left off the semicolon, because it looks strange in the text. But it\nmust terminate every statement.)\n2. To see the available databases, type SHOW databases . To see tables within a data‐\nbase that you are using, type SHOW tables . (These commands are case-insensitive.)\n3. To create this new user, use the GRANT  command like this:\nGRANT PRIVILEGES ON newdatabase.* TO 'newuser'@'localhost'\n  IDENTIFIED BY 'newpassword';\n4. To view the structure of a table, type DESCRIBE tablename .\n692 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 723,
    "text": "5. The purpose of a MySQL index is to substantially decrease database access times\nby maintaining indexes of one or more key columns, which can then be quickly\nsearched to locate rows within a table.\n6. A FULLTEXT  index enables natural-language queries to find keywords, wherever\nthey are in the FULLTEXT  column(s), in much the same way as using a search\nengine.\n7. A stopword is a word that is so common that it is considered not worth including\nin a FULLTEXT  index or using in searches. However, it does participate in a search\nwhen it is part of a larger string bounded by double quotes.\n8.SELECT DISTINCT  essentially affects only the display, choosing a single row and\neliminating all the duplicates. GROUP BY  does not eliminate rows, but combines all\nthe rows that have the same value in the column. Therefore, GROUP BY  is useful for\nperforming an operation such as COUNT  on groups of rows. SELECT  DISTINCT  is not\nuseful for that purpose.\n9. To return only those rows containing the word Langhorne  somewhere in the\ncolumn author  of the table classics , use a command such as this:\nSELECT * FROM classics WHERE author LIKE \"%Langhorne%\";\n10. When you’re joining two tables together, they must share at least one common col‐\numn such as an ID number or, as in the case of the classics  and customers  tables,\nthe isbn column.\nChapter 9  Answers\n1. The term relationship  refers to the connection between two pieces of data that have\nsome association, such as a book and its author, or a book and the customer who\nbought the book. A relational database such as MySQL specializes in storing and\nretrieving such relations.\n2. The process of removing duplicate data and optimizing tables is called normaliza‐\ntion.\n3. The three rules of First Normal Form are as follows:\n•There should be no repeating columns containing the same kind of data.\n•All columns should contain a single value.\n•There should be a primary key to uniquely identify each row.\n4. To satisfy Second Normal Form, columns whose data repeats across multiple rows\nshould be removed to their own tables.\nSolutions to the Chapter Questions | 693"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 724,
    "text": "5. In a one-to-many relationship, the primary key from the table on the “one” side\nmust be added as a separate column (a foreign key) to the table on the “many” side.\n6. To create a database with  a many-to-many relationship, you create an intermedi‐\nary table containing keys from two other tables. The other tables can then refer‐\nence each other via the third.\n7. To initiate a MySQL transaction, use either the BEGIN  or the START TRANSACTION\ncommand. To terminate a transaction and cancel all actions, issue a ROLLBACK\ncommand. To terminate a transaction and commit all actions, issue a COMMIT  com‐\nmand.\n8. To examine how a query will work in detail, you can use the EXPLAIN  command.\n9. To back up the database publications  to a file called publications.sql , you would\nuse a command such as:\nmysqldump -u user -ppassword  publications > publications.sql\nChapter 10  Answers\n1. To connect to a MySQL database with mysqli , call the mysqli  method, passing the\nhostname, username, password, and database. A connection object will be\nreturned on success.\n2. To submit a query to MySQL using mysqli , ensure you have first created a connec‐\ntion object to a database, and call its query  method, passing the query string.\n3. When a mysqli  error occurs, the error  property of the connection object contains\nthe error message. If the error was in connecting to the database, then the con\nnect_error  property will contain the error message.\n4. To determine the number of rows returned by a mysqli  query, use the num_rows\nproperty of the result object.\n5. To retrieve a specific row from a set of mysqli  results, call the data_seek  method\nof the result object, passing it the row number (starting from 0); then call the\nfetch_array  or other retrieval method to obtain the required data.\n6. To escape special characters in strings, you can call the real_escape_string\nmethod of a mysqli  connection object, passing it the string to be escaped.\n7. If you neglect to properly close objects created with mysqli  methods, your pro‐\ngrams carry the risk of running out of memory, especially on high-traffic websites.\nIf there’s a program flow logic error in your code, it also ensures you won’t acci‐\ndentally access old results.\n694 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 725,
    "text": "Chapter 11  Answers\n1. The associative arrays used to pass submitted form data to PHP are $_GET  for the\nGET method and $_POST  for the POST  method.\n2. The register_globals  setting was the default in versions of PHP prior to 4.2.0. It\nwas not a good idea, because it automatically assigned submitted form-field data to\nPHP variables, thus opening up a security hole for potential hackers who could\nattempt to break into PHP code by initializing variables to values of their choice.\n3. The difference between a text box and a text area is that although they both accept\ntext for form input, a text box is a single line, whereas a text area can be multiple\nlines and include word wrapping.\n4. To offer three mutually exclusive choices in a web form, you should use radio but‐\ntons, because checkboxes allow multiple selections.\n5. Submit a group of selections from a web form using a single field name by using\nan array name with square brackets such as choices[] , instead of a regular field\nname. Each value is then placed into the array, whose length will be the number of\nelements submitted.\n6. To submit a form field without the user seeing it, place it in a hidden field using\nthe attribute type=\"hidden\" .\n7. Y ou can encapsulate a form element and supporting text or graphics, making the\nentire unit selectable with a mouse click, by using the <label>  and </label>  tags.\n8. To convert HTML into a format that can be displayed but will not be interpreted as\nHTML by a browser, use the PHP htmlentities  function.\n9. Y ou can help users complete fields with data they may have submitted elsewhere by\nusing the autocomplete  attribute, which prompts the user with possible values.\n10. To ensure that a form is not submitted with missing data, you can apply the\nrequired  attribute to essential inputs.\nChapter 12  Answers\n1. Cookies should be transferred before a web page’s HTML, because they are sent as\npart of the headers.\n2. To store a cookie on a web browser, use the set_cookie  function.\n3. To destroy a cookie, reissue it with set_cookie , but set its expiration date in the\npast.\n4. Using HTTP authentication, the username and password are stored in\n$_SERVER['PHP_AUTH_USER']  and $_SERVER['PHP_AUTH_PW'] .\nSolutions to the Chapter Questions | 695"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 726,
    "text": "5. The hash  function is a powerful security measure, because it is a one-way function\nthat converts a string to a 32-character hexadecimal number that cannot be con‐\nverted back, and is therefore almost uncrackable.\n6. When a string is salted, extra characters (known only by the programmer) are\nadded to it before hash  conversion. This makes it nearly impossible for a brute-\nforce dictionary attack to succeed.\n7. A PHP session is a group of variables unique to the current user.\n8. To initiate a PHP session, use the session_start  function.\n9. Session hijacking is where a hacker somehow discovers an existing session ID and\nattempts to take it over.\n10. Session fixation is the attempt to force your own session ID onto a server rather\nthan letting it create its own.\nChapter 13  Answers\n1. To enclose JavaScript code, you use <script>  and </script>  tags.\n2. By default, JavaScript code will output to the part of the document in which it\nresides. If it’s in the head, it will output to the head; if in the body, it outputs to the\nbody.\n3. Y ou can include JavaScript code from other sources in your documents by either\ncopying and pasting them or, more commonly, including them as part of a\n<script src='filename.js'>  tag.\n4. The equivalent of the echo  and print  commands used in PHP is the JavaScript\ndocument.write  function (or method).\n5. To create a comment in JavaScript, preface it with // for a single-line comment or\nsurround it with /* and */ for a multiline comment.\n6. The JavaScript string concatenation operator is the + symbol.\n7. Within a JavaScript function, you can define a variable that has local scope by pre‐\nceding it with the var keyword upon first assignment.\n8. To display the URL assigned to the link ID thislink  in all main browsers, you\ncan use the two following commands:\ndocument.write(document.getElementById('thislink').href)\ndocument.write(thislink.href)\n9. The commands to change to the previous page in the browser’s history array\nare:\n696 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 727,
    "text": "history.back()\nhistory.go(-1)\n10. To replace the current document with the main page at the oreilly.com  website,\nyou could use the following command:\ndocument.location.href = 'http://oreilly.com'\nChapter 14  Answers\n1. The most noticeable difference between Boolean values in PHP and JavaScript is\nthat PHP recognizes the keywords TRUE , true , FALSE , and false , whereas only\ntrue  and false  are supported in JavaScript. Additionally, in PHP , TRUE  has a value\nof 1, and FALSE  is NULL ; in JavaScript they are represented by true  and false ,\nwhich can be returned as string values.\n2. Unlike PHP , no character is used (such as $) to define a JavaScript variable name.\nJavaScript variable names can start with and contain uppercase and lowercase let‐\nters as well as underscores; names can also include digits, but not as the first char‐\nacter.\n3. The difference between unary, binary, and ternary operators is the number of\noperands each requires (one, two, and three, respectively).\n4. The best way to force your own operator precedence is to surround the parts of an\nexpression to be evaluated first with parentheses.\n5. Y ou use the identity operator when you wish to bypass JavaScript’s automatic\noperand type changing.\n6. The simplest forms of expressions are literals (such as numbers and strings) and\nvariables, which simply evaluate to themselves.\n7. The three conditional statement types are if, switch , and the ?: operator.\n8. Most conditional expressions in if and while  statements are literal or Boolean and\ntherefore trigger execution when they evaluate to TRUE . Numeric expressions trig‐\nger execution when they evaluate to a nonzero value. String expressions trigger\nexecution when they evaluate to a nonempty string. A NULL  value is evaluated as\nfalse and therefore does not trigger execution.\n9. Loops using for statements are more powerful than while  loops, because they sup‐\nport two additional parameters to control loop handling.\n10. The with  statement takes an object as its parameter. Using it, you specify an object\nonce; then for each statement within the with  block, that object is assumed.\nSolutions to the Chapter Questions | 697"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 728,
    "text": "Chapter 15  Answers\n1. JavaScript functions and variable name are case-sensitive. The variables Count ,\ncount , and COUNT  are all different.\n2. To write a function that accepts and processes an unlimited number of parameters,\naccess parameters through the arguments  array, which is a member of all func‐\ntions.\n3. One way to return multiple values from a function is to place them all inside an\narray and return the array.\n4. When defining a class, use the this  keyword to refer to the current object.\n5. The methods of a class do not have to be defined within a class definition. If a\nmethod is defined outside the constructor, the method name must be assigned to\nthe this  object within the class definition.\n6. New objects are created via the new keyword.\n7. Y ou can make a property or method available to all objects in a class without repli‐\ncating the property or method within the object by using the prototype  keyword\nto create a single instance, which is then passed by reference to all the objects in a\nclass.\n8. To create a multidimensional array, place subarrays inside the main array.\n9. The syntax you would use to create an associative array is key : value , within\ncurly braces, as in the following:\nassocarray =\n{\n  \"forename\" : \"Paul\",\n  \"surname\"  : \"McCartney\",\n  \"group\"    : \"The Beatles\"\n}\n10. A statement to sort an array of numbers into descending numerical order\nwould look like this:\nnumbers.sort(function(a, b){ return b – a })\nChapter 16  Answers\n1. Y ou can send a form for validation prior to submitting it by adding the JavaScript\nonsubmit  attribute to the <form>  tag. Make sure that your function returns true  if\nthe form is to be submitted, and false  otherwise.\n2. To match a string against a regular expression in JavaScript, use the test  method.\n698 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 729,
    "text": "3. Regular expressions to match characters not in a word could be any of /[^\\w]/ , /\n[\\W]/ , /[^a-zA-Z0-9_]/ , and so on.\n4. A regular expression to match either of the words fox or fix could be /f[oi]x/ .\n5. A regular expression to match any single word followed by any nonword character\ncould be /\\w+\\W/g .\n6. A JavaScript function using regular expressions to test whether the word fox\nexists in the string \"The quick brown fox\"  could be as follows:\ndocument.write(/fox/.test(\"The quick brown fox\"))\n7. A PHP function using a regular expression to replace all occurrences of the\nword the in \"The cow jumps over the moon\"  with the word my could be as\nfollows:\n$s=preg_replace(\"/the/i\", \"my\", \"The cow jumps over the moon\");\n8. The HTML attribute used to pre-complete form fields with a value is value , which\nis placed within an <input>  tag and takes the form value=\"value\".\nChapter 17  Answers\n1. It’s necessary to write a function for creating new XMLHttpRequest  objects, because\nMicrosoft browsers use two different methods of creating them, while all other\nmajor browsers use a third. By writing a function to test the browser in use, you\ncan ensure that code will work on all major browsers.\n2. The purpose of the try...catch  construct is to set an error trap for the code\ninside the try statement. If the code causes an error, the catch  section will be exe‐\ncuted instead of a general error being issued.\n3. An XMLHttpRequest  object has six properties and six methods (see Tables 17-1 and\n17-2).\n4. Y ou can tell that an Ajax call has completed when the readyState  property of an\nobject has a value of 4.\n5. When an Ajax call successfully completes, the object’s status  will have a value of\n200.\n6. The responseText  property of an XMLHttpRequest  object contains the value\nreturned by a successful Ajax call.\n7. The responseXML  property of an XMLHttpRequest  object contains a DOM tree cre‐\nated from the XML returned by a successful Ajax call.\nSolutions to the Chapter Questions | 699"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 730,
    "text": "8. To specify a callback function to handle Ajax responses, assign the function name\nto the XMLHttpRequest  object’s onreadystatechange  property. Y ou can also use an\nunnamed, inline function.\n9. To initiate an Ajax request, an XMLHTTPRequest  object’s send  method is called.\n10. The main differences between an Ajax GET and POST  request are that GET requests\nappend the data to the URL and not as a parameter of the send  method, and POST\nrequests pass the data as a parameter of the send  method and require the correct\nform headers to be sent first.\nChapter 18  Answers\n1. To import one style sheet into another, you use the @import  directive, like this:\n@import url('styles.css');\n2. To import a style sheet into a document, you can use the HTML <link>  tag:\n<link rel='stylesheet' type='text/css' href='styles.css'>\n3. To directly embed a style into an element, use the style  attribute, like this:\n<div style='color:blue;'>\n4. The difference between a CSS ID and a CSS class is that an ID is applied to only a\nsingle element, whereas a class can be applied to many elements.\n5. In a CSS declaration, ID names are prefixed with a # character (e.g., #myid ), and\nclass names with a . character (e.g., .myclass ).\n6. In CSS, the semicolon is used as a separator between declarations.\n7. To add a comment to a style sheet, you enclose it between /* and */ opening and\nclosing comment markers.\n8. In CSS, you can match any element using the * universal selector.\n9. To select a group of different elements and/or element types in CSS, you place a\ncomma between each element, ID, or class.\n10. Given a pair of CSS declarations with equal precedence, to make one have\ngreater precedence over the other, you append the !important  declaration to\nit, like this:\np { color:#ff0000 !important; }\n700 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 731,
    "text": "Chapter 19  Answers\n1. The CSS3 operators ^=, $=, and *= match the start, end, or any portion of a string,\nrespectively.\n2. The property you use to specify the size of a background image is background-\nsize , like this:\nbackground-size:800px 600px;\n3. Y ou can specify the radius of a border using the border-radius  property:\nborder-radius:20px;\n4. To flow text over multiple columns, you use the column-count , column-gap ,\nand column-rule  properties or their browser-specific variants, like this:\ncolumn-count:3;\n     column-gap  :1em;\n     column-rule :1px solid black;\n5. The four functions with which you can specify CSS colors are hsl, hsla , rgb,\nand rgba ; for example:\ncolor:rgba(0%,60%,40%,0.4);\n6. To create a gray text shadow under some text, offset diagonally to the bottom\nright by 5 pixels, with a blurring of 3 pixels, you would use this declaration:\ntext-shadow:5px 5px 3px #888;\n7. Y ou can indicate that text is truncated with an ellipsis by using this declaration:\ntext-overflow:ellipsis;\n8. Y ou include a Google Web Font in a web page by first selecting it from http://\ngoogle.com/fonts . Then assuming, for example, you chose Lobster, include it in\na <link>  tag, like this:\n<link href='http://fonts.googleapis.com/css?family=Lobster'\n        rel='stylesheet' type='text/css'>\nand also refer to the font in a CSS declaration such as this:\nh1 { font-family:'Lobster', arial, serif; }\n9. The CSS declaration you would you use to rotate an object by 90 degrees is:\ntransform:rotate(90deg);\n10. To set up a transition on an object so that when any of its properties are\nchanged the change will transition immediately in a linear fashion over the\ncourse of half a second, you would use this declaration:\nSolutions to the Chapter Questions | 701"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 732,
    "text": "transition:all .5s linear;\nChapter 20  Answers\n1. The O function returns an object by its ID, the S function returns the style  prop‐\nerty of an object, and the C function returns an array of all objects that access a\ngiven class.\n2. Y ou can modify a CSS attribute of an object using the setAttribute  function,\nlike this:\nmyobject.setAttribute('font-size', '16pt')\nY ou can also (usually) modify an attribute directly (using slightly modified\nproperty names where required), like this:\nmyobject.fontSize = '16pt'\n3. The properties that provide the width and height available in a browser window\nare window.innerHeight  and window.innerWidth .\n4. To make something happen when the mouse passes over and out of an object,\nattach to the onmouseover  and onmouseout  events.\n5. To create a new element, use code such as this:\nelem = document.createElement('span')\nTo add the new element to the DOM, use code such as this:\ndocument.body.appendChild(elem)\n6. To make an element invisible, set its visibility  property to hidden  (or visible\nto restore it again). To collapse an element’s dimensions to zero, set its display\nproperty to none  (the value block  is one way to restore it).\n7. To set a single event at a future time, call the setTimeout  function, passing it the\ncode or function name to execute and the time delay in milliseconds.\n8. To set up repeating events at regular intervals, use the setInterval  function, pass‐\ning it the code or function name to execute and the time delay between repeats in\nmilliseconds.\n9. To release an element from its location in a web page to enable it to be moved\naround, set its position  property to relative , absolute , or fixed . To restore it to\nits original place, set the property to static .\n10. To achieve an animation rate of 50 frames per second, you should set a delay\nbetween interrupts of 20 milliseconds. To calculate this value, divide 1,000 milli‐\nseconds by the desired frame rate.\n702 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 733,
    "text": "Chapter 21  Answers\n1. The symbol commonly used as the factory method for creating jQuery objects is $.\nAlternatively, you can use the method name jQuery .\n2. To link to minified release 1.11.1 of jQuery from the Google CDN, you could\nuse HTML such as this:\n<script src='http://ajax.googleapis.com/ajax/libs/jquery/\n1.11.1/jquery.min.js'></script>\n3. The jQuery $ factory method accepts CSS selectors in order to build a jQuery\nobject of matching elements.\n4. To get a CSS property value, use the css method, supplying just a property name.\nTo set the property’s value, supply a property name and a value to the method.\n5. To attach a method to the element elem ’s click event to make it slowly hide,\nyou could use code such as the following:\n$('#elem').click(function() { $(this).hide('slow') } )\n6. In order to be able to animate an element, you must assign a value of fixed , rela\ntive , or absolute  to its position  property.\n7. Methods can be run at once (or sequentially if animations) by chaining them\ntogether with periods, like this:\n$('#elem').css('color', 'blue').css('background',\n'yellow').slideUp('slow')\n8. To retrieve an element object from a jQuery selection object, you can index it with\nsquare brackets, like this $('#elem')[0] , or use the get method, like this: $\n('#elem').get(0) .\n9. To display the sibling element immediately preceding one with the ID of news\nin bold, you could use this statement:\n$('#news').prev().css('font-weight', 'bold')\n10. Y ou can make a jQuery Ajax Get request using the $.get  method, like this:\n$.get('http://server.com/ajax.php?do=this', function(data) {\nalert('The server said: ' + data) } )\nChapter 22  Answers\n1. The new HTML5 element for drawing graphics in a web browser is the canvas ele‐\nment, created using the <canvas>  tag.\nSolutions to the Chapter Questions | 703"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 734,
    "text": "2. Y ou need to use JavaScript to access many of the new HTML5 technologies such as\nthe canvas and geolocation.\n3. To incorporate audio or video in a web page, you use the <audio>  or <video>  tags.\n4. In HTML5, local storage offers far greater access to local user space than cookies,\nwhich are limited in the amount of data they can hold.\n5. In HTML5, you can set up web workers to carry on background tasks for you.\nThese workers are simply sections of JavaScript code.\nChapter 23  Answers\n1. To create a canvas element in HTML, use a <canvas>  tag and specify an ID\nthat JavaScript can use to access it, like this:\n<canvas id='mycanvas'>\n2. To give JavaScript access to a canvas element, ensure the element has been\ngiven an ID such as mycanvas , and then use the document.getElementdById\nfunction (or the O function from the OSC.js  file supplied on the companion\nwebsite) to return an object to the element. Finally, call getContext  on the\nobject to retrieve a 2D context to the canvas, like this:\ncanvas  = document.getElementById('mycanvas')\ncontext = canvas.getContext('2d')\n3. To start a canvas path, issue the beginPath  method on the context. After creat‐\ning a path, you close it by issuing closePath  on the context, like this:\ncontext.beginPath()\n  // Path creation commands go here\ncontext.closePath()\n4. Y ou can extract the data from a canvas using the toDataURL  method, which\ncan then be assigned to the src property of an image object, like this:\nimage.src = canvas.toDataURL()\n5. To create a gradient fill (either radial or linear) with more than two colors,\nspecify all the colors required as stop colors assigned to a gradient object you\nhave already created, and assign them each a starting point as a percent value\nof the complete gradient (between 0 and 1), like this:\ngradient.addColorStop(0,    'green')\ngradient.addColorStop(0.3,  'red')\ngradient.addColorStop(0,79, 'orange')\ngradient.addColorStop(1,    'brown')\n704 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 735,
    "text": "6. To adjust the width of drawn lines, assign a value to the lineWidth  property of\nthe context, like this:\ncontext.lineWidth = 5\n7. To ensure that future drawing takes place only within a certain area, you can create\na path and then call the clip  method.\n8. A complex curve with two imaginary attractors is called a Bézier curve. To create\none, call the bezierCurveTo  method, supplying two pairs of x and y coordinates\nfor the attractors, followed by another pair for the end point of the curve. A curve\nis then created from the current drawing location to the destination.\n9. The getImageData  method returns an array containing the specified pixel data,\nwith the elements consecutively containing the red, green, blue, and alpha pixel\nvalues, so four items of data are returned per pixel.\n10. The transform  method takes six arguments (or parameters), which are in order:\nhorizontal scale, horizontal skew, vertical skew, vertical scale, horizontal translate,\nand vertical translate. Therefore, the arguments that apply to scaling are numbers 1\nand 4 in the list.\nChapter 24  Answers\n1. To insert audio and video into an HTML5 document, use the <audio>  and <video>\ntags.\n2. To guarantee maximum audio playability on all platforms, you should use the\nOGG codec plus either the ACC or MP3 codec.\n3. To play and pause HTML5 media playback, you can call the play  and pause  meth‐\nods of an audio or video element.\n4. To support media playback in a non-HTML5 browser, you can embed a Flash\naudio or video player inside any audio or video element, which will be activated if\nHTML5 media playing is not supported.\n5. To guarantee maximum video playability on all platforms, you should use the\nMP4/H.264 codec, and the OGG/Theora or VP8 codec to support the Opera\nbrowser.\nChapter 25  Answers\n1. To request geolocation data from a web browser, you call the following\nmethod, passing the names of two functions you have written for handling\naccess or denial to the data:\nnavigator.geolocation.getCurrentPosition(granted, denied)\nSolutions to the Chapter Questions | 705"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 736,
    "text": "2. To determine whether or not a browser supports local storage, test the typeof\nproperty of the localStorage  object, like this:\nif (typeof localStorage == 'undefined')\n  // Local storage is not available}\n3. To erase all local storage data for the current domain, you can call the localStor\nage.clear  method.\n4. Web workers communicate with a main program most easily using the postMes\nsage  method to send information, and by attaching to the web worker object’s\nonmessage  event to retrieve it.\n5. To inform a web browser that the document can be run offline as a local web\napp, create a file to use as a manifest; in that file, list the files required by the\napplication, and then link to the file in the <html>  tag, like this:\n<html manifest='filename.appcache'>\n6. Y ou can prevent the default action of disallowing drag-and-drop for the events that\nhandle these operations, by issuing a call to the event object’s preventDefault\nmethod in your ondragover  and ondrop  event handlers.\n7. To make cross-document messaging more secure, you should always supply a\ndomain identifier when posting messages, and check for that identifier when\nreceiving them, like this for posting:\npostMessage(message, 'http://mydomain.com')\nAnd this for receiving:\nif (event.origin) != 'http://mydomain.com') // Disallow\nY ou can also encrypt or obscure communications to discourage injection or\neavesdropping.\n8. The purpose of microdata is to make information more easily understandable by\ncomputer programs, such as search engines.\n706 | Appendix A: Solutions to the Chapter Questions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 737,
    "text": "APPENDIX B\nOnline Resources\nThis appendix lists useful websites where you can get the material used in this book,\nor other resources that  will enhance your web programs.\nPHP Resource Sites\n•http://codewalkers.com\n•http://developer.yahoo.com/php/\n•http://easyphp.org\n•http://forums.devshed.com\n•http://free-php.net\n•http://hotscripts.com/category/php/\n•http://htmlgoodies.com/beyond/php/\n•http://php.net\n•http://php.resourceindex.com\n•http://php-editors.com\n•http://phpbuilder.com\n•http://phpfreaks.com\n•http://phpunit.de\n•http://w3schools.com/php/\n•http://zend.com\n707"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 738,
    "text": "MySQL Resource Sites\n•http://launchpad.net/mysql\n•http://mysql.com\n•http://php.net/mysql\n•http://planetmysql.org\n•http://oracle.com/us/sun\n•http://w3schools.com/PHP/php_mysql_intro.asp\nJavaScript Resource Sites\n•http://developer.mozilla.org/en/JavaScript\n•http://dynamicdrive.com\n•http://javascript.about.com\n•http://javascript.internet.com\n•http://javascript.com\n•http://javascriptkit.com\n•http://w3schools.com/JS\n•http://webreference.com/js\nCSS Resource Sites\n•http://freehtmlvalidator.com\n•http://cssbasics.com\n•http://dustindiaz.com/css-shorthand\n•http://quirksmode.org/css/quirksmode.html\n•http://css-discuss.incutio.com/wiki/Print_Stylesheets\nHTML5 Resource Sites\n•http://htmlvalidator.com\n•http://caniuse.com\n•http://html5test.com\n708 | Appendix B: Online Resources"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 739,
    "text": "•http://html5readiness.com\n•http://html5demos.com\n•http://html5-demos.appspot.com\n•http://modernizr.com\n•http://html5doctor.com\nAJAX Resource Sites\n•http://ajax.asp.net\n•http://ajaxian.com\n•http://ajaxmatters.com\n•http://developer.mozilla.org/en/AJAX\n•http://dojotoolkit.org\n•http://jquery.com\n•http://mochikit.com\n•http://mootools.net\n•http://openjs.com\n•http://prototypejs.org\n•http://sourceforge.net/projects/clean-ajax\n•http://w3schools.com/Ajax\nMiscellaneous Resource Sites\n•http://onlinewebcheck.com\n•http://apachefriends.org\n•http://easyphp.org\n•http://eclipse.org\n•http://editra.org\n•http://fireftp.mozdev.org\n•http://sourceforge.net/projects/glossword\n•http://mamp.info/en\n•http://programmingforums.org\nOnline Resources | 709"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 740,
    "text": "•http://putty.org\nO’Reilly Resource Sites\n•http://onlamp.com\n•http://onlamp.com/php\n•http://onlamp.com/onlamp/general/mysql.csp\n•http://oreilly.com/ajax\n•http://oreilly.com/javascript\n•http://oreilly.com/mysql\n•http://oreilly.com/php\n•http://oreillynet.com/javascript\n710 | Appendix B: Online Resources"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 741,
    "text": "APPENDIX C\nMySQL’s FULLTEXT Stopwords\nThis appendix contains the more than 500 stopwords  referred to in the section “Creat‐\ning a FULLTEXT index” on page 191  in Chapter 8 . Stopwords are words that are con‐\nsidered so common as to not be worth searching for, or storing, in a FULLTEXT  index.\nTheoretically, ignoring these words makes little difference to the results of most FULL\nTEXT  searches, but makes MySQL databases considerably smaller and more efficient.\nThe words are shown here in lowercase but apply to uppercase and mixed-case ver‐\nsions, too:\nA\na’s, able, about , above , according , accordingly , across , actually , after , afterwards , again ,\nagainst , ain’t, all, allow , allows , almost , alone , along , already , also, although , always ,\nam, among , amongst , an, and, another , any, anybody , anyhow , anyone , anything , any‐\nway, anyways , anywhere , apart , appear , appreciate , appropriate , are, aren’t , around , as,\naside , ask, asking , associated , at, available , away , awfully\nB\nbe, became , because , become , becomes , becoming , been , before , beforehand , behind ,\nbeing , believe , below , beside , besides , best, better , between , beyond , both , brief , but, by\nC\nc’mon , c’s, came , can, can’t , cannot , cant, cause , causes , certain , certainly , changes ,\nclearly , co, com, come , comes , concerning , consequently , consider , considering , contain ,\ncontaining , contains , corresponding , could , couldn’t , course , currently\nD\ndefinitely , described , despite , did, didn’t , different , do, does, doesn’t , doing , don’t , done ,\ndown , downwards , during\n711"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 742,
    "text": "E\neach , edu, eg, eight , either , else, elsewhere , enough , entirely , especially , et, etc, even , ever,\nevery , everybody , everyone , everything , everywhere , ex, exactly , example , except\nF\nfar, few, fifth, first, five, followed , following , follows , for, former , formerly , forth , four,\nfrom , further , furthermore\nG\nget, gets, getting , given , gives , go, goes, going , gone , got, gotten , greetings\nH\nhad, hadn’t , happens , hardly , has, hasn’t , have , haven’t , having , he, he’s, hello , help,\nhence , her, here, here’s , hereafter , hereby , herein , hereupon , hers, herself , hi, him, himself ,\nhis, hither , hopefully , how, howbeit , however\nI\ni’ d, i’ll, i’m, i’ve, ie, if, ignored , immediate , in, inasmuch , inc, indeed , indicate , indicated ,\nindicates , inner , insofar , instead , into, inward , is, isn’t, it, it’ d, it’ll, it’s, its, itself\nJ\njust\nK\nkeep , keeps , kept, know , knows , known\nL\nlast, lately , later , latter , latterly , least , less, lest, let, let’s, like, liked , likely , little , look, look‐\ning, looks , ltd\nM\nmainly , many , may, maybe , me, mean , meanwhile , merely , might , more , moreover ,\nmost , mostly , much , must , my, myself\nN\nname , namely , nd, near , nearly , necessary , need , needs , neither , never , nevertheless ,\nnew, next , nine, no, nobody , non, none , noone , nor, normally , not, nothing , novel , now,\nnowhere\nO\nobviously , of, off, often , oh, ok, okay , old, on, once , one, ones , only, onto , or, other , oth‐\ners, otherwise , ought , our, ours, ourselves , out, outside , over, overall , own\nP\nparticular , particularly , per, perhaps , placed , please , plus, possible , presumably , proba‐\nbly, provides\nQ\nque, quite , qv\n712 | Appendix C: MySQL’s FULLTEXT Stopwords"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 743,
    "text": "R\nrather , rd, re, really , reasonably , regarding , regardless , regards , relatively , respectively ,\nright\nS\nsaid, same , saw, say, saying , says, second , secondly , see, seeing , seem , seemed , seeming ,\nseems , seen, self, selves , sensible , sent, serious , seriously , seven , several , shall , she, should ,\nshouldn’t , since , six, so, some , somebody , somehow , someone , something , sometime ,\nsometimes , somewhat , somewhere , soon , sorry , specified , specify , specifying , still, sub,\nsuch , sup, sure\nT\nt’s, take, taken , tell, tends , th, than , thank , thanks , thanx , that, that’s , thats , the, their ,\ntheirs , them , themselves , then , thence , there , there’s , thereafter , thereby , therefore ,\ntherein , theres , thereupon , these , they, they’ d , they’ll , they’re , they’ve , think , third , this,\nthorough , thoroughly , those , though , three , through , throughout , thru, thus, to, together ,\ntoo, took, toward , towards , tried , tries, truly , try, trying , twice , two\nU\nun, under , unfortunately , unless , unlikely , until , unto , up, upon , us, use, used , useful ,\nuses, using , usually\nV\nvalue , various , very, via, viz, vs\nW\nwant , wants , was, wasn’t , way, we, we’ d, we’ll , we’re , we’ve , welcome , well, went , were ,\nweren’t , what , what’s , whatever , when , whence , whenever , where , where’s , whereafter ,\nwhereas , whereby , wherein , whereupon , wherever , whether , which , while , whither , who,\nwho’s , whoever , whole , whom , whose , why, will, willing , wish , with , within , without ,\nwon’t , wonder , would , would , wouldn’t\nY\nyes, yet, you, you’ d , you’ll , you’re , you’ve , your , yours , yourself , yourselves\nZ\nzero\nMySQL’s FULLTEXT Stopwords | 713"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 744,
    "text": ""
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 745,
    "text": "APPENDIX D\nMySQL Functions\nHaving functions built into MySQL substantially reduces the speed of performing\ncomplex queries, as well as their complexity. If you wish to learn more about the\navailable functions, you can visit the following URLs:\n•String functions: tinyurl.com/phpstringfuncs\n•Date and time: tinyurl.com/phpdateandtime\nBut, for easy reference, here are some of the most commonly used MySQL functions.\nString Functions\nCONCAT(str1, str2, ...)\nReturns the result of concatenating str1 , str2 , and any other parameters (or\nNULL  if any argument is NULL ). If any of the arguments are binary, then the result\nis a binary string; otherwise, the result is a nonbinary string. The code returns\nthe string \"MySQL\" :\nSELECT CONCAT('My', 'S', 'QL');\nCONCAT_WS( separator , str1, str2, ...)\nThis works in the same way as CONCAT  except it inserts a separator between the\nitems being concatenated. If the separator is NULL , the result will be NULL , but\nNULL  values can be used as other arguments, which will then be skipped. This\ncode returns the string \"Truman,Harry,S\" :\nSELECT CONCAT_WS(',', 'Truman', 'Harry', 'S');\n715"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 746,
    "text": "LEFT(str, len)\nReturns the leftmost len characters from the string str (or NULL  if any argument\nis NULL ). The following code returns the string \"Chris\" :\nSELECT LEFT('Christopher Columbus', '5');\nRIGHT(str, len)\nReturns the rightmost len characters from the string str (or NULL  if any argu‐\nment is NULL ). This code returns the string \"Columbus\" :\nSELECT RIGHT('Christopher Columbus', '8');\nMID(str, pos, len)\nReturns up to len characters from the string str starting at position pos. If len is\nomitted, then all characters up to the end of the string are returned. Y ou may use\na negative value for pos, in which case it represents the character pos places from\nthe end of the string. The first position in the string is 1. This code returns the\nstring \"stop\" :\nSELECT MID('Christopher Columbus', '5', '4');\nLENGTH(str)\nReturns the length in bytes of the string str. Note that multibyte characters\ncount as multiple bytes. If you need to know the actual number of characters in a\nstring, use the CHAR_LENGTH  function. This code returns the value 15:\nSELECT LENGTH('Mark Zuckerberg');\nLPAD(str, len, padstr)\nReturns the string str padded to a length of len characters by prepending the\nstring with padstr  characters. If str is longer than len, the string returned will\nbe truncated to len characters. The example code returns these strings:\n January\nFebruary\n   March\n   April\n     May\nNotice how all the strings have been padded to be eight characters long:\nSELECT LPAD('January', '8', ' ');\nSELECT LPAD('February', '8', ' ');\nSELECT LPAD('March', '8', ' ');\nSELECT LPAD('April', '8', ' ');\nSELECT LPAD('May', '8', ' ');\nRPAD\nThis is the same as the LPAD  function except that the padding takes place on the\nright of the returned string. This code returns the string \"Hi!!!\" :\n716 | Appendix D: MySQL Functions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 747,
    "text": "SELECT RPAD('Hi', '5', '!');\nLOCATE(substr, str, pos)\nReturns the position of the first occurrence of substr  in the string str. If the\nparameter pos is passed, the search begins at position pos. If substr  is not found\nin str, a value of 0 is returned. This code returns the values 5 and 11, because the\nfirst function call returns the first encounter of the word unit, while the second\none only starts to search at the seventh character, and so returns the second\ninstance:\nSELECT LOCATE('unit', 'Community unit');\nSELECT LOCATE('unit', 'Community unit' 7);\nLOWER(str)\nThis is the inverse of UPPER . Returns the string str with all the characters\nchanged to lowercase. This code returns the string \"queen elizabeth ii\" :\nSELECT LOWER('Queen Elizabeth II');\nUPPER(str)\nThis is the inverse of LOWER . It returns the string str with all the characters\nchanged to uppercase. This code returns the string \"I CAN'T HELP SHOUTING\" :\nSELECT UPPER(\"I can't help shouting\");\nQUOTE(str)\nReturns a quoted string that can be used as a properly escaped value in a SQL\nstatement. The returned string is enclosed in single quotes with all instances of\nsingle quotes, backslashes, the ASCII NUL character, and Control-Z preceded by a\nbackslash. If the argument str is NULL , the return value is the word NULL  without\nenclosing quotes. The example code returns the following string:\n'I\\'m hungry'\nNote how the \" symbol has been replaced with \\'.\nSELECT QUOTE(\"I'm hungry\");\nREPEAT(str, count)\nReturns a string comprising count  copies of the string str. If count  is less than 1,\nan empty string is returned. If either parameter is NULL , then NULL  is returned.\nThis code returns the strings \"Ho Ho Ho\"  and \"Merry Christmas\" :\nSELECT REPEAT('Ho ', 3), 'Merry Christmas';\nREPLACE( str, from, to)\nReturns the string str with all occurrences of the string from  replaced with the\nstring to. The search and replace is case-sensitive when searching for from . This\ncode returns the string \"Cheeseburger and Soda\" :\nMySQL Functions | 717"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 748,
    "text": "SELECT REPLACE('Cheeseburger and Fries', 'Fries', 'Soda');\nTRIM([specifier remove  FROM]  str)\nReturns the string str with all prefixes or suffixes removed. The specifier  can\nbe one of BOTH , LEADING , or TRAILING . If no specifier  is supplied, then BOTH  is\nassumed. The remove  string is optional and, if omitted, spaces are removed. This\ncode returns the strings \"No Padding\"  and \"Hello__\" :\nSELECT TRIM('   No Padding   ');\nSELECT TRIM(LEADING '_' FROM '__Hello__');\nLTRIM(str) and RTRIM( str)\nThe function RTRIM  returns the string str with any leading spaces removed,\nwhile the function RTRIM  performs the same action on the string’s tail. This code\nreturns the strings \"No Padding\"  and \"No Padding\" :\nSELECT LTRIM('   No Padding   ');\nSELECT RTRIM('   No Padding   ');\nDate Functions\nDates are an important part of most databases.  Whenever financial transactions take\nplace, the date has to be recorded, expiry dates of credit cards need to be noted for\nrepeat billing purposes, and so on. So, as you might expect, MySQL comes with a\nwide variety of functions to make handling dates a breeze.\nCURDATE()\nReturns the current date in YYYY-MM-DD or YYYMMDD format, depending\non whether the function is used in a numeric or string context. On the date May\n2, 2018, the following code returns the values 2018-05-02  and 20180502:\nSELECT CURDATE();\nSELECT CURDATE() + 0;\nDATE(expr)\nExtracts the date part of the date or a DATETIME  expression expr . This code\nreturns the value 1961-05-02 :\nSELECT DATE('1961-05-02 14:56:23');\nDATE_ADD( date, INTERVAL  expr unit )\nReturns the result of adding the expression expr  using units unit  to the date .\nThe date  argument is the starting date or DATETIME  value, and expr  may start\nwith a - symbol for negative intervals. Table D-1  shows the interval types sup‐\nported and the expected expr  values. Note the examples in this table that show\nwhere it is necessary to surround the expr  value with quotes for MySQL to cor‐\n718 | Appendix D: MySQL Functions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 749,
    "text": "rectly interpret them. If you are ever in doubt, adding the quotes will always\nwork.\nTable D-1. Expected expr values\nType Expected expr value Example\nMICROSECOND MICROSECONDS 111111\nSECOND SECONDS 11\nMINUTE MINUTES 11\nHOUR HOURS 11\nDAY DAYS 11\nWEEK WEEKS 11\nMONTH MONTHS 11\nQUARTER QUARTERS 1\nYEAR YEARS 11\nSECOND_MICROSECOND 'SECONDS.MICROSECONDS' 11.22\nMINUTE_MICROSECOND 'MINUTES.MICROSECONDS' 11.22\nMINUTE_SECOND 'MINUTES:SECONDS' '11:22'\nHOUR_MICROSECOND 'HOURS.MICROSECONDS' 11.22\nHOUR_SECOND 'HOURS:MINUTES:SECONDS' '11:22:33'\nHOUR_MINUTE 'HOURS:MINUTES' '11:22'\nDAY_MICROSECOND 'DAYS.MICROSECONDS' 11.22\nDAY_SECOND 'DAYS HOURS:MINUTES:SECONDS' '11 22:33:44'\nDAY_MINUTE 'DAYS HOURS:MINUTES' '11 22:33'\nDAY_HOUR 'DAYS HOURS' '11 22'\nYEAR_MONTH 'YEARS-MONTHS' '11-2'\nY ou can also use the DATE_SUB  function to subtract date intervals. However, it’s\nnot actually necessary for you to use the DATE_ADD  or DATE_SUB  functions, as you\ncan use date arithmetic directly in MySQL. This code:\nSELECT DATE_ADD('1975-01-01', INTERVAL 77 DAY);\nSELECT DATE_SUB('1982-07-04', INTERVAL '3-11' YEAR_MONTH);\nSELECT '2018-12-31 23:59:59' + INTERVAL 1 SECOND;\nSELECT '2000-01-01' - INTERVAL 1 SECOND;\nreturns the following values:\n1975-03-19\n1978-08-04\n2019-01-01 00:00:00\n1999-12-31 23:59:59\nMySQL Functions | 719"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 750,
    "text": "Notice how the last two commands use date arithmetic directly without recourse\nto functions.\nDATE_FORMAT( date, format)\nThis returns the date  value formatted according to the format  string. Table D-2\nshows the specifiers that can be used in the format  string. Note that the % charac‐\nter is required before each specifier, as shown. This code returns the given date\nand time as Friday May 4th 2018 03:02 AM :\nSELECT DATE_FORMAT('2018-05-04 03:02:01', '%W %M %D %Y %h:%i %p');\nTable D-2. DATE_FORMAT specifiers\nSpecifier Description\n%a Abbreviated weekday name (Sun–Sat)\n%b Abbreviated month name (Jan–Dec)\n%c Month, numeric (0–12)\n%D Day of the month with English suffix  (0th, 1st, 2nd, 3rd, ...)\n%d Day of the month, numeric (00–31)\n%e Day of the month, numeric (0–31)\n%f Microseconds (000000–999999)\n%H Hour (00–23)\n%h Hour (01–12)\n%I Hour (01–12)\n%i Minutes, numeric (00–59)\n%j Day of year (001–366)\n%k Hour (0–23)\n%l Hour (1–12)\n%M Month name (January–December)\n%m Month, numeric (00–12)\n%p AM or PM\n%r Time, 12–hour (hh:mm:ss followed by AM or PM)\n%S Seconds (00–59)\n%s Seconds (00–59)\n%T Time, 24-hour (hh:mm:ss)\n%U Week (00–53), where Sunday is the first  day of the week\n%u Week (00–53), where Monday is the first  day of the week\n%V Week (01–53), where Sunday is the first  day of the week; used with %X\n%v Week (01–53), where Monday is the first  day of the week; used with %x\n%W Weekday name (Sunday–Saturday)\n720 | Appendix D: MySQL Functions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 751,
    "text": "Specifier Description\n%w Day of the week (0=Sunday–6=Saturday)\n%X Year for the week where Sunday is the first  day of the week, numeric, four digits; used with %V\n%x Year for the week, where Monday is the first  day of the week, numeric, four digits; used with %v\n%Y Year, numeric, four digits\n%y Year, numeric, two digits\n%% A literal % character\nDAY(date)\nReturns the day of the month for date , in the range 1 to 31 or 0 for dates that\nhave a zero day part such as 0000-00-00 or 2018-00-00. Y ou can also use the\nfunction DAYOFMONTH  to return the same value. This code returns the value 3:\nSELECT DAY('2018-02-03');\nDAYNAME( date)\nReturns the name of the weekday for the date . This code returns the string \"Sat\nurday\" :\nSELECT DAYNAME('2018-02-03');\nDAYOFWEEK( date)\nReturns the weekday index for date  between 1 for Sunday through 7 for Satur‐\nday. This code returns the value 7:\nSELECT DAYOFWEEK('2018-02-03');\nDAYOFYEAR( date)\nReturns the day of the year for date  in the range 1 to 366. This code returns the\nvalue 34:\nSELECT DAYOFYEAR('2018-02-03');\nLAST_DAY( date)\nReturns the last day of the month for the given DATETIME  value date . If the argu‐\nment is invalid, it returns NULL . This code:\nSELECT LAST_DAY('2018-02-03');\nSELECT LAST_DAY('2018-03-11');\nSELECT LAST_DAY('2018-04-26');\nreturns the following values:\n2018-02-28\n2018-03-31\n2018-04-30\nAs you’ d expect, it correctly returns the 28th day of February, the 31st of March,\nand the 30th of April 2011.\nMySQL Functions | 721"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 752,
    "text": "MAKEDATE( year, dayofyear )\nReturns a date given year  and dayofyear  values. If dayofyear  is 0, the result is\nNULL . This code returns the date 2016-10-01 :\nSELECT MAKEDATE(2018,274);\nMONTH(date)\nReturns the month for date  in the range 1 through 12 for January through\nDecember. Dates that have a zero month part, such as 0000-00-00 or 2016-00-00,\nreturn 0. This code returns the value 7:\nSELECT MONTH('2018-07-11');\nMONTHNAME( date)\nReturns the full name of the month for date . This code returns the string \"July\" :\nSELECT MONTHNAME('2018-07-11');\nSYSDATE()\nReturns the current date and time as a value in either YYY-MM-DD HH:MM:SS\nor YYYMMDDHHMMSS format, depending on whether the function is used in\na string or numeric context. The function NOW works in a similar manner, except\nthat it returns the time and date only at the start of the current statement,\nwhereas SYSDATE  returns the time and date at the exact moment the function\nitself is called. On December 19, 2018, at 19:11:13, this code returns the values\n2018-12-19 19:11:13  and 20181219191113 .\nSELECT SYSDATE();\nSELECT SYSDATE() + 0;\nYEAR(date)\nReturns the year for date  in the range 1000 to 9999, or 0 for the zero date. This\ncode returns the year 1999 .\nSELECT YEAR('1999-08-07');\nWEEK(date  [, mode])\nReturns the week number for date . If passed the optional mode  parameter, the\nweek number returned will be modified according to Table D-3 . Y ou can also use\nthe function WEEKOFYEAR , which is equivalent to using the WEEK  function with a\nmode  of 3. This code returns the week number 14.\nSELECT WEEK('2018-04-04', 1);\nTable D-3. The modes supported by the WEEK function\nMode First day of week Range Where week 1 is the first  week...\n0 Sunday 0–53 with a Sunday in this year\n1 Monday 0–53 with more than three days this year\n722 | Appendix D: MySQL Functions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 753,
    "text": "Mode First day of week Range Where week 1 is the first  week...\n2 Sunday 1–53 with a Sunday in this year\n3 Monday 1–53 with more than three days this year\n4 Sunday 0–53 with more than three days this year\n5 Monday 0–53 with a Monday in this year\n6 Sunday 1–53 with more than three days this year\n7 Monday 1–53 with a Monday in this year\nWEEKDAY( date)\nReturns the weekday index for date  where 0=Monday through 6=Sunday. This\ncode returns the value 2.\nSELECT WEEKDAY('2018-04-04');\nTime Functions\nSometimes  you need to work with the time, rather than the date, and MySQL pro‐\nvides plenty of functions for you to do so.\nCURTIME()\nReturns the current time as a value in the format HH:MM:SS or\nHHMMSS.uuuuuu, depending on whether the function is used in a string or\nnumeric context. The value is expressed using the current time zone. When the\ncurrent time is 11:56:23, this code returns the values 11:56:23  and\n115623.000000 .\nSELECT CURTIME();\nSELECT CURTIME() + 0;\nHOUR(time)\nReturns the hour for time . This code returns the value 11.\nSELECT HOUR('11:56:23');\nMINUTE(time)\nReturns the minute for time . This code returns the value 56.\nSELECT MINUTE('11:56:23');\nSECOND(time)\nReturns the second for time . This code returns the value 23.\nSELECT SECOND('11:56:23');\nMAKETIME( hour, minute, second)\nReturns a time value calculated from the hour , minute , and second  arguments.\nThis code returns the time 11:56:23 .\nMySQL Functions | 723"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 754,
    "text": "SELECT MAKETIME(11, 56, 23);\nTIMEDIFF( expr1, expr2)\nReturns the difference between expr1  and expr2  (expr1  – expr2 ) as a time value.\nBoth expr1  and expr2  must be TIME  or DATETIME  expressions of the same type.\nThis code returns the value 01:37:38 .\nSELECT TIMEDIFF('2000-01-01 01:02:03', '1999-12-31 23:24:25');\nUNIX_TIMESTAMP([ date])\nIf called without the optional date  argument, this function returns the number of\nseconds since 1970-01-01 00:00:00 UTC as an unsigned integer. If the date\nparameter is passed, then the value returned is the number of seconds since the\n1970 start date until the given date. This command will not return the same value\nfor everyone because the date given to it is interpreted as a local time (given in\nthe user’s time zone). This code will return the value 946684800  (the number of\nseconds up to the start of the new millennium) followed by a TIMESTAMP  repre‐\nsenting the current Unix time at the moment you run it.\nSELECT UNIX_TIMESTAMP('2000-01-01');\nSELECT UNIX_TIMESTAMP();\nFROM_UNIXTIME( unix_timestamp  [, format])\nReturns the unix_timestamp  parameter as either a string in YYY-MM-DD\nHH:MM:SS or YYYMMDDHHMMSS.uuuuuu format, depending on whether\nthe function is used in a string or numeric context. If the optional format  param‐\neter is provided, the result is formatted according to the specifiers in Table D-2 .\nThe precise value returned will depend on the user’s local time. This code returns\nthe strings \"2000-01-01 00:00:00\"  and \"Saturday January 1st 2000 12:00\nAM\".\nSELECT FROM_UNIXTIME(946684800);\nSELECT FROM_UNIXTIME(946684800, '%W %M %D %Y %h:%i %p');\n724 | Appendix D: MySQL Functions"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 755,
    "text": "APPENDIX E\njQuery Selectors, Objects, and Methods\nChapter 21  gives you a good grounding in using the jQuery JavaScript Library. To\nhelp get you started with using jQuery to the best effect, here’s a comprehensive list of\nthe selectors, objects, and methods it uses, a number of which there wasn’t room to\nintroduce in this book, but you are ready for them, because you should now know\nenough to be able to use them correctly.\nPlease bear in mind, though, that sometimes new features are added, bugs are fixed,\nand other features can become deprecated or removed. So you can keep up-to-date\nwith the latest developments, information on deprecated or removed features (not\ndetailed here), and newer releases of jQuery, at jquery.com  and api.jquery.com .\njQuery Selectors\n('*')\nSelects all elements.\n('element')\nSelects all element s with the given tag name.\n('#id')\nSelects a single element with the given id attribute.\n('.class')\nSelects all elements with the given class .\n('selector1, selector2, selectorN')\nSelects the combined results of all the specified selectors .\n('ancestor descendant')\nSelects all elements that are descendant s of a given ancestor .\n725"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 756,
    "text": "('prev + next')\nSelects all next elements matching next  that are immediately preceded by a sibling\nprev .\n('prev ~ siblings')\nSelects all sibling elements that follow after the prev  element, have the same parent,\nand match the filtering siblings  selector.\n('parent > child')\nSelects all direct child elements specified by child  of elements specified by parent .\n[name]\nSelects elements that have the specified attribute name , with any value.\n[name|='value']\nSelects elements that have the specified attribute name  with a value  either equal to a\ngiven string or starting with that string followed by a hyphen ( -).\n[name*='value']\nSelects elements that have the specified attribute name  with a value  containing a\ngiven substring.\n[name~='value']\nSelects elements that have the specified attribute name  with a value  containing a\ngiven word, delimited by spaces.\n[name$='value']\nSelects elements that have the specified attribute name  with a value  ending exactly\nwith a given string. The comparison is case-sensitive.\n[name='value']\nSelects elements that have the specified attribute name  with a value  exactly equal to a\ncertain value.\n[name!='value']\nSelects elements that either don’t have the specified attribute name , or do have the\nspecified attribute but not with a certain value .\n[name^='value']\nSelects elements that have the specified attribute name  with a value  beginning exactly\nwith a given string.\n[name='value'][name2='value2']\nMatches elements that match all of the specified attribute filters.\n:animated\nSelects all elements that are in the progress of an animation at the time the selector is\nrun.\n726 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 757,
    "text": ":button\nSelects all button elements and elements of type button .\n:checkbox\nSelects all elements of type checkbox .\n:checked\nMatches all elements that are checked  or selected .\n:contains( text)\nSelects all elements that contain the specified text .\n:disabled\nSelects all elements that are disabled.\n:empty\nSelects all elements that have no children (including text nodes).\n:enabled\nSelects all elements that are enabled.\n:eq(n)\nSelects the element at index n within the matched set.\n:even\nSelects even elements, zero-indexed. See also odd.\n:file\nSelects all elements of type file.\n:first-child\nSelects all elements that are the first child of their parent.\n:first-of-type\nSelects all elements that are the first among siblings of the same element name.\n:first\nSelects the first matched element.\n:gt(index)\nSelects all elements at an index greater than index  within the matched set.\n:has(selector )\nSelects elements that contain at least one element that matches the specified selec\ntor.\n:image\nSelects all elements of type image.\njQuery Selectors, Objects, and Methods | 727"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 758,
    "text": ":header\nSelects all elements that are headers, like h1, h2, h3, and so on.\n:hidden\nSelects all elements that are hidden.\n:input\nSelects all inpu t, textarea , select , and button  elements.\n:lang(language )\nSelects all elements of the specified language .\n:last-child\nSelects all elements that are the last child of their parent.\n:last-of-type\nSelects all elements that are the last among siblings of the same element name.\n:last\nSelects the last matched element.\n:lt(index)\nSelects all elements at an index less than index  within the matched set.\n:not(selector )\nSelects all elements that do not match the given selector .\n:nth-child( n)\nSelects all elements that are the nth child of their parent.\n:nth-last-child( n)\nSelects all elements that are the nth child of their parent, counting from the last\nelement to the first.\n:nth-last-of-type( n)\nSelects all elements that are the nth child of their parent, counting from the last ele‐\nment to the first.\n:nth-of-type( n)\nSelects all elements that are the nth child of their parent in relation to siblings with\nthe same element name.\n:odd\nSelects odd elements, zero-indexed. See also: even .\n:only-child\nSelects all elements that are the only child of their parent.\n728 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 759,
    "text": ":only-of-type\nSelects all elements that have no siblings with the same element name.\n:parent\nSelects all elements that have at least one child node (either an element or text).\n:password\nSelects all elements of type password .\n:radio\nSelects all elements of type radio .\n:reset\nSelects all elements of type reset .\n:root\nSelects the element that is the root of the document.\n:selected\nSelects all elements that are selected.\n:submit\nSelects all elements of type submit .\n:target\nSelects the target element indicated by the fragment identifier of the document’s URI.\n:text\nSelects all elements of type text .\n:visible\nSelects all elements that are visible.\njQuery Objects\nevent.currentTarget\nThe current DOM element within the event-bubbling phase.\nevent.data\nAn optional object of data passed to an event method when the current executing\nhandler is bound.\nevent.delegateTarget\nThe element where the currently called jQuery event handler was attached.\nevent.metaKey\nIndicates whether the META key was pressed when the event fired.\njQuery Selectors, Objects, and Methods | 729"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 760,
    "text": "event.namespace\nThe namespace specified when the event was triggered.\nevent.pageX\nThe mouse position relative to the left edge of the document.\nevent.pageY\nThe mouse position relative to the top edge of the document.\nevent.relatedTarget\nThe other DOM element involved in the event, if any.\nevent.result\nThe last value returned by an event handler that was triggered by this event, unless\nthe value was undefined.\nevent.target\nThe DOM element that initiated the event.\nevent.timeStamp\nThe difference in milliseconds between the time the browser created the event and\nJanuary 1, 1970.\nevent.type\nDescribes the nature of the event.\nevent.which\nFor key or mouse events, this property indicates the specific key or button that was\npressed.\njquery\nA string containing the jQuery version number.\nlength\nThe number of elements in the jQuery object.\njQuery.cssHooks\nHooks directly into jQuery to override how particular CSS properties are retrieved or\nset, normalize CSS property naming, or create custom properties.\njQuery.fx.interval\nThe rate (in milliseconds) at which animations fire.\njQuery.fx.off\nGlobally disables all animations.\n730 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 761,
    "text": "jQuery Methods\n$\nReturns a collection  of matched elements either found in the DOM based on passed\nargument(s) or created by passing an HTML string.\nadd\nAdds elements to the set of matched elements.\naddBack\nAdds the previous set of elements on the stack to the current set, optionally filtered\nby a selector.\naddClass\nAdds the specified class(es) to each of the set of matched elements.\nafter\nInserts content, specified by the parameter, after each element in the set of matched\nelements.\najaxComplete\nRegisters a handler to be called when Ajax requests complete.\najaxError\nRegisters a handler to be called when Ajax requests complete with an error.\najaxSend\nAttaches a function to be executed before an Ajax request is sent.\najaxStart\nRegisters a handler to be called when the first Ajax request begins.\najaxStop\nRegisters a handler to be called when all Ajax requests have completed.\najaxSuccess\nAttaches a function to be executed whenever an Ajax request completes successfully.\nanimate\nPerforms a custom animation of a set of CSS properties.\nappend\nInserts content, specified by the parameter, to the end of each element in the set of\nmatched elements.\nappendTo\nInserts every element in the set of matched elements to the end of the target.\njQuery Selectors, Objects, and Methods | 731"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 762,
    "text": "attr\nGets the value of an attribute for the first element in the set of matched elements or\nsets one or more attributes for every matched element.\nbefore\nInserts content, specified by the parameter, before each element in the set of matched\nelements.\nbind\nAttaches a handler to an event for the elements.\nblur\nBinds an event handler to the blur  JavaScript event, or triggers that event on an ele‐\nment.\nchange\nBinds an event handler to the change  JavaScript event, or triggers that event on an\nelement.\nchildren\nGets the children of each element in the set of matched elements, optionally filtered\nby a selector.\nclearQueue\nRemoves from the queue all items that have not yet been run.\nclick\nBinds an event handler to the click  JavaScript event, or triggers that event on an ele‐\nment.\nclone\nCreates a deep copy of the set of matched elements.\nclosest\nFor each element in the set, gets the first element that matches the selector by testing\nthe element itself and traversing up through its ancestors in the DOM tree.\ncontents\nGets the children of each element in the set of matched elements, including text and\ncomment nodes.\ncss\nGets the value of a style property for the first element in the set of matched elements\nor sets one or more CSS properties for every matched element.\ndata\nStores arbitrary data associated with the matched elements or returns the value at the\nnamed data store for the first element in the set of matched elements.\n732 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 763,
    "text": "dblclick\nBinds an event handler to the dblclick  JavaScript event, or triggers that event on an\nelement.\ncallbacks.add\nAdds a callback or a collection of callbacks to a callback list.\ncallbacks.disable\nDisables a callback list from doing anything more.\ncallbacks.disabled\nDetermines if the callback list has been disabled.\ncallbacks.empty\nRemoves all of the callbacks from a list.\ncallbacks.fire\nCalls all of the callbacks with the given arguments.\ncallbacks.fired\nDetermines if the callbacks have already been called at least once.\ncallbacks.fireWith\nCalls all callbacks in a list with the given context and arguments.\ncallbacks.has\nDetermines whether a supplied callback is in a list.\ncallbacks.lock\nLocks a callback list in its current state.\ncallbacks.locked\nDetermines if the callback list has been locked.\ncallbacks.remove\nRemoves a callback or a collection of callbacks from a callback list.\ndeferred.always\nAdds handlers to be called when the Deferred  object is either resolved or rejected.\ndeferred.done\nAdds handlers to be called when the Deferred  object is resolved.\ndeferred.fail\nAdds handlers to be called when the Deferred  object is rejected.\ndeferred.notify\nCalls progressCallbacks  on a Deferred  object with the given arguments.\njQuery Selectors, Objects, and Methods | 733"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 764,
    "text": "deferred.notifyWith\nCalls the progressCallbacks  on a Deferred  object with the given context and argu‐\nments.\ndeferred.progress\nAdds handlers to be called when the Deferred  object generates progress notifica‐\ntions.\ndeferred.promise\nReturns a Deferred ’s Promise  object.\ndeferred.reject\nRejects a Deferred  object and calls any failCallbacks  with the given arguments.\ndeferred.rejectWith\nRejects a Deferred  object and calls any failCallbacks  with the given context and\narguments.\ndeferred.resolve\nResolves a Deferred  object and calls any doneCallbacks  with the given arguments.\ndeferred.resolveWith\nResolves a Deferred  object and calls any doneCallbacks  with the given context and\narguments.\ndeferred.state\nDetermines the current state of a Deferred  object.\ndeferred.then\nAdds handlers to be called when the Deferred  object is resolved, rejected, or still in\nprogress.\ndelay\nSets a timer to delay execution of subsequent items in the queue.\ndelegate\nAttaches a handler to one or more events for all elements that match the selector, now\nor in the future, based on a specific set of root elements.\ndequeue\nExecutes the next function on the queue for the matched elements.\ndetach\nRemoves the set of matched elements from the DOM.\neach\nIterates over a jQuery object, executing a function for each matched element.\n734 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 765,
    "text": "empty\nRemoves all child nodes of the set of matched elements from the DOM.\nend\nEnds the most recent filtering operation in the current chain and returns the set of\nmatched elements to its previous state.\neq\nReduces the set of matched elements to the one at the specified index.\nevent.isDefaultPrevented\nReturns whether preventDefault  was ever called on this event object.\nevent.isImmediatePropagationStopped\nReturns whether stopImmediatePropagation  was ever called on this event object.\nevent.isPropagationStopped\nReturns whether stopPropagation  was ever called on this event object.\nevent.preventDefault\nIf this method is called, the default action of the event will not be triggered.\nevent.stopImmediatePropagation\nKeeps the rest of the handlers from being executed and prevents the event from bub‐\nbling up the DOM tree.\nevent.stopPropagation\nPrevents the event from bubbling up the DOM tree, preventing any parent handlers\nfrom being notified of the event.\nfadeIn\nDisplays the matched elements by fading them to opaque.\nfadeOut\nHides the matched elements by fading them to transparent.\nfadeTo\nAdjusts the opacity of the matched elements.\nfadeToggle\nDisplays or hides the matched elements by animating their opacity.\nfilter\nReduces the set of matched elements to those that match the selector or pass the\nfunction’s test.\nfind\nGets the descendants of each element in the current set of matched elements, filtered\nby a selector, jQuery object, or element.\njQuery Selectors, Objects, and Methods | 735"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 766,
    "text": "finish\nStops the currently running animation, removes all queued animations, and com‐\npletes all animations for the matched elements.\nfirst\nReduces the set of matched elements to the first in the set.\nfocus\nBinds an event handler to the focus  JavaScript event, or triggers that event on an ele‐\nment. Selects element if it is currently focused.\nfocusin\nBinds an event handler to the focusin  event.\nget\nRetrieves the DOM elements matched by the jQuery object.\nhas\nReduces the set of matched elements to those that have a descendant that matches the\nselector or DOM element.\nhasClass\nDetermines whether any matched elements are assigned the given class.\nheight\nGets the current computed height for the first element in the set of matched elements\nor sets the height of every matched element.\nhide\nHides the matched elements.\nhover\nBinds one or two handlers to the matched elements, to be executed when the mouse\npointer enters and leaves the elements.\nhtml\nGets the HTML contents of the first element in the set of matched elements or sets\nthe HTML contents of every matched element.\nindex\nSearches for a given element from among the matched elements.\ninnerHeight\nGets the current computed height for the first element in the set of matched ele‐\nments, including padding but not border.\n736 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 767,
    "text": "innerWidth\nGets the current computed inner width (including padding but not border) for the\nfirst element in the set of matched elements or sets the inner width of every matched\nelement.\ninsertAfter\nInserts every element in the set of matched elements after the target.\ninsertBefore\nInserts every element in the set of matched elements before the target.\nis\nChecks the current matched set of elements against a selector, element, or jQuery\nobject and returns true  if at least one of these elements matches the given arguments.\njQuery\nReturns a collection of matched elements either found in the DOM based on passed\nargument(s) or created by passing an HTML string.\njQuery.ajax\nPerforms an asynchronous HTTP (Ajax) request.\njQuery.ajaxPrefilter\nHandles custom Ajax options or modifies existing options before each request is sent\nand before they are processed by ajax .\njQuery.ajaxSetup\nSets default values for future Ajax requests. Its use is not recommended.\njQuery.ajaxTransport\nCreates an object that handles the actual transmission of Ajax data.\njQuery.Callbacks\nA multipurpose callback list object that provides a powerful way to manage callback\nlists.\njQuery.contains\nChecks to see if a DOM element is a descendant of another DOM element.\njQuery.cssHooks\nHooks directly into jQuery to override how particular CSS properties are retrieved or\nset, normalize CSS property naming, or create custom properties.\njQuery.data\nStores arbitrary data associated with the specified element and/or returns the value\nthat was set.\njQuery Selectors, Objects, and Methods | 737"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 768,
    "text": "jQuery.Deferred\nA constructor function that returns a chainable utility object with methods to register\nmultiple callbacks into callback queues, invoke callback queues, and relay the success\nor failure state of any synchronous or asynchronous function.\njQuery.dequeue\nExecutes the next function on the queue for the matched element.\njQuery.each\nA generic iterator function, which can be used to seamlessly iterate over both objects\nand arrays. Arrays and array-like objects with a length property (such as a function’s\narguments object) are iterated by numeric index, from 0 to length -1. Other objects\nare iterated via their named properties.\njQuery.error\nTakes a string and throws an exception containing it.\njQuery.extend\nMerges the contents of two or more objects together into the first object.\njQuery.fn.extend\nMerges the contents of an object onto the jQuery prototype to provide new jQuery\ninstance methods.\njQuery.get\nLoads data from the server using an HTTP Get request.\njQuery.getJSON\nLoads JSON-encoded data from the server using a Get HTTP request.\njQuery.getScript\nLoads a JavaScript file from the server using a Get HTTP request, and then executes\nit.\njQuery.globalEval\nExecutes some JavaScript code globally.\njQuery.grep\nFinds the elements of an array that satisfy a filter function. The original array is not\naffected.\njQuery.hasData\nDetermines whether an element has jQuery data associated with it.\njQuery.holdReady\nHolds or releases the execution of jQuery’s ready  event.\n738 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 769,
    "text": "jQuery.inArray\nSearches for a specified value within an array and returns its index (or -1 if not\nfound).\njQuery.isArray\nDetermines whether the argument is an array.\njQuery.isEmptyObject\nChecks to see if an object is empty (contains no enumerable properties).\njQuery.isFunction\nDetermines if the argument passed is a JavaScript function object.\njQuery.isNumeric\nDetermines whether its argument is a number.\njQuery.isPlainObject\nChecks to see if an object is a plain object (created using {} or new Object ).\njQuery.isWindow\nDetermines whether the argument is a window.\njQuery.isXMLDoc\nChecks to see if a DOM node is within an XML document (or is an XML document).\njQuery.makeArray\nConverts an array-like object into a true JavaScript array.\njQuery.map\nTranslates all items in an array or object to a new array of items.\njQuery.merge\nMerges the contents of two arrays together into the first array.\njQuery.noConflict\nRelinquishes jQuery’s control of the $ variable name.\njQuery.noop\nAn empty function.\njQuery.now\nReturns a number representing the current time.\njQuery.param\nCreates a serialized representation of an array or object, suitable for use in a URL\nquery string or Ajax request.\njQuery.parseHTML\nParses a string into an array of DOM nodes.\njQuery Selectors, Objects, and Methods | 739"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 770,
    "text": "jQuery.parseJSON\nTakes a well-formed JSON string and returns the resulting JavaScript object.\njQuery.parseXML\nParses a string into an XML document.\njQuery.post\nLoads data from the server using an HTTP POST request.\njQuery.queue\nShows or manipulates the queue of functions to be executed on the matched element.\njQuery.removeData\nRemoves a previously stored piece of data.\njQuery.trim\nRemoves the whitespace from the beginning and end of a string.\njQuery.type\nDetermines the internal JavaScript class of an object.\njQuery.unique\nSorts an array of DOM elements, in place, with the duplicates removed. This works\nonly on arrays of DOM elements, not strings or numbers.\njQuery.when\nProvides a way to execute callback functions based on one or more objects, usually\nDeferred  objects that represent asynchronous events.\nkeydown\nBinds an event handler to the keydown  JavaScript event, or triggers that event on an\nelement.\nkeypress\nBinds an event handler to the keypress  JavaScript event, or triggers that event on an\nelement.\nkeyup\nBinds an event handler to the keyup  JavaScript event, or triggers that event on an ele‐\nment.\nlast\nReduces the set of matched elements to the final one in the set.\nload\nLoads data from the server and places the returned HTML into the matched element.\n740 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 771,
    "text": "map\nPasses each element in the current matched set through a function, producing a new\njQuery object containing the return values.\nmousedown\nBinds an event handler to the mousedown  JavaScript event, or triggers that event on an\nelement.\nmouseenter\nBinds an event handler to be fired when the mouse enters an element, or triggers that\nhandler on an element.\nmouseleave\nBinds an event handler to be fired when the mouse leaves an element, or triggers that\nhandler on an element.\nmousemove\nBinds an event handler to the mousemove  JavaScript event, or triggers that event on an\nelement.\nmouseout\nBinds an event handler to the mouseout  JavaScript event, or triggers that event on an\nelement.\nmouseover\nBinds an event handler to the mouseover  JavaScript event, or triggers that event on an\nelement.\nmouseup\nBinds an event handler to the mouseup  JavaScript event, or triggers that event on an\nelement.\nnext\nGets the immediately following sibling of each element in the set of matched ele‐\nments. If a selector is provided, it retrieves the next sibling only if it matches that\nselector.\nnextAll\nGets all following siblings of each element in the set of matched elements, optionally\nfiltered by a selector.\nnextUntil\nGets all following siblings of each element up to but not including the element\nmatched by the selector, DOM node, or jQuery object passed.\noff\nRemoves an event handler.\njQuery Selectors, Objects, and Methods | 741"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 772,
    "text": "offset\nGets the current coordinates of the first element, or sets the coordinates of every ele‐\nment, in the set of matched elements, relative to the document.\noffsetParent\nGets the closest ancestor element that is positioned.\non\nAttaches an event handler function for one or more events to the selected elements.\none\nAttaches a handler to an event for the elements. The handler is executed at most once\nper element per event type.\nouterHeight\nGets the current computed height for the first element in the set of matched ele‐\nments, including padding, border, and optionally margin. Returns a number (without\npx) representation of the value or null  if called on an empty set of elements.\nouterWidth\nGets the current computed width for the first element in the set of matched elements,\nincluding padding and border.\nparent\nGets the parent of each element in the current set of matched elements, optionally\nfiltered by a selector.\nparents\nGets the ancestors of each element in the current set of matched elements, optionally\nfiltered by a selector.\nparentsUntil\nGets the ancestors of each element in the current set of matched elements, up to but\nnot including the element matched by the selector, DOM node, or jQuery object.\nposition\nGets the current coordinates of the first element in the set of matched elements, rela‐\ntive to the offset parent.\nprepend\nInserts content, specified by the parameter, to the beginning of each element in the\nset of matched elements.\nprependTo\nInserts every element in the set of matched elements to the beginning of the target.\nprev\nGets the immediately preceding sibling of each element in the set of matched ele‐\nments, optionally filtered by a selector.\n742 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 773,
    "text": "prevAll\nGets all preceding siblings of each element in the set of matched elements, optionally\nfiltered by a selector.\nprevUntil\nGets all preceding siblings of each element up to but not including the element\nmatched by the selector, DOM node, or jQuery object.\npromise\nReturns a Promise  object to observe when all actions of a certain type bound to the\ncollection, queued or not, have finished.\nprop\nGets the value of a property for the first element in the set of matched elements or\nsets one or more properties for every matched element.\npushStack\nAdds a collection of DOM elements onto the jQuery stack.\nqueue\nShows or manipulates the queue of functions to be executed on the matched ele‐\nments.\nready\nSpecifies a function to execute when the DOM is fully loaded.\nremove\nRemoves the set of matched elements from the DOM.\nremoveAttr\nRemoves an attribute from each element in the set of matched elements.\nremoveClass\nRemoves a single class, multiple classes, or all classes from each element in the set of\nmatched elements.\nremoveData\nRemoves a previously stored piece of data.\nremoveProp\nRemoves a property for the set of matched elements.\nreplaceAll\nReplaces each target element with the set of matched elements.\nreplaceWith\nReplaces each element in the set of matched elements with the provided new content\nand returns the set of elements that was removed.\njQuery Selectors, Objects, and Methods | 743"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 774,
    "text": "resize\nBinds an event handler to the resize  JavaScript event, or triggers that event on an\nelement.\nscroll\nBinds an event handler to the scroll  JavaScript event, or trigger that event on an ele‐\nment.\nscrollLeft\nGets the current horizontal position of the scroll bar for the first element in the set of\nmatched elements or sets the horizontal position of the scroll bar for every matched\nelement.\nscrollTop\nGets the current vertical position of the scroll bar for the first element in the set of\nmatched elements or sets the vertical position of the scroll bar for every matched ele‐\nment.\nselect\nBinds an event handler to the select  JavaScript event, or triggers that event on an\nelement.\nserialize\nEncodes a set of form elements as a string for submission.\nserializeArray\nEncodes a set of form elements as an array of names and values.\nshow\nDisplays the matched elements.\nsiblings\nGets the siblings of each element in the set of matched elements, optionally filtered\nby a selector.\nslice\nReduces the set of matched elements to a subset specified by a range of indices.\nslideDown\nDisplays the matched elements with a sliding motion.\nslideToggle\nDisplays or hides the matched elements with a sliding motion.\nslideUp\nHides the matched elements with a sliding motion.\nstop\nStops the currently running animation on the matched elements.\n744 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 775,
    "text": "submit\nBinds an event handler to the submit  JavaScript event, or triggers that event on an\nelement.\ntext\nGets the combined text contents of each element in the set of matched elements,\nincluding their descendants, or sets the text contents of the matched elements.\ntoArray\nRetrieves all the elements contained in the jQuery set, as an array.\ntoggle\nDisplays or hides the matched elements.\ntoggleClass\nAdds or removes one or more classes from each element in the set of matched ele‐\nments, depending on either the class’s presence or the value of the switch argument.\ntrigger\nExecutes all handlers and behaviors attached to the matched elements for the given\nevent type.\ntriggerHandler\nExecutes all handlers attached to an element for an event.\nunbind\nRemoves a previously attached event handler from the elements.\nundelegate\nRemoves a handler from the event for all elements that match the current selector,\nbased upon a specific set of root elements.\nunwrap\nRemoves the parents of the set of matched elements from the DOM, leaving the\nmatched elements in their place.\nval\nGets the current value of the first element in the set of matched elements or sets the\nvalue of every matched element.\nwidth\nGets the current computed width for the first element in the set of matched elements\nor sets the width of every matched element.\nwrap\nWraps an HTML structure around each element in the set of matched elements.\njQuery Selectors, Objects, and Methods | 745"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 776,
    "text": "wrapAll\nWraps an HTML structure around all elements in the set of matched elements.\nwrapInner\nWraps an HTML structure around the content of each element in the set of matched\nelements.\n746 | Appendix E: jQuery Selectors, Objects, and Methods"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 777,
    "text": "Index\nSymbols\n! (Not) logical operator\nin JavaScript, 319, 334, 336\nin PHP, 47, 68, 73, 89\n!= (inequality) operator\nin JavaScript, 319, 334\nin PHP, 46, 68, 68, 71\n!== (not identical) operator\nin JavaScript, 319, 334\nin PHP, 68, 71\n\" (quotation marks, double)\nenclosing multiple-line commands in PHP,\n50\nenclosing strings in JavaScript, 316\nenclosing strings in PHP, 40, 49\nescaping in JavaScript, 320\nin PHP heredocs, 51\n# (pound sign), prefacing CSS IDs, 415\n$ (dollar sign)\n$_ in PHP superglobal variable names, 61\nend-of-line matching in regular expressions,\n383\nin JavaScript variables names, 316\npreceding variables in PHP, 39, 113\n$() function\naccessing jQuery, 504\n$() function (JavaScript), 327\n$= (attribute selector) operator in CSS, 452\n$this variable (PHP), 113\n$_FILES array (PHP), 156, 157\n$_GET and $_POST arrays (PHP), 134, 243\n$_POST array (PHP)\nsecurity concerns, 277\n% (modulus) operatorin JavaScript, 318, 334\nin PHP, 45, 68\n% (percent sign)\nbefore MySQL keywords, 195\nprefacing printf conversion specifiers, 139,\n142\n%= (modulus and assignment) operator\nin JavaScript, 318, 334\nin PHP, 45, 68\n& (ampersand), prefacing PHP variables, 100\n& (And) bitwise operator\nin JavaScript, 334\nin PHP, 68\n&& (And) logical operator\nin JavaScript, 319, 334, 336\nin PHP, 47, 68\n&= (bitwise AND and assignment) operator\nin Javascript, 334\nin PHP, 68\n' (quotation marks, single)\nescaping in JavaScript, 320\nin JavaScript strings, 316\nin PHP heredocs, 51\nin PHP strings, 40, 49\n( ) (parentheses)\ncall operator in JavaScript, 334\ncasting operators in PHP, 69, 91\ngrouping in regular expressions, 379\nin functions, 96\nnesting sub-expressions in PHP to force\norder of evaluation, 70\noperator precedence and, 67\nprecedence in PHP, 68\n* (asterisk)\n747"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 778,
    "text": "parameter in MySQL commands, 192\nregular expression metacharacter, 378\nwildcard or universal selector in CSS, 424,\n444\n* (multiplication) operator\nin JavaScript, 318, 334\nin PHP, 45, 67, 68\n*= (attribute selector) operator in CSS, 453\n*= (multiplication and assignment) operator\nin JavaScript, 318\nin PHP, 68\n+ (addition) operator\nin JavaScript, 318, 334\nin PHP, 45, 67, 68\n+ (plus sign)\nregular expression metacharacter, 378, 382\nunary operator in JavaScript, 334\n+ (string concatenation) operator in JavaScript,\n320\n++ (increment) operator\nin JavaScript, 318, 320, 334\nin PHP, 45, 48, 68\n+= (addition and assignment) operator\nin JavaScript, 318, 320, 334\nin jQuery, 528\nin PHP, 45, 68\n, (comma)\ncomma operator in JavaScript, 334\nwithin for loop parameters in PHP, 88\n- (hyphen), indicating a range in regular\nexpressions, 380\n- (minus sign)\nunary operator in JavaScript, 334\nunary operator in PHP, 68\n- (subtraction) operator\nin JavaScript, 318, 334\nin PHP, 45, 67, 68\n-- (decrement) operator\nin JavaScript, 318, 320, 334\nin PHP, 45, 48, 68\n-= (subtraction and assignment) operator\nin JavaScript, 318, 320, 334\nin jQuery, 528\nin PHP, 45, 68\n-> (object) operator in PHP, 113, 235\n. (concatenation) operator in PHP, 49, 68\n. (dot)\nin regular expressions, 378\nmatching with regular expressions, 379member operator in JavaScript, 324, 334\nprefacing CSS class statements, 416\n.= (concatenation assignment) operator (PHP),\n45, 49, 68\n/ (division) operator\nin JavaScript, 318, 334\nin PHP, 45, 67, 68\n/ (slash)\n/* */ in CSS comments, 417\n/* and */ enclosing multiline comments in\nJavaScript, 315\n/* and */ enclosing multiline comments in\nPHP, 38\n// indicating single-line comments in PHP,\n38\n//, denoting JavaScript comments, 312, 315\nenclosing regular expressions, 378, 381\n/= (division and assignment) operator, 318\nin JavaScript, 334\nin PHP, 45, 68\n3D transformations, 473\ntutorial on, 474\n: (colon)\nin case commands wihin PHP switch state‐\nments, 81\nin CSS pseudo-classes and pseudo-elements,\n442\nreplacing first curly brace in PHP switch\nstatements, 81\n:: (double colon) scope resolution operator\n(PHP), 114\nusing with self keyword, 115\n; (semicolon)\nending commands in MySQL, 171\nending JavaScript statements, 315\nin PHP code\n<<<_END ... _END; heredoc construct,\n52\nPHP syntax, 39\nseparating CSS statements, 416, 416\nseparating expressions in JavaScript for\nloop, 346\nseparating for loop parameters in PHP, 87\n< (less than) operator\nin JavaScript, 319, 334, 336\nin PHP, 46, 68, 72\n<!-- and --> HTML comment tags, 311\n<< (bitwise left shift) operator\nin JavaScript, 334\n748 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 779,
    "text": "in PHP, 68\n<<< (heredoc) operator in PHP, 51\n<<= (bitwise left shift and assignment) operator\nin JavaScript, 334\nin PHP, 68\n<= (less than or equal to) operator\nin JavaScript, 319, 334, 336\nin PHP, 46, 68, 72\n<> (not equal) operator (PHP), 68\n= (assignment) operator, 318\nin JavaScript, 318, 334\nnot confusing with == operator, 335\nin PHP, 45, 68, 70, 70\n== (equality) operator\nin JavaScript, 319, 334\nnot confusing with = operator, 335\nin PHP, 46, 48, 68, 70\n=== (identity) operator\nin JavaScript, 319, 334, 335\nin PHP, 68, 71\n=> operator (PHP), assigning value to array\nindex, 126\n> (greater than) operator\nin JavaScript, 319, 334, 336\nin PHP, 46, 68, 72\n>= (greater than or equal to) operator\nin JavaScript, 319, 334, 336\nin PHP, 46, 68, 72\n>> (bitwise right shift) operator\nin JavaScript, 334\nin PHP, 68\n>>= (bitwise right shift and assignment) opera‐\ntor\nin JavaScript, 334\nin PHP, 68\n>>> (zero-fill right shift) bitwise operator in\nJavaScript, 334\n>>>= (zero-fill right shift and assignment) bit‐\nwise operator in JavaScript, 334\n? : (ternary) operator\nin JavaScript, 334, 344\nin PHP, 68\nreplacing if and else statements in PHP, 82\n@ (error control) operator in PHP, 69\n[ ] (square brackets)\naccessing array elements, 130, 317, 364\nenclosing character classes in regular\nexpressions, 380\nin PHP function definitions, 98precedence in JavaScript, 334\n\\ (backslash)\nescaping characters in JavaScript, 320\nescaping characters in PHP strings, 50\nescaping in regular expressions, 379\nescaping quotation marks in JavaScript\nstrings, 316\nescaping regular expression metacharacters,\n379\n\\n (newline) escape character, 50\n\\\\ escape character, 50, 320\n^ (bitwise xor) operator\nin JavaScript, 334\nin PHP, 68\n^ (caret)\nbeginning-of-line matching in regular\nexpressions, 383\nnegating character classes in regular expres‐\nsions, 380, 382\n^= (attribute selector) operator in CSS, 534\nbeginning-of-string matching in CSS3, 452\n^= (bitwise XOR and assignment) operator\nin JavaScript, 334\nin PHP, 68\n_ (underscore), in JavaScript variable names,\n316\n{ } (curly braces)\nenclosing statements in JavaScript func‐\ntions, 352\nin CSS rules, 416\nin do...while loops in PHP, 86\nin for loops in PHP, 87\nin if statements in PHP, 75\nin if...else statements in PHP, 76\nin if...elseif...else statement in PHP, 78\nin JavaScript if statements, 341\nin while loops in PHP, 84\nreplacing in switch statements in PHP, 81\n| (Or) bitwise operator\nin JavaScript, 334\nin PHP, 68\n|= (bitwise OR and assignment) operator\nin JavaScript, 334\nin PHP, 68\n|| (Or) logical operator\nin JavaScript, 319, 336\nin PHP, 47, 68\n~ (bitwise NOT) operator in JavaScript, 334\n~= operator, matching attributes, 424\nIndex | 749"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 780,
    "text": "A\nAAC (audio) codec, 618\nabsolute positioning of elements, 440\nactive pseudo-class (CSS), 443\nActiveX, 395\naddClass method (jQuery), 535\naddition operator (+)\nin JavaScript, 318\nin PHP, 45, 68\nafter method (jQuery), 533, 534\nAjax, xxiii , 5\nabout, 395\nchecking for username availability on email\naccount, 12-14\ndefined, 9\nGET request, 403-406\nsending XML requests, 406-410\nusing frameworks for, 411\nusing in jQuery, 551\nsending a GET request, 552\nsending a POST request, 551\nusing XMLHttpRequest, 396\nalert function (JavaScript), 328\nalignment (text), 436\nAlpha value (transparency), 465\nALTER command (MySQL), 181\nadding indexes to a table, 187\nFULLTEXT index definition in ALTER\nTABLE, 191\nremoving a column, 185\nrenaming a column, 185\nrenaming a table, 183\nusing with MODIFY keyword, 184\nancestor elements, 541\nAnd (&&) logical operator\nin JavaScript, 319, 334, 336\nin PHP, 47, 68, 72\nAnd (&) bitwise operator (JavaScript), 334\nand (low-precedence) logical operator (PHP),\n47, 68, 73\nAND logical operator in MySQL WHERE quer‐\nies, 204\nandSelf method (jQuery), 545\nanimate method (jQuery), 526, 529\nanimation, using interrrupts, 495\nanimations\ncreating in jQuery, 526\nbouncing ball animation, 526\nmethod chaining, 529stopping animations, 529\nusing callbacks, 529\nanonymous functions, 368\nApache web server, 11\nin W AMPs, MAMPs, and LAMPs, 16\nAPIs, new, in HTML5, 10\n.appcache file extension, 641\nappend method (jQuery), 533\narc method, context object, 567, 591\narcTo method, context object, 594\narguments array (JavaScript functions), 352,\n353\narithmetic operators\nin JavaScript, 318\nin PHP, 45, 68\nArray keyword (JavaScript), 362\narray keyword (PHP), 126\narrays\nin JavaScript, 317, 361-368\nassociative, 362\nmultidimensional, 363\nnumeric arrays, 361\nusing array methods, 364-368\nin PHP, 42, 123-136\nassignment using array keyword, 126\nassociative, 125\nforeach ... as loop, 127\nmultidimensional, 129\nnumerically indexed, 123\nreturned from MySQL query, 239\ntwo-dimensional arrays, 43\nusing array functions, 132-136\nJavaScript functions returning, 355\nPHP functions returning, 100\nAS keyword (MySQL), 203\nassignment\narray element values in JavaScript, 361\nmultiline string assignment in PHP, 50\nmultiple-assignment statement in PHP, 70\nsetting variable type by, in JavaScript, 321\nshorthand assignment of properties in CSS,\n444\nstring variables in JavaScript, 316\nassignment operators\nin JavaScript, 318, 334\nin PHP, 45, 48, 68\nassociative arrays\nin JavaScript, 362\nin PHP, 125, 240\n750 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 781,
    "text": "multidimensional, 129\nwalking through, using foreach, 127\nassociativity (operator), 69, 334\nattr method (jQuery), 532\nattribute selectors (CSS), 451\nmatching parts of strings, 452\n$= operator, 452\n*= operator, 453\n^= operator, 452\nattribute seletors (CSS), 423, 426\nattributes, HTML elements, 423\nmicrodata attributes, 648\nmodifying using attr method, 532\naudio and video (HTML5), 617-629\n<audio> element, 619\ncodecs, 618\ncodecs supported by <audio> tag, 618\ncontrolling audio playback using JavaScript,\n620\ncontrolling video playback from JavaScript,\n626\nproviding Flash fallback audio player for\nnon-HTML5 browsers, 621\nproviding Flash fallback video player for\nnon-HTML5 browsers, 627\nvideo codecs, 623\n<video> element, 623\n<audio> element (HTML5), 10, 561, 619\nattributes supported, 620\ncodecs suppoted, 618\n<cke:object> element that calls up Flash\nplayer, 622\n<source> tags nested in, 619\nauthentication (HTTP), 290-298\nautocomplete attribute, 282\nautofocus attribute, 282\nAUTO_INCREMENT data type (MySQL), 181,\n211, 252\nB\n\\b (backspace) escape character, 320\nbackground property (CSS), 443\nbackground-clip property (CSS)\nelements using border-box, padding box,\nand content-box values, 454\nsupported values, 454\nusing, 454\nbackground-color property (CSS), 437\nbackground-origin property (CSS), 456elements using border-box, padding box,\nand content-box values, 456\nsupported values, 454\nbackground-size property (CSS), 456\nusing auto value, 457\nbackgrounds, multiple (CSS3), 457-458\nbacking up MySQL databases, 227\ncreating a backup file, 229\nplanning backups, 232\nrestoring from a backup file, 231\nusing mysqldump, 227\nbefore method (jQuery), 533, 534\nBEGIN statement (MySQL), 224\nbeginPath method, context object, 567, 584\nBerners-Lee, Tim, 1\nbezierCurveTo method, context object, 596\nBINARY data type (MySQL), 178\nBinary Large OBject (see BLOB data types)\nbinary operators, 67\nin JavaScript, 334\nbitwise operators\nin JavaScript, 334\nin PHP, 68\nBLOB data types (MySQL), 179\nBoolean expressions\nin JavaScript, 331\nin PHP, 64\nBoolean mode, MATCH ... AGAINST con‐\nstruct, 198\nBoolean operators, 336\nBoolean values, 63\nreturned by relational operators in PHP, 70\nborder-color property (CSS), 459\nborder-radius property (CSS), 459-462\nborder-width property (CSS), 447\nborders, applying using CSS, 447, 459-462\nbounce function (jQuery), 528, 529\nstopping the animation, 530\nbox model (CSS), 445-450\nadjusting padding, 448\napplying borders, 447\nbox-sizing property, 453\nobject contents, 450\nsetting margins, 445\nbox-shadow property (CSS), 462\n<br> element, 11, 64\nbreak commands\nbreaking out of loops in JavaScript, 346\nbreaking out of loops in PHP, 88\nIndex | 751"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 782,
    "text": "in default statement for PHP switch state‐\nments, 81\nin JavaSript switch statements, 343\nin PHP switch statements, 81\nbrowsers, 1\naccessing JavaScript error messages, 313\naudio types supported, 619\nbackground property names, 457\nborder radius properties, 462\nbox shadows, 463\nbrowser/server request/response dialog with\ncookies, 288\ncanvas element support, 558, 615\ncreating XMLHttpRequest object, 396\ncross-browser Ajax function, 396\nCSS rules for, browser-specific prefixes, 439\ndisabling cookies, 288\nDOM (Document Object Model) and, 326\nFlash fallback for non-HTML5 browsers,\n621\nFlash fallback video player for non-HTML5\nbrowsers, 627\nFlash support for older browsers, 618\nfonts, 469\nfor development, 29\nforEach method and, 365\nHTML5 support, 557\nincompatibilities and libraries to bridge\nthem, 499\nJavaScript in, 8\nJavaScript-style CSS property names, 482\nJavaScritp enabled/disabled, 311\nlocal storage, 637\nmajor browsers recommended for installa‐\ntion, 15\nmicrodata support, 650\nmultimedia, supporting directly in, 617\nmultiple-column layout, 465\nolder and non-standard, not supporting\nscripting, 311\nopacity property in CSS3, 467\nstatic HTML altenatives to JavaScript, 310\ntransformations, support for, 472\nuser agent string, 304\nuser styles for, 418\nvideo types supported, 624\nwindow properties in JavaScript, 484\nbumpyCaps or bumpyCase, 352\n<button> tags, autofocus attribute, 282C\ncallbacks\ndefined, 521\nusing in jQuery animations, 529\ncamelCase, 352\ncanvas\ncanvas (HTML5), 10\nabout, 558\nclip method, 587\ncombining video with, 600\ncreating and accessing, 565-578\ncurves, using to draw paths, 591-597\ndetermining if a point is in a path, 590\ndrawing lines, 581-584\ndrawing logo (social networking site), 685\nediting at pixel level, 602-605\nfilling areas, 586\ngraphical effects, advanced, 606-609\nimages, manipulating, 597-602\npaths, using for drawing, 584-586\ntransformations, 609-615\nusing the <canvas> element, 558\nusing with jQuery for drawing program,\n516-518\nwriting text to, 578-581\ncanvas object, 516\ncreating, 566\ngetContext method, 566\ncarriage returns\n\\r character in JavaScript, 320\n\\r character in PHP, 50\nCascading Style Sheets (see CSS)\ncase commands\nin JavaScript switch statements, 343\nin PHP switch statements, 80\ncase conditions not met, 81\ncast types (PHP), 91\ncasting\nexplicit casting in JavaScript with type-\nchanging functions, 348\nimplicit and explicit casting in PHP, 90\noperators in PHP, 69\nCDNs (content delivery networks), supporting\njQuery, 502\ncentimeters (CSS measurement), 431\nCGI (Common Gateway Interface), 5\nCHANGE keyword (MySQL), 185\nCHAR data type (MySQL), 177\n752 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 783,
    "text": "character classes in regular expressions, 380,\n382\nexample of, 381\nnegation of, 380\ncharAt method (JavaScript), 354\ncheckboxes, 271\ncheckdate function (PHP), 146\ncheckuser.php (social networking site), 665\nchild selectors (CSS), 421\nchildren method (jQuery), 543\nclass attribute (HTML), 415\nclass selectors (CSS), 423, 426\nclasses, 106\ndynamically applying to element using\njQuery, 535\nin CSS, 415\naccessing from JavaScript, 481\njQuery class selector, 507\nnumber in a selector, 427\npseudo-classes, 442, 451\nin JavaScript\ndeclaring, 356\ndeclaring using prototype keyword, 358\nin PHP\ndeclaring, 107\nstatic properties and methods, 117\nclearInterval function (JavaScript), 495\nclearQueue method (jQuery), 529\nclearRect method, context object, 569\nclearTimeout function (JavaScript), 493\nclients, 2\nclip area, creating in HTML5 canvas, 587\nclip method, 588\ncloning objects in PHP, 110\nclosePath method, context object, 567, 584\nCOBOL, 7\nCodd, E. F., 211\ncode examples from this book, xxvi, 571\ndownload site, 37\ncodecs\ndefined, 618\nsupported by HTML5 <audio> and <video>\ntags, 618\nvideo, 623\ncolor input type, 285\ncolor property (CSS), 437\ncolors\nanimating in jQuery, 529\napplying using CSS, 437gradients, 438\nshort color strings, 438\nborder-color property in CSS3, 459\ncolors and opacity in CSS3, 465-467\ncreating a gradient in HTML5 canvas\naddColorStop method, 573\ncreateLinearGradient method, 571\ncreateRadialGradient method, 574\ncolumns (database), 165\ncolumns (MySQL)\nadding a new column, 184\nadding and removing auto incrementing\ncolumn id, 181\nchanging data type, 184\nremoving a column, 185\nrenaming, 185\n.columns class (CSS), 465\ncommand prompts (MySQL), 171\ncommand-line interface (MySQL)\nstarting, 166\nusing, 171\ncommands (MySQL)\nadding data to a table, 182\nALTER command, 181\ncanceling, 172\ncommon commands, listing of, 172\ncreating a database, 173\ncreating a table, 175\ncreating users, 173\ncreating, viewing, and deleting a table, 185\nending with semicolon (;), 171\nFULLTEXT index definition in, 191\ncomments\nin CSS, 417\nin HTML, 311\nin JavaScript, 315\nin PHP, 38\nCOMMIT command (MySQL), 225\ncompact function (PHP), 135\ncomparison operators\nin JavaScript, 319, 336\nin PHP, 46, 68, 72\ncompositing effects created in HTML5 canvas,\n607\ncompositing options (HTML5 canvas), 606\nconcat method (JavaScript), 364\nconcatenation\n+ (string concatenation) operator in Java‐\nScript, 320\nIndex | 753"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 784,
    "text": "+= (string concatenation and assignment)\noperator in JavaScript, 320\n. (string concatenation) operator in PHP, 49\n.= (string concatenation and ssignment)\noperator in PHP, 49\nCSS properties into a shorthand assignment,\n444\nconditional operator (see ? : (ternary) operator)\nconditionals\nin JavaScript, 341-344\nelse statement, 341\nif statement, 341\nswitch statement, 342\nternary operator (? :), 344\nin PHP, 74-83\nelse statement, 76\nelseif statement, 78\nif statement, 75\nswitch statement, 79-82\nternary operator (? :), 82\nconnections, database\nclosing MySQL connection from PHP, 240\nconnecting to MySQL database from PHP,\n235\nconsole.log function (JavaScript), 328\nconstants (PHP), 53\ndate constants, 146\ndefining within a class, 115\npredefined, 54\nTRUE and FALSE, 64\nconstructors\nin JavaScript, 356\nin PHP, 111\nsubclass constructors, 120\nconstructs, 96\ncontent delivery networks (CDNs), supporting\njQuery, 502\ncontent types\ncommonly used Internet media content\ntypes, 157\nmultipart/form-data, 156\ncontext object, 517\ncreating for HTML5 canvas, 566\ncontinue statements\nin JavaScript loops, 347\nin PHP loops, 89\ncontrol flow (see conditionals; looping)\nconversion specifiers (printf), 139, 141\n$_COOKIE array, 290cookies, 287-290, 636\naccessing in PHP, 290\nbrowser/server request/response dialog with\ncookies, 288\ndestroying in PHP, 290\nforcing cookie-only sessions, 306\nsetting in PHP, 289\ncopy function (PHP), 150\ncount function (PHP), 132\nCOUNT keyword (MySQL), 193, 201\nCREATE command (MySQL)\nCREATE DATABASE, 173\nCREATE INDEX, 188\nCREATE TABLE, 175, 248\nCREATE TABLE with auto-incrementing id\ncolumn, 182\nCREATE TABLE with indexes, 188\ncreateImageData method, context object, 605\ncreateLinearGradient method, context object,\n571\ncross document messaging (HTML5), 645-648\ncross-site scripting (XSS), preventing, 259\nCSS (Cascading Style Sheets), 413-450\naccessing from JavaScript, 479-497\nbenefits of, 5\nbox model and layout, 445-450\ncascading, 425-431\ncolors, 437-439\nfonts and typography, 432-435\nIDs, 415\nimporting a style sheet, 414-415\nin signup.php (social networking site), 662\nintegration with DOM, 413\nmeasurements, 431\npositioning elements, 439-442\nprofile image (social networking site), 669\npseudo-classes, 442\nrules, 416-418\nselectors, 420-425\nsemicolons (;) separating statements, 416\nshorthand rules, 444\nstyle types, 418-420\nstyles.css (social networking site), 682\ntext styles, 435-437\nusing in dynamic web content, 9\nworking with JavaScript, 12\ncss method (jQuery), 506, 536\nCSS3, 451-477\nattribute selectors, 451\n754 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 785,
    "text": "backgrounds, 453-457\nborders, 459-462\nbox shadows, 462\nbox-sizing property, 453\ncolors and opacity, 465-467\nelement overflow, 463\nmultiple backgrounds, 457-458\nmultiple-column layout, 463-465\ntransformations, 472\ntransitions, 474-477\nweb fonts, 469\nCSV (comma-separated values) format, 227\nmysqldump program, dumping data in, 231\ncubic-bezier function (CSS), 475\ncurly braces (see { } in Symbols section)\ncurves, working with in HTML5 canvas, 591\narc method, 591\narcTo method, 594\nbezierCurveTo method, 596\nquadraticCurveTo method, 595\nD\n\\d (digits) in regular expressions, 380\ndata array (JavaScript), 603\ndata types\nautomatic conversion in PHP, 71\ncasting in PHP, 90\nin JavaScript\nusing type-changing functions, 348\nvariable typing, 321\nin MySQL, 177-186\nchanging data type of a column, 184\nFULLTEXT indexes and, 191\nvariable typing in PHP, 52\ndatabase engines, 175\nFULLTEXT indexes and, 191\ndatabases\ndefined, 165\nstoring small datbases locally, 563\nterminology, 166\ndatabases (MySQL), 7, 165\nbacking up and restoring, 227-232\ncreating a database, 173\ndatabase.object, 174\ndesigning, 209\nquerying, 192-202\nrestoring, 231\ndate and time functions\nin MySQL, 718-724in PHP, 143-147\ndate and time pickers, 285\ndate constants (PHP), 146\nDATE data type (MySQL), 180\nDate function (JavaScript), 8\ndate function (PHP), 6, 56, 144\nDateTime class (PHP), 144\nDATETIME data type (MySQL) , 180\ndebugging\nJavaScript errors, 313\nusing magic constants in PHP, 54\ndecrement operator (--)\nin JavaScript, 318, 334\nin PHP, 45, 48, 68\ndecrementing variables\nin JavaScript, 320\nin PHP, 48\ndefault statement\nfor JavaScript switch statements, 343\nfor PHP switch statements, 81\ndefault styles (CSS), 418\ndefault values for form input, 269\ndefine function (PHP), 53\nDELETE command (MySQL), 194\nDELETE FROM, 244\ndeleting data using PHP, 252\ndenormaliation, 219\nDESC keyword (MySQL), 201\ndescendant selectors (CSS), 420\nDESCRIBE command (MySQL), 176, 182, 184\ndescribing a table, 249\ndestroy_session_and_data function (PHP), 303\ndestructors (PHP), 112\ndevelopment servers, 15-33\nalternative W AMPs, 26\ninstalling a LAMP on Linux, 28\ninstalling XAMPP on Mac OS X, 27\ninstalling XAMPP on Windows, 16-26\nusing a program editor, 30\nusing an IDE, 31\nW AMP , MAMP , and LAMP, 16\nworking remotely, 28\nlogging in, 28\nusing FTP, 29\ndie function (PHP), 235\ndifferent_user function (PHP), 303\ndigits in regular expressions, 380\ndimensions, modifying with jQuery\ninnerWidth and innerHeight methods, 538\nIndex | 755"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 786,
    "text": "outerWidth and outerHeight methods, 538\nwidth and height methods, 536\ndir system command (Windows), 160\ndisplay property (CSS), 491\nDISTINCT keyword (MySQL), 193\nDISTINCTROW keyword (MySQL), 193\n<div> tags\nclass attribute, 415\nforeground color of text, 437\nid attribute, 415\ninserting new div element into the DOM,\n489\nstyle settings within, 415\nversus <span> elements, 429\ndivision operator (/)\nin JavaScript, 318\nin PHP, 45, 67, 68\nDNS (Domain Name Service), 3\ndo...while loops\nin JavaScript, 345\nin PHP, 86\nDOCTYPE declaration, 413, 566\ndocument object (JavaScript), 324\nfetching width and height using jQuery, 536\ndocument root\naccessing for XAMPP on Mac OS X, 27\naccessing for XAMPP on Windows, 25\naccessing on Linux, 28\ndocument.getElementById method, 326, 401\ndocument.write function (JavaScript), 310\ndocument.write method (JavaScript), 324\nabout, 328\nusing, 329\nwhere not to use, 515\nDOM (Document Object Model), 309, 324-328\nadapting to Internet Explorer, 326\nadding new elements using JavaScript,\n489-490\nalternatives to adding/removing elements,\n491\nCSS integration with, 413\nmanipulating using jQuey, 530-535\nadding and removing elements, 533-535\nobject hierarchy, 324\nremoving elements using JavaScript, 490\ntraversing using jQuery, 539-549\nchild elements, 543\nparent elements, 539-543selecting next and previous elements,\n545\nsibling elements, 543\nusing, 327\nusing with XML documents, 408\ndrag and drop (HTML5), 643-645\ndrawImage method, context object, 597\nvarious ways of drawing an image on the\ncanvas, 599\nDROP command (MySQL), 182\nDROP TABLE, 185\ndropping a table using PHP, 250\nDROP keyword (MySQL), 185\ndrop-down lists, creating with <select> tag, 275\nduplicate entry error (MySQLQ), 189\ndynamic linking (PHP), 91\ndynamic web content, 1-14\nApache web server, 11\nbenefits of PHP , MySQL, JavaScript, CSS,\nand HTML5, 5\nHTML5, 10\nHTTP and HTML, 2\nopen source technologies and, 12\nrequest/response procedure, 2\nusing CSS, 9\nusing JavaScript, 8\nusing MySQL, 7\nusing PHP, 6\nE\neach function (PHP), 128, 136\n$.each method (jQuery), 550\nease function (CSS), 475\nease-in transition function (CSS), 475\nease-in-out transition function (CSS), 475\nease-out transition function (CSS), 475\necho statements in PHP, 48\necho <<<_END ... _END structure, 245, 266\nmultiline string echo statement, 50\nprint statements versus, 55\nediting at pixel level (HTML5 canvas), 602\neditors, 25, 27\nusing a program editor, 30\nEditra, 30\nelement overflow (CSS3), 463\nellipsis (...), indicating truncated text, 468\nelse statements\nin JavaScript, 341\nin PHP, 76\n756 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 787,
    "text": "closing if...else or if...elseif...else, 79\nelseif statements (PHP), 78\nem (CSS measurement), 431\nemail address, validating on forms, 376\nembedded styles (CSS), 415\norder of precedence, 426\nempty method (jQuery), 533, 535\nencapsulation, 106\nend function (PHP), 136\n_END ... _END tags in heredoc construct in\nPHP, 51\nendswitch command in PHP switch statement,\n81\nENGINE MyISAM (MySQL), 175\neq method (jQuery), 547\nequality operator (==)\nin JavaScript, 335\nin PHP, 46, 48, 68, 70\nerror handling in JavaScript\ndebugging errors, 313\nusing onerror event, 339\nusing try ... catch construct, 340\nerror messages\nin JavaScript, 313\nin PHP, 236\nescape characters\nin JavaScript, 320\nin PHP, 49\npreventing from being injected into\nMySQL, 277\nescapeshellcmd function (PHP), 161\nevent functions and properties (jQuery),\n510-521\nalternative mouse methods, 519\nconsiderate programming, 515\nkeypress event, 513\nmousemove event, 515-518\nother mouse events, 518\nsubmit event, 520\nevent handling in jQuery, 508\nevents in JavaScript, 339\nattaching to objects in a script, 487\nattaching to other events, 488\ncross document messaging, 647\ndrag and drop events, 643\nex (CSS measurement), 431\nexclusive or operator (see xor logical operator)\nexec function (PHP), 161\nexecution operators (PHP), 66EXPLAIN command (MySQL), 226\nexplicit casting in PHP, 90\nexplode function (PHP), 133\nexpressions\nin JavaScript, 331\nfor loops, 346\nliterals and variables, 332\nin PHP, 63-66\nBoolean values, TRUE or FALSE, 63\nliterals and variables, 65\nextending JavaScript objects, 360\nexternal style sheets (CSS), 419\norder of precedence, 426\nextract function (PHP), 134\nF\n\\f (form feed) escape character, 320\nfadeIn method (jQuery), 524\nfadeOut method (jQuery), 524\nfadeTo method (jQuery), 524\nfadeToggle method (jQuery), 524\nfalse and true values (JavaScript), 332\nFALSE and TRUE values (PHP), 63, 386\nfclose fuction (PHP), 148\nfgets function (PHP), 148, 149, 152\nfields (database), 165\nfile handles ($fh variable), 148, 151\nfile handling\nfile pointers, 151\nfiles\nincluding in PHP, 104\nnaming, differences among systems, 147\nrequiring in PHP, 105\n$_FILES array (PHP), 156, 157\nFileZilla, 29\nfile_exists function (PHP), 147, 150\nfile_get_contents function (PHP), 154, 402\nfill method, context object, 567\nfilling areas in HTML5 canvas, 586\napplying a gradient fill, 571\nfillRect method, context object, 569\nfills, using patterns for, 576\nfillStyle property (context object), 566, 569, 576\nfillText method, context object, 580, 583\nfilter method (jQuery), 547\nfinal keyword (PHP), 121\nfinally keyword (JavaScript), 341\nfind method (jQuery), 543\nfinish method (jQuery), 530\nIndex | 757"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 788,
    "text": "FireFTP, 29\nfirst method (jQuery), 547\nFirst Normal Form, 212\nfixed positioning of elements, 440\nFlash, 617\nfallback video player for non-HTML5\nbrowsers, 627\nproviding for non-HTML5 browsers, 621\nflat files, 7\nfloat property (CSS), 442\nflock function (PHP), 153\nfocus pseudo-class (CSS), 443\nuniversal selector (*) and, 444\nfont property (context object), 579\n@font-face directive (CSS), 469\nfont-family property (CSS), 433\nsetting using jQuery, 506\nfont-size property (CSS), 416, 434, 482\nfont-style property (CSS), 433\nfont-weight property (CSS), 434, 540\nfontSize property (JavaScript), 482\nfopen function (PHP), 148\nmode parameters, 148\nfor ... in loop (JavaScript), 363\nfor loops\nin JavaScript, 346, 354\nbreaking out of, 346\niterating through an array, 355\niterating through compositing types, 608\niterating through multidimensional\narray, 364\nin PHP, 86\nbreaking out of, 88\ncomparison to while loops, 87\nprinting out array contents, 124\nforeach ... as loop (PHP), 127, 130, 136, 273\nwalking through numeric multidimensional\narray, 131\nforEach method (JavaScript), 365\ncross-browser solution, 365\nform attribute, <input> element, 284\nform handling, 265-285\nbuilding forms, 265-267\ndisplaying forms, 245\nenhancements in HTML5, 281-285\nexample program, 279-281\nHTML5 features awaiting full implementa‐\ntion, 283\nHTML5 forms, 562input types, 270-277\nretrieving submitted data, 267\nsanitizing input, 277\nsubmit event of a form, intercepting, 520\nvalidating form data using PHP, 387-391\nvalidation of form data in PHP, 158\n<form> tags\n<input> tag outside of, 283\nautocomplete attribute, 282\nonSubmit attribute, 374\nformaction override atribute, 283\nformat function (CSS), 470\nformat specifiers\ndate function in PHP, 145\nprintf function in PHP, 140\nformenctype override attribute, 283\nformmethod override attribute, 283\nformnovalidate override attriute, 283\nformtarget override attribute, 283\nfread function (PHP), 148, 149\nfriends.php (social networking site), 675\nfseek function (PHP), 152\nFTP , using for file transfer with development\nserver, 29\nFULLTEXT indexes (MySQL), 191\nMATCH ... AGAINST construct used\nagainst columns, 197\nstopwords, 711\nfunctions\nadvantages of, 95\nin JavaScript, 322, 351-356\ndefining, 351\nprototype property, 359\nreturning a value, 353\nreturning an array, 355\nin MySQL, 204, 715-724\ndate functions, 718-723\ntime functions, 723\nin PHP, 55, 96-106\ndefining, 98\nincluding and requiring files, 103\npassing by reference, 100\npreventing SQL and XSS injections, 260\nreturning a value, 98\nreturning an array, 100\nreturning global variables, 102\nvariable scope and, 56-62, 103\nversion compatibility, 105\nfunctions.php (social networking site), 654\n758 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 789,
    "text": "function_exists function (PHP), 105\nfuzzy character mapping, 378\nfwrite function (PHP), 148\nG\nGD (Graphics Draw) library, 11\ngeolocation, 559-561, 631-636\n$_GET array (PHP), 244\nassigning to PHP global variable, security\nissues, 268\nsecurity concerns, 277\n$.get method (jQuery), 517, 552\nGET method (HTTP), 243, 265\nAjax GET request, 403-406\ngetElementById function (JavaScript), 326, 401,\n423\nenhancing, 479-481\nincluding enhanced functions, 482\nreplacement by $() function, 327\ngetElementsByTagName method (JavaScript),\n409\ngetImageData method, context object, 602\ngetnext function (JavaScript), 337\ngetnext function (PHP), 73\nglobal variables, 103\nin JavaScript, 322\nin PHP, 59\nPHP functions returning, 102\nglobalAlpha property (context object), 609\nglobalCompositeOperation property (context\nobject), 606\nGmail, using Ajax to check username availabil‐\nity, 12-14\nGoogle CDN, jQuery from, 502\nGoogle Chrome, 15\nGoogle Fonts, 470\nGoogle Maps, 395, 634\ncreating interactive map of user's location,\n635\nGPS (Global Positioning System), 631\ngradients\ncreating and applying using CSS, 438\ncreating in HTML5 canvas\naddColorStop method, 573\nlinear gradient, 571\nradial gradient, 574\nGRANT command (MySQL), 174\ngraphical effects, advanced (HTML5 canvas),\n606compositing, 606\ngreater than operator (>)\nin JavaScript, 336\nin PHP, 46, 68, 72\ngreater than or equal to operator (>=)\nin JavaScript, 336\nin PHP, 46, 68\nGROUP BY keyword (MySQL), 201\ngrouping in regular expressions, 379\nH\nH.264 (video) codec, 624\n<h1> tags, changing style of, 413\nhash function (PHP), 294\nhashing algorithms, 294\n<head> tags\n<style> tags within, 413\nJavaScript scripts within, 311\nheader.php (social networking site), 656\nheight method (jQuery), 536\nheredoc operator (<<<) in PHP, 51\nhidden fields in forms, 274\nhide method (jQuery), 522\npossible arguments, 522\nhistory object (JavaScript), 328, 485\nhover method (jQuery), 519\nhover pseudo-class (CSS), 442, 476\nHSL (Hue, Saturation, and Luminance) colors,\n465\nhsl function (CSS), 465\nHSLA (Hue, Saturation, Luminance, and\nAlpha) colors, 465, 466\nhsla function (CSS3), 466\nHTML, 1\n<!-- and --> comment tags, 311\nadding microdata to, 648\nbackgrounds, multiple, using CSS3, 457\nCSS selectors in use, 425\nform handling, 245\nimporting CSS from within, 414\nincorporating PHP in, 35\ninline styles for elements, 420\ninserting CSS style declarations directly\nwithin, 415\nJavaScript and, 310-315\nHTML forms (see form handling)\nhtml function (jQuery), 508, 530\ninserting elements into the DOM, 533\ntext method versus, 531\nIndex | 759"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 790,
    "text": "HTML injection, preventing in MySQL, 259\n<html> tags, manifest file in, 642\nHTML5, 10, 558\n(see also canvas)\nabout, 557\naudio and video, 617-629\n<audio> and <video> elements, 561\nbrowser support for, 615\ncross document messaging, 645-648\nDOCTYPE declaration, 413\ndrag and drop, 643-645\nform handling enhancements, 281-285\nfeatures awaiting full implementation,\n283-285\nforms, 562\ngeolocation, 559-561, 631-636\nJavaScript and, 631\nlocal storage, 563, 636-639\nmicrodata, 564, 648, 651\nnew features in, 10\noffline web applications, 641-643\nother new tags, 651\nself-closing tags, no longer valid, 64\nversus XHTML, 162\nweb applications, 563\nweb workers, 563, 639-641\nworking with JavaScript, CSS, PHP , and\nMySQL, 12\nhtmlentities function (PHP), 61, 260, 278\nhtmlspecialchars function (PHP), 161\nHTTP, 1\nauthentiation, 290-298\ndefined, 2\nrequest/response procedure, 2\nHTTPS, 303\nI\nid attribute (HTML5), 415\nID selectors (CSS), 422, 426\nidata object (JavaScript), 602\nIDENTIFIED BY clause (GRANT command in\nMySQL), 175\nidentity operator (===)\nin JavaScript, 335\nin PHP, 68, 71\nIDEs (integrated development environments)\nbenefits of using, 31\npopular IDEs for PHP, 32\nIDs (CSS), 415if statements\nin JavaScript, 341\nelse statements and, 342\nrestricting messages listeners react to,\n648\n|| operator causing problems, 337\nin PHP, 75\nbreak command in, 89\ncontinue statement in, 89\nusing operators, 48\nif...else if... statement (JavaScript), 342\nif...else statements (PHP), 76\nif...elseif...else statements (PHP), 78\nimages\nadding profile image on social networking\nsite, 668\napplying an image as fill pattern in HTML5\ncanvas, 576\ncopying in HTML5 canvas, 567\ncreated in HTML5 canvas, specifying type\nfor, 569\ndragging and dropping, 644\nmanipulating image data in HTML5 canvas,\n602\ncreateImageData method, 605\ndata array, 603\nputImageData method, 605\nmanipulating in HTML5 canvas, 597-602\nadding shadows, 600\ncopying from a canvas, 600\ndrawImage method, 597\nresizing an image, 598\nselecting an image area, 598\nimplicit casting in PHP, 90\n@import directive (CSS), 414\n! important declaration in CSS rules, 428\nin keyword (JavaScript), 363\ninches (CSS measurement), 431\ninclude statement (PHP), 104\ninclude_once statement (PHP), 104\nincluding JavaScript files in HML documents,\n312\nincrement operator (++)\nin JavaScript, 318, 334\nin PHP, 45, 48, 68\nincrementing variables\nin JavaScript, 320\nin PHP, 48\nindentation, text-indent property, 436\n760 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 791,
    "text": "index.php (social networking site), 660\nindexes\narray, 44, 317\nassociative arrays in PHP, 126\nMySQL, 186-192\npurposes of, 214\nindexOf function (JavaScript), 376\ninequality operator (!=)\nin JavaScript, 334\nin PHP, 46, 68, 71\ninheritance, 107\nin PHP, 118-121\nini_set function (PHP), 303, 306\ninline JavaScript, 486-489\ninline styles (CSS), 420\norder of precedence, 426\ninnerHeight method (jQuery), 538\ninnerHTML property (JavaScript), 329, 401,\n491\ndisplaying the time, 494\ninnerWidth method (jQuery), 538\nInnoDB storage engine, 223\ninput (forms) (see form handling)\n<input> tags, 268\nautocomplete attribute, 282\nautofocus attribute, 282\ncolor type, 285\ndate and time pickers, 285\nform attribute, 283\nlist attribute, 284\nmin and max attributes, 284\nnumber and range types, 285\nplaceholder attribute, 282\nrequired attribute, 282\nstep attribute, 284\ntype attribute, 270\nvalue attribute, 269, 392\nwidth and height attributes, 283\nINSERT command (MySQL), 7, 182\nadding data using PHP, 250\nINSERT INTO, 245\nshortcut for inserting multiple rows of data,\n202\nusing with AUTO_INCREMENT column,\n253\nV ALUES keyword, 183\ninstance of a class, 106, 356\nintegrated development environments (see\nIDEs)interfaces, 106\ninternal styles (CSS), 419\nInternet Explorer, 15, 29\n(see also browsers)\nInternet media types, 157\ninterrupts, accessing, 492-497\nusing interrupts for animation, 495\nintervals\ncanceling, 495\nsetting, 493\nIP addresses, 3\nfor localhost, 25\nusing as indicator of location, 632\nis method (jQuery), 548\nisNAN function (JavaScript), 376\nisPointInPath method, context object, 590\nisset function (PHP), 243, 267\nis_array function (PHP), 132\nitemscope, itemtye, itemid, itemref, and item‐\nprop attributes, 648\nJ\nJavaScript, 309\naccessing CSS properties from, 482-484\naccessing interrupts, 492-497\nadding new elements to the DOM, 489-490\nalternatives to adding and removing ele‐\nments, 491\narrays, 361-368\nbenefits of, 5\ncomments, 315\nconditionals, 341-344\ncontrolling video playback from, 626\ndrawing on HTML5 canvas, 558\nexplicit casting in, 348\nexpressions, 331\nfunctions, 322, 351-356\ngetElementById function, enhancing to\nhandle DOM elements and CSS styles,\n479-482\nglobal variables, 322\nHTML text and, 310-315\nHTML5 features and, 631\nimplementing Ajax, 395-411\nin dynamic client/server request/response\nprocess, 5\ninline JavaScript, 486-489\nliterals, 332\nlocal variables, 323\nIndex | 761"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 792,
    "text": "looping in, 344-348\nobjects, 356, 361\nonerror event, 339\noperators, 318-321, 333-338\nplacing at end of HTML pages, 510\nplaying HTML5 audio with, 620\nremoving elements from the DOM, 490\nsemicolons (;) ending statements, 315\nsocial networking site file (javascript.js), 685\ntry ... catch construct, 340\nusing in dynamic web content, 8\nusing regular expressions in, 386\nvalidating user input, 371-377\nvariables, 316-318\nwindow object and its properties, 484\nwith statement, 338\nworking with CSS, MySQL, PHP , and\nHTML5, 12\nwriting to/reading from canvas, 565\nJOIN ... ON construct (MySQL), 203\njoin method (JavaScript), 365, 550\njq keyword, 505\njQuery, 9\nabout, 499\nadvantages of, 500\nchoosing the right version, 500\ncompressed or editable, 501\nInternet Explorer support, 501\ncustomizing, 503\nDOM traversal, 539-549\ntraversing jQuery selections, 546\ndownloading, 501\ndynamically applying classes, 535\nevent functions and properties, 510-521\nfor mobile devices, 520\nhandling events, 508\nincluding in web pages, 500\nlinking to, using a CDN, 502\nalways using latest version, 503\nmanipulating the DOM, 530-535\nmethods, 731-746\nmodifying dimensions, 535-539\nobjects, 729\nplugins, 553\njQuery mobile, 554\nUI (User Interface), 553\nURL for, 553\nselectors, 505-508, 725-729\nspecial effects, 521-530syntax, 503\navoiding conflict with other libraries,\n505\nUI add-in, 529\nusing Ajax functionality, 551\nusing without selectors, 549\n$.each method, 550\n$.map method, 551\nwaiting until document is ready, 509\njQuery() function, 504\nK\nkey/value pairs, associative arrays in PHP, 126\nkeypress method (jQuery), 513\nkeys (MySQL), 214, 216\nL\nlabels (form), 276\nLAMPs (Linux, Apache, MySQL, and PHP), 16\ninstalling XAMPP on Linux, 28\nlast method (jQuery), 547\nless than operator (<)\nin JavaScript, 336\nin PHP, 46, 68, 72\nless than or equal to operator (<=)\nin JavaScript, 336\nin PHP, 46, 68, 72\nletter-spacing property (CSS), 435\nLIKE keyword (MySQL), 195, 204\nLIMIT keyword (MySQL), 196\nline breaks (HTML5 and XHTML), 11\nline-height property (CSS), 435\nlinear gradients, 438, 571\nlinear transition function (CSS), 475\nlines, drawing in HTML5 canvas, 581\nlineCap and lineJoin properties, 581\nlineWidth property, 581\nmiterLimit property, 584\nlineTo method, context object, 585\nlink pseudo-class (CSS), 443\n<link> tags, using to import CSS, 414\nlinks object (JavaScript), 326\nlinks, modifying using jQuery, 532\nLinux\naccessing MySQL via command-line inter‐\nface, 169\nlikely location of mysqldump, 228\nls system command, 160\nstarting MySQL and logging in as user, 174\n762 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 793,
    "text": "Linux, Apache, MySQL, and PHP (see LAMPs)\nlist attribute, <input> element, 284\nlist function (PHP), using with each function,\n128\nliterals\nin JavaScript, 332\nin PHP, 65\nlocal storage (HTML5), 563, 636-639\nlocalStorage object, 637\nlocal variables, 103\nin JavaScript, 323, 355\nin PHP, 57\nlocalhostt in URLs, 25\nLOCK TABLES command (MySQL), 228, 230\nlocks\nfile locking with flock function (PHP), 153\nlocking database tables, 254\nlogical operators\nin JavaScript, 319, 336\nin PHP, 46, 68, 72\nusing in MySQL WHERE queries, 204\nlogin.php (social networking site), 665\nlogins\ncreating loging file in PHP for MySQL, 234\nHTTP authentication login prompt, 291\nlogging in on social networking site, 662\nlogout.php (social networking site), 681\nlongdate function (PHP), 56\nvariable scope and, 57\nlooping\nin JavaScript, 344-348\nbreaking out of loops, 346\ncontinue statement, 347\ndo ... while loops, 345\nfor loops, 346\nwhile loops, 344\nin PHP, 83-90\nbreaking out of loops, 88\ncontinue statement, 89\ndo...while loops, 86\nfor loops, 86\nforeach ... as loop, 127\nwhile loops, 84\nls system command, 160\nM\nMAC (Media Access Control) address, 632\nMac OS X\naccessing MySQL via Terminal, 168installing XAMPP on, 27\nlikely location of mysqldump, 228\nls system command, 160\nSSH on, 29\nstarting MySQL and logging in as user, 174\nMac, Apache, MySQL, and PHP (see MAMPs)\nmagic constants (PHP), 54\nmagic quotes (PHP), 256\nMAMPs (Mac, Apache, MySQL, and PHP), 16\ninstalling XAMPP on Mac OS X, 27\nmanifest files, 641\nmany-to-many relationships, 221\nmany-to-one relationships, 220\nmap (interactive) of user's location, 635\n$.map method (jQuery), 551\nmargin property (CSS), 445\nmargin-bottom property (CSS), 445\nmargin-left property (CSS), 445\nmargin-right property (CSS), 445\nmargin-top property (CSS), 445\nmargins, setting with CSS, 445\nmarkup, changes in HTML5, 10\nMATCH ... AGAINST construct (MySQL), 197\nin Boolean mode, 198\nmatching in regular expressions, 382\nmatching parts of strings (CSS), 452\nMathML (Math Markup Language), 11\nmatrix function (CSS), 472\nmd5 hashing algorithm , 294\nmeasurement units (CSS), 431\nmeasureText method, context object, 581\nmembers.php (social networking site), 672-675\nadding and dropping friends, 672\nlisting all members, 672\nviewing a user's profile, 672\nmessages.php (social networking site), 678\nmessaging, cross document, 645-648\nmetacharacters in regular expressions, 378\nescaping, 379\nsummary of, 383\nmethod chaining, 355, 519\njQuery methods, 529\nmethods, 106\nin JavaScript, 356, 357\nstatic methods, 360\nusing prototype keyword for, 358\nin jQuery, 731-746\nin PHP\ncalling, 109\nIndex | 763"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 794,
    "text": "final methods, 121\noverriding and using parent operator,\n119\nscope, 115\nstatic methods, 113, 117\nwriting, 112\nmicrodata, 564, 648-651\nMicrosoft CDN, jQuery on, 502\nmillimeters (CSS measurement), 431\nmin and max attributes, <input> element, 284\nmiterLimit property (context object), 584\nmktime function (PHP), 144\nmobile devices, Apple iOS and Google\nAndroid, 15\nmodifiers (general) for regular expressions, 385\nMODIFY keyword (MySQL), 184\nmodulus and assignment operator (%=)\nin JavaScript, 319\nin PHP, 45\nmodulus operator (%)\nin JavaScript, 318\nin PHP, 45, 68\nmouse events\nalternative mouse methods, 519\nmouse movement and key events, intercept‐\ning, 515-518\nmouseenter and mouseleave, 518\nmousemove event, 515\nmouseout method (jQuery), 519\nmouseover method (jQuery), 519\nmoveTo method, context object, 567, 584\nmove_uploaded_file function (PHP), 156\nMozilla Firefox, 15\nFireFTP add-on, 29\nMP3 (audio) codec, 618\nMP4 format, 624\nmultidimensional arrays\nin JavaScript, 317, 363\nin PHP, 43, 129\nmultipart/form-data content type, 156\nmultiple-column layout (CSS3), 463-465\nmultiple-line commands (PHP), 50\nmultiplication operator (*)\nin JavaScript, 318\nin PHP, 45, 67, 68\nMySQL\nacccessing via command line, 166-172\naccessing via phpMyAdmin, 205, 206\nbacking up and restoring, 227-232basics, 165\ncommands, 172-177\ndata types, 177-186\ndatabase design, 209\ndatabase terms, 166\nEXPLAIN command, 226\nFULLTEXT stopwords, 711\nfunctions, 204, 715-724\ndate, 718-723\nstring, 715-718\ntime, 723-724\nin dynamic client/server request/response\nprocess, 4\nin W AMPs, MAMPs, and LAMPs, 16\nindexes, 186-192\ninserting and deleting data in a database\nusing PHP, 240-248\njoining tables together, 202\nnormalization, 211-219\nPHP authentication using, 296\nPHP functions for (social networking site),\n654\npreventing hacking attempts, 277\nquerying a database, 192-202\nquerying a database with PHP, 233-240\nrelationships in database data, 219-222\nsetting up tables for social networking site\n(setup.php), 658\ntransactions, 223-226\nusernames and passwords, storing, 295\nusing for dynamic web content, 7\nworking with PHP , JavaScript, CSS, and\nHTML5, 12\nmysqldump command, 227-232\nmysqli extensions, 233\nconnecting to MySQL server with, 235\nquerying a database, 236\nusing procedurally, 261, 279\nmysqli_real_escape_string function, 279\nmysql_entities_fix_string function, 260\nmysql_insert_id function, 252\nN\n\\n (newline) escape character, 320\nnames\nof JavaScript functions, 352\nof PHP functions, 98\nof properties and methods in JavaScript, 357\nvalidating in user signup form, 374\n764 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 795,
    "text": "naming rules\nvariables in JavaScript, 316\nvariables in PHP, 44\nNATURAL JOIN keyword (MySQL), 203, 255\nnew keyword (PHP), 108\nnext method (jQuery), 545\nnextAll method (jQuery), 546\nnextUntil method (jQuery), 546\nnoConflict method (jQuery), 505\nnon-looping conditionals, 74\nnormalization\nFirst Normal Form, 212\nSecond Normal Form, 214\nThird Normal Form, 217\nwhen not to use, 219\n<noscript> tags, 310\nNot (!) logical operator\nin JavaScript, 319, 334, 336\nin PHP, 68, 73, 89\nnot identical operator (!==)\nin JavaScript, 319, 334\nin PHP, 68, 71\nNOT logical operator in MysQL WHERE quer‐\nies, 204\nnot method (jQuery), 547\nNULL values\nin MySQL fields, 176\nin PHP, 65\nnumber and range input types, 285\nnumbers\nconversion to and from stings in JavaScript,\n335\nconversion to and from strings in PHP, 52\nnumeric arrays\nin JavaScript, 361\nassigning element values, 361\nassignment using Array keyword, 362\nin PHP, 123, 131, 239\nwalking through, using foreach ... as\nloop, 127\nnumeric data types (MySQL), 179\nnumeric variables\nin JavaScript, 317\nin PHP, 41\nO\nobject operator (->) in PHP, 113, 235\nobject-oriented programming (OOP), 106\nobjects, 95in JavaScript, 356-361\naccessing, 358\nattaching events to, 487\ncreating, 357\ndeclaring a class, 356\nprototype keyword, 358-361\nin jQuery, 508, 729\nin PHP\naccessing, 109\ncloning, 110\nconstructors, 111\ncreating, 108\ndeclaring a class, 107\ndeclaring constants, 115\ndeclaring properties, 114\ndestructors, 112\ninheritance, 118\nproperty and method scope, 115\nstatic methods, 113\nstatic properties and methods, 116\nterminology, 106\nwriting methods, 112\noffline web applications (HTML5), 641-643\nOGG format, 624\nOgg Vorbis (audio) codec, 618\nonclick event, 339\nondragstart, ondragover, and ondrop events,\n643\none-to-many relationships, 220\none-to-one relationships, 219\none-way functions, 294\nonerror event, 339\nonline resources, 707\nonload event, 509, 577\nonreadystatechange property, XMLHttpRe‐\nquest, 400\nonSubmit attribute, <form> element, 374\nopacity property (CSS), 467\nopen source, benefits of, 12\nOpenType fonts, 469\nOpera, 15\noperating systems\naudio types supported, 619\nvideo types supported, 624\noperators\nin JavaScript, 318-321, 333-338\narithmetic operators, 318\nassociativity, 334\ncomparison operators, 319, 336\nIndex | 765"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 796,
    "text": "escaping characters, 320\nlogical operators, 319, 336\nprecedence, 334\nrelational operators, 335-338\nstring concatenation, 320\ntypes of, 333\nin PHP, 45, 66-74\narithmetic operators, 45\nassignment operators, 45\nassociativity, 69\ncomparison operators, 46\nlogical operators, 46\nprecedence, 67\nrelational operators, 70\ntypes of, 66\nor (low precedence) logical operator (PHP), 47,\n68, 73\nOr (||) logical operator\nin JavaScript, 319, 336\nin PHP, 47, 68\nOR logical operator in MySQL WHERE quer‐\nies, 204\nORDER BY keyword (MySQL), 200\nouterHeight method (jQuery), 538\nouterWidth method (jQuery), 538\noverflow property (CSS), 463, 468\noverride attributes on form elements, 283\nP\npacket sniffing, 303\npadding, adjusting with CSS, 448\n<param> element, FlashVars attribute, 622, 628\nparent elements, 539-543\nreporting with is method, 548\nselecting ancestor elements, 541\nparent method (jQuery), 539\nusing a filter, 540\nparent operator (PHP), 119\nparents method (jQuery), 541\ncomparing to parentsUntil method, 542\nparentsUntil method (jQuery), 541\ncomparing to parents method, 542\npassing by reference in PHP (deprecated), 100\npasswords\nchecking validity of, 293\nsalting before encrypting, 294\nstoring, 294\nvalidating for form input, 376, 391\npaths, using in HTML5 canvas, 584-586beginPath and closePath methods, 584\nin line drawing, 582\nisPointInPath method, 590\nmoveTo and lineTo methods, 584\nrect method, 585\nstroke method, 585\npatterns, using for fills in HTML5 canvas, 576\nPCM (audio) codec, 618\npercent (%), CSS measurement, 432\nPerl, 5\nperspective function (CSS), 473\nPHP, 35-62\narrays, 123-136\nbenefits of, 5\ncasting, implicit and explicit, 90\ncode examples for this book, 37\ncomments, 38\nconditionals, 74-83\nconstants, 53\ncookies, using in, 287-290\ndate and time functions, 143-147\ndynamic linking with, 91\necho versus print commands, 55\nexpressions, 63-66\nfile handling, 147-160\nform handling, 265-285\nfunctions, 55, 95-106\nHTTP authentication, 290-298\nIDEs for, 31\nin dynamic client/server request/response\nprocess, 4\nin W AMPs, MAMPs, and LAMPs, 16\nincorporting within HTML, 35\ninserting and deleting data in MySQL data‐\nbase, 240-248\nlooping in, 83-90\nmaking calls to MySQL, 8\nmultiple-line commands, 50\nobjects, 106-121\noperators, 45, 66-74\npractical MySQL techniques, 248-255\nprintf function, 139-143\nquerying MySQL database, 233-240\nresource sites, 707\nsending Ajax GET request, 405\nsending Ajax POST request, 402\nsessions, 298-306\nsocial networking site example files, 653-686\nsprintf function, 143\n766 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 797,
    "text": "symbiosis with MySQL, 5\nsyntax\n$ symbol, 39\nsemicolons (;), 39\nsystem calls, 160\nusing, 6\nusing for dynamic web content, 11\nusing regular expressions in, 386\nvalidating form data, 387-391\nvariable assignment, 48\nvariable scope, 56-62\nvariable typing, 52\nvariables, 40-45\nworking with MySQL, JavaScript, CSS, and\nHTML5, 12\nXHTML or HTML5, 162\n<?php and ?> tags, 234\n<?php> <?> tags, 36\nphpDesigner IDE, 31\nphpinfo function, 96\nphpMyAdmin, accessing MySQL via, 205-206\nphpversion function, 105\nphp_sapi_name function, 292\npicas (CSS measurement), 431\npixels (CSS measurement), 431\nplaceholder attribute, <input> element, 282\nplaceholders, using with prepared statements\n(MySQL), 257\nplayers for audio and video, 617\npoints (CSS measurement), 431\npop method (JavaScript), 366\nposition property (CSS), 439\nrelative value, 528\npositioning elements (CSS), 439, 526\nabsolute positioning, 440\napplying different positioning values, 441\nfixed positioning, 440\nrelative positioning, 440\n$_POST array (PHP), 244, 267\nassigning to PHP global variable, security\nissues, 268\n$.post method (jQuery), 551\nPOST method (HTTP), 156, 243, 266\nAjax POST request, 400\n<pre> </pre> tags, 143, 245\n<pre> tags, 130\nprecedence (operator), 67, 334\nprecision setting (printf), 141\npreg_match function (PHP), 386preg_match_all function (PHP), 386\npreg_replace function (JavaScript), 386\npreparedstatements with placeholders\n(MySQL), 257\nprepend method (jQuery), 533, 534\nprev method (jQuery), 545, 546\nprevAll method (jQuery), 546\npreventDefault method, event object, 515\nprevUntil method (jQuery), 546\nprimary keys, 189, 210\nprint function (PHP), 99\nas pseudofunction, 96\necho command versus, 55\nprintf function (PHP), 139-143\nconversion specifiers, 139\nprecision, setting for displayed result, 140\nstring padding, 142\nusing sprintf, 143\nprint_r fuction (PHP), 108, 110\nprinting out array contents, 124\nprivacy, preserving with database information,\n222\nprivate keyword (PHP), 116\nprofile.php (social networking site), 667-672\nadding \"About Me\" text, 668\nadding an image, 668\ndisplaying current profile, 669\nprocessing the image, 668\nprogram editors, 30\nproperties\nin CSS, 416\naccessing from JavaScript, 482-484, 491\naltering using jQuery, 506\nanimating using jQuery, 526-529\napplying, 417\nfont properties, 432\norder in shorthand rules, 445\nshorthand assignment of, 444\nspecifying for transitions, 474\nin JavaScript, 356, 358\nmanaged by save and restore methods in\ncanvas, 610\nprototype property, 359\nstatic properties, 360\nin PHP, 106\naccessing an object's properties, 109\ndeclaring, 114\nscope, 115\nstatic properties, 117\nIndex | 767"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 798,
    "text": "protected keyword (PHP), 116\nprototype keyword (JavaScript), 358, 361\npseudo-classes (CSS), 442, 451\npseudo-elements (CSS), 442, 451\npseudofunctions, 96\npublic keyword (PHP), 107, 116\nPulse Coded Modulation (PCM) codec, 618\npush method (JavaScript), 361, 366\nputImageData method, context object, 605\nPuTTY, 28\nQ\nquadraticCurveTo method, context object, 595\nquerying MySQL databases using PHP,\n233-240, 246\nbuilding and executing a query, 236\nclosing a connection, 240\nconnecting to a database, 235\ncreating a login file, 234\nfetching a result, 237\nfetching a row, 239\nperforming a secondary query, 254\nproess of using PHP with MySQL, 233\nqueues, managing in jQuery, 530\nR\n\\r (carriage return) escape character, 320\n\\r (carriage return) escape character, 320\nradial gradients, 439, 574\nradio buttons, 272, 273\nrange input type, 285\nranges in regular expressions, 380\nready method (jQuery), 509\nreadyState property, XMLHttpRequest object,\n400\nreal_escape_string method, 256\nrecords (database), 165\nrecords (MySQL), deleting using PHP, 244\nrectangles, drawing in HTML5 canvas\naddColorStop method for gradients, 573\nclearRect method, 569\ncombining rectangle-drawing commands,\n570\ncreateLinearGradient method, 571\ncreateRadialGradient method, 574\nfillRect method, 569\nrect method, 585\nstrokeRect method, 570\nusing patterns for fills, 576register_globals function (PHP), 268\nregular expressions, 377-387\nbreakdown of typical regular expression,\n381\ncharacter classes, 380\nexamples of, 385\nfuzzy character matching, 378\ngeneral modifiers, 385\ngrouping through parentheses, 379\nin JavaScript form validation, 376\ninformaton resources for, 387\nmetacharacters, 378, 383\nnegation in, 380\nranges in, 380\nusing in JavaScript, 386\nusing in PHP, 386, 392\nrelational databases, 7\nprimary keys, 210\nrelational operators\nin JavaScript, 335-338\nin PHP, 70\nrelationships (database data), 219-222\ndatabases and anonymity, 222\nmany-to-many, 221\none-to-many, 220\none-to-one, 219\nrelative positioning of elements, 440, 528\nremote server, MySQL on, 170\nremove method (jQuery), 533, 535\nremoveClass method (jQuery), 535\nRENAME command (MySQL), 183\nrename function (PHP), 150\nreplace method (JavaScript), 386\nrequest/response process, 2\nrequire statement (PHP), 105, 235\nrequired attribute, <input> element, 282\nrequire_once statement (PHP), 105, 235\nreset function (PHP), 136\nresources, online, 707\nresponseText property, XMLHttpRequest\nobject, 401\nresponseXML property, XMLHttpRequest, 408\nrestore method, context object, 610\nrestoring MySQL databases, 231\nreturn statements\nin JavaScript, 355\nin JavaScript functions, 352\nin PHP functions, 98\nreverse method (JavaScript), 367\n768 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 799,
    "text": "REVOKE command (MySQL), 175\nRGB colors, 437, 465\nin CSS3, 466\nrgb function (CSS), 437, 466\nRGBA colors, 465, 467\nrgba function (CSS), 467\nROLLBACK command (MySQL), 225\nrotate function (CSS), 472\nrotate method, context object, 611, 615\nrotate3d function (CSS), 473\nrows (database), 165\nrows (MySQL), fetching results as, 239\nrsort function (PHP), 133\nrules (CSS), 416\ncalculating specificity of, 427\nexactly equivalent style rules, 428\nusing a different number base, 428\nmultiple assignments, 416\nshorthand rules, 444\nuniversal selector (*) and, 424\nusing comments with, 417\nS\nSafari, 15\nsalting, 294\nsave method, context object, 610\nScalable Vector Graphics (see SVG)\nscale function (CSS), 472\nscale method, context object, 609, 614\nscale3d function (CSS), 473\nscope resolution operator (::) in PHP, 114, 115\nscreen object, 485\n<script> tags, 8, 310\nincluding JavaScript scripts, 312\nincluding jQuery within, 501\nscripting languages, 312\nSecond Normal Form, 214\nSecure Sokets Layer (SSL), 303\nsecurity\nPHP superglobals and, 61\npreventing hacking attemps on MySQL\ninput, 255\nsessions, 303\nweb messaging communications, 648\nseek options (fseek function in PHP), 152\nSELECT command (MySQL), 7, 192\nGROUP BY keyword with, 201\njoining two tables into single SELECT, 203\nusing AS keyword, 203LIMIT qualifier with, 196\nORDER BY keyword with, 200\nretrieving data using PHP, 251\nSELECT COUNT, 193\nSELECT DISTINCT, 193\n<select> tags, 275\nselectors (CSS), 416, 417, 420-425\nattribute selectors, 423, 451\nchild selectors, 421\nclass selectors, 423\ndescendant selectors, 420\nID selectors, 422\nselecting by group, 425\nstyle sheet selectors, 426\ntype selectors, 420\nuniversal selector (*), 424\nselectors (jQuery), 505-508, 725-729\nclass selector, 507\ncombining, 507\nelement selector, 506\nID selector, 507\nself keyword (PHP), 115, 120\nself-closing HTML tags, 64\nsepia effect, creating for an image in HTML5\ncanvas, 604\nserver port other than 80 for XAMPP, 25\n$_SERVER variable (PHP), 292\nserver-side scripting, 5\nservers, 2\nserver half of Ajax process, 402\nsetting up a development server, 15-33\nshared, storing session data, 306\n$_SESSION array, 299, 301\nsession fixation, preventing, 304\nsessions, 298-306\nending, 302\nretrieving session variables, 300\nsecurity, 303\nsetting timeout for, 303\nstarting, 299\nsession_destroy function (PHP), 302\nsession_regenerate_id function (PHP), 305\nsession_start function (PHP), 299\nsetAttribute function (JavaScript), 482\nsetcookie function (PHP), 289\nsetInterval function (JavaScript), 493\nsetLineDash method, context object, 596\nsetTimeout function (JavaScript), 492\npassing a string to, 492\nIndex | 769"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 800,
    "text": "repeating timeouts, 493\nsetTransform method, context object, 615\nsetup.php (social networking site), 658\nsha1 and sha2 hashing algorithms, 294\nshadows, adding to images in HTML5 canvas,\n600\nSHOW comand (MySQL), 185\nSHOW command (MySQL), 170\nshow method (jQuery), 522\nshuffle function (PHP), 133\nsiblings method (jQuery), 543\nselecting and filtering sibling elements, 544\nusing andSelf method with, 545\nsignup.php (social networking site), 661\nchecking username availability, 661\nlogging in, 662\nskew function (CSS), 472\nslideDown method (jQuery), 525\nslideToggle method (jQuery), 525\nslideUp method (jQuery), 525\nSMALLINT data type (MySQL), 184\nsocial networking site, 653\ncheckuser.php, 665\ndesigning, 653\nexamples on companion website, 654\nfriends.php, 675\nfunctions.php, 654\nheader.php, 656\nindex.php, 660\njavascript.js, 685\nlogin.php file, 665\nlogout.php, 681\nmembers.php, 672-675\nmessages.php, 678\nprofile.php, 667-672\nsetup.php, 658\nsignup.php, 661\nsort function (PHP), 133\nsort method (JavaScript), 367\n<source> element (HTML5), 619, 623\nattributes supported, 625\nspacing (text), 435\n<span> versus <div> elements, 429\nspecial effects, processing in jQuery, 521-530\nanimations, 526-530\nstopping, 529\narguments, 522\nfading in and out, 524\nhiding and showing, 522sliding elements up and down, 525\ntoggle method, 523\nsprintf function (PHP), 143\nSQL (Structured Query Language), 7, 165\nSQL injections, preventing, 260\nSSH, for remote access to developent server, 28\nSSL (Secure Sockets Layer), 303, 637\nSTART TRANSACTION sttement (MySQL),\n224\nstatements\nin JavaScript, 333\nin PHP, 66\nstatic methods\nin JavaScript, 360\nin PHP, 113, 117\nstatic properties\nin JavaScript, 360\nin PHP, 117\nstatic variables, 103\nin PHP, 59\nstep attribute, <input> element, 284\nstop method (jQuery), 529\nstopwords, 191, 711-713\nstorage engines (MySQL), 223\nstring concatenation operator (.) in PHP, 49, 68\nstring object (JavaScript), 338\nstring padding (printf), 142\nstrings\nin JavaScript, 316\nconcatenation, 320\nin PHP\nconcatenation, 49\nconversions to and from numbers , 53\nescaping charaters, 49\nexploding into an array, 133\nfunctions for, 97\nstring variables, 40\ntypes of, 49\nmatching parts of in CSS3, 452\nstring functions in MySQL, 715-718\nstripslashes function (PHP), 278\nstroke method, context oject, 585\nusing with setLineDash, 596\nstrokeRect method, context object, 570\nstrokeText method, context object, 578, 581\nstrrev function (PHP), 97\nstrtolower function (PHP), 98\nstrtoupper function (PHP), 97\nstyle sheets (CSS)\n770 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 801,
    "text": "creators and order of precedence, 426\nexternal, 419\nimporting, 414\nmethods of creation and order of prece‐\ndence, 426\nstyles.css (social networking site), 682\n<style> tags, 9\nCSS @import directive within, 414\ninternal styles within, 419\nstyle types (CSS), 418\ndefault styles, 418\nexternal style sheets, 419\ninline styles, 420\ninternal styles, 419\nuser styles, 418\nsubclasses, 107\nconstructors, 120\nsubmit button (forms), 277\nsubmit event (jQuery), 520\nsubstr function (PHP), 53\nsubstr method (JavaScript), 354\nsubtraction operator (-)\nin JavaScript, 318\nin PHP, 45, 68\nsuperclass, 107\nsuperglobal variables (PHP), 60\nsecurity and, 61\nSVG (Scalable Vector Graphics), 11\nswitch statements\nin JavaScript, 342\nbreak command, 343\ndefault action, 343\nin PHP, 79\nalternative syntax, 81\nbreak command, 81\ncase command, 80\ndefault action, 81\nsyntax errors in JavaScript, 340\nsystem calls (PHP), 160\nT\n\\t (tab) escape character, 50, 130, 320\ntable cells, padding applied to text in, 448\ntables (MySQL), 165\nadding data to, 182\nadding data using PHP, 250\nadding indexes, 187\nadding indexes when creating, 188\nALTER TABLE command, 181backing up a single table, 230\nbacking up all tables at once, 230\nceating, viewing, and deleting, 185\ncreating, 175\ncreating transaction-ready table, 223\ncreating using PHP, 248\ndeleting data using PHP, 252\ndescribing using PHP, 249\ndropping a table using PHP, 250\njoining, 202\nlocking for reading, 228\nnames of, case sensitivity, 173\nrenaming, 183\nrestoring a table to a database, 231\nretrieving data using PHP, 251\nupdating data using PHP, 251\ntags in PHP, 52\nTcl scripting language, 312\nTelnet, using for remote access to developent\nserver, 28\nternary operator (? :), 67\nin JavaScript, 334, 344\nin PHP, 68\nreplacing if and else statements in PHP, 82\ntest method (JavaScipt), 376, 386\ntext\nflowing in multiple columns (CSS3), 463\nwriting to HTML5 canvas, 578\nfillText method, 580\nfont property, 579\nmeasureText method, 581\nstrokeText method, 578\ntextAlign property, 579\ntext areas, 270\nautofocus attribute, 282\nwrap types available in, 271\ntext boxes, 270\nTEXT data types (MySQL), 178\ntext effects in CSS3, 467-469\ntext method (jQuery), 531\ntext-decoration property (CSS), 435, 482\ntext-indent property (CSS), 436\ntext-overflow property (CSS), 468\ntext-shadow property (CSS), 467\ntext/cache-manifest MIME type, 642\ntextAlign property (context object), 579\ntextBaseLine property (context object), 578, 579\ntextDecoration property (JavaScript), 481\nTheora (video) codec, 624\nIndex | 771"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 802,
    "text": "Third Normal Form, 217\nthird-party cookies, 287\nthis keyword (JavaScript), 357, 401, 486\n$this variable (PHP), 113\nTIME data type (MySQL), 180\ntime function (PHP), 56, 143\ntime functions (MySQL), 723-724\ntimeouts\ncanceling, 493\nrepeating with setTimeout, 493\nsetting for sessions, 303\nsetting with setTimeout, 492\nTIMESAMP data type (MySQL), 180\ntimestamps\ncreating, 144\nfetching, 143\ntoDataURL method, context object, 567, 581\ntoggle method (jQuery), 523\ntoggleClass method (jQuery), 535\ntoLowerCase method (JavaScript), 354\ntoUpperCase method (JavaScript), 354\ntransactions, 223, 226\nstorage engines, 223\nusing BEGIN statement, 224\nusing COMMIT command, 225\nusing ROLLBACK command, 225\ntransform method, context object, 613\ntransform property (CSS), 472\ntransform-origin property (CSS), 473\ntransformations\nin CSS\ntext, 436\nin CSS3, 472\n3D transformations, 473\nusing HTML5 canvas, 609-615\nrotate method, 611\nsave and restore methods, 610\nscale method, 609\nsetTransform method, 615\ntransform method, 613\ntranslate method, 612\ntransition property (CSS), shorthand syntax,\n476\ntransition-delay property (CSS), 475\ntransition-duration property (CSS), 475\ntransition-property property (CSS), 474\ntransition-timing property (CSS), 475\ntransitions in CSS3, 474-477\ntranslate function (CSS), 472translate method, context object, 612\ntranslate3d function (CSS), 473\ntransparency, 465\nopacity property in CSS3, 467\nspecifying for HTML5 canvas with global‐\nAlpha property, 609\ntriggers, 219\ntrue and false values (JavaScript), 332\nTRUE and FALSE values (PHP), 63, 386\nTrueType fonts, 469\ntry ... catch construct (JavaScript), 340, 397\nfinally clause, 341\ntype selectors (CSS), 420\ntype-changing functions in JavaScript, 348\ntypeof operator (JavaScript), 321, 323\ntypes (see data types)\ntypography and fonts, 432-435\nU\nucfirst function (PHP), 98\nUI plugin (jQuery), 553\nunary operators, 66\nin JavaScript, 333\nundefined variables in JavaScript, 323\nuniversal selector (*) in CSS, 424, 444\nUnix\nls system command, 160\ntimestamps, 56, 143\nunlink function (PHP), 151\nUNSIGNED qualifier (MySQL), 180\nUPDATE ... SET construct (MySQL), 199\ncalling from PHP, 251\nUPDATE keyword (MySQL), 189\nurl function (CSS), 469\nuser agent string, 304\nuser styles (CSS), 418\nusernames\nchecking for availability, social networking\nsite, 661\nchecking validity of, 293\nstoring, 294\nvalidating for form input, 376\nregular expression used, 382\nusers, creating in MySQL, 173\nV\nval method (jQuery), 521, 531\nvalidation\nform data using jQuery, 520\n772 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 803,
    "text": "form data using PHP, 387-392\nform input with JavaScript, 371-377\nvalue attribute, <input> element, 392\nV ALUES keyword (MySQL), 183\nvar keyword\nin JavaScript, 323, 324\nin PHP, 116\nV ARCHAR data type (MySQL), 177, 185\nversus TEXT type, 178\nvariable substitution, 49\nvariables\nin JavaScript, 316-318\narrays, 317\nexpressions as variables, 332\nincrementing and decrementing, 320\nnaming rules, 316\nnumeric variables, 317\nscope, 322\nstring variables, 316\ntyping, 321\nin PHP, 40-45\narrays, 42\nassignment, 48\nexpressions as variables, 65\nextracting from arrays, 134\ninitialization, importance of, 268\nnaming rules, 44\nnumeric variables, 41\nscope, 56-62, 103\nstring variables, 40\nsyntax, 39\ntyping, 52\npassing a reference to its value, 100\nVBScript, 312\nversion compatibility (PHP), 105\n<video> element (HTML5), 10, 561, 623\nattributes supported, 625\ncodecs, 623\n<source> tags nested in, 623\nvisibility property (CSS), 491\nvisited pseudo-class (CSS), 442\nVorbis (audio) codec, 618\nVP8 (video) codec, 624\nVP9 (video) codec, 624\nW\nW3C (World Wide Web Consortium), 10\nW AMPs (Windows, Apache, MySQL, and\nPHP), 16alternatives to XAMPP, 26\ninstalling XAMPP on Windows, 16-26\nweb applications, 563\noffline, 641-643\nweb browsers (see browsers)\nweb fonts in CSS3, 469\nGoogle web fonts, 470\nweb page for this book, xxvii\nweb servers, 1\nApache, 11\nbrowser/server request/response dialog with\ncookies, 288\nweb workers (HTML5), 563, 639-641\nWebKit, 499\nWebM audio-video format, 624\nWHERE keyword (MySQL), 189\nuses of, 195\nusing in DELETE command, 194\nusing logical operators in WHERE queries,\n204\nusing with LIKE qualifier, 195\nwhich property, event object, 514\nwhile loops\nin JavaScript, 344, 641\nin PHP, 84, 128\ncomparison to for loops, 87\nwhite-space:nowrap property (CSS), 468\nwhitespace\nin PHP code, 39\nmatching in regular expressions, 380\nwhitespace characters in PHP, 76\nwidth and height attributes, <input> element,\n283\nwidth method (jQuery), 536\nwindow object\ncommon properties, 484\ndefaultStatus and status properties, 485\nfetching width and height in jQuery, 536\ninnerHeight and innerWidth properties, 485\nWindows\naccessing MySQL via command prompt,\n167\ndir system command, 160\ninstalling XAMPP on, 16\nPuTTY for remote access to development\nserver, 28\nstarting MySQL and logging in as user, 174\nXAMPP on, location of mysqldump, 228\nIndex | 773"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 804,
    "text": "Windows, Apache, MySQL, and PHP (see\nW AMPs)\nwith statement (JavaScript), 338\nword-spacing property (CSS), 435\nword-wrap property (CSS), 469\nWordPress blogging platform, 92\nWorld Wide Web Consortium (W3C), 10\nX\nXAMPP\naccessing MySQL via phpMyAdmin,\n205-206\nconfiguring from control panel, 21\ninstalling on Linux, 28\ninstalling on Mac OS X, 27\ninstalling on Windows, 16\nlikely locations for mysqldump in different\ninstallations, 228\ntesting the installation, 24\naccessing the document root, 25\nXHTML\nHTML5 and, 11versus HTML5, 162\nXML\nabout, 408\nreasons for using in Ajax, 410\nusing jQuery text method with, 531\nXMLHttpRequest object, 340, 395, 396-411\nGET request, 403\nPOST requests, 398-400\nproperties and methods, 397\nreadyState property, 400\nxor (exclusive or) logical operator (PHP), 47,\n68, 72\nXSS scripting, preventing, 259\nY\nYEAR data type (MySQL), 180\nZ\nZEROFILL qualifier, numeric data types in\nMySQL, 180\n774 | Index"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 805,
    "text": "About the Author\nRobin Nixon  has over 30 years of experience with writing software and developing\nwebsites and apps. He also has an extensive history of writing about computers and\ntechnology, with a portfolio of over 500 published magazine articles and almost 30\nbooks, many of which have been translated into other languages. He is also a prolific\nInternet video course instructor\nAs well as IT, his interests include psychology and motivation (which he also writes\nabout), artificial intelligence research, many types of music (both playing and listen‐\ning to), playing and creating board games, studying philosophy and culture, and\nenjoying good food and drink.\nRobin lives on the southeast coast of England (where he writes full time) with his five\nchildren and wife, Julie (a trained nurse and university lecturer). Between them they\nalso foster three disabled children. Y ou can keep up with Robin’s (sporadic) posts via\nhis website at robinnixon.com .\nColophon\nThe animals on the cover of Learning PHP , MySQL, JavaScript, CSS, & HTML5  are\nsugar gliders ( Petaurus breviceps ). Sugar gliders are small, gray-furred creatures that\ngrow to an adult length of 6 to 7.5 inches. Their tails, which are distinguished by a\nblack tip, are usually as long as their bodies. Membranes extend between their wrists\nand ankles and provide an aerodynamic surface that helps them glide between trees.\nSugar gliders are native to Australia and Tasmania. They prefer to live in the hollow\nparts of eucalyptus and other types of large trees with several other adult sugar gliders\nand their own children.\nThough sugar gliders reside in groups and defend their territory together, they don’t\nalways live in harmony. One male will assert his dominance by marking the group’s\nterritory with his saliva and then by marking all group members with a distinctive\nscent produced from his forehead and chest glands. This ensures that members of the\ngroup will know when an outsider approaches; group members will fight off any\nsugar glider not bearing their scent. However, a sugar glider group will welcome and\nmark an outsider if one of their adult males dies (the group will typically replace a\ndeceased adult female with one of their own female offspring).\nSugar gliders make popular pets because of their inquisitive, playful natures, and\nbecause many think they are cute. But there are disadvantages to keeping sugar glid‐\ners as pets: as they are exotic animals, sugar gliders need specialized, complicated\ndiets consisting of items such as crickets, a variety of fruits and vegetables, and meal‐\nworms; healthy housing requires a cage or space no less than the size of an aviary;"
  },
  {
    "file": "Learning_PHP_MySQL.pdf",
    "page": 806,
    "text": "their distinctive scents can be bothersome to humans; as they are nocturnal creatures,\nthey will bark, hiss, run, and glide all night long; it’s not uncommon for them to lose\ncontrol of their bowels while playing or eating; and in some states and countries, it is\nillegal to own sugar gliders as household pets.\nThe cover image is from Dover’s Animals . The cover fonts are URW Typewriter and\nGuardian Sans. The text font is Adobe Minion Pro; the heading font is Adobe Myriad\nCondensed; and the code font is Dalton Maag’s Ubuntu Mono."
  },
  {
    "file": "quantriweb.pdf",
    "page": 1,
    "text": "CÔNG TY ĐIỆN TOÁN VÀ TRUY ỀN SỐ LIỆU \nTRUNG TÂM ĐIỆN TOÁN TRUY ỀN SỐ LIỆU KV1 \n \n-------------- o0o ------------- \n \n \n \n \n \nGIÁO TRÌNH ĐÀO TẠO  \n \nXÂY DỰNG VÀ QU ẢN TRỊ \n \n WEBSITE, PORTAL  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nHà nội, năm 2003 \n 1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 2,
    "text": "MỤC LỤC \n \nChương I. Giới thiệu về  InterNet, World Wide Web ........................................ 6 \n1.1 Lịch sử phát triển.......................................................................................... 6 \n1.2 Tổ chức của Internet ...................................................................................... 7 \n1.3 Vấn đề quản lý mạng Internet ....................................................................... 9 \n1.4 Nguồn gốc Worl d Wide We b...................................................................... 10 \n1.5 Worl d Wide We b là gì? .............................................................................. 11 \n1.6 Trình duy ệt Web: ........................................................................................ 11 \nChương 2:  Tổng quan v ề một hệ thống Web ................................................... 24 \n2.1 Giới thiệu.................................................................................................... 24 \n2.2 M ô hình hệ thống Web nói chung ............................................................... 24 \n2.3. N guyên tắc hoạt động................................................................................ 25 \nChương 3:  Frontpage 2 002 (Front page XP) ................................................... 27 \n3.1 Mở, đóng, tạo mới, ghi một trang hay m ột Web site .................................. 28 \n3.2 Định dạng font c hữ, paragraph,... ............................................................... 30 \n3.3 Ảnh, âm thanh ............................................................................................. 32 \n3.4 Bảng(Table) ................................................................................................ 34 \n3.5 Hyperlink, Bookm ark.................................................................................. 36 \n3.6 Tạo khung (form )........................................................................................ 38 \nChương 4 Ngôn ng ữ đánh dấu siêu văn bản (HTM L: Hyper Text Markup \nLanguage) .......................................................................................................... 41 \n4.1 Khái ni ệm.................................................................................................... 41 \n4.2 Các th ẻ cơ bản:............................................................................................ 41 \n4.2.1 Các thẻ định nghĩa đoạn văn bản, kiểu chữ............................................. 41 \n4.2.2 Các thẻ định nghĩa bảng, ảnh................................................................... 50 \n3.2.3 Tên một đối tượng, hyperlink (t hẻ A)...................................................... 54 \n4.2.4 Tạo form ................................................................................................... 58 \n4.2.5 Tạo khung (th ẻ Frame) ............................................................................. 63 \nChương 5: CS S (Cascading Style  Sheets) ........................................................ 72 \n5.1 Khái quát ..................................................................................................... 72 \n5.2 Kỹ thuật CSS (nh ững kỹ thuật thông dụng)................................................ 73 \n5. 3 Một số thuộc tính hay dùng trong C SS (cùng thẻ HTML) ........................ 75 \nBài tập............................................................................................................... 77 \nChương 6 Sử dụng phần mềm Photos hop, C oreldraw á p dụng cho việc chỉnh \nsửa, xuất ảnh cho We b.................................................................................... 118 \n6.1- Đồ hoạ trên Web ...................................................................................... 118 \n6.1.1Giới thiệu đồ hoạ trên web ...................................................................... 118 \n6.1.2-Đồ hoạ trên Web khác gì? ..................................................................... 120 \n6.2- Xử lý đồ họa trên Web: ........................................................................... 120 \n6.2.1- Phần mềm xử lý đồ hoạ  photos hop...................................................... 120 \n6.2.1.1- Cơ sở về Phot oshop ........................................................................... 120 \n6.2.1.2-Giới thiệu các công c ụ chọn:.............................................................. 126 \n6.2.1.3 Công c ụ cắt ảnh:.................................................................................. 132 \n6.2.1.4 Nhóm  công cụ chỉnh sửa ảnh:............................................................. 132 \n6.2.1.5 Công c ụ tạo chữ:................................................................................. 135 \n 2\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 3,
    "text": "6.2.1.6  Cá c công cụ bút vẽ:............................................................................ 137 \n6.2.1.7 - Sử dụng công c ụ Eraser (E) ...................................................... 138 \n6.2.1.8 Công c ụ tô m àu cho đối tượng:........................................................... 138 \n6.2.1.8  C ông cụ tạo đường dẫn Path:............................................................. 139 \n6.2.1.10 - Các công c ụ tạo hình:..................................................................... 140 \n6.2.1.11 C ông cụ Zoom  và Hand: ................................................................... 141 \n6.2.1.12-  Công c ụ lấy màu............................................................................. 142 \n6.2.1.13 N hững điều cơ bản về Layer : ........................................................... 142 \n6.2.1.14   Mặt nạ và kênh: ............................................................................... 147 \n6.2.1.15 Là m việc với bảng Histor y (chuyển đổi ảnh đến 1 trạng thái bất kỳ)\n......................................................................................................................... 148 \n6.2.1.16 Căn chỉnh m àu cho ảnh:.................................................................... 149 \n6.2.2- Sử  dụng  corel draw áp d ụng cho thiết kế logo cho web ..................... 160 \n6.2.2.1-Cơ sở về Corel Draw .......................................................................... 160 \n6.2.2.2- Làm  việc với Corel Draw: ................................................................. 160 \n6.2.3 - Giới thiệu các phần mềm xử lý đồ hoạ khác ....................................... 186 \n6.2.3.1 - Fl ash:................................................................................................. 186 \n6.2.3.2- A dobe Im age Ready: ......................................................................... 186 \n6 .2.3.4- Xu h ướng về đồ hoạ hiện đại trên Web ............................................ 187 \nChương 7. Các ph ương pháp c ập nhật thông tin lên web ............................... 188 \n7.1 FTP d ưới dạng dòng l ệnh.......................................................................... 188 \n7.2 FTP d ưới dạng truyền file thông qua các ch ương trình ............................ 189 \n7.2.1 Giới thiệu một số chương trình FTP Cli ent........................................... 189 \n7.2.2 Tạo kết nối bằng WS _FTP P ro client .................................................... 189 \n7.2.3 Truyền file .............................................................................................. 190 \n7.2.4 Một vài chức năng của WS_FTP ........................................................... 191 \n7.2.4.1 Sửa thông tin Site profile đã có sẵn.................................................... 191 \n7.2.4.2. Cá c chức năng xử lý file và folder trên giao di ện chương trình ........ 192 \n7.2.4.3. Cá c chức năng trên Menu .................................................................. 193 \n194 7.2.4.4 Các thu ật ngữ thông dụng trong khi s ử dụng WS_FTP Pro ...............\nChương 8: Giới thiệu một số ngôn ngữ lập trình We b – Ngôn ng ữ lập trình \nASP ................................................................................................................. 195 \n8.1.Khái niệm về CGI: .................................................................................... 195 \n8.1.1.Khái niệm:.............................................................................................. 195 \n8.1.2.Cấu trúc: ................................................................................................. 195 \n8.1.3.Ví dụ về một CGI viết bằng Perl ........................................................... 195 \n8.2.Giới thiệu một số ngôn ngữ lập trình WEB .............................................. 196 \n8.2.1. Perl, vi ết tắt của Practical Extraction and Report Language ................ 196 \n8.2.2. PH P, viết tắt của PHP Hype rtext Prepr ocessor ..................................... 197 \n8.2.3.JSP, viết tắt của Java Server Pages ........................................................ 198 \n8.2.4.Javascript: ............................................................................................... 199 \n8.2.5.ASP........................................................................................................ 199 \n8.3. – N gôn ngữ ASP ...................................................................................... 200 \n8.3.1 Kiến thức cơ bản về VBScript ............................................................... 200 \n8.3.1.1- Biến và phạm vi biến......................................................................... 201 \n8.3.1.2- Cá c kiểu dữ liệu:................................................................................ 202 \n 3\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 4,
    "text": "8.3.1.3- Cá c hàm  trong V BScript :.................................................................. 204 \n8.3.1.4- Cá c toán tử và biểu thức.................................................................... 208 \n8.3.1.5- Cá c cấu trúc điều khiển...................................................................... 209 \n8.3.1.6. Cá c cấu trúc lặp.................................................................................. 210 \n8.3.2 - Ngôn ng ữ ASP ..................................................................................... 212 \n8.3.3- Mô hình AS P hoạt động như thế nào?.................................................. 213 \n8.3.4- Tạo một trang ASP ............................................................................... 214 \n8.3.4.1- Thêm  các lệnh Script ......................................................................... 215 \n8.3.4.2- Sử dụng các Server- Side VBScript và Javascript ............................. 216 \n8.3.4.3- K hai báo biến trong A SP................................................................... 216 \n8.3.4.4- P hạm vi hoạt động của biến............................................................... 217 \n8.3.4.5- Cá c biến phiên và bi ến ứng dụng...................................................... 218 \n8.3.4.6- K hai báo thủ tục, hàm  và cách g ọi..................................................... 218 \n8.3.4.7- Liên k ết nhiều tệp trong m ột tệp........................................................ 220 \n8.3..5- Sử dụng các đối tượng C ompone nt..................................................... 222 \n8.3.5.1- K hái niệm Com pone nts..................................................................... 222 \n8.3.5.2- Sử dụng các đối tượng trong C omponent .......................................... 223 \n8.3.5.3- Cá c phương thức và thuộc tính của đối tượng................................... 224 \n8.3.5.4- Thiết lập phạm vi đối tượng.............................................................. 224 \n8.3.6- Làm  việc với tập hợp (Collection) trong ASP ...................................... 225 \n8.36.1- Truy xu ất theo tên ............................................................................... 226 \n8.3.6.2- Truy xu ất theo chỉ số......................................................................... 226 \n8.3.6.3- Truy xu ất đến các phần tử của Collection dùng c ấu trúc lệnh.......... 226 \n8.3.6.4- Sử dụng thuộc tính C ount trong C ollection ....................................... 226 \n8.3.7- Các đối tượng của ASP ......................................................................... 226 \n8.3.7.1- Đối tượng Re quest ............................................................................. 227 \n8.3.7.2- Đối tượng Response ........................................................................... 232 \n8.3.7.3- Đối tượng Server ............................................................................... 233 \n8.3.7.4- Đối tượng Application ....................................................................... 233 \n8.3.7.5- Đối tượng Session .............................................................................. 234 \n8.3.7.6 - Tệp Global.asa .................................................................................. 234 \n8.3.7.8- Truy xu ất dữ liệu trong AS P.............................................................. 238 \n8.3.8.1- Tạo một ODBC DSN ......................................................................... 238 \n8.3.8.2- Cấu hình File DS N cho MS Access ................................................... 238 \n8.3.8.3- Cấu hình File DS N cho S QL Server .................................................. 238 \n8.3.8.4- Cấu hình File DS N cho O racle.......................................................... 239 \n8.3.8.5- Liên k ết và truy xu ất CSDL b ằng đối tượng Connection .................. 239 \n8.3.8.6- Sử dụng đối tượng RecordSet ............................................................ 240 \n8.3.8.7- Cá c thao tác d ữ liệu với RecordSet ................................................... 241 \n8.3.9- Thao tác v ới tệp và thư mục................................................................. 242 \n8.3.9.1- Đối tượng Drive ................................................................................. 243 \n8.3.9.2- Đối tượng Folder ............................................................................... 244 \n8.3.9.3- Đối tượng File .................................................................................... 244 \nChương 9: Quản trị máy chủ Web Server trên Windows ............................... 253 \n9.1. Giới thiệu WEB S erver............................................................................ 253 \n9.2. Giới thiệu một số phần mềm Web  Server................................................ 253 \n 4\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 5,
    "text": "9.3. Q uản trị máy  chủ WebServer  trên Windows - P hần mềm IIS Web Server\n......................................................................................................................... 255 \n9.3.1. Các khái ni ệm cơ bản............................................................................ 255 \n9.3.2. Cài đặt Internet Information Services IIS ............................................. 258 \n9.3.2.1. C huẩn bị cài đặt.................................................................................. 258 \n9.3.2.2. Cài  đặt Internet Info rmation Services ................................................ 258 \n9.3.3. Quản trị Internet Information Services (IIS) ......................................... 261 \n9.3.3.1. Cấu hình Internet Inform ation Ser vices............................................. 261 \n9.3.3.2 Stop/Start/Restart IIS .......................................................................... 275 \n9.3.3.3  Cài  đặt các công c ụ hỗ trợ bảo mật.................................................... 276 \nChương 10 Giới thiệu về WebP ortal và ph ương pháp thi ết kế web ............... 282 \n10.1 We bportal là gì? ...................................................................................... 282 \n10.2 Các lưu ý khi xây d ựng Webportal ......................................................... 282 \n10.3  Phương pháp thi ết kế web ...................................................................... 284 \n10.3.1 Xác định mục đích, yêu c ầu, đối tượng, nhu cầu điều kiện thiết kế Web\n......................................................................................................................... 285 \n10.3.2 Kỹ thuật khảo sát, thu th ập thông ti n................................................... 287 \n10.3.3 Phâ n tích, lựa chọn các thành ph ần chí nh của Website, th ứ tự ưu tiên 289 \n10.3.4 Phương án kỹ thuật, mô hình bảo mật, vận hành website ................... 290 \n10.3.5 Cấu trúc logic Web .............................................................................. 294 \n10.3.6 Cấu trúc cơ sở dữ liệu Web .................................................................. 296 \n10.3.7 Phương án triển khai xâ y dựng Web .................................................... 298 \n 5\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 6,
    "text": "Chương I. Giới thiệu về  InterNet, World Wide Web \n \n* INTERNET \n1.1 Lịch sử phát triển \nMạng Internet ngày nay là m ột mạng toàn cầu, ba o gồm hàng chục triệu người \nsử dụng, được hình thành cuối thập kỷ 60 từ một thí nghi ệm của Bộ Quốc \nphòng Mỹ. Tại thời điểm ban đầu đó là mạng ARPAnet c ủa Ban quản lý dự án \nnghiên cứu quốc phòng. ARPAnet là m ột mạng thử nghiệm phục vụ các nghiên \ncứu quốc phòng, m ột trong những mục đích của nó là xâ y dựng một mạng m áy \ntính có kh ả năng chịu đựng các sự cố (ví dụ một số nút mạng bị tấn công và \nphá huỷ nhưng mạng vẫn tiếp tục hoạt động). Mạng cho phé p một máy tính bất \nkỳ trên mạng liên lạc với mọi máy tính khác. \nKhả năng kết nối các hệ thống m áy tính khác  nhau đã hấp dẫn mọi người, mặt \nkhác đây cũng là phương pháp th ực tế duy nhất để kết nối các m áy tính của các \nhãng khác nha u. Kết quả là các nhà phát tri ển phần mềm ở Mỹ, Anh và châ u \nÂu bắt đầu phát triển các phần mềm trên bộ giao thức TCP/IP (giao th ức được \nsử dụng trong vi ệc truyền thông trên Internet) cho t ất cả các loại máy. Điều này \ncũng hấp dẫn các trường đại học, các trung t âm nghiê n cứu lớn và các c ơ quan \nchính phủ, những nơi mong m uốn mua máy tính từ các nhà sản xuất, không b ị \nphụ thuộc vào một hãng cố định nào. \nBên cạnh đó các hệ thống cục bộ LAN bắt đầu phát triển cùng với sự xuất hiện \ncác máy để bàn (desktop w orkstations) - 1983. P hần lớn các máy để bàn sử \ndụng Berke ley UNI X, phần mềm cho kết nối TCP/IP đã được coi là m ột phần \ncủa hệ điều hành nà y. Một điều rõ ràng là các m ạng nà y có thể kết nối với nha u \ndễ dàng. \nTrong quá trình hình t hành mạng Internet, NSFNET ( được sự tài trợ của Hội \nKhoa học quốc gia Mỹ) đóng một vai trò t ương đối quan trọng. Vào cu ối \nnhững năm 80, NFS t hiết lập 5 tr ung tâm  siêu m áy tính.  Trước đó, những m áy \ntính nha nh nhất thế giới  được sử dụng cho công vi ệc phát triển vũ khí mới và \nmột vài hãng l ớn. Với các trung t âm mới này, NF S đã cho phé p mọi người hoạt \nđộng trong l ĩnh vực khoa h ọc được sử dụng. Ban đầu, NF S định sử dụng \nARPAnet để nối 5 trung tâm  máy tính nà y, nhưng ý đồ này đã bị thói qua n liêu \nvà bộ máy hành chính làm th ất bại. Vì vậy, NF S đã quyết định xâ y dựng mạng \nriêng của mình, vẫn dựa trên thủ tục TCP/IP, đường truyền tốc độ 56 kbps. C ác \ntrường đại học được nối thành các m ạng vùng, và các m ạng vùng được nối với \ncác trung tâm siêu máy tính.     \nĐến cuối năm 1987, khi  l ượng thông tin truy ền tải làm các m áy tính kiểm so át \nđường truyền và bản thân mạng điện thoại nối các trung tâm siêu máy tính b ị \nquá tải, một hợp đồng về nâng cấp mạng NS FNET đã được ký với công ty \nMerit Network Inc, công ty đang cùng với IBM và MCI qu ản lý mạng giá o dục \nở Michigan. M ạng cũ đã được nâng cấp bằng đường điện thoại nhanh nh ất lúc \nbấy giờ, cho phép nâng t ốc độ lên gấp 20 lần. Các m áy tính kiểm so át mạng \n 6\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 7,
    "text": "cũng được nâng cấp. Việc nâng cấp mạng vẫn liên tục được tiến hành, đặc biệt \ntrong những năm cuối cùn g do số lượng người sử dụng Internet t ăng  nha nh \nchóng. \nĐiểm quan trọng của NS FNET là nó c ho phép m ọi người cùng sử dụng. Trước \nNSFNET, chỉ có các nhà khoa h ọc, chuyên gia m áy tính và nhân viên các c ơ \nquan chính ph ủ  được kết nối Internet. NSF ch ỉ tài trợ cho các tr ường đại học \nđể nối mạng, do đó mỗi sinh viên đại học đều có khả năng làm vi ệc trên \nInternet.  \nNgày nay mạng Internet đã được  phát tri ển nha nh chóng tr ong giới khoa  học \nvà giáo dục của Mỹ, sau đó phát triển rộng toàn cầu,  phục vụ một cách đắc lực \ncho việc trao đổi thông tin tr ước hết trong các l ĩnh vực nghiê n cứu, giáo dục và \ngần đây cho thương mại. \n1.2 Tổ chức của Internet \nInternet là m ột liên mạng, tức là mạng của các mạng con. V ậy đầu tiên là v ấn \nđề kết nối hai mạng con. Để kết nối hai mạng con với nha u, có ha i vấn đề cần \ngiải quyết. Về mặt vật lý, hai m ạng con c hỉ có thể kết nối với nhau khi có một \nmáy tính c ó thể kết nối với cả hai mạng nà y. Việc kết nối đơn thuần về vậy lý \nchưa thể làm cho hai m ạng con có th ể trao đổi thông tin v ới nhau. V ậy vấn đề \nthứ hai là máy k ết nối được về mặt vật lý với hai mạng con phải hiểu được cả \nhai gia o thức truyền tin được sử dụng trên hai m ạng con này và cá c gói  thông  \ntin của hai mạng con sẽ được gửi qua nhau thông qua đó. Máy tính này được \ngọi là Internet gateway hay router. \nRNet 1 Net 2\n \nHình 1. 1: Hai mạng Net 1 và N et 2 kết nối thông qua router R. \nKhi kết nối đã trở nên phức tạp hơn, các m áy gateway c ần phải biết về sơ đồ \nkiến trúc của các mạng kết nối. Ví dụ trong hình sau đây cho th ấy nhiều mạng \nđược kết nối bằng 2 router. \nR 1 R 2Net 1 Net 2 Net 3\n \nHình 1. 2: 3 mạng kết nối với nha u thông qua 2 router \nNhư vậy, router R 1 phải chuyển tất cả các gói thông t in đến một máy  nằm ở \no các máy trong mạng Net 2 ho ặc Net 3. V ới kích thước lớn như mạng Internet, vi ệc các routers \nlàm sao có th ể quyết định về việc chuyển các gói thông tin ch\ncác mạng sẽ trở nên phức tạp hơn. \n 7\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 8,
    "text": "Để các routers có th ể thực hiện được công vi ệc chuyển một số lớn các gói  \nthông tin thu ộc các mạng khác nhau ng ười ta đề ra quy tắc là: \nCác routers chuy ển các gói thông tin d ựa trên địa chỉ mạng của nơi đến, chứ \neo số mạng trên Internet ch ứ không ph ải là số \nnh lệch nhau. Giao th ức TCP/IP của Internet ho ạt \n chính là điểm giúp \ncho TC P/IP tỏ ra rất mạnh. \nNhư vậy, người dùng trong Internet hình dung Internet là m ột mạng thống nhất \nvà bất kỳ hai m áy nào trên Interne t đều được nối với nhau thông qua m ột mạng \nduy nhất. Hình vẽ sau mô tả kiến trúc tổng thể của Internet. không phải dựa trên địa chỉ của máy nhận. \nNhư vậy, dựa trên địa chỉ mạng nên tổng số thông tin m à router ph ải lưu giữ về \nsơ đồ kiến trúc mạng sẽ tuân th\nmáy trên Internet. \nTrên Internet, t ất cả các mạng đều có quyền bình đẳng cho dù chúng có t ổ chức \nhay số lượng m áy là rất chê\nđộng tuâ n theo qua n điểm sau : \nTất các các m ạng con trong Inter net như là Ethernet, m ột mạng diện rộng như \nNSFNET back bone hay m ột liên kết điểm-điểm giữa hai m áy duy nh ất đều \nđược coi như là một mạng. \nĐiều này xuất phát từ quan điểm đầu tiên khi thi ết kế giao thức TCP/IP là để có \nthể liên kết giữa các mạng có kiến trúc hoàn toàn khác nhau, khái ni ệm \"mạng\" \nđối với TCP/IP b ị ẩn đi phần kiến trúc vật lý của mạng. Đây\nInternet\nhost\n(a) \n 8\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 9,
    "text": "routerInternet\nPhysical\n   net\nhost\n(b)\n \nHình 1.3: Mạng Internet d ưới con mắt người sử dụng. Các máy được nối với \nnhau thông qua m ột mạng duy nh ất. (b) - K iến trúc tổng quát c ủa mạng \nInternet. Các routers cung c ấp các kết nối giữa các mạng.  \n \n \nnh 1.4: Mạng Internet chi ti ết hơn \n1.3 Vấn đề quản lý mạng Internet      Sub net \nSub net \n 9 \nHì\n  \nSub net \n \nInternet \nFirewall \nSwitch, hub  \nServ er System ISDN \nVPN \n… \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 10,
    "text": "- Thực chất Internet không thu ộc quyền quản lý của bất kỳ ai. Nó không c ó \ngiám  đốc, không có ban qu ản trị. Bạn có thể tham gia ho ặc không tham gia và o \nInternet, đó là quyền của mỗi thành viên. M ỗi mạng thành ph ần sẽ có một giám \nđốc hay chủ tịch, một cơ\nkhông c ó một tổ chức nào c quan chính phủ hoặc một hãng điều hành, nh ưng \nhịu trách nhi ệm về toàn bộ Internet. \nư phương hướng để \nhát triển Internet. IAB h ọp định kỳ để bàn về các vấn đề như các chuẩn, cách \nphân chia tài nguyê n, địa chỉ ... \n- Mọi người trên Internet nh thông qua ủy ban Kỹ \nuật Internet (Internet Engineerin g Task  Force - IETF). IETF c ũng là một tổ \nhức tự nguyện, có mục đích thảo luận về các vấn đề kỹ thuật và sự hoạt động \ni trọng, IETF l ập một nhóm kỹ thuật để \ny tính nối vào I nternet.  - Hiệp hội Internet (Internet So city - ISOC)  là m ột hiệp hội tự nguyện có mục \nđích phát tri ển khả năng trao đổi thông tin d ựa vào công ngh ệ Internet. Hi ệp hội \nbầu ra Internet Architecture Board- IAB ( ủy ban Kiến trúc mạng). ủy ban này \ncó trách nhi ệm đưa ra các h ướng dẫn về kỹ thuật cũng nh\np\nthể hiện nguyện vọng của mì\nth\nc\ncủa Internet. N ếu một vấn đề được co\nnghiên cứu vấn đề này. \n- Nhóm đặc trách nghiên c ứu phát triển Internet (IRTF). \n- Trung tâ m thông tin m ạng (Network Information Center -NIC) g ồm có  nhiều \ntrung tâm  khu vực như APNI C - khu v ực châu á -Thái Bình D ương. NIC ch ịu \ntrách nhiệm phân tên và địa chỉ cho các m ạng m á\n* WO RLD WIDE  WEB: \n“Bất kỳ một cá nhân nào, đang sử dụng bất kỳ loại máy tính nà o, ở bất kỳ nơi \nnào, đều có thể truy cập được dữ liệu trên Internet chỉ nhờ sử dụng một chương \ntrình đơn giản” đó là ý tưởng của Tim  Berners-Lee - M ột nhà  khoa  học tại \nphòng t hí nghiệm vật lý châu âu (CERN) vào năm 1989.  \n \n \nHình 1. 5: Worl d Wide Web  \n \n1.4 Nguồn gốc World Wide Web. \nVào c uối năm 1980,  Tim  Berner  Lee đã viết một chương trình l ưu trữ dữ liệu \ntên là “Enquire” là c ơ sở để sau này phát tri ển chương tr ình cho Web server và \n 10\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 11,
    "text": "Web client đầu tiên. Chương trình này được bắt đầu vào tháng 12 năm 1990  tại \nCERN và được quảng bá vào m ùa hè năm 1991.  \"Worl dWideWe b\" trình duy ệt \nhằm mở rộng các tính n ăng của bộ trình duy ệt Mosaic. \n3C (World Wi de W eb Consortium ) được hình t hành vào cu ối năm 1994,  với \n phát triển  HTML ở một cấp độ ưu tiên nhất và phát \nn nay. \ng hơn là một dịch vụ của \nn thấy trên m àn hình m áy \nợc nhờ thông qua các “siêu liên k ết” (hyperlink). Siêu liên k ết về \n hypertext  đầu tiên chạy trên máy NeXT - Step. \nCũng và o thời gian này đã có nhiều công trình chu ẩn hoá các h ệ thống \nHypertext. Các n ỗ lực này tập trung vào lĩnh vực Internet theo s ự phát triển của \nHypertext Markup La ngua ge, ha y HTML, được thiết lập bởi Tim Berner Lee. \nPhiên bản đầu tiên này bây gi ờ gọi là HTM L 1.0 \nNăm 1993,  một sinh viên tr ẻ tên là Marc Andressen, tr ường đại học Illinois t ại \nUrba na- C hampaign đã tạo ra một giao diện đồ họa đầu tiên dành c ho W eb \nđược gọi là Mosaic. Ban đầu nó đã được phát triển trên nền X W indows, m ột \nmôi trường dựa vào Unix. (Lúc đó Uni x là hệ điều hành phổ biến nhất cho các \nhệ thống m áy tính nối kết với Internet). \nSau đó, Những người lập trình M osaic bắt đầu nghĩ ra các ph ần mở rộng tuỳ \nbiến dành cho HTML n\nW\nhướng dẫn  cấu trúc và s ự\ntriển ngôn ng ữ này cho đế\n \n1.5 World Wide Web là gì? \nTheo W3C: Worl d Wide We b là mạng lưới nguồn thông tin cho phép ta khai  \nthác thông qua m ột số công cụ, chương trình ho ạt động dưới các giao th ức \nmạng. \nWorl d Wi de Web là công c ụ, phương tiện hay đún\nInternet. Hi ểu thế nào là dịch vụ Internet? Đó là những cách th ức được sử dụng \ntrên Internet nh ằm giúp cho vi ệc trao đổi thông tin tr ở nên thuận tiện và dễ \ndàng. \nKhông gi ống với những dịch vụ khác  của Internet, Web cung c ấp thông tin r ất \nđa dạng, ba o gồm văn bản, hình ảnh, âm  thanh, vi deo, nghĩa là những gì chúng \nta có thể cảm nhận được. Thông tin được biểu diễn bằng “trang Web” theo \nđúng nghĩa của một trang m à chúng ta có th ể  nhì\ntính. Mọi thông tin đều có thể biểu thị trên trang We b đó, kể cả âm thanh, hì nh \nảnh động. Nhưng vấn đề lý thú nh ất của Web nằm ở khía cạnh khác. Trang \nWeb bạn nhìn th ấy trên m àn hình m áy tính có kh ả năng liên k ết với những \ntrang Web khác, d ẫn ta đến những nguồn thông ti n khác. Kh ả năng nà y của \nWeb c ó đư\nbản chất là địa chỉ trỏ tới nguồn thông tin (trang Web) n ằm đâu đó trên \nInternet. B ằng những siêu liên k ết này, các trang We b có thể liên kết với nhau \nthành một mạng chằng chịt, trang này ch ỉ tới trang khác, cho phép ta chu du \ntrên biển cả thông tin. \n \n1.6 Trình duy ệt Web: \n 11\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 12,
    "text": "Worl d Wi de Web được bắt đầu tại CERN (Conseil European  pour la Recherche \nNucleaire, bây gi ờ được gọi là European La borat ory for Particle Physics). M ặc \ndù ý tưởng về Web xuất phát từ nhiều nơi khác nha u, nhưng một đề nghị ban \nđầu đã được viết bằng văn bản và được thông tin tại CERN và o năm 1989. \nCERN c òn chịu trách nhi ệm về việc phát triển bộ trình duy ệt Web đầu tiên, và  \nbộ trình duy ệt này đã được xuất bản vào năm 1990. \nnh duyệt với các giao di ện đồ họa mà chúng ta \nr for Supercom puting Applications), đặt cơ sở \nđể thành lập M osaic Com munications  \nên của Netscape Navigator, v ới biệt dành \nệt chạy trên truy ền hình \nây giờ thậm chí không c ần sử dụng m áy tính đế \nai bộ trình duy ệt chính được sử dụng ngày nay là Netscape Navi gator và \nCác tính năng \này cho phép trình bà y các trang ph ức tạp hơn, bao gồm việc bố trí nhiều cột \nửa này hỗ trợ các phần mở \nộng Netscape. Các tính n ăng ba o gồm sự hỗ trợ đối với các khung (frame), \nmột tính năng trì nh bày trang trên Netsca pe Navi gator 2.0 cho phép hi ển thị Bộ trình duy ệt đầu tiên nà y đã được soạn thảo trên m ột máy NeXT-Step. \nKhông gi ống như các bộ trì\nthường nhìn th ấy ngà y nay, nó c hỉ hiển thị văn bản (text). Các b ộ trình duy ệt \nkhác cũng sớm được phát tri ển, bao gồm Erwise, Viola, và Lynx. Ngày nay, \nnhiều máy vẫn còn sử dụng các bộ trình duy ệt không thu ộc đồ họa này, đặc biệt \nlà Lynx. Lynx được sử dụng chủ yếu trên các h ệ thống Unix và VMS, m ặc dù \nnó có sẵn đối với tất cả các trình ứng dụng lớn. \nSau đó, NCSA (Nati onal Cente\ntại trường đại học của Illinois ở Urbana-C hampaign, bắt đầu quan tâ m đến Web \nvà bắt đầu phát triển một bộ trình duy ệt. Bộ trình duy ệt này, Mosaic for X, đã \nđược xuất bản rộng rãi trên các n ền X, P C/Windows và Macintosh và o thá ng 9 \nnăm 1993. \nMột trong nh ững người đã làm việc trên đề án nà y là một sinh vi ên tại NCSA, \nchưa tốt nghiệp, tên Mark A ndreessen. Vào n ăm 1994, Mark A ndreessen và \nnăm n gười khác đã rời NCSA \nCorporation, sau đó trở thành Netscape Communi cations Cor poration. \nNetscape đã xuất bản phiê n bản đầu ti\nlà \"Mozilla\", vào cu ối năm 1994. \nTrong khi đó, Micr osoft đã phát tri ển Internet Expl orer (lE), là đối thủ cạnh \ntranh c hính của Netscape; S un Mi crosystem s đã phát triển HotJava; và Am erica \nOnline  (AOL)  đã phát tri ển bộ trình duy ệt AOL của riêng họ. Gần đây, một \nông ty có tên là WebTV đã giới thiệu một bộ trình duy c\nnhờ sử dụng một hộp set-top. B\ntruy cập Web! \nH\nMicrosoft Internet Explorer. \nTháng 10 năm 1994 N etscape giới thiệu Net scape Navi gator 1.0 m iễn phí đối \nvới người sử dụng thông qua lnte rnet. Thá ng 3 năm 1995 Netscape  Navi gator \n1.1 được công bố. Nó bao g ồm sự hỗ trợ đối với các tính n ăng trình bà y cao \ncấp nhờ sử dụng các font đồ họa và các b ảng biểu HTML 3.0. \nn\ntext và các hình ảnh linh động. \nTháng 9 năm 1995 Ne tscape giới thiệu Netscape Navigator Gold 2.0, b ộ trình \nduyệt này cho phép ng ười sử dụng tạo, chỉnh sửa và định hướng các tài li ệu \nực tuyến một cách dễ dàng. Về bản chất, bộ chỉnh s tr\nr\n 12\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 13,
    "text": "nhiều ô c ó thể được cuộn một cách độc lập trên một màn hình đơn; các font và \ncác bảng biểu HTML 3.0. \nTháng 1 năm 1996 Netscape công bố các plug-in, đây là các ph ần mềm nhỏ cải \nến các tính n ăng của bộ trình duy ệt. \ny Modeling Language (VRML). \nháng 8 năm 1996 Netscape công b ố Netscape Na vigat or 3.0 hỗ trợ cả Java và  \n Navigator. \nnội \nternet \nxplorer 3.0. \nháng 10 năm 1996 N etscape công b ố Netscape C ommunicator, b ộ trình duy ệt \n 1997 Microsoff gi ới thiệu Inte rnet Expl orer 3.0 cu ối cùng dành \nho Macintosh. Microsoft lnte rnet Explorer 3.0 c ung cấp sự hỗ trợ đầy đủ đối \nbảng biểu, các khung và các khung c ải tiến (không có \nường biên và di động). Với phiên bản này, lnternet Explorer tr ở thành bộ trình ti\nTháng 4 năm 1996 Ne tscape công b ố Netscape Navigator  3.0. Nó h ỗ trợ các thẻ \nHTML m ới, bao gồm màu  nền trong bảng biểu và các ch ức năng nhúng a udio \nvà vide o. Microsoft Internet Ex plorer 2. 0 dành cho Macintosh được xuất bản. \nNó hỗ trợ plug-in Shockwave, các th ẻ HTML 2.0 và 3. 0, Q uickTim e, và \nVirtual Realit\n \nTháng 5 năm 1996 Mi crosoft i \n*nter net Explorer 3. 0 Beta sẵn sàng. \n \nTháng 6 năm 1996 Ne tscape công b ố rằng có trên 130 nhà phát tri ển plug-in \nđang tạo các plug-in để làm việc với Nets cape Navigator. Nó c ũng công b ố \nrằng site Internet c ủa nó nhận trên 80 tri ệu lượt truy cập một ngày và đã tích \nlũy trê n 10 tỷ lượt truy cập kể từ khi bắt đầu. Micros oft tiếp tục phát triển IE \n3.0, và sẽ giới thiệu khả năng mở rộng qua các Active X control. \n \nT\nJavaScript. M ột số nhà phát tri ển thuộc nhóm th ứ ba lập ra các s ơ đồ để phát \ntriển các plug-in nh ằm tận dụng tính năng của Netscape Navigat or 3.0. Đã có \n175 plug-in được công bố cho Netscape\n \nMicrosoft tung ra lnte rnet Expl orer 3.0. Các  Web site đứng đầu cung cấp \ndung miễn phí mà có th ể chỉ được xem bởi những người sử dụng ln\nE\n \nT\nnày hợp nhất phần mềm bộ trình duy ệt Netscape Navi gator 4.0, ph ần mềm tạo \nHTML Netscape Com-poser, th ư điện tử Netscape Messenger, ph ần mềm thảo \nluận nhóm  Netscape Collabra, và ph ần mềm cộng tác thời gian thực Netscape \nConference. \n \nNetscape công b ố Netscape Navi gator 4.0,  bao gồm sự hỗ trợ đối với sự định vị \ntuyệt đối, tạo lớp và stylesheet, các font H TML mới, và sự hỗ trợ đối với \nNetscape ONE (the open netw ork envir onment). \nTháng 1 năm\nc\nvới HTML 3.2, các \nđ\nduyệt đầu tiên cho phép nh ững người sử dụng Macintosh xem  các trang We b \nđược tạo nhờ sử dụng cascading stylesheet chu ẩn của HTML. \n \n 13\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 14,
    "text": "Tháng 4 năm 1997 Mi crosoft công b ố Microsoft Internet Explorer 4.0. S ự hỗ \ntrợ stylesheet c ải tiến. Dynamic HTML, và Active Desktop được xem  như là \nôi khi bạn cấn tìm  hiểu bộ trình duy ệt có những đặc tính nào và ai h ỗ trợ \nchúng. Điều qua n trọng là bạn phải nhận biết các đặc tính nà o được hỗ trợ bởi \ncác bộ trình duy ệt nào và chúng được thực thi lần đầu trong các phiên b ản nào. \nNắm vững điều này, bạn sẽ có thể thực hiện các quy ết định về kiểu thiết kế và \ncác đặc tính của các Web site d ựa vào sự phân tích c ác số liệu thống kê server  \nđối với những bộ trình duy ệt nào mà người xem của bạn đang sử dụng và bao \nnhiêu người trong số họ không t hể nhìn thẩy các đặc tính m à bạn đã sử dụng. \nTrong mục này, c húng ta sẽ xem xét chi ti ết hơn về các bộ trình duy ệt mà bạn \ncó thể gặp. \n \nNetscape Navigator \n \nNetscape Navi gator hiện đang là một trong các b ộ trình duy ệt phổ biến nhất \ntrên World Wide Web. Trong khi b ộ trình duy ệt này có s ẵn như là một trình \nứng dụng riêng biệt, Netscape c ũng đã đưa nó và o một bộ sản phẩm có  tên là \nNetscape Com municator; Com municator bao g ồm không ch ỉ bộ trình duy ệt, mà \ncòn các công c ụ khác để cộng tác. Đối với các mục đích thảo luận ở đây, chúng \nta sẽ chỉ xem  xét bộ trình duy ệt. \nĐa phương tiện truyền thông, s ụ tương tác, và các k ỹ thuật tạo hình động. \nCó nhiều cách để thực thi sự tương tác hay di  chuyển trên một site. Một cách là \nsử dụng Gl F động, mà trong đó một loạt các file GlF t ải trên trang theo trình t ự \nGlF là m ột dạng đồ họa Netscape Navigator c ũng hỗ trợ thẻ EMBED, tuy \nkhông ph ải là HTML chính th ức, nhưng nó cho phé p nhúng m ột file audio. Th ẻ \nEMBED hoạt độ ơn. File \nợc nhúng đưmột làn sóng m ới trong sự trình duy ệt. \n \nTháng 7 năm 1997 Mi crosoft ch ứng thực HTML 4.0 của World Wide Web \nConsortium  và công b ố sự hỗ trợ trong M icrosoft Internet Explorer 4.0. \n \nCác đặc tính chính c ủa các bộ trình duy ệt \n \nĐ\nng đối với các phiên b ản của Naviga tor 2.0 và cao h\nợc điều khiển bởi một plug-i n. đư\n \n 14\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 15,
    "text": "Hình 1. 6: Bộ trình duy ệt Netscape Navigat or 7.0 \n \nMột cách khác để bổ sung sự tương tác và đa phương tiện truyền thông vào \nWeb là sử dụng Java và JavaScript. Java là m ột ngôn ng ữ lập trình theo h ướng \nđối tượng với đầy đủ đặc tính và nó có th ể được sử dụng để chèn các applet vào \ncác trang Web ho ặc để viết các trình ứng dụng riêng bi ệt. Java có th ể được \nchèn vào m ột trang HTML b ằng cách s ử dụng thẻ APPL ET, được hỗ trợ bởi \nNetscape 2.0 và cao h ơn, mặc dù nó không xu ất hiện trong đặc tả HTML chính \nthức, cho đến HTML 3.2. Mặt khác, JavaS cript là một ngôn ng ữ tạo script và \nkhông được sử dụng để phát triển các trình ứng dụng riêng biệt. Nó được thực \nthi nhờ sử dụng thẻ SCRIPT, nh ưng không được thực thi trong Navigator cho \nđến phiê n bản 3.05b. \nCác plug-in, là các m ẩu phần mềm nhỏ được sử dụng để mở rộng các tính n ăng \ncủa một chương trình ph ần mềm, được thực thi trong các b ộ trình duy ệt Web \nbởi Netscape Communications  dành c ho Na vigator bắt đầu với phiên bản 2.0. \nCác plug-in có th ể được sử dụng để xem  audio, vide o, 3D và nhi ều thứ khác. \nThậm ch í bạn có thể sử dụng chúng để xem  các m àn hình nền của những người \nsử dụng khác. Nó ch ỉ phụ thuộc vào plug-in nào m à bạn có ( và bao nhiêu RA M \nmà bạn có thể dành riê ng cho nó!). \nạn có thể bổ sung các form vào Web site c ủa bạn b B ằng các h sử dụng thẻ \nạn có thể sử dụng các form để trả lời bất kỳ câu hỏi nào m à bạn FORM . B\nthích, để lấy thông tin v ề những người sử dụng, và để cung cấp cho họ một cơ \nhội phản hồi. Các form đã được hỗ trợ bởi Navigator kể từ phiên bản 1.1. \n \n 15\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 16,
    "text": "Các table, layout, và style \nCác table là m ột sự tiến bộ lớn khi những người thiết kế Web sau cùng có t hể \ntrình bà y thông tin tr ong các hà ng và các c ột bằng cách s ử dụng các table thay \nvì text đã được định dạng sẵn. Netscape Navi gator đã hỗ trợ các table k ể từ \nn hơn, bạn đã nhìn thấy các \name (khung). Mỗi fram e này có th ể được cuộn qua m ột cách riêng l ẻ. \navigator đã hỗ trợ các frame đơn giản kể từ phiê n bản 1.1. N hiều đặc tính thú \nư các màu frame) không được hỗ trợ cho đến phiên bản 3.05b.  \n tử stylesheet (m ột tài liệu riêng). Điều này có ngh ĩa rằng người thiết kế \nỉ định m àu đoạn trong stylesheet. Nó cho phép ng ười thiết kế thay \nhi một người thiết kế đồ họa có thể yêu cầu một trang chuyên v ề \nồ họa. Một ưu điểm khác của các stylesheet là chúng giúp cho vi ệc tạo Web \n hơn nhiều - chẳng hạn, tất cả các table c ủa bạn \nó thể tự động có hình d ạng giống nhau. B ạn sẽ tìm hiểu thêm  về các stylesheet \nác stylesheet cho đến \n nhiều người chưa nhìn thấy chúng. \nxuống các hình ảnh để bạn có thể xem \nhúng. Các hình ảnh nội tuyến đã được hỗ trợ bởi Navigator  kể từ phiên bản \n1.0. Các hình ảnh thường được sử dụng như là các liên k ết. \nMột cách sử dụng của các hình ảnh là ởạng các bản đồ ảnh (imagemap). M ột \nbản đồ ảnh là m , mỗi phần liên  \nết bạn với một nơi khác trên Web. Các b ản đồ ảnh, giống như các hình ảnh, đã phiên bản 1.1, mặc dù một số thuộc tính đối với thẻ TABLE được bổ sung vào  \nsau này. Cá c table thật sự là một đặc tính thu ận lợi. \nNếu bạn đã từng tr uy cập Web và đi qua các Web site có nhi ều \"ô\" khác nha u, \nhay các m ục riêng lẻ trong cửa sổ bộ trình duy ệt lớ\nfr\nN\nvị (chẳng hạn nh\nTiến bộ mới nhất về style khi truy c ập We b là stylesheet, m ột khái niệm lần \nđầu tiên được thực thi trong m ột bộ trình duy ệt chính b ởi Micros off \nCorporation. ý t ưởng đằng sau c ác stylesheet là ng ười thiết kế Web  có thể chỉ \nđịnh các thành ph ần thiết kế cho toàn b ộ site trong m ột nơi. Chẳng hạn, một \nngười thiết kế có thể cho tất cả các đoạn có f ont là m àu xanh dương, và sau đó \nmỗi đoạn sẽ tự động có m àu xanh d ương. Đoạn nhận thông tin m àu xanh \ndương\nchỉ cần ch\nđổi tất cả các đoạn trên site sang b ất kỳ một màu khác bằng cách thay đổi \nstylesheet thay vì thay đổi mỗi đoạn. Đặc tính này ti ết kiệm cho bạn rất nhiều \nthời gian. \nCó nhiều ưu điểm kh ác đối với các stylesheet, ch ẳng hạn như khả năng gởi các \nstylesheet khác nha u cho những người sử dụng khác nhau. M ột người đang sử \ndụng một bộ trình duy ệt dựa vào lời nói có th ể yêu cầu một tài liệu rất đơn \ngiản, trong k\nđ\nsite nhất quán trở nên dễ dàng\nc\ntrong chương 7. Bây gi ờ, bạn chỉ cần lưu ý rằng chúng được hỗ trợ bởi các bộ \ntrình duy ệt mới hơn. Netscape đã không h ỗ trợ c\nNavi gator 4.0, vì v ậy\n \nHình ảnh \nKhả năng có các hình ảnh đã đem lại cho Web m ột ưu điểm vượt trội so với \nGopher, ti ền thâ n của nó. Trong khi không ph ải tất cả các bộ trình duy ệt đều có \nthể xem các hình ảnh nội tuyến, nghiã là trên cùng m ột trang với text, tất cả các \nbộ trình duy ệt đều có khả năng tải \nc\n d\nột ảnh có thể nhấp được chia thành nhi ều phần\nk\nđược thực thi trong Netscape k ể từ phiên bản 1.0.  \n \n \n 16\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 17,
    "text": "Thư và tin tức \nNhiều bộ trình duy ệt cho phép ng ười sử dụng đọc và gởi e-m ail hay các bài báo \nUsenet newsgroup. Ph ương pháp t ất cả trong một này là m ột phương phá p phổ \nbiến, trong đó nó cho phé p những người thiết kế Web site h ợp nhất các liên k ết \nvới các newsgroup archive hay các địa chỉ e-mail nh ất định nằm ngay trong các \ntrang We b của chúng. C ả thư và tin tức đều đã được mô tả bởi Navigator k ể từ \nphiên bản 1.0, mặc dù giao di ện này đã thay đổi đôi chút với các phiên bản mới \nơn. \nếu bạn dự định có một Web site mà nh ững người sử dụng của \nạn có thể mua hàng hóa. Hãy xem  chương 22 để biết thêm chi ti ết về Web \n \nicrosoft lnternet Explorer hiện đang ở phiên bản 6.0. Microsoft đã phát triển \nệ, bao gồm các stylesheet và ActiveX. \n tương tác, và các k ỹ thuật tạo hình động  \n hỗ trợ các kỹ thuật tạo hoạt hình GlF.  Nó cũng đã hỗ trợ các a pplet Java k ể \nản 3.0b2. S ự bao hàm của thẻ SCRI PT đối với Java Script đã xuất h\nBảo mật \nTrong khi có nhi ều loại mã hóa trên Internet, b ạn có thể quan tâm  đến việc bảo \nđảm sự bảo mật. Bắt đầu với Navigator 3.0, các ch ứng nhận kỹ thuật số đã \nđược hỗ trợ. Các phiên b ản mới hơn của Netscape có m ột biểu tượng chìa khóa  \nở dưới cùng cho phép b ạn xem  một giao tác có an toà n hay không.  Điều này sẽ \nquan trọng hơn n\nb\ncommerce.\n \nMicrosoft Internet Explorer \n \nM\nmột số công ngh\nCác đặc tính chính : \nĐa phương tiện truyền thông, s ự\nIE\ntừ phiê n b\nhiện cùng với phiên bản 3.0. Mic rosoft cũng đã sao chép ý t ưởng plug-in c ủa \nNetscape - hi ện có nhiều plug-in dành cho c ả Navigator và IE. IE đã hỗ trợ các \nform ngay t ừ lúc đầu - phiê n bản 1.0. \n \n 17\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 18,
    "text": "Hình 1. 7: Bộ trình duy ệt Internet Explorer 6.0 \n \nCó lẽ biến đổi hấp dẫn nhất trong việc phát triển IE là sự giới thiệu của \nActiveX. ActiveX đã được sáng tạo bởi Microsoft, điều chỉnh các công ngh ệ \nhiện có O LE 2.0 và  OCX cho phù h ợp với các trìn h ứng dụng lnternet. M ột \nActiveX control là m ột sự kết hợp giữa một plug-in và m ột applet Java - nó b ổ \nsung tính n ăng hoạt động giống như một plug-in, và nó c hạy một cách độc lập \nvới bộ trình duy ệt, giống như một applet. Không gi ống như một applet , \nActiveX control được tải xuống và được chứa trên  đĩa cứng của người sử dụng. \nác ActiveX control hiện không được hỗ trợ b C ởi bất kỳ bộ trình duy ệt nào \nặc dù c ó một plug- in Navigat or cho phé p bạn xem các ActiveX ngoài I E m\ncontr ol. Sự hỗ trợ đối với ActiveX b ắt đầu với phiê n bản IE 3. 0. \n \nCác table, layout, và style \nMicrosoft I nternet Explorer đã hỗ trợ các table k ể từ phiên bản 1.0 và các fram e \nkể từ phiên bản 3.0. Các tùy chọn mà nó hỗ trợ đối với các frame hơi khác với \n 18\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 19,
    "text": "các tùy ch ọn được hỗ trợ bởi Nets cape Navi gator, và Mi crosoft đã phát m inh ra \ncác frame (nh ờ sử dụng thẻ (FRAME). B ạn sẽ tìm hiểu thêm  về các frame  \ntrong chương 5. \n \nHình ảnh \nIE đã hỗ trợ các hình ảnh kể từ phiên bản 2.0. Nó không hỗ trợ nhiều tùy c họn \nchẳng hạn như canh giữa, hoặc dàn text xung quanh đối tượng \nIE đã hỗ trợ việc đọc và gởi e-m ail, cùng v ới việc \nọc và gởi đến các newsgroup. \niống như Navigator, IE h ỗ trợ các chứng nhận kỹ thuật số để bảo đảm sự an \nàn. Ngoài ra, IE có một công ngh ệ được gọi là Authenticode. Authenticode  \n người tạo phần mềm ký nhận phần mềm của họ bằng kỹ thuật \n để những người sử dụng có thể biết chắc rằng phần mềm này (bao g ồm cả \nng IE mà nhiều bố mẹ tìm thấy hấp dẫn là khả năng sử dụng \nynx đã được phát triển tại trường đại học Kansas để sử dụng trên hệ thống của \nn dựa \nnó cho các \nình ứng dụng khác. Nó đặc biệt phổ biến ở các trường đại học và trung h ọc, \ng có các Unix s hell account. \nì nó có thể được \nấu hình dưới dạng một text reader để đọc các dòng t ừ các trang Web. V ới hệ \nchúng được cấu hình với phần cứng audio thích h ợp được gọi là một \ntin dựa vào text . Bởi vì bộ trình duy ệt này không t ải các hình ảnh vào \nte có thể nhanh chóng được lướt \nynx là một bộ trình duy ệt text-only, vì v ậy nếu bạn muốn hòa hợp với những \nLynx, bạn sẽ phải cung cấp các phương thức khác đối với hình \nynx tải chúng xu ống. \nynx là một ví dụ hoàn hảo về một điều gì đó mà chúng ta  thường nhìn th ấy \nới phần mềm - thường có một sự trao đổi giữa các đặc tính (ch ẳng bố trí hì nh ảnh, \nảnh. IE cũng hỗ trợ các bản đồ ảnh. \n \nThư và tin tức \nBắt đầu với phiên bản 2.0, \nđ\n \nBảo mật \nG\nto\ncho phép nh ững\nsố\napplet Java) đã đến từ nơi giống như họ nghĩ. \nMột đặc tính tro\n\"parental controls\" được cài sẵn vào bộ trình duyệt. Các cài đặt này sẽ không \ncho phép ng ười sử dụng xem  các Web site vốn có các n ội dung không th ể chấp \nnhận được. \n \n \nLynx \n \nL\nriêng họ. Phiên bản hiện hành là 2.6. Lynx l à một bộ trình duy ệt cũ hơ\nvào text và  có ưu điểm chạy trên các h ệ thống cũ hơn. Nó được sử dụng phần \nlớn trên các h ệ thống Unix và VMS, m ặc dù bạn có thể sử dụng \ntr\nnơi mà các sinh viên th ườn\nLynx cũng phổ biến đối với một số người bị khiếm thị bởi v\nc\nthống của \nbộ tổng hợp tiếng nói , máy tính đọc lớn cho người sử dụng. Ngoài ra, nhi ều \nngười sử dụng Web s ẽ khởi động Lynx khi h ọ vội vã muốn tìm các n ội dung \nthông \nnhiều đối tượng có kích cỡ file lớn, nê n các si\nqua để tìm nội dung thích h ợp. \nL\nngười sử dụng \nảnh nếu không hãy cho phép nh ững người sử dụng L\nL\ntrong t hế gi\n 19\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 20,
    "text": "hạn như hình ảnh, kiểu định dạng, và các fram e), và các yêu c ầu hệ thống \n(chẳng hạn như các vấn đề nền ứng dụng và  RAM). Tr ong khi Lynx không h ỗ \ntrợ nhiều đặc tính mới hơn, bạn cũng không c ần nhiều RAM và m ột máy mới \nơn để chạy nó: Với giao diện dòng lệnh của Lynx, nó có th ể được đưa vào sử \nụng nếu bạn đã quen với việc trỏ và nhấp chuột.  \na phương tiện truyền thông, s ự tương tác, và các k ỹ thuật tạo hình động \n cần nhấp chuột vào trong m ột trường và gõ \n biết thẻ TABLE và sau đó phân c hia thông tin r a \nành một loại form  trình bày. Ngh ĩa là, tất cả thông ti n đều nằm ở đó và người \nhưng \nnh bày sau trong sách này. \nác frame trong Lynx tương tự như các tabl e - trong khi Lynx nh ận biết và xử \n frame, các kết quả có thể hoàn toàn khác v ới những \nì mà bạn mong m uốn. Thay vì m ô phỏng các fram e, Lynx cung c ấp các liên \n trợ các stylesh eet. \n, nó làm  việc với các bản đồ ảnh. \nynx làm việc tốt hơn với các bản đồ ảnh phía client  bởi vì nó giúp cho b ộ \nàng tìm ra nơi mà các vùng khác nha u của bản đồ dẫn đến. Trên \nmột bản đồ phía server, b ộ trình duy ệt nhấp chuột và một cặp \na độ được gởi đến server. Lynx ch ỉ có khả năng gởi các tọa độ (0,0), và vì \nng cách này không đem lại hiệu quả tốt.  \nạn không th ể đọc e-mail c ủa bạn từ trong Lynx. Tuy nhiê n, bạn có thể gởi e-\nail từ Lynx nếu có một liên kết đến một địa chỉ e-m ail hay một tác giả đã \nđịnh trong tr ang H TML. Lynx hỗ trợ việc đọc các newsgroup và tr ả \ni các bài báo newsgroup. h\nd\n \nĐ\nLynx không h ỗ trợ các GlF hì nh động, thẻ EMB ED, Ja va, JavaScr ipt, các pl ug-\nin hoặc cấu trúc ActiveX. Lynx không h ỗ trợ các form, m ặc dù những người sử \ndụng Lynx ph ải định hướng qua chúng nh ờ sử dụng các phím m ũi tên hay phím \nTAB trên bàn phím thay vì ch ỉ\nnhập nội dung của chúng. Lynx có th ể điều khiển các hộp kiểm, các nút radio, \ncác nút thông th ường, các danh sá ch chọn, và các vùng g ởi text. \n \nCác table, layout và s tyle \nLynx không h ỗ trợ các table, m ặc dù nó không nh ất thiết phải hiển thị chúng \nnhư ý bạn muốn. Nó nhận\nth\nsử dụng có thể tìm ra hệ thống phân c ấp và t heo dõi các liên k ết nếu có,  n\nbạn sẽ không ph ụ thuộc quá nhi ều vào các hàng và các c ột. Nếu bạn muốn lập \ncác table có ý ngh ĩa đối với những người sử dụng Lynx, b ạn có thể cần sử dụng \nthẻ PRE, được trì\nC\nlý các thẻ kết hợp với các\ng\nkết text với các fram e khác nha u trên một trang H TML. Sau đó, khi bạn học \ncách tạo các frame, b ạn sẽ tìm hiểu thêm  về thẻ NOFRAMES, nó  được sử dụng \nđể cung cấp nội dung thay th ế cho các b ộ trình duy ệt vốn không hoàn toàn h ỗ \ntrợ các frame. Lynx không h ỗ\n \nHình ảnh \nNhư đã được lưu ý ở trên, bộ trình duy ệt Lynx không h ỗ trợ hình ảnh. Tuy \nnhiên\nL\ntrình duyệt dễ d\nmột bản đồ phía client, b ộ trình duy ệt có cơ hội xử lý text khác. Hãy ghi nh ớ \nrằng, vì không có hì nh ảnh, nên bản đồ được hiển thị trong Lynx d ưới dạng cá c \nliên kết text. Trên \ntọ\nvậy phươ\n \nThư và tin tức \nB\nm\nđược chỉ \nlờ\n 20\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 21,
    "text": "Bảo mật \nLynx hiện không h ỗ trợ bất kỳ đặc tính an toàn b ổ sung nào. \n \n \nNCSA M osaic \n \nGiống như Lynx, NCSA Mosaic là m ột bộ trình duy ệt được phát tri ển tại \ntrường đại học. \nNCSA Mos aic là một bộ trình duyệt cũ hơn với các tính n ăng giới hạn, mặc dù \nó có thể xử lý các th ẻ HTML và các loại file nhiều hơn so với Lynx. M ột \nnhất giữa NCSA Mosaic và Lynx là Lynx hỗ trợ \nvà các kỹ thuật tạo hình động \nsaic không h ỗ trợ các GIF động, thẻ EM BED, các applet Java , \nác table, layout, và style \nỗ trợ các table, các frame, hay các stylesheet. \nđầu với phiên bản 2.0, Mosaic có th ể hiển thị các file ảnh GlF  và \nG . \n bản trước đây không h ỗ trợ đồ họa. \nThư và tin tức \nCSA Mosaic không hỗ trợ việc đọc thư và tin tức. \nảo mật \nn được \ncác  \n \nAOL \n \nVào năm 1995, nhà c ung cấp dịch vụ trực tuyến lớn nhất thế giới, America \nOnline ( AOL) đã phát triển một bộ trình duy ệt Web. Bộ trình duy ệt AOL c ho \nphép những người sử dựng AOL ch ọn bất kỳ bộ trình duyệt nào mà họ muốn \nsử dụng cùng v ới dịch vụ AOL. n\ntrong các điểm khác biệt lớn \ncác kiểu định dạng file đồ họa. \nVào thá ng 1 năm 1997, Mosaic đã chấm dứt phát triển bất kỳ phiên bản mới \nnào của bộ trình duy ệt. Tuy nhiên,  nhiều người vẫn còn sử dụng nó. Mosaic có  \nsẵn đối với các trình ứng dụng X- Windows, Macintosh và PC. \n \nĐa phương tiện truyền thông, s ự tương tác, \nNCSA M o\nJavaScript, hay plug-in ho ặc cấu trúc ActiveX. Nó h ỗ trợ các form. \n \nC\nMosaic không h\n \nHình ảnh \nĐây là một trong các l ĩnh vực mà trong đó Mosaic ti ến bộ hơn nhiều so với \nLynx. Bắt \nJP\nCác phiên\nNCSA Mosaic không h ỗ trợ các bản đồ ảnh. \n \nN\n \nB\nGiống như Lynx, NCSA Mosaic  không có các h ệ thống bảo đảm an  toà\ncài sẵn trong b ộ trình duy ệt. Nó không h ỗ trợ một đặc tính giống như \nchứng nhận kỹ thuật số. \n \n 21\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 22,
    "text": "Đối với người sử dụng, lợi ích của việc sử dụng bộ trình duyệt AOL là h ọ có \nể vào Web m ột cách nhanh chóng - m ọi thứ đi qua AOL và có r ất ít thứ mà \nhải tải xuống và cấu hình. Điểm hạn chế là chất lượng của bộ \ntrình duyệt AOL kém. Ph ần lớn một Web site được thiết kế để làm việc tốt trên \ncác\n3.0\n \nĐa\nBộ\nJav ay các thành ph ần ActiveX. N ó \nhỗ trợ các form. \nBộ trình duy ệt AOL hỗ trợ các table và các frame. B ộ trình duy ệt nhận biết thẻ \nTABLE nhưng không có nhi ều thuộc tính (hay tùy ch ọn) dành c ho nó.  Cả các \ntable và fram e đều được thực thi bắt đầu với phiên bản 3.0. Bộ trình duy ệt AOL  \nkhông hỗ trợ các stylesheet. \n \nHình ảnh \nTất cả các phiên b ản của bộ trình duy ệt AOL đều hỗ trợ đồ họa và các b ản đồ \nảnh. \n \nThư và tin tức \nBộ trình duy ệt AO L cho phé p khách hàng s ử dụng thư và tin tức, nhưng sự truy \ncập bị giới hạn đối với những gì m à AOL c ung cấp - không có s ự truy cập trực \ntiếp vào Int ernet. \n \nBảo mật \nBộ trình duy ệt AOL không ch ứa bất kỳ đặc tính nào để tăng sự an toàn cho các \ngiao tác tr ực tuyến. Nó không h ỗ trợ các chứng nhận kỹ thuật số. \n \n \nWeb TV \n \nBộ trình duy ệt WebTV cho phép ng ười sử dụng truy c ập lnternet thông qua \nmột máy truy ền hình. Môi tr ường người sử dụng tất khác với một máy tính, vì  \nvậy nếu bạn quyết định rằng bạn muốn thu hút càng nhi ều người sử dụng \nWebTV cà ng tốt, bạn nên kiểm tra cách ho ạt động phần mở rộng của chúng. \n \nĐa phương tiện truyền thông, s ự tương tác, và các k ỹ thuật tạo hình động \n \na \nNó không hỗ trợ thẻ EMBED. các applet Ja va, JavaSc ript, các plug-th\nngười sử dụng p\n bộ trình duy ệt khác đều cần phải có một \"phiên b ản AOL\" mới. Phiên b ản \n là phiên bản sau cùng. \n phương tiện truyền thông, s ự tương tác, và các k ỹ thuật tạo hình động. \n trình duy ệt AOL không h ỗ trợ các G IF động, thẻ EMBED, Java, hay \naScript. Nó cũng không h ỗ trợ các plug-in h\n \nCác table, layout và style \n \nBộ trình duy ệt WebTV  phiê n bản 0.9 hỗ trợ các G IF động và các form, m ặc dù\nnó không h ỗ trợ sự mã hó a (để bảo đảm an toàn) đối với thông tin được gởi qu\ncác form. \nin, hoặc ActiveX. \n \n 22\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 23,
    "text": "Các table, layout và các style \nWebTV h ỗ trợ các table, tuy không tuân  theo cách thông th ường. Bộ t\nduyệt WebTV không h ỗ trợ các frame hay stylesheet. M ột trong cácrình \n quy ước \nu rộng \nững \nrối về sự hiển thị khi cố xem các Web \nình ảnh \nộ trình duy ệt WebTV h ỗ trợ đồ họa. Có nhiều phần mở rộng chuyên biệt đối \nc bản đồ ảnh phía client. \như và tin tức \nộ trình duy ệt WebTV cho phép ng ười sử dụng gởi và nhận e-mail nhưng \nhông có một giao diện trực tiếp đối với các tin t ức Usenet. Nh ững người sử \nụng vẫn có thể đọc các bài báo newsgroup được truy cập đối xứng trê n các \neb site. \nảo mật \nộ trình duy ệt WebTV không ch ứa bất kỳ thành phần bảo đảm sự an toàn nà o, \nao gồm sự hỗ trợ đối với các chứng nhận kỹ thuật số. \n \nóm tắt chương: \nhương bạn những kiến thức mang tính khái ni ệm về \nternet, Web và các tính năng của các bộ trình duy ệt web.  Bạn có thể thấy \nược nguồn gốc, sự phát triển của Internet, web m ột cách khái quát. khó hiểu nhất của WebTV là thi ết bị đầu cuối được cài đặt với một chiề\ncố định là 544 pixel và nó không h ỗ trợ việc cuộn theo chi ều ngang. Nh\nngười sử dụng có khả năng gặp các rắc \nsite vốn sử dụng các thành ph ần rộng hơn. \nH\nB\nvới We bTV. Nó c ũng hỗ trợ cá\n \nT\nB\nk\nd\nW\n \nB\nB\nb\n \nT\n \nC  này cung cấp cho \nIn\nđ\n \n 23\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 24,
    "text": "Ch\n \n2.1\nmộ\n \n2.2 M\n ương 2:  Tổng quan v ề một hệ thống We b \n Giới thiệu \n \nMột hệ thống We b là một hệ thống cung c ấp thông tin trên m ạng Internet \nng qua các thành phần Má y chủ, trình duy ệt và nội dung thô  thông tin.  \nTrong chương này sẽ giới thiệu một cách cơ bản nguyên lý ho ạt động của \nt hệ thống Web c ũng như các thông tin l iên qua n tới các cách th ức xác \nh vị trí nguồn thông tin, cách th ức trao  đổi dữ liệu giữa máy  chủ với địn\ntrình duyệt và cách th ức thể hiện thông tin. \nô hình hệ thống Web nói chung \n \n \nMạng dịch vụ Web là m ạng các máy tính liên quan đến dịch vụ Web bao g ồm \ncác máy ch ủ dịch vụ, các m áy tính và thi ết bị phục vụ cho việc cung cấp dịch \nvụ Web.  \nHệ thống đó bao gồm: \n- Đường kết nối với mạng cung cấp dịch vụ Internet \n 24\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 25,
    "text": "- Các máy ch ủ cung cấp dịch vụ Web: cung c ấp các dịch vụ web hosting, ch ứa \ncác phần mềm Application Ser ver đảm ảo việc phát triển các dịch vụ trên \n \n2.3\n \n \n \n \n \n \n \n \n \n \n \n \n \nKhi máy client k ết nối vào I nterne t (thông qua h ệ thống mạng LAN  hay các \nđường dial up..), ng ười sử dụng dùng trình duy ệt web (w eb br owser) gõ địa chỉ \ntên miền cần truy nhập (ví dụ: http://home.vnn.vn) g ửi yêu cầu đến máy chủ \nWeb. \n \nWeb Ser ver xem  xét và thực hiện hết những yêu cầu từ phía We b browser g ửi \nđến. Kết quả là một trang \"thu ần HTML\" được đưa ra Browser. Ng ười sử dụng \nsẽ hoàn t oàn trong su ốt với những gì đằng sau của một Web server  như CGI \nScript, các ứng dụng cơ sở dữ liệu.  \nTrường hợp là web t ĩnh thì web server s ẽ lấy thông tin l ưu sẵn trên m áy chủ \ndạng thư mục, file gửi lại theo yêu c ầu của client. Tr ường hợp web động (dùng \ncác ngôn ng ữ lập trình web nh ư ASP, PHP, J SP, CGI ... k ết nối và khai thác c ơ \nsở dữ liệu.  \n \nMột ví dụ: Khi có k ế hoạch đi công tác t ại Hà nội, A biết có thể tìm được \ncác thông tin liên quan t ới thời tiết ở Hà nội tại địa chỉ Web b\nweb, kết nối đến các cơ sở dữ liệu trên các máy tính khác, m ạng khác \n- Các máy ch ủ cơ sở dữ liệu, máy chủ chứng thực, máy ch ủ tìm kiếm ... \n- Hệ thống tường lửa (cả phần cứng và phần mềm) đảm bảo an toàn cho h ệ \nthống m áy chủ với môi trường Internet. \n- Hệ thống m áy trạm điều hành, cập nhật thông tin c ho m áy chủ Web... \n \n. Nguyên tắc hoạt động \n \n \n \n \n \n \n \nhttp://home.vnn.v n http://home.vnn.v n \nServer ans wer Server ans wer I\nClien\nWeb S erver nternet \nCGI \nAPI\n…. \nbase Greeting! \nWell com e to Our site \n \n      VNN  Web Site on the Net \n \nWe hope that you w ill find every \nthing you are loo king for… \n <html> \n<body> \n<H1>  Greeting! </H1> \n<p><i>Well com e to our  site</i></ p> \nthing you are loo king for …  </p> \n</body> \n</html> Brows\nServer \nHTM\nData <img src=“vnnlo go.gif”> \n<p>We hop that  you will find ever y  \n 25\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 26,
    "text": "\"http://hanoi.vnn.vn\" –  địa chỉ này chính là m ột URI (Uniform Resource \nIdentifier - world wi de web addre ss) . \nKhi A nhập URI trên vào trình duy ệt thì: \n1. Trình duy ệt  sẽ thực hiện gửi yêu cầu lấy thông tin t ới địa chỉ xác định \ntrong U RL thông qua giao th ức truyền dữ liệu có tên là http. \n2. Máy chủ nới chứa thông tin s ẽ xác định những thông tin c ần thiết theo \nyêu cầu dựa trên URI c ủa người sử dụng gửi tới. Truyền thông tin liên \nqua tới yêu cầu tới người sử dụng thông qua giao th ức truyền thông http. \n3. Trình duy ệt sau khi nh ận được kết quả trả lời của máy chủ sẽ tiến hành \ntrình bà y dữ liệu kết quả nhận được theo khuôn d ạng nhất định. Bản \nthân trong k ết quả nhận được cũng ba o gồm các liên k ết tới thông tin ở \nvị trí khác trên Web và các v ị trí n ày cũng được xác định bởi các URI. \nTrong ví d ụ trên đã giới thiệu cho chúng ta ba c ấu trúc của Web gồm: Xác định \nvị trí thông tin, Trao đổi và cách th ể hiện thông tin: \n1. Xác định vị trí thông tin: M ỗi resource trong Web s ẽ được xác định bởi \nUniform Resource Identifier (URI). Trong ví d ụ trên, r esource  dùng để \nlấy tông tin v ề thời tiết ở Hà nội được xác định bời URI: \n\"http://hanoi.vnn.vn\". \n2. Trao đổi thông tin: Các tác nhân c ủa We b (trình duyệt – browser, we b \nserver, …) th ực hiện trao đổi thông tin th ông qua các messa ge, các  \nmessage này được hình thành khi có yêu c ầu của người sử dụng hoặc \nkhi thực ẽ \nđịnh nghĩa cách thức trao đổi dữ liệu giữa các tác nhân t rong We b, trong \nthể là: HTML, XML, … d ữ\nnghĩa này, trình duy ệt sẽ trì u có thể giúp người sử \ndụng khai thác thông tin m ộễ dàng. \n \n hiện các tiến trình xử lý dữ liệu. Các giao th ức (Protocols) s\nví dụ này là giao th ức HTTP. \nThể hiện thông tin: Các message được hình t hành khi trao đối thông tin gi ữa \ncác tác nhân trong web đã chứa các định dạng dữ liệu. Tùy t huộc vào từng \nyêu cầu cụ thể mà các đinh dạng thể hiện dữ liệu sẽ khác nha u. Tr ong \ntrường hợp khi nhận kết quả trả lời từ các web server, các định dạng đó có \n liệu ảnh, … Dựa trên các định dạng được định \nnh bày lại sao cho d ữ liệ\nt cách d\n 26\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 27,
    "text": "Chươ\nại đa số các trang Web trên Internet vi ết bằng ngôn ng ữ HTML. Nếu chúng ta \nhông thạo lắm về ngôn ngữ này, chúng ta v ẫn có thể tạo được các trang Web \nễ dàng thông qua các ch ương trình  t ạm gọi là công c ụ làm Web. Có r ất nhiều \nhương trình nh ư vậy ví dụ như: Frontpage, Hotdog , Dream weaver... \nrong tài liệu này c húng tôi gi ới thiệu với các bạn sử dụng chương trình \nrontpage 2002: \n- Mở, đóng, tạo mới, ghi  một trang Web. \n- Định dạng font ch ữ, paragraph, m àu chữ, ... \n- Làm việc với bảng. \n- Tạo Form  ng 3:  Frontpage 2002 (Front page XP)  \n \nĐ\nk\nd\nc\nT\nF\n- ảnh, âm thanh, ... \n- Hyperlink, Bookmark. \n \nHình 3. 1: Giao di ện Frontpage 2002 cửa sổ soạn thảo \nhi mở Frontpage 2002, gi ống như bất cứ một chương trình soạn thảo nào, \nchúng ta s ẽ thấy một loạt các công c ụ phía trên. Các công c ụ này có th ể cho \nhiển thị hoặc không b ằng cách cli ck chuột phải lên thanh công c ụ rồi chọn loại \ncông vụ cần hiển thị. K\n 27\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 28,
    "text": "Với Frontpage có th ể soạn thảo trang trực tiếp bằng gia o diện trực quan ho ặc \nxây dựng trực tiếp bằng thẻ HTML  \n \nHình 3. 2  Giao diện Frontpage 2002 c ửa sổ mã \n.1 Mở, đóng, tạo mới, ghi một trang hay m ột Web site \nư mục trên máy nh ư một website. Khi đó tại \nsố các file để windows qu ản lý \ntên “_private”, “_vti_c nf”, “_vti _pvt”). \n này không còn giá trị sử dụng vì thế \nước k ững file này. \n Web ... 3\n+ Tạo mới một trang hay m ột Website:   \nFrontpage có kh ả năng coi một th\nthư mục được coi là website đó sẽ sinh ra m ột \n(Các file này n ằm trong các th ư mục có \nKhi đưa website lên m ạng thì c ác file\ntr hi đưa lên mạng chúng ta nên xoá b ỏ toàn bộ nh\n \nTrên thanh công c ụ vào: File --> New --> Page or\n \n 28\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 29,
    "text": "ộ\n Hình 3.\nHình 3. 4: Chọn template \n \nSau đó chọn trang cần tạo: \nCó thể chọn một trang trắng (Bl ank page) ho ặc \nchọn trang theo m ột thiết kế có sẵn của Front \npage(Page template) r ồi chọn một trong số các \nmẫu có sẵn (Có thể là Frame). Đối với Webs ite \nchọn Em pty We b hoặc Website Template. \n \n \n \n \n \n \n \n \n \n+ Mở một Website (M ột thư mục c coi là \nWebsite): \n \nTrên thanh công c ụ vào: File --> Open Web \n 3: Tạo m t trang ha y we b \n \nđượ\n 29\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 30,
    "text": "Hình 2. 5: Mở Website \n.  \nSau đó chọn  thư mục cần xây dựng\n \n \n \nHình 3. 6: Chọn thư mục web \n \n3.2 Định dạng font ch ữ, para graph,... \nFont chữ: Format --> Font... r ồi chọn font cần hiển thị, và m àu hiển thị của \ndoạn text. Ho ặc bạn có thể chọn nga y tại Dropm enu font c ần hiển thị (Giống \nmột số trình soạn thảo văn bản khác) và m àu tại biểu tượng chữ A trên thanh \ncông cụ.  \n \nParagraph: L ựa chọn đoạn văn bản cần định dạng (Bôi đen), click chu ột phải \nvào đoạn ăn bản đó đó rồi chọn Paragraph.  \n \n \n 30\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 31,
    "text": "Hình 3. 7: Đặt paragra gh \n \n \n \nC  định dạng theo: ó thể\nAlignment: Quy định vị trí của đoạn text đó. Giá trị:  \nDefaut, left, right, center, Justify. \n- Identation: Xác định lề của đoạn text. Giá tr ị: \n Before text: Kho\n After text: Khoảng cách lề phải. \n trắng đầu đoạn text. \nc đoạn text. Gi á trị: \nLine spacing: Kho ảng cách gi ữa các dòng trong đoạn text. \n  \n- \nảng cách lề trái. \n Ident first  line: Kho ảng\n- Spacing: Xác định khoảng cách gi ữa cá\n Before: Khoảng cách phía trên đoạn text. \n After: Khoảng cách phía d ưới đoạn text. \n \n 31\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 32,
    "text": "Hình 3. 8: Chọn tham  số paragra ph \n \n3.3 Ảnh, âm thanh \nẢnh, âm  thanh tr ong trang Web không ph c xây dựng trong trang \nà nó được gọi từ file ảnh i. ải là nó đượ\nhay file âm thanh bên ngoà m\nChèn ảnh: Insert --> Picture -->From file... r ồi chọn file ảnh cần chèn. \n \n \n \nHình 3.9: Insert ảnh \n \n \n \nĐặc tính của ảnh: C họn  ảnh cần đặt thuộc tính, click chu ổi phải chọn Pictur e \nProperties... \n 32\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 33,
    "text": "Hình 3. 10: Đặt đặc tính của ảnh \n \n \nam số cho ảnh Hình 3. 11 : Chọn th\n 33\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 34,
    "text": "Tạo âm huột phải vào trang ch ọn Page properties, T ại \nmục background sound ch ọn file âm thanh c ần chè n.  thanh cho trang: Click c\n \n \n \nâm thanh nền \nTable  tham số sau: \nSize: \nAlignment: V ị trí của bảng trong trang. Giá tr ị:  \nDefault, left, right, center. \nBorder size: Độ dày của đường viền bảng. \nCellpadding: Kho ảng cách ph ần tử trong cell đến đường viền bảng. \nCellspacing: Kho ảng cách ph ần tử ngoài cell đến đường viền bảng. \nSpecify width: Độ rộng của bảng. \nBạn cũng có thể tạo bảng bằng biểu tượng trên thanh công c ụ hoặc có thể vẽ \nbảng bằng cách Table --> Draw Table. \nBạn muốn sửa bảng click chu ột phải vào bảng cần sửa chọn Table Properties... \ncũng có các tham s ố như trên. \n Hình 3. 12: Đặt \n \n3.4 Bảng(Table) \nTạo bảng: \n--> Insert --> Table... sau đó bạn điền các\n- \nRows: Số lượng hàng trong b ảng. \nColums: Số lượng cột trong bảng. \n - Layout: \n 34\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 35,
    "text": "Hình 3. 13: Chọn Thuộc tính cho b ảng \nTạo màu nền cho m\nClick chu ột phải vào bảng hoặc cell cầno màu nền chọn Table pr operties (v ới \nroperties (với cell). Tại  mục Background  có 2 l ựa chọn  \n- Color: Ch ọn màu nền cho bảng hoặc cell. ột bảng hoặc một cell: \n tạ\nTable) ho ặc Cell p\n  \n - Use background picture: Ch ọn một file ảnh có sẵn làm nền. \n \n 35\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 36,
    "text": "Hình 3. 14: Đặt tham số của bảng \n \nng(Bookmark): \nt tên. Trên thanh công c ụ vào Insert --> Bookmark..., t ại \nbạn gõ tên cho đối tượng cần đặt. 3.5 Hyperlink, Bookmark \nĐặt tên cho m ột đối tượ\nChọn đối tượng cần đặ\nphần Bookmark nam e, \n \n \n \n 36\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 37,
    "text": "Hình 3. 15: Đặt bookm ark cho một đối tượng \nể là một đoạn text, có th ể là ảnh,...). \nt --> Hyperlink... (Phím nóng Crtl+K, cũng có thể click chu ột vào \ng quả cầu trên tha nh công cụ), tại phần UR L của cửa sổ mới hiện bạn \nđánh địa chỉ cần link đến là\n  \nTạo siêu liên k ết (hyperlink): \nChọn đối tượng cần tạo hyperlink (có th\nSau đó, \nvào Inser\nbiểu tượn\n được.  \n \nHình 3. 16: Tạo hyperlink \nến một đối tượng đã đặt tên trong m ột trang nào đó, bạn vẫn làm  như \ntrên nhưng sau khi đánh đị c Bookmark  b ạn chọn tên  \ncủa đối tượng cần link tới. \n  \nĐể link đ\na chỉ đến trang đó, tại mụ\n 37\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 38,
    "text": "Hình 3. 17: Đặt thuộ tính cho hyperlink \n \nờng link có s ử dụng frame, b ạn có t hể chỉ định trang link đến \nần Target frame click chu ột vào biểu \n Same frame: Trang hi ển thị ame chứa đường link. \ne: Trang hi ển thị toàn bộ cửa sổ (không thu ộc fram e nào). \nndows: Trang hiển thị sang một cửa sổ mới (Không thu ộc cửa sổ chứa \name: Trang hiển thị sang frame cha (bao frame có ch ứa đường link). \nung(form): \nn tử thuộc form (các form field) ph ải nằm trong khung nà y thì mới có \nnghĩa. \nInsert --> F orm --> Form.  \n \nKhi tạo khung l uôn có \nSubmit: G ửi dữ liệu đến một một đối tợng xử lý khác (có th ể là một chương \nực tiếp qua Email,...). \nng các form field. c\n \nNếu trang ch ứa đư\nhiển thị tại fram e nào bằng cách, t ại ph\ntượng “cái bút”, r ồi chọn các tham s ố: \n vào đúng fr\nWhole fram\nNew Wi\nframe). \nParent fr\n3.6 Tạo khung (form) \na, Tạo kh\n Mọi phầ\n2 nút chức năng : \nư\ntrình CGI, có th ể gửi tr\nClear: Xóa d ữ liệu tro\n 38\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 39,
    "text": "Hình 3. 18: Tạoform \n \nb, Tạo các form field\n \nGiá trị là một dòng ký t ự \n \nt có thanh trượt (Scrolling text box):  \n Text Box \nồm nh iều dòng ký t ự \nert --> Form--> Check Box. \ná trị là các lựa chọn logic. Sử dụng tr ong trường hợp chọn nhiều giá \ntrị cùng một lúc \n \n- Hộp lựa chọn logic (Radio Button) :  \nInsert --> F or\nGiá trị là các lựa chọn logic. S ửụng tr ong t rường hợp chọn một giá trị \n- Hộp l\nrop-down menu. \n- File U\n \n Có tác dụng gửi file lên má\n \n (Pus h button):  \nsert-->Form-->Push Button. \nng tin mà ta gán cho chúng : (Phải nằm trong kh ung) \n- Hộp text một dòng ( One line text box):  \nInsert --> F orm --> One-line Text Box \n- Hộp tex\nInsert --> F orm -->  Scrolling\nGiá trị là một đoạn văn bản g\n \n- Hộp lựa chọn  (Check box):  \nIns\nGi\nm--> Radio Button. \n d\nduy nhất. \n \nựa chọn trượt (Drop-down menu):  \nInsert --> F orm --> D\nGiá trị là một danh sách các l ựa chọn đã được tạo sẵn \npload: \nInsert --> F orm --> File Upload \ny chủ \n- Nút bấm\nIn\nGiá trị là thô\n 39\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 40,
    "text": "Mỗi form\nclick chu\n  field có các đặc tính riêng c ủa chúng. Để lựa chọn các tham s ố này ta \nột phải vào form field đó rồi chọn Form Field Properties.. \n \n \nh dáng trang có t ạo form \này hướng dẫn về cách trình bày trang và các k ỹ thuật định dạng văn \nbản. Qua đó bạn có thể tạo g bị phụ thuộc vào những \ngiới hạn của HTML. M ặc dù Fr ontpage 2002 c ung cấp cho bạn hầu hết các kỹ \nthuật xây dựng, bạn có thể thấy một trang web r ất vừa ý, nhưng kỳ thực bản \nthân nó v ẫn chứa rất n ) không cần thiết. Đó \nển thị trên trình duy ệt không hoàn toàn theo ý \no diện front page rất hoàn hảo. Vì  vậy để cho \nến thức nhất định về \nmã nguồn của nó nhất là khi bạn m ử lý các trang web động.  \n \nủa cuốn sách này s ẽ hướng dẫn bạn cách sử dụng mã ngu ồn \nng trong vi ệc soạn thảo trang web hi ệu quả. Hình 3. 19 : Hìn\n+ \nTóm tắt chương \n \nChương n\nnhững trang we b mà khôn\nhiều những thẻ mã nguồn (HTML\ncó thể là lý do khi trang web hi\nmuốn của bạn mặc dù trên gia\ntrang we b của bạn hiển thị tốt hơn bạn cuã ng cần phải có ki\nuốn lập trình, s\nPhần tiếp theo c\nHTML với các thẻ cơ bản đủ sử dụ\n \n \n 40\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 41,
    "text": "Chương\n(HTML: 4 Ngôn ngữ đánh dấu siêu văn bản \n Hyper Text Markup Language)  \nệm \nHTML( Hypertext Markup La ánh dấu siêu văn bản, một \nngôn ngữ thông dụng hiển thị Web.  \nNgôn ngữ HTML không ph ải là một ngôn ng ữ lập trình. H TML gọi là ngôn \nngữ chỉ vì nó gồm các tập hợp nhỏ các nhóm ký t ự theo  một quy tắc mà bạn \ndùng để quy định kiểu dáng, v ị trí, cách th ức của văn bản, ảnh, âm thanh ha y \nbất cứ một đối tượng nào khác cùng v ới sự liên kết giữa chúng. \nCác trang vi ết bằng ngôn ng ữ HTML có c ấu trúc như sau: \n<HTM L> \n<HEAD> \n> \n<BODY> \n văn bản \nhẻ cơ bản: \nCách định nghĩa thẻ:   \nCó 2 loại thẻ: \n- Thẻ có nội dung: <Tê n thẻ> ẻ> \n<tên thẻ>: Bắt đầu một thẻ. \n</tên thẻ>: Kết thúc một thẻ. \nThẻ rỗng: <Tên th ẻ> (Trường hợp này không có k ết thúc thẻ) \n.2.1 Các thẻ định nghĩa đoạn văn bản, kiểu chữ \nThẻ P: Định nghĩa đoạn văn bản. \n bản </P>  \n4.1 Khái ni\nnguage) là ngôn ng ữ đ\n<TITLE> ti êu đề trang <TITLE\n</HEAD> \nNội dung\n</BODY> \n </HTML>  \n4.2 Các t\n nội dung text </Tên th\n- \n \n4\nCú phá p: <P> nội dung đoạn văn\n \n \nMã nguồn \n 41\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 42,
    "text": "<html> \n<head><title>Test</\n<body> title></head> \n<p> Day la noi dung doan text </p\n > \n</body>\n</html> \nHiển thị trên trình duy ệt \n \nHìn ản h 4.1: Hiển thị đoạn văn b\nThẻ H: Quy định kích cỡ của tiêu đề. \n Cú phá p:  <Hx> Tiêu đề </Hx> \n Trong đó: x =1,2,3,4,5,6. x càng nh ỏ cỡ chữ càng lớn. \nMã nguồn \n<html> \n<head><title>Test</title></head> \n<body> \n<H1> Tie u de co  chu lon nhat (H1) </H1>< br> \n<H2> Tie u de co chu l on thu hai (H2) </H 1><br> \n.. .. .. <br> \n<H6> Tie u de co chu nho nhat</H6> \n</body> \n</html> \nHiển thị trên trình duy ệt \n 42\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 43,
    "text": "Hình 4.2: Ví dụ về tiêu đề văn bản \nThẻ B: Chữ đậm. \n Cú pháp: <B>Phần chữ đậm</B> \nMã nguồn \n<html> \n<head><title>Test</title></head> \n<body> \n<p><b> Phan  text chu dam </b></p> \n</body> \n< > /html \nHiển th duyệt ị trên trình \n \nHình m 4.3: Đoạn văn bản chữ đậ\n 43\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 44,
    "text": "Thẻ I: Chữ nghiêng. \n Cú pháp: <I>Phần chữ nghiêng</I> \nMã nguồn \n<html> \n<head><title>Test</title></head> \n<body> \n<p><i> Phan  text ch\n</body> \n</html> u nghieng</i></p> \nHiển thị trên trình duy ệt \n \nHình 4. 3: Đoạn văn bản chữ nghi êng \n \nThẻ U\n > \nMã nguồn : Chữ gạch chân. \nCú pháp: <U>P hần chữ gạch chân</U\n<html>\n<head><title>Test</title></head> \n</html \n<body> \n<p><u> Phan  text gach chan</u></p> \n</body> \n> \nHiển thị trên trình duy ệt \n 44\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 45,
    "text": "Hình 4. 4: Đoạn văn bản chữ gạch chân \n \nThẻ F\nCú phá p: <FO NT FA CE=”tên font” CO\nsize=”số nguyê n”> \nMộ\n.VONT: Quy định font chữ. \nLOR=”m ã màu hoặc tên m àu” \nt số tên font thông d ụng: .VnTime; .VnTimeH; .VnArial; \nnArialH;.VnAvant; .VnAvantH;... \nMã nguồn \n<html> \n<head> \n<title>Test</title> \n<meta http-equi v=\"Content-Type\" co ntent=\"text/html; charset=utf-8\"> \n</head> \nbody> \n<p><font face=\"Arial\" colo r=\"#000000\" size=\"2\"> Ph ần  text có font Arial \ntheo chuẩn Unic ode, cỡ chữ bằng 2, m\n <\nàu đen </font></p> \n</body>\n</html> \nHiển thị trên trình duy ệt \n \nHình 4. 5: Ví dụ về phông ch ữ \n 45\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 46,
    "text": "Thẻ BR: Xuống dòng  <BR>(Thu ộc loại thẻ rỗng) \nMã nguồn \n<html> \n<head><title>Test</title></head> \n<body> \n<p>Pha n  text truoc the BR <br> Phan text sau the BR< /p> \n</body> \n</html> \nHiển thị trên trình duy ệt \n \nHình yệt  4.6: Thẻ BR trên trình du\nThẻ Sub: Chữ nhỏ chỉ số dưới. \n Cú pháp: <SUB>Phần chữ nhỏ chỉ số dưới</SUB> \nMã nguồn \n<html> \n<head><title>Test</title></head> \n<body> \n<p>Đối tượng<sub>Chi so duoi</sub></p> \n</body> \n</html> \n \nHiển thị trên trình duy ệt \n 46\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 47,
    "text": "Hình 4. 7: Chỉ số dưới  \nThẻ Sup: Chữ nhỏ chỉ số trên. \n Cú phá p: <SU P> Phần chữ nhỏ chỉ số trên</SUP> \nMã nguồn \n<html> \n<head><title>Test</title></head> \n<body> \n<p>Đối tượng<sup>Chi so tren</sup></p> \n</body> \n</html> \nHiển thị trên trình duy ệt \n \nHình 4. 8: Chỉ số trên \n \n \nThẻ DL: Định nghĩa một danh sách. \n \nCú Phá p \n            <D L>Đề mục danh sách \n   < DT>Danh sá DT> \n <DT>Danh sách mức 1</DT> \n      <DD>Danh sách m ức 2</DD> ch mức 1</\n  \n  \n 47\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 48,
    "text": "..... \n </DL>     <DD>Danh sách m ức 2</DD> \n <DT>Danh sách mức 1</DT> \n     <DD>Danh sách m ức 2</DD> \n \nMã nguồn \n<html> \n<head><title>Test</title><\n<body> \n<DL><b><i>De muc danh sach</i></b> \n<DT>Danh sach muc 1</DT>\n<DT>Danh sach muc 1</DT> \nDD>Danh sach muc 2</DD> \n/body> \n/html> /head> \n \n<\n<DD>Da nh sach muc 2</DD> \n<DT>Danh sach muc 1</DT> \n<DD>Da nh sach muc 2</DD> \n<DT>.. ..</DT> \n</DL> \n<\n<\nHiển th duyệt ị trên trình \n \nHình 4. 9: Ví dụ về danh sách \n \n \nThẻ UL: Tạo danh sách có bu\nú pháp: llets \nC\n 48\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 49,
    "text": "<LI>\n<LI>Text3</LI> \n</UL> \nMã nguồn <UL>  \n<LI>Text1</LI> \nText2</LI> \n...... \n<html> \n<head><title>Test</title></head> \n<body> \n<UL> \n<LI>text1< /LI> \n<LI>text2< /LI> \n<LI>text3< /LI> \n</UL> \n</body> \n</html> \nHiển thị trên trình duy ệt \n \n \nHình 3.10: Danh sách có bullet \n \nThẻ OL: Tạo danh sách theo có đánh số thứ tự. \n Cú pháp: <OL> \n   <LI> Text1</LI> \n   <LI> Text2</LI> \n   <LI> Text3</LI> \n   ...... \n      </OL> \nMã nguồn \n<html> \n 49\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 50,
    "text": "<head><title>Test</title\n<body> \n<OL> \n<LI>text1< /LI> \n<LI>text2< /LI> \n<LI>text3< /LI> \n</OL> \n</body> \n</html> ></head> \nHiển thị trên trình duy ệt \n \nHình 3. 11: Danh sách có đánh số thứ tự \n \n \n \n4.2.2 Các thẻ định nghĩa bảng, ảnh \nThẻ TABLE: Tạo bảng \n Cú pháp:  \n<TABLE > \n<TR>  \n<TD>Nội dung cột 1, hàng1</TD> \n<TD>Nội dung cột 2, hàng1</TD> \n..... \n</TR> \n<TR> \n<TD>Nội dung cột 1, hàng 2</TD > \n<TD>Nội dung cột 2, hàng 2</TD > \n...... \n</TR> \n...... \n</TAB LE> \n 50\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 51,
    "text": "Một số tham số của bảng:  \nCách s\nacing:  Quy định khoảng cách c ủa phần tử ngoài cell đến đường \nbảng hoặc một cell. \nheight:  Quy định độ cao của một bảng hoặc một cell. \n  Quy định tính tr ôi nổi của bảng hoặc định vị phần tử trong \n  Quy định độ dày của đường viền trong bảng. \nMã nguồn ử dụng: <TAB LE tham so=”giátrị”> hoặc <TD thamso=”giá tr ị”> \ncellsp\nviền bảng. \ncellpaddi ng:  Quy định khoảng cách của phần tử trong cell đến đường \nviền bảng \nwidth:   Quy định độ rộng của một \nalign:\ncell. \nborder:\n<html> \n<head><title>Test</title></head> \n<body> \n<table width=\"500\" border=\"1\"> \n<tr> \n<td widt h=\"40% \">1,1</td> \n<td widt h=\"60% \">1,2</td> \n</tr> \n<tr> \n<td widt h=\"40% \">2,1</td> \n<td widt h=\"60% \">2,2</td> \n</tr> \n</body> \n</html> \nHiển thị trên trình duy ệt \n \nHình 4. 12: Ví dụ về bảng \n \n 51\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 52,
    "text": "Mã nguồn \n<html> \n<head> \n<title>Test</test> \n \n22.jpg\" \nn những cây cầu ở Hà \ncây cầu \nông thể \núc xinh đẹp của Hà Nội.<br><br>V ốn được xây \nn nhiên đã ban tặng cho Hà N ội một nét đặc sắc mà \nc, đó là những dòng sông nh ỏ chảy uốn lượn trong \nphố, là vô số những hồ lớn nhỏ mà phần lớn đều có đảo và bá n đảo \nng của người dân thà nh phố \nviên ngọc tô điểm cho  bộ mặt đô thà nh. C ó \nộ phận hữu cơ tạo nên Hà Nội của chúng ta . \ni Hà Nội đã phát hiện, nắm bắt được nét đẹp \n điểm xuyết thêm cho nó, ng ười Hà \n sông, nối liền bờ - đảo với những \nác nhau theo từng hoàn c ảnh. Đặc sắc nhất có lẽ phải nói đến cầu \ni cây cầu \năn Siê u \nủa nước Việt, đây chính là m ột phần không th ể thiếu của \ncụm công t rình văn hóa liên hoà n nổi tiếng \"Đền Ngọc Sơn - Cầu Thê Húc  - \nTháp Bút - Đài Nghiên\" đã làm tăng lê n sự lung linh huy ền diệu của khu \"Li nh \nĐịa\" Hồ Gươm. Hà Nội có ca dao r ằng:<br><br><i>R ủ nhau xem c ảnh Kiếm \nHồ<br>Xem cầu Thê Húc, xem  chùa N gọc Sơn<br>Đài Nghiên, Tháp Bút \nchưa m òn<br>Hỏi ai gây d ựng nên non n ước này.... </i>\n<p align=\"right\"><font face=\"Arial\"  size=\"2\"><i>Mai Lâm</i></font></p>\n</td></tr></table> \n<body> \n</html> </head> \n<body> \n<table width=\"500\"><tr><td> \n<table align=\"right\" c ellpaddi ng=\"10\"><tr><td>\n<img src=\" http://hanoi.vnn.vn/minhho a/file_minh_hoa/MH201102497\nborder=\"0\"> \n</td></tr></table> \n<p align=\"justify\"><font face=\"Arial\" size=\" 2\">Nhắc đế\nNội, hẳn bạn sẽ nghĩ ngay đến những cây cầu lớn như Long Biên, Th ăng Long \nhay Chương Dương. Tuy nhiê n bài viết này sẽ đưa bạn đến với những \nkhác của Hà Nội, nhỏ bé hơn nhiều nhưng lại là những nét chấm phá kh\nthiếu trong không gian ki ến tr\ndựng bên bờ sông Cái, thiê\nhiếm thành ph ố nào có đượ\nlòng thành \nđược tạo bởi thiên nhiên ho ặc do công s ức lao độ\nqua các th ế hệ, chúng nh ư những \nthể nói sông, h ồ đã trở thành một b\nVới sự thông m inh sáng tạo, ngườ\nđặc trưng đó của thành ph ố mình và nh ư để\nNội đã tạo nên những cây cầu nối những bờ\nsắc thái kh\nThê Húc, khi nh ắc đến thắng cảnh Hồ Gươm không t hể không nh ắc tớ\nnày. Được dựng từ năm 1865 the o ý tưởng của Phương đình Nguy ễn V\n- nhà văn hóa lớn c\nHiển thị trên trình duy ệt \n 52\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 53,
    "text": "Hình 4. 13: Trang we b bố trí ảnh và text \nThẻ IM\n Cú\n<IMG S\nalt=”Đoạn text thông báo” widt\nalign=”vịG: Gọi ảnh. \n pháp:  \nRC=”đường dẫn đến ảnh cần gọi” border=”chiều rộng đường viền” \nh=”chiều rộng ảnh” height=”chi ều cao ảnh”  \n trí của ảnh”>  \nMã nguồn  \n \n<html> \n<head> \n 53\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 54,
    "text": "<title>test</title> \n</head> \n<body> \n<p><img border=\"0\" src=\"l ogo_vdc.gif\" width=\"80\" height=\"65\" al t = “Logo \n/p> VDC”><\n</body> \n</html> \nHiển thị trên trình duy ệt \n \nHình 4. 14: ví dụ ảnh \n \n \n3.2.3 Tên một đối tượng, hy perlink (th ẻ A) \nTên một đối tượng: <\nHyperlink: <A href =” đường dẫn đến file”>Ph ần t\n \n A name=”tên”>Phần tử cần đặt tên</A> \nử cần link</A> \nMã nguồn \n<html> \n<head><t\n<body> itle>Test</title></head> \np><a href=”http://home.vnn.vn”> Phan te xt co link den trang chu </a></p> \n/body> \n/html> <\n<\n<\nHiển thị trên trình duy ệt \n 54\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 55,
    "text": "Hình 4. 15 Hyperlink \n \nMã nguồn \n<html> \n<head> \nitle>test</title> \n<p><a href=\"#cungdinh\">Nh ạc cung đình Huế</a></p> \nnbsp;</p> \n&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p> \n<p ><b\nĐã hàn  thuật hát chèo, tu ồng, múa r ối nước, dâ n ca v.v... là \nnhững hệ \nthuật h  người nông dâ n miền Bắc Việt Nam rất yêu thích. \nĐặc biệt nó đư ; <i><a \nhref=\"n\n<p ><b Thái</b></font><br> \nLàng n hái, còn gọi là làng B ưởi, ở phía Tây B ắc của \nThủ đô ây bắt đầu từ thế kỷ XV, được Nguyễn Trãi \nnói đến khá ư địa chí\"</i> c ủa ông ( viết năm 1435): P hường \nYên Bá\nđã làm a \nhref=\"n 3110240142\" id=\"l5\">Chi tiết</a></i ></p> \n<p><b><a name =\"cungdinh\" >Nh ạc cung đình Huế</a> - loại hình âm  nhạc \nc sắc ở Việt Nam </b></font> <br> \nÂm nh đình Việt Nam là m ột bộ môn âm  nhạc truyền thống đặc sắc của \nViệt Nam, có giá tr ị cao về nghệ thuật và phương diện lịch sử. Nhạc cung đình \ncòn xuất hiện c, \nNhật B c. Theo sử sách để lại thì nhạc cung đình xuất hiện lần đầu \ntiên và rần, nhưng m ãi đến đời Nguyễn nhạc cung đình mới chính \n biến và phát triển mạnh tại Cung đình Huế. &nbsp; <i><a <t\n</head> \n<body> \n<p>&nbsp;</p><p>&nbsp;</ p><p>&nbsp;</p><p>&nb sp;</p><p>&\n<p>&nbsp;</p><p>\n>Nghệ thuật hát chèo</b></font><br> \ng trăm năm nay, nghệ\nloại hình ngh ệ thuật truyền thống độc đáo của Việt Nam . Trong đó ng\nát chèo đã được những\nợc phổ biến rất rộng ở đồng bằng sông Hồng. & nbsp\nghethuat.asp?id=BT13110240751\" id =\"l5\">Chi tiết</a></i ></p> \n>Làng giấy dó Yên \nghề giấy nổi tiếng Yên T\n Hà Nội. Nghề làm giấy ở đ\n rõ trong sách <i>\"D\ni ở Thăng Long đương thời chuyên làm gi ấy; người thợ thủ công ở đây \n ra giấy thị (để viết chỉ thị); giấy lệnh (để ghi mệnh lệnh). & nbsp; <i><\nghethuat.asp?id=BT1\ntruyền thống đặ\nạc cung \ntrong triều đình của một số quốc gia châu Á nh ư Trung Qu ố\nản, Hàn Q uố\no đời nhà T\nthức được phổ\n 55\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 56,
    "text": "href=\"nghethuat.asp?id=BT14110236304\" id =\"l5\">Chi tiết</a></i ></p> \nghề đúc đồng ở Sài G òn xưa</b></font><br> \nỞ đúc đồng là một nghề thủ công dân gian tr uyền thống. Nếu bỏ qua sự \ntồn tại về một nghề đúc đồng của c n địa thì nghề đúc đồng của \nệt có lẽ đã xuất hiện ngay từ những thế hệ đầu tiên đi mở đất - Với \nu cầu về vũ khí, đồ sinh hoạt... Và, ngày càng được bổ sung phát tri ển \nT13110239856\" id =\"l5\">Chi tiết</a></i ></p> \n>&nbsp;</p><p>&nbsp;</p> <p ><b>N\n Sài G òn \nác cư dân bả\nngười Vi\nnhững nh\nbởi những đợt di dân s au đó. &nbsp; <i><a \nhref=\"nghethuat.asp?id=B\n<p>&nbsp;</p><p>&nbsp;</p><p\n<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p> \n</body> \n</html> \nHiển thị trên trình duy ệt \n 56\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 57,
    "text": "Hình 4. 16 Book m ark \n \n \n 57\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 58,
    "text": "4.2.4 Tạo form \n- Thẻ <form> là công c ụ chủ yếu để tạo các trang web c ó tính chất tương\ntác.  \n- Thẻ <form > cho phé p người sử dụng Br owser nhập thông tin \n hoặc lựa \nchọn trong các kh ả năng có sẵn. \n \n \nFORM method=”POST” action=”đường dẫn đến chương trình”>  \n \nch thức trao đổi thông tin qua ch ương trình. - Mỗi form th ường gắn với một chương trình th ực hiện gọi là \"script\",\nchương trình này s ẽ tiến hành làm  một công việc nào đó khi người dùn g \nnhấn nút chấp nhận (submit) trên form. \nCú phá p:\n<\nCác thẻ form \n</FORM> \nWeb Se rver\nRequeRequest st \nServer an swer Server an swerInternet Brows\nClient er \nAPP\nCGI- C, C+ + \n- Javascr ipt\n- Basic \n- Perl \n-….\n \nHình 4. 17: Cá\n \n 58\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 59,
    "text": "Các thẻ tạo form: \nThẻ INPUT: \nCú phá p: <INPU T type=”lo ại thẻ” nam e=”Tên trường” value=”giá tr ị”> \nCó các lo ại sau: \nText:  Hộp text box có m ột dòng để điền dữ liệu. \nCheckbox: H ộp lựa chọn logic kiểu giá trị tập hợp. \nRadio:  H ộp lựa chọn logic ki ểu giá trị duy nhất. \nButton: T ạo một nút bấm bất kỳ. \nSubmit: T ạo nút bấm có tính c hất gửi thông tin. \nReset: Tạo nút bấm có tính xoá toàn b ộ thông tin trong các form field. \nThẻ SELECT:(H ộp lựa chọn trượt) \nCú phá p: <SELEC T nam e=”tên trường” size=”giá tr ị”> \n  <OPTION value=”giá trị 1”> Tên l ựa chọn1</OPTION>  \n  <OPTION value=”giá trị 2”> Tên l ựa chọn2</OPTION>  \n  .......... \n </SELECT> \nTrong đó: \niá trị của size là độ rộng của hộp lựa chọn trượt. \ngiá trị1: Là giá tr ị của lựa chọn 1. \ngiá trị2: Là giá tr ị của lựa chọn 2. \n... \nThẻ TEX TAREA:(Hộp text có thanh tr ượt) \nCú phá p: \n <TEX TAREA nam e=”Tên trường”  rows=”s ố hàng”  cols=”s ố cột”> \n</TEX TAREA> g\n 59\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 60,
    "text": "Mã nguồn \n<html> \n<head><title>Test</title></h\n<body> \n<div align=”center”> \n<form method=”POST” action=”ct.cgi”> \n<table width=”500” border=”1”> \n<tr> \n<td widt h=”40%”>O ne-line Text box</td> \n<td widt h=”60%”> \n<input type =”text” nam e=”textbox” size=”20”> \n</td> \n</tr> \n<tr> \n<td widt h=”40%”>C heckb ox và Radio button</td> \n<td widt h=”60%”> \n<input type=”checkbox” name=”checkb ox” value=”Ye s” >&nbsp;  &nbsp; \n&nbsp; \n<input type =”radio” na me=”radio” value=”Y es”> \n</td> \n</tr> \n<tr> \n<td widt h=”40%” >N ormal button, S ubmit button, Reset button</td> \n<td widt h=”60%”> \n<input type =”button” value=”B utton”  nam e=”b1”>& nbsp; &nbsp; &nbsp; \n<input type =”subm it” value=”S ubmit” nam e=”b2”> & nbsp; & nbsp; &nbs p; \n<input type =”reset” value=”Reset” nam e=”b3”> \n</td> \n</tr> \n</table> \n</form> \n</div> \n</body> \n</html> \n \n \n ead> \nHiển thị trên trình duy ệt \n \n 60\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 61,
    "text": "Hình 4. 18: Ví dụ về form (thẻ Input) \n 61\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 62,
    "text": "Mã nguồn \nest</title></head> \nbody> \n<div align=”center”> \n<form method=”POST” \n<table width=”95%”>  \n<tr> \n<td widt h=”40%”>Dr op m enu</td> \n<td widt h=”60%”> \n<select nam e=”dropm enu” size=”1”> \n<option value=”” selected>Chon m enu</option> \n<option value=”m enu1 ”>Menu1</opti on> \n<option value=”m enu2 ”>Menu2</opti on> \n<option value=”m enu3 ”>Menu3</opti on> \n</select> \n</td> \n</tr> \n<tr> \n<td widt h=”40%”>Scr olling te xt box</td> \n<td widt h=”60%”> \n<textarea name=”textarea” cols=”20” rows=”4”> \n</textarea> \n</td> \n</tr> \n</table> \n</form> \n</div> \n</body> \n</html> \n <html> \n<head><title>T\n<\naction=”ct.cgi”> \n \n \n \n \n \n \nHiển thị trên trình duy ệt \n \n 62\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 63,
    "text": "Hình 4. 19: Thẻ Select, textarea \n \n4.2.5 Tạo khu ng (thẻ Frame) \n \nCú phá p: \n<html> \n<frameset framespacing=\"0\" border= \"0\" rows=\"frame1,frame2,..., *\" \nfram eborde r=\"0\"> \n<frame name=\"tên frame1\" scrolli ng=\"no\" noresize target=\"_t op\" \nsrc=\"đường dẫn 1\"> \n<frame name=\"tên frame2\" scrolling= \"auto\" noresize target=\"_self\" \nsrc=\"đường dẫn 2\"> \n<frameset framespacing=\"0 \" border=\"0\" rows=\"....\" \nfram eborde r=\"0\"> \n  ..... \n </frameset> \n...... \n<frame name=\"tên frame n\" scrolli ng=\"auto\" noresize target=\"_self\" \nsrc=\"đường dẫn n\"> \n<no\n<body> \n<p>N oi dung do ạn text thong bao tri nh duyet  khong ho t ro \nFrame</p> \n</body> \n/noframe>  \nframes> \n<\n</frameset> \n 63\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 64,
    "text": "</html> \nMã nguồn \n<html> \n<head> \n<meta http-equi v=\"Content-T\n<title\n</head> \n<fra\n<frame namype\" content=\"text/html; charset=utf-8\"> \n>Le hoi</title> \nmeset framespacing=\"0\" bor der=\"0\" r ows=\"159, *\" frameborder =\"0\"> \ne=\"header\" scrolling=\"no\" noresize target =\"_top\" src=\"top.html\"> \n your browser does n't support them .</p> \ny> \nml> <frame name=\"main\" src=\"list_lehoi .html\" scrolling=\"auto\" noresize \ntarget=\"_self\"> \n<noframes> \n<body> \n<p>This page uses fram es, but\n</bod\n</noframes> \n</frameset> \n</ht\n \n 64\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 65,
    "text": "Hiển thị trên trình duy ệt \n \nHình 4. 20: Toà n bộ trang Frame \n \n 65\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 66,
    "text": "Hình 4. 21: Fram e trên (top. html) \n \n \nHình 4. 22: Fram e dưới (phu_ta y_ho.html) \n 66\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 67,
    "text": "Tóm tắt chương \n \nMã nguồn HTML là m ột trong nh ững phần trọng yếu trong i Web. \nỉnh sửa l  sau khi so ạn \ng web qu ang w   \n \núp bạn ảo we b vàđến xây dựn\neb động. K  nguồn với c h, hàm trong các \nngôn ngữ lập trình là c ực kỳ quan trọng quyết định trangộng đó có đạt \nđược sự linh hoạt hay không. \n \np \năn\n kỳ tạo một trang HTML có n ội dung \n sau: \n=\"Content-Type\" content=\"text/html; charset=utf-8\"> \nực hành Visual Basic 6</title> \nce=\"Arial\" size=2 color=\"black\" > \nIỀU K ISUAL BASIC 6.0 \nĐiều khiển label và com mand but ton \nBài1: Modul Help \nBài 2: Modul Display \nBài 3: Modul Display1 \nBài 4: Modul Display2 \nBài 5: Modul About \nBài 6: Modul Display3 \nBài 7: Modul Move \nBài 8: Modul Random \nBài 9: Modul Form \ntart \nn textbox, o và mảng điều khiển \nài 11: Modul Multiply \n  làm việc vớ\nBạn có t hể ch\nthảo các tranại mã nguồn và loại bỏ hay thêm vào các th\na các công c ụ để tối ưu cho trẻ\neb của bạn.\nChương nà y gi\ncác trang w có cơ sở cho việc soạn th\nhi đó việc kết hợp mã tiến \nác lện\n web đg \nBài tậ\n \nBài tập về Đoạn v bản, kiểu chữ \n \nBài 1: Sử dụng trìnhsoạn thảo text bất \nnhư\n<html> \n<head> \n<meta http-equi v\n<title>Các bài th\n</head> \n<body> \n<p><font fa\nMục lục \nPhần I. CÁC Đ HIỂN CƠ BẢN TRONG V\nBài 10: M odul S\n&nbsp; \nĐiều khiể ption button \nB\n</font> \n</p> \n</body> \n</html> \n1.1 Theo bạn trình duy ệt sẽ hiển thị trang HTML trên nh ư thế nào?  \n1.2 Chỉnh sửa nội dung trang HTML trên sao cho hi ển thị giống hì nh 3.23\n 67\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 68,
    "text": "Hình 4.23 Bài t ập 1 HTM L \n \n 68\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 69,
    "text": "Bài 2: Hãy soạn các trang web nh ư hình 4. 24 \n \n \n \nHình 4.24:  Bài tập 2 \n \n 69\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 70,
    "text": "Bài tập về bảng \n \nBài 3: Sử dụng trình so ạn thảo text b t kỳ lập trang HTML sao cho khi hi ển thị ấ\nnhư hình 4. 25 \n \nH\n ình 4.25. Bài tập 3 \n 70\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 71,
    "text": "Bài tập về form \n \nBài 5: Sử dụng trình so ạn thảo text bất kỳ lập trang HTML sao cho khi hi ển thị \nnhư hình 3. 27 \n \n \nHình 4.27: Bài tập tổng hợp \n 71\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 72,
    "text": "Chương 5: CSS (Cascaing Style Sheets)  \nể hiện phong cách, tr ợ giúp H TML tr ong việc hiển thị, \nạng mẫu trợ giúp trình bà y trong các ứng dụng văn bản \n bàn (tem plate trong M SWWord). \nột mở rộng của Web và  là một trong nh ững hy vọng lớn để thực hiện \n tưởng tách we b thành hai ph ần: trình bà y và nội dung.  \n chất, CSS là m ột tập hợp các quy t ắc định dạng được định nghĩa cho \nn đi kèm với việc một nội dung được định dạng \niều này giải nghĩa cho từ \"cascading\".  d\n \n5.1 Khái quát \n- CSS là ngôn ng ữ th\ntương tự như các định d\ncủa máy để\n- CSS là m\ný\n-Về thực\ncác thẻ của HTML. CSS luô\ntheo thẻ (HTML, XML,...) - đ\n \n \n \n \nHình 5.1: Vị trí của CSS trên WEB-Internet \nanguage \nXLS-FO: Formatting Objects \nSS được gắn cùng trang web (H TML) theo các cách sau:  \nXLS-T: Transform ation L\n \n \n \n \n \nC\n 72\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 73,
    "text": "Gọi từ một tập tin ngoài (external): \nHEET HREF=\" style.css\" TYPE=\"text/css\"> \núng vào trang H TML: \n TYPE=\"text/css\"> \n!-- \ndent: 10pt} \nE=\"text-inde nt: 10pt \">Indented paragraph</P> \nếp (import): \nss\"> \nimport url(http://www.and.so.on.partial1.css); \n.and.so.on.partial2.css); \nate): \nLINK REL=Stylesheet HREF=\" style.css\" TYPE=\"text/css\"> \nEL=Stylesheet HREF=\"style2 .css\" TY PE=\"text/css\" TITLE=\"Loai \n\"> \nEL=Stylesheet HREF=\"style3 .css\" TY PE=\"text/css\" TITLE=\"Loai \nK REL=\"Alternate Stylesheet\" HREF=\"style3.css\" TYPE=\"text/css\" \nLE=\"Man hinh\" M EDIA=screen> \nHREF=\"style4.css\" TYPE=\"text/css\" \nIA=print> \nuật CSS (nh ững kỹ thuật thông d ụng) \nndent: 10pt} - CSS rle (ruleset) \n - CSS selector \n dearation <LINK REL =STYLES\nĐượ c nh\n<STYLE\n<\nP {text-in\n--> \n</STYLE> \nĐượ c định nghĩa cùng  thẻ (inline): \n<P STY L\nĐượ c gọi gián ti\n<STYLE TYPE=\"text=c\n<!-- \n@\n@import url(http://www\n--> \n</STYLE> \nĐượ c gọi thay thế (Altern\n<\n<LINK R\n#\n<LINK R\n##\"> \nHoặc: \n<LIN\nTIT\n<LINK REL=\"Alternate Stylesheet\" \nE=\"In\" MED TITL\n \n5.2 Kỹ th\nQuy tắc dùng tron g CSS: \nP {text-i u\nP\n{text-inde nt: 10pt} - C SScl\n 73\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 74,
    "text": "text-inde nt - CSS property \nS value \ng CSS CLASS: \nlà một dạng selector đặc biệt, là tập hợp nhiều định nghĩa CSS và \nn cho bất kỳ một thẻ HTML nào. Khi dùng thì m ới có tác dụng lên thẻ \nL nào gọi đến nó.  \n /* class as selector */ \nfootnote/> This elem ent is associated with the CLASS \nDDRESS> \nAnd so is this</P> \n: \nE {color: re d} \ndụng cho ph ần văn bản được lồng trong 3 t hẻ HTML theo th ứ tự \nả hiệu: (ps eudo-element) \nhỉ có 2 phần tử giả hiệu, dùng cho các th ẻ hiển thị khối, dòng (block, p, ...) \ngiả hiệu: \nlớp giảiệu: \nlo: white} \ncolr: red} \nackground: transparent; color: black} \n một văn bản có cấu trúc, được bắt đầu từ thẻ <HTML> r ồi đến thẻ \n và sau đó là các th ẻ như <Hn>, <P>,... \n của các thẻ bậc dưới được kế thừa thuộc tính của các \nắc, font chữ, cách lề,... \ncũng thực hiện việc kế thừa thuộc tính. Ví d ụ như: \nt} 10pt - CS\nCách dùn\nCLASS \nhông gá k\nHTM\n.footnote {f ont: 70%} \n<ADD RESS CLA SS=\nfootnote</ A\n<P CLASS=footnote>\nCách dùng ng ữ cảnh\nTD P CO D\nChỉ có tác \ntrên. \n tử gi Phần\nC\nfirst-line \nfirst-letter \nCLASS \nChỉ có 1 thẻ A là có các  h\nA:link { backgr ound: bl ack; cor\nA:active {background; black: \nA:visited {bo\nTính kế thừa: \nHTML là\n<BODY>\nNhư vậy, các thu ộc tính\nthẻ bậc trên, như màu  s\nTương tự như vậy, CSS \nBODY {font-size: 10p\nH1 {f ont-size: 180%} \nCó nghĩa là: \n 74\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 75,
    "text": "Toàn bộ font chữ được hiển thị trong văn bản với độ lớn là 10pt, riêng đối với \n bản trong th ẻ H1 sẽ được hiển thị với độ lớn hơn 1.8 lần (hay là \nnh đều được kế thừa, ví dụ như thuộc tính backgr ound. \nt số thuộc tính hay dùng trong CSS (cùng th ẻ HTML) phần văn\n18pt). \nKhông ph ải mọi thuộc tí\n \n5. 3 Mộ\n \nThuộc tính Mục đích Giá trị \n(nên dùng) Thừa \nkế \nĐịnh dạng chữ \nColor dùng để định nghĩa màu chữ hiển \nthị #rrggbb có \nfont-wei ght ch ỉ định kiểu chữ hiển thị (đậm, \nbéo,...) Bold \nlighter \nnorm al có \nfont-family chỉ định font ch ữ .VnTime \n.VnArial có \nfont-size kích cỡ chữ 12pt \n15px có \nfont-style kiểu hiển thị Italic \nnorm al có \ntext-decoration trang trí ch ữ None \nunderline \noverline \nline-through có \nDàn chữ \nline-height chỉ định độ cao dòng %(font ch ữ) có \nvertical-align chỉnh theo chi ều dọc Top \nbottom \nmiddle \nsub \nsuper \nbaseline có \n 75\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 76,
    "text": "Thuộc tính Mục đích Giá trị \n(nên dùng) Thừa \nkế \nText-indent điều chỉnh dòng đầu tiên của \nkhối văn bản px, pt, % có \nTex heo chiều nga ng Left \nright \njustify \ncenter có t-align dàn t\nNền \nbackground-color ch ỉ định màu nền #rrggbb  \nbackground-image ch ỉ định ảnh nền url()  \nLề \nmargin-top, \nargin-left, \nottom, chỉ định việc cách lề px, pt có \nm\nmargin-b\nmargin-right, \nmarg in \nDàn trang \nlist-style-type kiểu dành cho t hẻ UL, OL None \ndisc \ncircle \nre \ndecim al \nlower-roman \nupper-roman \nlower-alpha \nupper-alpha có \nsqua\nlist-style-image ảnh thay cho bullet url() có \nlist-style kiểu vắn tắt   \n \n \nTóm tắt chương \n \nChương nà y giúp bạn có đư\nrang web hấp dợc khả năng phong phú trong vi ệc trang trí, t ạo các \nẫn hơn. Bạn có thể sử dụng  CSS để tạo thành tập hợp các định \nbsite điều đó sẽ tiện lợi hơn nhiều trong việc soạn thảo, t\ndạng riêng cho c ả we\n 76\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 77,
    "text": "sửa đổi định dạng trang cũng như làm trang web đó có cấu trúc đồng nhất và \nhuyên nghiệp hơn. \nnền của trang Web) \nu Background \nht\n<he\npe=\"text/css\"> \nckground-color: \nound-col or: \n/h1> \np>  \n \n c\n \nBài tập \n \nI. Backgr ound (\n1\n<. Đặt mà\nml> \nd>  \n a\n \n<style ty\nody {ba b\nyellow} \nh1 {backgr ound-col or: \n#00ff00} \nh2 {backgr ound-col or: \ntransparent} \np {bac kgr\nrgb(250,0,255)} \n</style> \n \n</head> \n \n<body> \n \n<h1>This is header 1<\n<h2> This is header 2</h2> \np>This is a paragraph</ <\n \n</body> \n/html> <\n \n2. Đặt background là một ảnh có sẵn \n 77\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 78,
    "text": "<html> \n<head> \nstyle type=\"text/css\"> \n \nd-image: \nges/bgdesert.jpg\") \n \nbody>  \n<\nbody  \n{\nbackgroun\nurl(\"/ima\n} \n</style> \n</head> \n \n<\n</body> \n \n</html> \n \n 78\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 79,
    "text": "3. Đặt ảnh nền cố định (ảnh nền không cu ộn theo trang w eb) \nhtml> \n \nody  \nrl(\"/images/smiley.gif\"); \n:  \nackground-attachment:  \n/style> \n<body> \n<br\n:</b> \netscape 4 does not supporthe \n\" \not scroll \n/p> \n scroll \ne</p> \nt scroll \nest of the page</p> \np>The image will not scroll \nest of the page</p> \np>The image will not scroll \nrest of the page</p> \nhe image will not scroll \n> \nt scroll \n/p> \nll \nage</p> \nill not scroll \nith the rest of the page</p> \nl> Ảnh 1 (ảnh nền ở vị trí cố định, trên cùng): <\n<head> \n<style type=\"text/css\">\nb\n{ \nbackground-image:  \nu\nbackground-repeat\nno-repeat; \nb\nfixed \n} \n<\n</head> \n \n \n \nẢnh 2 (ảnh nền vẫn ở vị trí cũ, khi cuộn \nweb): \n><br> \n<p> \n<b>Note\nN  t\n\"background-attachm ent\nproperty. \n</p> \n \n<p>The image will n\nwith the rest of the page<\n<p>The image will not\nwith the rest of the pag\n<p>The image will no\nwith the r\n<\nwith the r\n<\nwith the \n<p>T\nwith the rest of the page</p\n<p>The image will no\nwith the rest of the page<\n<p>The image will not scro\nwith the rest of the p\n<p>The image w\nw\n \n</body> \n</htm\n 79\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 80,
    "text": "4. Định nghĩa tất cả các thuộc tính của bac kground trong m ột khai báo  \n type=\"text/css\"> \nody \niley.gif\")  \nenter center \n/head> \np>This is some text</p> \n<p>\n is some text</p> \n is some text</p> \np>This is some text</p> \n> \ns is some text</p> \nt</p> \n> \n is some text</p> \nt</p> \n some text</p> \nis some text</p> \nt</p> \nxt</p> \n is some text</p> \nt</p> \next</p> \ntext</p> \nis some text</p> \np>This is some text</p> \n/html>  \n \n \n \n \n <html> \n<head> \n<style\nb\n{  \nbackground: #00ff00  \nurl(\"/images/sm\nno-re peat fixed  \nc\n} \n</style> \n<\n \n<body> \n \n<\nThis is some text</p> \n<p>This\n<p>This\n<\n<p>This is some text</ p\n<p>Thi\n<p>This is some tex\n<p>This is some text</ p\n<p>This\n<p>This is some tex\n<p>This is some text</ p> \n<p>This is\n<p>This \n<p>This is some tex\n<p>This is some text</ p> \n<p>This is some te\n<p>This\n<p>This is some tex\n<p>This is some text</ p> \n<p>This is some t\n<p>This is some \n<p>This \n<\n \n</body> \n<\n \nII. Các định dạng cho chữ v\n1. Định nghĩa màu chà ký tự \no chữ \n 80\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 81,
    "text": "<html> \n<head> \n<style type=\"text/css\"> \nh1 {c olor: #00ff00} \nh2 {c olor: #dda 0dd} \np {color: rgb(0,0,255)} \nbody> \n>This is header 1< /h1> \n \n/p>  \n \n</style> \n \n</head> \n \n<\n<h1\n<h2> This is header 2< /h2>\n<p>This is a paragraph<\n</body> \n</html> \n2. Định khoảng cách gi ữa \n<html> \n<head> các ký tự \n-spacing: -3px} \n-spacing: 0.5cm} \n \ntscape 4 does \ntter-spacing\" \nperty. \n/h1> \nhis is header 4</h4>  \n \n  \n<style type=\"text/css\"> \nh1 {letter\nh4 {letter\n</style> \n</h\n ead> \n<body> \n<p> \n<b>Note:</b> Ne\nnot support  the \"le\npro\n</p> \n \n<h1> This is header 1<\n<h4> T\n \n</body> \n</html> \n \n3. Căn l\nhtml> ề đoạn văn bản \nt/css\">  \n \n <\n<head> \n \n<style type=\"tex\n 81\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 82,
    "text": "h1 {text-align: center} \nh2 {text-ali gn: left} \nh3 {text-ali gn: \n</style> \n \n</head> right} \n is header 1</h1> \n is header 2</h2> \n<h3> This is header 3< /h3> \n \n</b \n<body> \n \n<h1> This\n<h2> This\nody> \n</html> \n4. Trình bày kiểu chữ \n \ns\"> \n overline} \n: line-through} \ncoration: underline} \ncoration: none} \n2> \n3> \nw.w3schools.com\">\na> \n</b\n</h \n \n \n <html>\n<head> \n \n<style type=\"text/cs\n: h1 {text- decoration\nh2 {text-decoration\nh3 {text- de\n {text-de a\n</style> \n \n/head> <\n \n<body> \n \n<h1> This is header 1< /h1> \n<h2> This is header 2< /h\n<h3> This is header 3< /h\n<p> \n<a \nhref=\"htt p://ww\nlink</ This is a \n</p> \n \nody> \ntml> \n5.  Trình bày đoạn văn bản \nype=\"text/css\">  \n \n \n <html> \nhead> <\n \n<style t\n 82\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 83,
    "text": "p {text-indent: 1cm} \ntyle> \nody> \np> \nme text in a \naragraph \nme text in a \naragraph \n a \n \n \n in a \nh \n/body>  \n</s\n \n</head> \n \n<b\n \n<\nThis is so\np\nThis is so\np\nThis is some text in\nparagraph \nThis is some text in a\nparagraph \nThis is some text in a\nparagraph \nThis is some text\nparagrap\n</p> \n \n<\n</html> \n6 Định dạng các ký t ự trong văn bản \n<html> \n<he\nase {text-transform: \ne} \n-transform: \napitalize {text-transform: \n\"uppercase\"> \nme text in a \n> \n \n  \n \n ad>  \n \n<style type=\"text/css\"> \np.upperc\nuppercas\np.lowercase {text\nlowercase} \np.c\ncapitalize} \n</style> \n</head> \n<body> \n<p class=\nThis is so\nparagraph</p> \n<p class=\"lowercase\"\nThis is some text in a\nparagraph< /p> \n<p class=\"capitalize\"> \nThis is some text in a\nparagraph< /p> \n 83\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 84,
    "text": "</body> \n</html> \n \nIII. Định dạng kiểu chữ \n. Thiết lập kiểu chữ \n<html> \n<head> \n \n<style type=\"text/css\"> \nh3 {font-family: times} \np {font-family: courier} \np.sansserif {font-fam ily: sans-\nserif} \n</style> \n \n</head\n \nh3>This is header 3< /h3> \nis is a paragraph</p> \nraph</p> \n/html>  \n \n \n \n \n 1\n> \n<body> \n \n<\n \n<p> \nTh\n \n<p class=\"sansserif\"> \nThis is a parag\n \n</body> \n<\n \n \n2. Thiết lập cỡ chữ \nhtml> \n\"> \n \n%} \nbody> \n is header 1</h1>  \n <\n<head> \n \n<style type=\"text/css\nh1 {f ont-si ze: 150%}\nh2 {f ont-si ze: 130\np {font-size: 100%} \n</style> \n \n</head> \n<\n \n<h1> This\n \n 84\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 85,
    "text": "<h2> This is header 2< /h2> \n<p>\n This is a paragraph</p> \n </body>\n</html> \n \n \n3. Thiết lập mẫu chữ \ntml> \next/css\"> \nstyle: italic} \nstyle: norm al} \ntyle: oblique} \n1> \nraph</p>  \n \n <h\n<head> \n \ntyle type=\"t <s\nh1 {font-\nh2 {f ont-\np {font-s\n</style> \n \n</head> \n \n<body> \n \n<h1> This is header 1< /h\n<h2> This is header 2</h2> \np>This is a parag <\n \n</body> \n</html> \n \ncss\"> \nal} \n small-caps} \npe 4 does not \niant\" \ns=\"normal\"> 4. Sử dụng nhiều kiểu chữ trong cùng m ột đoạn văn bản \n<html> \nhead> <\n \n<style type=\"text/\nal {font- variant: norm p.norm\np.small {fo nt-variant:\n</style> \n \n</head> \n<body> \n \n<p> \n<b>Note:</b> Netsca\nr support the \"font-va\nproperty.</p> \n \n clas <p\n \n 85\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 86,
    "text": "This is a paragraph</p> \nis is a paragraph</p> \n/body>  \n<p class=\"small\"> \nTh\n \n<\n</html> \n \n5. Thiết lập cỡ cho kiểu chữ đậm \n \n \nt: normal} \neight: bold} \nweight: 900} \nss=\"normal\"> \n</p> \nss=\"thick\"> \n</p> \nss=\"thicker\"> \nhis is a paragraph</p> \n</html>  \n \n \n <html> \n<head> \n \n<style type=\"text/css\">\np.norm al {font- weigh\np.thick {font-w\np.thicker {f ont-\n</style> \n \n</head> \n \n<body> \n \n<p cla\nThis is a paragraph\n \n<p cla\nThis is a paragraph\n \n<p cla\nT\n \n</body> \n \n \nhiết lập các thuộc tính của kiểu chữ trong một khai báo \nhead> \nyle type=\"text/css\"> \n-caps 900 12px arial 6. T\n<html> \n<\n \n<st\np \n{ \nfont: italic small\n} \n</style> \n \n \n 86\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 87,
    "text": "</head> \n \n<body> \n \n<p>This is a paragraph</p> \n \n</body> \n</html> \nIV. Đường viền - Border \n1. Thiết lập kiểu mẫu của đường viền \nhtml> \nhead> \n<st\n{border-style: \n.dashed {border-style: \n} \nyle: \nle {border-style: \n.groove { border-style: \nborder-style: \ndge} \nr-style: \nrder-style: \n/head> \n \n \np class=\"dashed\"> \n<p class=\"solid\"> \nA s\n \n<p class=\"double\">  \n <\n<\n \nyle type=\"text/css\">  \np.dotted \ndotted} \np\ndashed\np.solid {border-st\nsolid} \np.doub\ndouble} \np\ngroove} \np.ridge {\nri\np.inset {borde\ninset} \np.outset {bo\noutset} \n</style> \n \n<\n \n<body> \n<p class=\"dotted\">\nA dotted border</p>\n \n<\nA dashe d border</p> \n \nolid border</p> \n 87\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 88,
    "text": "A double border</p> \ns=\"groove\"> \n/p> \nge\"> \norder</p> \n\"inset\"> \ner</p> \nutset\"> \n> \n/html>  \n<p clas\nA groove border<\n \n<p class=\"rid\nA ridge b\n \n<p class=\nAn inset bord\n \n<p class=\"o\nAn outset border</p\n \n</body> \n<\n \n2. Thiết lập các \n<html> đường viền khác nhau trên các trang we b \ntext/css\"> \nble {border-\nd double} \np.doublesol id {border-\nstyle: doubl e solid} \np.g\nove double} \nborder-style: \nuble groove} \n> \nbody> \n:</b> Netscape 4 \noes not support the \ner-style\" property. \nrty \nss=\"soliddouble\"> \nome text</p>  \n \n <head> \n \n<style type=\"\np.soliddou\nstyle: soli\nroove double {bor der-\nstyle: gro\np.three {\nsolid do\n</style> \n \n</head\n \n<\n<p> \n<b>Note\nd\n\"bord\nUse the \"border\" pr ope\nto set the borders in \nNetscape.</p> \n \n<p cla\nS\n<br> \n 88\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 89,
    "text": "<p class=\"doublesolid\"> \np \novedouble\"> \nt</p> \n<br> \n \n<p class=\"three\"> \nSome text</p> \n \n</body> \n</html> \n Some text</p> \n<br> \n \n<\nclass=\"gro\nSome tex\n \n. Thiết lập màu cho đường viền \n<ht\n<head> \npe=\"text/css\"> \n.one{ \nstyle: solid; \n00ff} \nlid; \nlor: #ff0000  \n0000ff} \norder-style: solid; \nlor: #ff0000  \n00ff00 #0000ff} \nr{ \n0  \ne> \n</b\n \"border-color\" 3\nml> \n \n<style ty\np\nborder-\nborder-color: #00\np.two{ \nborder-style: so\nborder-co\n#\np.three{ \nb\nborder-co\n#\np.fou\nborder-style: solid; \nborder-color: #ff000\n#00ff00 #0000ff  \nrgb(250,0,255)} \n</styl\n \n</head> \n<body> \n \n<p \nclass=\"one\"><b>Note:\n> The\n 89\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 90,
    "text": "property is not recognized \nernet \n alone. \ne\" \nrders \nrnet Explorer.</p> \n\"two\">Some \n \n<p \nclass=\"three\"><b>Note:</\nb> Netscape 4 does not \nsupport the \"border-col or\" \nproperty. U se the \"bor der\" \nproperty to set the borders \nand colors in \nNetscape.</p> \n \n<p class=\"four \">Some \ntext</p> \n</body> \n</html> in Int\nExplorer if it is used\nUse the \"border-styl\nproperty to set the bo\nfirst \nin Inte\n \n<p class=\ntext</p> \n \n4. Thiết lập độ rộng cho đường viền phía dưới \n<html> \n<head> \n \n<style \ntype=\"text/css\"> \np  \n{ \nborder-style: solid; \nborder-bottom -width: \n15px \n} \n</style> \n \n</head> \n \n<body> \n \n<p>The \"border-\nbottom-width\" \nproperty is not \n 90\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 91,
    "text": "rec\n if it is used \ne the \nborder-style\" \n</p> \n/html> ognized in Internet \nExplorer\nalone. Us\n\"\nproperty to set the \nborders first \nwith Internet \nExplorer.\n \n</body> \n<\n \n5. Thiết lập độ rộng cho đường viền phía trên \n> \nr-style: solid; \norder-top-width: \n \n/head> \np>The \"border-top-\nwidth\" property is not  \n Internet \nperty to set <html> \n<head\n \n<style \ntype=\"text/css\"> \np { \nborde\nb\n15px}\n</style> \n \n<\n<body> \n \n<\nrecognized in\nExplorer if it is used \nse the \"border- alone. U\nstyle\" pro\nthe borders first \nin Internet \n</p> Explorer.\n</body> \n</html> \n \n6. Thi\nbáo ết lập tất cả các thuộc tính của đường viền phía dưới trong một khai \n 91\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 92,
    "text": "<html> \n<head> \n \n<style \ntype=\"text/css\"> \n \nbottom: \n000 \n> \n/head> \nbody> \np><b>Note:</b> \nrt the \"border-\n\" propert y. Use \n \n with \npe.</p> \n/body> p  \n{\nborder-\nmedium  solid #ff0\n} \n</style\n \n<\n \n<\n \n<\nNetscape 4 does not \nsuppo\nbottom\nthe \"bor der-bottom -\nwidth\" property to set\nthe widt h of the \nbottom \nborder\nNetsca\n \n<\n</html> \n \n7. Thiết lập tất cả các thuộc tính của đường viền bên trái trong m ột khai \nbáo \npe=\"text/css\"> \n000 \n \nbody> \nape 4 does not <html> \n<head> \n<style \nty\np  \n{ \nborder-left: m edium  \nsolid #ff 0\n}\n</style> \n</head> \n<\n<p><b>Note:</b> \nNetsc\n 92\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 93,
    "text": "support the \"border-\ndth\" \nty to set the \nof the left \netscape.</p> left\" property. Use the \n\"border-left-wi\nproper\nwidth \nborder in \nN\n</body> \n</html> \n \n \n8. Thiết lập tất cả các thuộc tính của đường viền bên phải trong một khai \no \n \nhead> \n \n\"text/css\"> \nht: medium \nff0000 \n/head> \np><b>Note:</b> \nNetscape 4 does not \nsupport the \"border-\nright\" property. Use \nthe \"border-right-\nwidth\" property to set \nthe widt h of the right \nborder in  \n \n \n \n \n \n \n \nbá\n<html> \n<\n \n<style\ntype=\np  \n{ \nborder-rig\nsolid #\n} \n</style> \n \n<\n \n<body> \n \n<\n 93\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 94,
    "text": "Netscape.</p> \n \n</body>\n/html>  \n<\n \n9. Thiết lập tất cả cá\nbáo c thuộc tính của đường viền phía trên trong m ột khai \nt/css\"> \n>Note:</b> \n4 does not \ne \"border-\nroperty. Use the \n> <html> \nhead> <\n<style \nype=\"tex t\np  \n {\nborder-top: m edium  \n #ff0000 solid\n} \n</style> \n</head> \n> <body\n<p><b\nNetscape \nrt th suppo\nop\" p t\n\"border-top-width\" \nrty to set the prope\nwidth of the top bor der \nin Netscape.</p> \n \n</body> \n</html\n \n10. Thiết lập độ rộng của các đường viền trong m ột khai bá o \n 94\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 95,
    "text": "<html> \n<head> \n \n<style \ntype=\"text/css\"> \np.one  \norder- {b style: solid; \nyle: solid; \nh: 5px \nle: solid; \nh: 5px \nyle: solid; \nernet \n\"four\"> border-widt h: 5px} \ntwo  p.\n{border-st\nrder-widtbo\n10px} \nhree  p.t\n{border-sty\nrder-widtbo\n10px 1px} \nour  p.f\n{ \nrder-st bo\nborder-widt h: 5px \npx 1px medium 10\n} \n</style> \n \n</head> \n \n<body> \n \nss=\"one\"> <p cla\nThe \"borde r-width\" \nproperty is not \nInt recognized in \nExplorer if it is used \nUse the alone. \n\"border-style\" \ne property to set th\nborders first \nin Internet Explorer. \n</p> \n<p class=\"two\"> \nSome text \n</p> \n<p class=\"three\"> \ntext Some \n</p> \n<p class=\n 95\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 96,
    "text": "Some text \n </p> \n \n</body>\n</html> \n \n11. Thiết lập các thuộc tính của đường viền trong m ột khai bá o \ndium  doubl e \n/head> <html> \n<head> \n \n<style type=\"text/css\"> \np  \n{ \nborder: m e\nrgb(250,0,255) \n} \n</style> \n \n<\n \n<body> \n \n<p>Some text</p> \n \n</body> \n</html> \n \n \n \n \n \nV. Căn lề đoạn văn bản \nn trái của đoạn văn \n \nin {margin-left: \n> \ns a 1. Thiết lập lề bê\n<html>\n<head> \n \n<style \ntype=\"text/css\"> \np.marg\n2cm} \n</style> \n \n</head> \n<body\n \n<p>This i\n 96\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 97,
    "text": "paragraph This is a \naragraph \n \nh</p> \n is a paragraph \nth a left margin \nh \nody> p\nThis is a paragraph \nThis is a\nparagrap\n \n<p class=\"margin\"> \nThis\nwi\nThis is a paragrap\nwith a left margin</p> \n \n</b\n</html> \n \niết lập lề bên phải của đoạn văn \nhtml> \nstyle \n/head> \n> \ns is a \n a paragraph \nhis is a \n</p> \np class=\"margin\"> \nhis is a paragraph \nith a right margin \nhis is a paragraph \nargin</p> \n/body> \n/html> 2. Th\n<\n<head> \n<\ntype=\"text/css\"> \np.margin { margin-\nright: 5cm } \n</style> \n<\n<body\n<p>This is a \nparagraph Thi\nparagraph \nThis is\nT\nparagraph\n \n<\nT\nw\nT\nwith a right \nm\n<\n<\n \n3. Thiết lập lề phía trên c ủa đoạn văn \n 97\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 98,
    "text": "<html> \nxt/css\"> \n {margin-top:  \nragraph \nparagraph \n\"margin\"> \naph \n<head> \n<style \ntype=\"te\n.margin p\n5cm} \n</style> \n \n</head> \nody> <b\n \n<p> \nis is a pa Th\nThis is a paragraph \nis is a paragraph Th\nThis is a \n/p> <\n \n<p class=\nThis is a paragraph \nwith a top margin \nhis is a paragr T\nwith a top margin \n/p> <\n \ny> </bod\n</html> \n \n \n \n \n \n \n \n \n \n \n4. Thiết lập lề phía dưới của đoạn văn \n \n 98\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 99,
    "text": "<html> \ntext/css\"> \nmargin-\nd> \n a paragraph \n a paragraph \naragraph \n<p class=\"margin\"> \nThis is a paragraph \nwith a bottom margin \nThis is a paragraph \nwith a bottom margin \n</p> \n \n<p> \nThis is a paragraph \nThis is a paragraph \nThis is a paragraph \nThis is a paragraph \n</p> \n \n</body> \n</html> \n<head> \n \n<style \ntype=\"\np.margin {\nbottom: 80px} \n</style> \n \n</hea\n \n<body> \n \n<p> \nThis is a paragraph \nThis is\nThis is\nThis is a p\n</p> \n \n \n 99\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 100,
    "text": "5. Thiết lập các thuộc tính lề trong một khai báo \nhtml> \nstyle type=\"text/css\"> \n 3cm  4cm } \ntyle> \nody> \np> \nparagraph \n/p> \np class=\"margin\"> \nwith \np> \ns a paragraph \n> <\n<head> \n \n<\np.margin { margin: 2cm  \n4cm\n</s\n \n</head> \n \n<b\n \n<\nThis is a \n<\n \n<\nThis is a paragraph \nmarg ins \n</p> \n \n<\nThis i\n</p> \n \n</body> \n</html\n \nVI. Padding \n. Thiết lập paddi ng bên trái c ủa ô \nhtml> \n<head> \n<style type=\"text/css\"> \ntd {padding-left: 2cm} \n</style> \n</head> \n<body> \n \n<table \nborder=\"1\"><tr><td> \nThis is a tablecell with a left \npadding \n</td></tr></table> \n  \n \n 1\n<\n 100\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 101,
    "text": "</body> \n</html> \n \n2. Thiết l\nhtml> ập paddi ng bên ph ải của ô \n\"> \night: \ner=\"1\"> \necell with \ndding. This \ncell with a \ning. <\n<head> \n \ntyle <s\ntype=\"text/css\nr td {padding-\nm} 5c\n</style> \n \n</head> \n \nody> <b\n \nble bord <ta\n<tr> \n<td> \nis is a tabl Th\na right pa\n a table is\nright pa dd\n</td> \n/tr> <\n</table> \n \n</body> \n</html> \n \n3. Thiết lập paddi ng ph\nhtml> ía trên của ô \n> \np: 2cm}  \n \n \n <\n<head> \n \n<style \ntype=\"text/css\"\ng-to td {paddin\n</style> \n \n</head> \n<body> \n \n<table border=\"1\"> \n<tr> \n 101\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 102,
    "text": "<td> \nThis is a tablecell with \n top padding \n/table> \n a\n</td> \n</tr> \n<\n \n</body>\n</html> \n \n4. Thiết lập paddi ng phía dưới của ô \npe=\"text/css\"> \nng-bottom: \ncm} \ne> \ntable border=\"1\"> \n/td> \n</b \n \n \n <html>  \n<head> \n \n<style \nty\ntd {paddi\n2\n</styl\n \n</head> \n \n<body> \n \n<\n<tr> \n<td> \nThis is a tablecell \nwith a bottom \npadding \n<\n</tr> \n</table> \n \n \nody> \n </html>\n \n 102\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 103,
    "text": "5.  Thiết lập các thuộc tính của paddi\n<html> ng trong một khai báo \ne=\"text/css\"> \n} \nues {padding: \n0.5cm  2.\nder=\"1\"> \ntablecell with \non each side \n<head> \n \n<style typ\ntd {paddi ng: 1.5cm\ntd.twoval\n5cm} \ntyle> </s\n \n</head> \n \n<body> \n \n<table bor\n<tr> \n<td> \nThis is a \npadding \n</td> \n</tr> \n</table> \n<br>\n  \ning on each side. The top and bottom  paddi ng have \nhile the left and right paddi ng have anot her value <table border=\"1\"> \n<tr> \n<td class=\"twovalues\"> \nThis is a tablecell with padd\nthe same value (0.5cm), w\n(2.5) \n</td> \n</tr> \n</table> \n \n</body> \n</html> \n \n 103\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 104,
    "text": "VI.\nập danh sách không đánh số thứ tự \n/css\"> \nc \n  \n-type: circle \ntype: square \n: none \nc\"> \na</li> \n \n> \nass=\"square\"> \ni> \n\"none\"> \noffee</li>  \n \n \n \n \n  Danh sách – List \n1. Thiết l\n<html> \n<head> \n<style type=\"text\nul.disc  \n{ \nlist-style-type: dis\n} \n.circle ul\n{ \nt-style lis\n} \ne  ul.squar\n{ \nlist-style-\n} \nl.none  u\n{ \nlist-style-type\n} \n</style> \n</head> \n<body> \n<ul class=\" dis\n<li>Coffee</li> \n<li>Tea</li> \nli>Coca Col <\n</ul>\n<ul class=\" circle\"> \n<li>Coffee</li> \n<li>Tea</li> \n<li>Coca Cola</li\n </ul>\nl <ul c\n<li>Coffee</li> \n<li>Tea</li> \n<li>Coca Cola</l\n</ul> \n<ul class=\n<li>C\n<li>Tea</li> \n<li>Coca Cola</li> \n</ul> \n</body> \n</html> \n \n 104\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 105,
    "text": "2. Thiết lập danh sách v ới chỉ số thứ tự \n<head> \n<st\nal  \nlist-style-type: decimal} \n  \nman} \nroman  \nst-style-type: upper-roman} \nle-type: lower-alpha} \nualpha  \n-type: upper-alpha} \n/head> \nli> \nli>Coca Cola</li> \n<ol\n<li\n<li>Tea</li> \n Cola</li> \ns=\"lalpha\"> \n \n>Tea</li> \noca Cola</li> \nl> \na\"> \n>Coffee</li> \nli> \n Cola</li> \nl>  \n \n <html> \nyle type=\"text/css\">  \nol.decim  \n{\nol.lroman\n{list-style-type: lower-ro\nol.u\n{li\nol.lalpha  \n{list-sty\nol.\n{list-style\n</style> \n<\n<body> \n \n<ol class=\" decimal\"> \n<li>Coffee</li> \n<li>Tea</li> \n<li>Coca Cola</li> \n</ol> \n<ol class=\" lroman\"> \n<li>Coffee</li> \n<li>Tea</\n<\n</ol> \n class=\"uroman\"> \n>Coffee</li> \n<li>Coca\n</ol> \n<ol clas\n<li>Coffee</li>\n<li\n<li>C\n</o\n<ol class=\" ualph\n<li\n<li>Tea</\n<li>Coca\n</o\n \n</body> \n \n 105\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 106,
    "text": "</html> \n \n3. Lấy ảnh là m đơn vị đánh dấu \nl> \nxt/css\"> \nl  \n: \now.gif\"\n> \ny> \nb> \n not \nstyle-\n</p> \noca Cola</li> \n/ul> \n/html> <htm\n<head> \n \n<style type=\"te\nu\n{ \nlist-style-image\nurl(\"/images/arr\n) \n} \n</style> \n \n</head\n \n<bod\n \n<p><b>Note:</\nNetscape 4 does\nsupport the \"list-\nimage\" property.\n \n<ul> \n<li>Coffee</li> \n<li>Tea</li> \n<li>C\n<\n \n</body> \n<\n \n \n \n \n \n \n \n \n \n \n 106\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 107,
    "text": "4. Đặt chỗ cho đơn vị đánh dấu \ne \nosition: outside <html> \n<head> \n \n<style type=\"text/css\"> \nul.inside  \n{ \nlist-style-position: insid\n} \n \nul.outside  \n{ \nist-style-p l\n} \n</style> \n \n</head> \n<body> \n<\npp><b>Note:</b> Netscape 4 does not support the \"list-style-position\" \nro\n list has a value of  \"inside\":</p> \nlass=\"inside\"> \nlementary \nf bergamot oil. This com bination creates an ultra fine tea where \nll purpose\" tea m ade of freshly picke d, organic \njasmine flowers. \n delight that is naturally sweet and almost \nported from  the Cape of G ood H ope has \nreminds us of those tangy tea blends currentl y \nuld be pointed out that this  is com pletely free of \nredients. perty.</p> \n \n<p>This\n \n<ul c\n<li> \nEarl Grey Tea - A fine black tea, ferm ented to perfection in a com p\nb\nplend o\nrecision and process gives birth to  this much-revered beverage.  \n</li> \n<li> \nJasmine Tea - A fabul ous \"a\ncamellia sinensis (green tea) and \n</li> \n<li> \nHoneybush Tea - A super fruity\nunbelievabl e! This m agnificent tea im\na smooth and fr uitful body that \non the market. However it sho\nflavoring a gents and other ing\n</li> \n</ul> \n \n<p>This list has a value of  \n\"outside\":< /p> \n<ul class=\" outside\"> \n 107\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 108,
    "text": "<li> \nEarl Grey Tea - A fine black tea, fermented to perfection in a com plementary \nhis combination creates an ultra fine tea where \n to this much-revered beverage.  \n \"all purpose\" tea m ade of freshly picke d, organic \n jasmine flowers. \ner fruity delight that is naturally sweet and almost \nent tea imported from  the Cape of G ood H ope has \nul body that reminds us of those tangy tea blends currentl y \nould be pointed out that this  is com pletely free of \n other ingredients. blend of bergam ot oil. T\nprecision a nd process gives birth\n</li> \n<li> \nJasmine Tea - A fabul ous\ncamellia sinensis (green tea) and\n</li> \n<li> \nHoneybush Tea - A sup\nunbelievabl e! This m agnific\na smooth and fr uitf\non the market. However it sh\nflavoring a gents and\n</li> \n</ul> \n</body> \n</html> \n \n 108\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 109,
    "text": "5. Thiết lập các thuộc tính trong m ột khai bá o \n \n<html> \n<li>Coca Cola</li> \n</ul> \n \n</body> \n</html> \n \n<head> \n \n<style type=\"text/css\"> \nul  \n{ \nlist-style: square inside \nurl(\"/images/arrow.gif\"\n) \n} \n</style> \n \n</head> \n \n<body> \n \n<p><b>Note:</b> \nNetscape 4 does not \ndisplay the images or \nposition the list.</p> \n \n<ul> \n<li>Coffee</li> \n<li>Tea</li> \n \n 109\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 110,
    "text": "VIII. Dimension \n1. Thiết lập chiều rộng và chiều dài cho ảnh \n<html> \n<head> \n \n<style type=\"text/css\"> \nimg.norm al  \n{ \nheight: auto; \nwidth: a uto \n} \nimg.big  \n{ \nheight: 80pax; \nwidth: 100px \n} \nimg.small  \n{ \nheight: 30px; \nwidth: 50px \n<bo\n \n<p>b\nNea\nsuppor\nproper\n\"width\nproperty does not w ork \non images.</p> \n \n<img  class=\"normal\"  \nsrc=\"/imag es/back.gif\" \nwidth= \"72\" \nheight=\"40\"> \n<br><br> \n<img class=\"bi g\" \nsrc=\"/imag es/back.gif\" \nwidth= \"72\" \nheight=\"40\"> \nbr><br> \nimg class=\"small\"  \nc=\"/images/back.gif\" } \n</style> \n \n</head> \ndy> \n<>Note:</b> \ntscpe 4 does not \nt the \"height\" \nty, and the \n\" \n<\n<\nsr\n 110\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 111,
    "text": "width= \"72\" \nheight=\"40\"> \n \n</body> \n</html> \n \n2. Tăng khoảng cách gi ữa các dòng \n<html> \n<head> \n \n<style type=\"text/css\"> \np.increase {line-height: 1cm} \n</style> This is a paragraph This is a \nparagraph This is a paragraph This is \na paragraph This is a paragraph This \nis a paragraph This  is a paragraph  \n \n</head> \n \n<body> \n This is a paragraph This is a \nparagraph This is a paragraph This is \na paragraph This is a paragraph This \n<p> \nThis is a paragraph This is a paragraph \nThis is a paragraph This is a paragraph \nThis is a paragraph This is a paragraph \nThis is a paragraph \n</p> is a paragraph This  is a paragraph \n \n \n<p class=\"increase\"> \nThis is a paragraph This is a paragraph \nThis is a paragraph This is a paragraph \nThis is a paragraph This is a paragraph \nThis is a paragraph</ p> \n \n</body> \n</html> \n \nIX. Classification – Phân lo ại \n1. Ẩn hoặc hiển thị đoạn văn bản \n \n<div>The div section is invisible</div>  no distance between the two \nparagraphs.  <html> \n<head> \n<style type=\"text/css\"> \ndiv { display: none} \np {display: inline} \n</style> \n</head> \n<body>  \n \n \n \n \n \nWith the value of  \"inline\" there \nshould be  \n 111\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 112,
    "text": "<p>With the value of  \"inline\" there  \nshould be</p> \n<p>no distance betwe en the tw o \nparagraphs.</p> \n \n</body> \n</html> \n \n2. Thiết lập ảnh xuất hiện trong một đoạn văn bản \n<\n \n  \nfloat to the left in the\nparagraph.  \n</p> <html> \n<head>  \n \n \n<style type=\"text/css\"> \nimg  \n{ \nfloat: left  \n \n \n \n} \n</style> \n \n</head> \n \nbody> \n<p> \n<img \nsrc=\"/im ages/bookasp20. gif\n\"  \nwidth= \"120\" height=\"151\" \n/>With the  \nvalue of \"left\" the image \nwill\n  \n \n</body> \n</html> \n 112\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 113,
    "text": "3. Vị trí tương đối của đoạn văn bản so với vị trí bình th ường \n<html> \n<head> \ntype=\"text/css\"> \nposition:relative; \n</style> \n \n \n=\"ex2\">Headi\n</p>  \n<style \nh1.ex1 \n{ \nleft:20 \n} \nh1.ex2 \n{ \nposition:relative; \nleft:-20 \n} \n</head> \n<body> \n<h1> Norm al \nHeading</ h1>\n<h1 \nclass=\"ex1\">Headi\nng +20</h1> \n<h1 \nclass\nng -20</h1> \n \n<p> \nRelative positioning \nmoves an element \nrelative to its \noriginal position. \n</p> \n<p> \n\"left:20\" adds 20 \npixels to the \nelement's L EFT \nposition. \n<p> \n\"left:-20\" s ubtracts \n20 pixels from  the \nelement's L EFT \nposition. \n 113\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 114,
    "text": "</p> \n</body> \n</html> \n \n4. Vị trí tương đối của dòng tiêu đề  \n<html> \n \n<head> \n<style type=\"text/css\"> \nh1 \n{ \nposition:relative; \n \nleft:40 \n} \n</style> \n</head> \n \n<body> \n<h1> Headi ng A</h1> \n<p>This is a paragraph.</p> \n<h1> Headi ng B</h1> \n<p>This is a paragraph.</p> \n<h1> Headi ng C</h1> \n<p>This is a paragraph.</p> \n<h1> Headi ng D</h1> \n<p>This is a paragraph.</p> \n</body>  \n</html> \n5. Vị trí tuyệt đối của đoạn văn bản \n \n<html> \n<head> \n<style \ntype=\"text/css\"\n> \nh1.x \n{ \nposition:absolut\ne; \nleft:100; \ntop:150 \n} \n</style> \n</head> \n 114\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 115,
    "text": "<body> \n<h1 \nplaced \npage. \nheading is 100 \npixels from  the \nleft of the page. \nThe TO P \nosition is 150 \np of the page. \n</p> \n \n</body> \n</html> \n  \nclass=\"x\">This \nis a \nheading</h1> \n \n<p> \nWith absolute \npositioning, an \nelement can be \nanywhere on a \n</p> \n \n<p> \nThe LEFT \nposition of the \np\npixels from  the \nto\n \n6. Không hiển thị một đoạn văn bản \n<html> \n<head> \n<style type=\"text/css\"> \nh1.one \n{ \nvisibility:visible \n} \nh1.two \n{ \nvisibility:hidden \n} \n</style> \n 115\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 116,
    "text": "</head> \n<body> \n \n<p><b>Note:</b> \nNetscape 4 does not \nsupport the \"visibility\" \nproperty.</p> \n \n<h1 \nclass=\"one\">Heading \none</h1> \n<h1 \nclass=\"two\">Heading \ntwo</h1> \n \n<p>Where is heading \ntwo?</p> \n \n</body> \n</html> \n \n7. Thayổi con trỏ \n<html> \n<body> \n \n<p> \n<b>Note:</b> Netscape 4 does not support the \"cursor\" property. \n</p>  \n \n<p>Move the mouse over the words to see the cursor \n \n<span style=\"cursor:auto\"> \nAuto</span><br /> \n<span style=\"cursor:crosshair\"> \nCrosshair</span><br / > \n<span style=\"cursor:de fault\"> \nDefault</span><br />  \n<span style=\"cursor:pointer\"> \nPointer</span><br /> \n<span style=\"cursor:m ove\"> \nMove</span><br /> \n<span style=\"cursor:e-resize\"> \ne-resize</span><br /> \n<span style=\"cursor:ne -resize\"> \nne-resize</span><br / > \n<span style=\"cursor:nw-resize\">  đ\nchange.</p>  \n 116\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 117,
    "text": "nw-resize</span><br /> \n<span style=\"cursor:n- resize\"> \nn-resize</span><br />  \n<span style=\"cursor:se-resize\"> \nse-resize</span><br /> \n<span style=\"cursor:sw-resize\"> \nsw-resize</span><br /> \n<span style=\"cursor:s-resize\"> \ns-resize</span><br /> \n<span style=\"cursor:w -resize\"> \nw-resize</span><br />  \n<span style=\"cursor:text\"> \ntext</span><br /> \n<span style=\"cursor:w ait\"> \nwait</span><br /> \n<span style=\"cursor:he lp\"> \nhelp</span> \n</body> \n</html> \n \n 117\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 118,
    "text": "Ch\ncho v\n \n6.1- Đ\n6.1\n- Sơ lư\nợ cho bản tin của bạn và mời người xem \nảnh thích h ợp, bản tin của bạn có thể \nờ được đọc, người xem có th ể lướt qua site c ủa bạn và di chuy ển \nđến site kế tiếp. Việc tìm diệ ấn đề của việc lập kế hoạch \nột cách sáng t ạo. \nViệ\nlà thiế  hút người xem. M ọi người thực hiện các quy ết định một \ncác\ncủa ng te của bạn để gợi ra các cảm \nxúc\nnhất. \nMàu s\ng màu    \n         Sắc độ \n          \nơ bản \nem \ncảm thấy sự hứng thú được tạo ra bởi các m àu trong hình ảnh cũng như bởi chủ \nđề của hình ảnh. ương 6 Sử dụng phần mềm Photoshop,  Coreldr aw áp dụng \niệc chỉnh sửa, xuất ảnh cho Web  \nồ hoạ trên W eb \n.1Giới thiệu đồ hoạ trên web \nợc về đồ hoạ: Thiết kế diện mạo cho Website c ủa bạn là một công việc \nhấp dẫn. Hình ảnh trực tuyến sẽ hỗ tr\nhận bản tin đó. Nếu không có hình n\nkhông bao gi\nn mạo của bạn là một v\nm\nc trình bày thông t in với diện mạo và ấn tượng bổ xung vào b ản tin của bạn \nt yếu để thu\nh có ý thức và vô t hức dựa vào các c ảm xúc của họ. Một trong các công vi ệc \nười thiết kế là tạo ra một hình ảnh cho websi\n thích hợp đối với người xem để truyền đạt bản tin của bạn một cách hay \nắc: Màu sắc là một trong nh ững khía c ạnh thiết kế thú vị nhất đối với \nWeb. Tr ong chế bản truyền thống, màu th ường được sử dụng cho các ấn phẩm \ncó giá trị cao nhờ các phương pháp th ủ công. N hưng trên web, vi ệc bổ xung \nmàu tương đối dễ dàng nga y cả đối với những người mới bắt đầu thiết kế web. \nBằng một vài thao tác, b ạn có thể sử dụng các ứng dụng đồ hoạ và các bức ảnh \nchụp đầy màu sắc làm hiệu quả hơn cho trang web c ủa bạn.  \n     Vòn\n \n \n          \n           Hình 6.1: Vòng màu c\n \nViệc sử dụng m àu sắc một cách hữu hiệu phụ thuộc vào sự hiểu biết và tuân \ntheo một số quy tắc đơn giản về cách mà m ắt bạn cảm nhận màu và cách m àu \ntác động đến bạn. Chúng ta thường gọi các màu là “ nóng” và “l ạnh”  \nCác m àu Nóng: Mà u đỏ, màu cam, và màu vàng là màu nóng. Các màu nóng \ncó vẻ di chuyển ra phí a trước trong m ột hình ảnh, và chúng chuy ển tải một ý \nnghĩa về năng lượng. Các m àu này kíc h thích người xem  và làm  cho người x\n 118\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 119,
    "text": "Các màu l ạnh: màu tím, màu xanh dương, m àu xanh lục là màu l ạnh. Các m àu \nlạnh có vẻ lùi xa dần về phía nền và gợi lên một cảm giác căng thẳng được xoa \ndịu dần. \nMàn hì nh m áy tính thể hiện mọi màu sắc bằng chế độ màu RGB \nRed \n        Green \n        Blue \n  \nSố lượng mỗi màu sử dụng dựa trên giá tr ị giữa 0 và 255. \nNếu R= 255   G=255   B=255 = M àu trắng \nNếu R= 0   G=0   B=0 = Màu đen \nNgười ta còn định nghĩa màu b ằng các  giá trị số thập lục phâ n He x – \nHexadecimal, là giá tr ị của gồm 6 con  số để mô tả 1 màu. Có giá trị từ 00 đến \nF F\nVí dụ:     000000 = M àu đen \n               F FFFFF = Màu tr ắng \nLà một người thiết kế, bạn sẽ cần chọn các sắc độ nào của màu để sử dụng chủ \nếu dựa vào các c ảm nhận của bạn. Hã y để cho mắt bạn đánh giá sự phối màu \n tải bản tin \nủa bạn theo một cách dễ hiểu và Logic. Để làm được như vậy, bạn cần phải \nể sử dụng cảm giác “ không cân đối” để tập chung s ự chú ý, ng ười \nxem sẽ nhìn và o thành ph ần này một cách cẩn thận, cố cảm nhận về nó y\ncủa bạn. \nBố cục: dù bạn đang thiết kế một bản tin nội bộ, một mục quảng cáo, ha y một \ntrang web, b ạn cần quyết định cách sắp xếp đồ hoạ và text để chuyển\nc\nnắm được một số nguyên tắc về bố cục.  \n- Có nhiều kiểu bố cục (cân đối, đăng đối, đối xứng, …) nh ưng bố cục \nnào cũng phải đem đến 1 sự cân bằng, chặt chẽ \n- Bố cục phải có chính có ph ụ. \n- Có thể phá cách nh ưng phải không th ể phá vỡ các quy chu ẩn chung. B ạn \ncó th\nvà tìm ra m ột cách để hợp nhất nó và o toà n bộ cảm nhận về sự cân đối. \n \n                  \n \n         \nHình 6. 2: Các kiểu bố cục \n \n \n 119\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 120,
    "text": "6.1.2-Đồ hoạ trên We b khác gì? \n Luôn bị giới hạn trong bố cục màn hình nga ng (thông -  thường là 600 x 800 \n đặc trưng của Web, đó là phải có thanh menu ch ứa các \nGiao diện của site phải được thống \nhất về mặt hình ảnh và phải mang cùng m ột phong c ách trình bày. Nh ư vậy \n mãn  đối với nhiều người khi bạn bấm nút liên kết đến một trang \neb có màu sắc cũng như cách trình bày hoà n toàn khác, t ạo cho ta c ảm giác là \nất trên 20s để tải qua một modem  56k,  \nạn. Vì vậy trong trang we b không nê n đặt quá nhiều ảnh ha y \nnh quá lớn \nđộng đến \nbsite của bạn. Nhưng nếu bạn quá lạm dụng nó sẽ làm rối loạn, giảm đi \ntính thẩm mỹ cũng như hạn chế tốc độ truy cập của trang. \n \n6.2- Xử lý đồ họa trên Web: \nBạn đã hiểu một số điểm căn bản về đồ hoạ, bạn có thể thắc  mắc làm thế nào \nc Thiết k ạn cần phần mềm nào? Chương \nđể tạo các ảnh chuyên nghiệp cho website c ủa \nẽ giới \nụng nhất đó là: Phot oshop \n.2.1.1- Cơ sở về Phot oshoppixels) và  không bao quát được toàn bộ trang như trong in ấn.  \n- Mang m ột phong cách\nliên kết với toàn bộ các trang trong h ệ thống Website c ủa bạn, có phần đầu \ntrang ( header) và ph ần chân trang ( Footer). \nn\nmới đảm bảo được tính nhất quán trong s uốt site của bạn. Mắt bạn sẽ bị thu hút \nvà nhì n thấy một loạt các hình ảnh dưới dạng một mẫu đồng nhất, và rất là \nkhông tho ả\nw\nbị lạc vào một site khác ch ứ không ph ải là website mà b ạn đang truy c ập. \n- Giới hạn trong công ngh ệ: Trở ngại lớn nhất làm mất hứng người xem là một \nWebsite t ải quá c hậm. Nếu một ảnh m\nbạn có thể chắc chắn rằng phần lớn người xem đều trở nên mất kiên nhẫn và rời \nkhỏi website c ủa b\nả\n- Một lợi thế của đồ hoạ web là việc sử dụng các hình ảnh động. Web đang \nkhông ng ừng phát tri ển thành m ột đa phương tiện truyền thông tinh vi, n ếu \nược sử dụng một cách hữu hiệu, các hình ảnh động sẽ mang sự sống đ\ncho we\nđ  chuyên sâu vào vi ệ\ntrình tạo ảnh nà o được xử dụng ể  thật sự ế web. B\nban?. Có nhiều công cụ có sẵn để tạo và xử lý đồ hoạ trên Web nh ư: Flash, Gif \nAnimation, Corel, Inlustrator ….Nh ưng trong ch ương này chúng tôi s\nthiệu với các bạn 2 chương trình x ử lý đồ hoạ thông d\n6.0 và corel Draw 10. \n \n6.2.1- Phần mềm xử lý đồ hoạ  phot oshop \n \n6  \nAdobe photoshop là s n lớn những người \nết kế đồ hoạ chu eb. Photoshop c ó \nạn quét một bức ảnh chụp hay tinh ản phẩm được chọn sử dụng bởi phầ\nyên nghiệp nhất đang xử lý các ảnh w thi\nnhiều công cụ và tiện ích xử lý ảnh. K hi b\nchỉnh lại nó, tạo một ảnh của một bức vẽ, hay các nút, các thanh, các n ền \nchuẩn, Photoshop c ó thể thực hiện được điều đó. Nó cũng có khả năng xử lý và \nchuyển đổi phần lớn các dạng fi le ảnh sang file gif và jpg. P hotoshop s ẽ cho \nphép bạn xử lý hầu hết tất cả các dạng ảnh mà bạn gặp phải. \n 120\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 121,
    "text": "Ý nghĩa các định dạng của tệp tin: (Nh ững định dạng thông d ụng) \nu nén không ph ải hi sinh - Psd: Là định dạng chu ẩn của  Photos hop \n- GIF (Graphic Interchange Format): Gif s ử dụng kiể\ndữ liệu gốc. Chỉ rút gọn trung bình 1/ 3 tập tin cũ. Gif giới hạn trong 256 màu.  \n- JPEG  (Joint Photographic Expert  Group): D ùng để nén các hình ảnh suất cho \nWeb. Do c hế độ JPEG cho phé p ảnh lên tới 16 triệu mầu nên các hình ảnh có \nchất lượng hình ảnh và mầu cao \n- PNG: Là định dạng tệp tin để nén các hình ảnh sẽ được xuất cho Web.  \n- TIFF: Các t ệp tin dạng TIFF là các t ệp tin có c hất lượng cao được dùng để \nđịnh dạng cho ảnh đầu vào và dùng trong in ấn (dùng cho máy PC và MAC) \n- BMP: Là định dạng dùng cho các file ảnh, c ó thể dùng rộng rãi cho các  \nchương trình ch ạy trong Window.  \nCác chế độ màu của Ph otoshop: \n- Chế độ màu RGB:  \n Màn hì nh m áy tính thể hiện mọi màu sắc bằng chế độ màu RGB.  \n   Red     \n    Green     \n    Blue \nSố lượng mỗi màu sử dụng dựa trên giá tr ị giữa 0 và 255. \nếu R=N 255   G =255   B =255 =  Màu tr ắng \nNếu R= 0   G=0   B=0 = Màu đen \nNgười ta còn định nghĩa màu b ằng các  giá trị số thập lục phâ n He x – \nHexadecimal, là giá tr ị của gồm 6 con  số để mô tả 1 màu. Có giá trị từ 00 đến \nFF \nVí d ụ: 000000 = Màu đen \n           FFFFFF = Màu tr ắng \n- Chế độ màu CM YK:  \nLà chế độ màu  gồm 04 màu: C= Cyan; M= Magenta; Y= Yellow; K= Black. Là \nchế độ màu  chuẩn dùng để in các ấn phẩm.  \nChế độ mầu Index: \nụng một bảng mầu có 256 m ầu, khi  hình ảnh có \nguyên chất lượng của hình ảnh khi nhìn trên m àn hình.  - \nLà chế độ mầu chỉ định, sử d\nmầu nằm ngoài bảng mầu chỉ định, chế độ Inde x color sẽ tự thay thế mầu đó \nbằng một mầu tương tự trong bảng mầu. Bằng cách gi ới hạn mầu trong m ột \nbảng mầu, mầu chỉ định có thể giảm bớt kích cỡ của tệp tin trong khi v ẫn giữ \nn\n 121\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 122,
    "text": "6.2.1.1- Làm  việc với Photos hop: \nTạo 1 File m ới: \nThực hiện một trong các cách s au: \nCtrl+N) \nể xác định kích cỡ và độ phân giải của tệp mới dựa trên kích c ỡ và độ phân \nĐể xác định kích cỡ của tiệ ở trên màn hình, ch ọn \nile > New. Với hộp thoại Ne p đang mở trong t hực đơn \nưa thông số vào c ác ô sau:  \name: đặt tên tiệp  \nser chất lựng cao: 200 dpi \nor: Chế độ hiển thị mặc định và l à mô hình màu tiêu chu ẩn để hiển thị \n hình Video \niết bị, dùng để truyền các tệp giữa các hệ \nackground Color: Tài liệu mới tạo sử dụng màu phông n ền hiện thời \nền trong su ốt không có các giá \nị màu. Để xác định kích cỡ và độ phân giải của tệp mới dựa trên kích c ỡ và độ phân \ngiải của nội dung đang chứa trong Clipboar d, chọn File > New. (\nĐ\ngiải của lần thiết lập gần nhất, giữ Alt/option và ch ọn File > New.  \np dựa trên một tiệp đang m\nw đang mở, chọn tên Tệ F\nWindow. \nĐ\nN\nlmage Size: kích th ước tiệp \nwidth ( rộng): \nHeight ( cao):  \nResolution ( độ phân giải):  \nĐể hiển thị trên màn hình: 72 dpi (pixel/inch ) cho máy Mac và 96 dpi cho máy \nPC \nĐể in thử la\nĐể in ốp sét: 300 dpi  \nMode ( chế độ màu) :  \nBitmap: Ảnh chỉ có hai  giá trị, đen hoặc trắng  \nGrayscale: nh c ó 256 mức xám khác nhau \nGB colR\ncác màu c ủa màn\nCMYK col or: dùng để biên tập các hình ảnh để xuất ra cho in ấn \nLab col or: Kiểu màu độc lập với th\nthống m àu khác nhau \nContents: Phông n ền tập tài liệu  \nWhite: phông n ền màu trắng \nB\nTransparent: Tài li ệu mới tạo sẽ có lớp phông n\ntr\n 122\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 123,
    "text": "Hình 6. 3: Cửa sổ New của menu File \nChọn m ột trong ba tr ường h ợp sau: \nFile > save: để lưu Công vi i đã thực hiện các thay  đổi với \ncác định \nFile > Save  as: lưu tệ\nkhác nhau c ủa một tệ\nđóng lại và  tệp \nFile > Save a C o\nLưu ý: cách l ưu tệp n\ntheo các kênh alpha c\n Canvas  (không gi an\nCanvas l à ô rộng mà\ncũng có th ể tro\nửa sổ và rê chuột. Cửa \nhước của Canvas k hông thay đổi. .. \nhi bạn tạo lệp mới, kích thước của ảnh chính l à kích thước của canv as. Sau \nđó, nếu muốn điều chỉnh canvas, vào l mage > Canvas Size:  điền các gi an trị \nmới vào ô Width và Height ; Anchor cho phép b ạ xác định vị trí của vùng  \nan sẽ được m Lưu fĩle . \nệc của bạn sau k h\ndạng hi ện th ời (Ctrl+S) \np với tên mới. Cách này cho phép b ạn lạo ra c ác phiên bn \np, lưu vào đĩa cứng khác ho ặc lưu dự trữ tệp gốc sẽ được \nvừa lưu được mở trên màn hình. (Shift+Ctrl+S) \npy: lưu tệp với tên mới và vẫn để mở tệp gốc.  \này sẽ cho phép b ạn làm phẳng ảnh và lưu tệp không kèm \nủa tập đó. \n làm việc) và cửa sổ đang được kích hoạt \nu trắng trong c ửa sổ, nơi bạn tạo và biê n tập ảnh. Canv as \nng suốt hoặc mang màu c ủa phông n ền. . \nạn hãy để con trỏ chuột vào góc d ưới, bên phải của c B\nsổ sẽ mở rộng, nhưng lưu ý rằng kích t\nK\nn\nở rộng. không gi\nBạn có thể in ở nhiều cửa sổ cùng một lúc trong Phot oshop nhưng chỉ có một \ncửa sổ được kích hoạt (cửa sổ làm việc). \n \n 123\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 124,
    "text": "Thanh trạng thái nằm ở phía dưới màn hình .  \nThanh trạng thái có các thông tin sau: \n Document Size: S ố bên trái là kí ch cỡ tài liệu không c hứa các lớp. Bạn có thể \ncoi số này là kích c ỡ tệp tin khi ảnh đã được làm phẳng, hoặc khi tài li ệu đã \nược xuất cho máy in. S ố bên phải cho bi đ ết tệp tin khi ch ứa tất cả các lớp, các  \nu với 1 tập tin \nưới bảng này. kênh Alpha và d ữ liệu (Số này ban đầu bằng 0 khi bat b ắt đầ\ntrống không) . Số đó thường lớn hơn dung lượng không gi an thực sự được sử \ndụng trên đĩa cứng, bởi vì  Photos hop có th ể nén t hông tin k hi lưu trên đĩa. \ný nghĩa các định dạng của tệp tin: (Những định dạng thông d ụng) \nSố % của tệp tin đang được hiển thị. \n Bảng quản lý Navigat or \nMở bảng điều khiển bằng cách vào Window>  Show Navi gator. Bảng này hiển \nthị ảnh dưới dạng thu nhỏ. Bạn cod t hể phóng to hay thu nh ỏ ảnh bằng cách \nnhập giá trị vao ô % hay kích chu ột vào mũi tên phí a d\n \nHình 6.4: b ảng điềển Navi gator u khi\n \n Giới thiệu bảng công cụ \n \n hật  \n3. C ông cụ chọn 1px theo chi ều \nngang \nhiều dọc 1.Công cụ chọn hình chữ n\n2. Công cụ chọn hình elip  \n4. Công cụ chọn 1px theo c\n 3. Công cụ chọn sợi dây từ tính 1.Công cụ chọn sợi dây tự do  \n2. Công cụ chọn sợi dây thẳng \n 124\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 125,
    "text": "ật  \neo chiều \nngang \n4. Công cụ chọn 1px theo chi ều dọc 1.Công cụ chọn hình chữ nh\n2. Công cụ chọn hình elip  \n3. C ông cụ chọn 1px th\n 1.Công cụ chọn sợi dây tự d\n2. Công cụ chọn sợi dây thẳ\n3. Công cụ chọn sợi dây to  \nng \nừ tính \n Công cụ dịch chuyển \n Công cụ cây đũa thần (Magic Wand)  \ncho phé p chọn vùng có m àu tô tư-\nơng tự \n Công cụ cắt ảnh \n Công cụ Slice \n 1.Công c ụ bút  lông \n2.Công cụ but chì  \n Công cụ phuc hồi ảnh như ban đầu \n 1.Công cụ con dấu  \n2 Công cụ con dấu mẫu \n \n 2.Công c ụ tẩy dùng màu \nlàm màu  tẩy \n3.Công cụ tẩy những vùng1.Công cụ tẩy  \nnền dưới \n hình ảnh \ncó thuộc tính tương tự nhau  \n 1. Công cụ tô chuyển màu \n2. Công cụ tô màu  \n \n 2. Công cụ làm nét \n3. Công cụ di mầu 1.Công c ụ làm nhoè\n 125\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 126,
    "text": "1. C ông cụ làm sá\n ng ảnh \n2. Công c ụ tối ảnh \n3. Công cụ bão hoà m ầu  \n \n Công cụ tạo đường dẫn \n \n Công cụ chọn các hì nh vector \n \n \n 1. Tạo text theo chi ều ngang  \n2. Tạo text theo chi ều dọc  \n3. Tạo text thanh vùng ch ọn \ntheo chiều nga ng \n4. Tạo text thành vùng ch ọn \ntheo chiều dọc \n \n Các công c ụ tạo hình \n   \n 1.Công cụ chọn màu \n Chọn nhiều màu \n3. Thước đo \n 2.\n  Công cụ bàn tay ké o \n \n  Công cụ phóng to, thu nh ỏ. \nHình 6. 5: Thanh công c ụ \n \n6.2.1.2-Giới thiệu các công c ụ chọn: \n \nTrong phot oshop,  bạn có thể tạo các vùng ch ọn dựa theo kích c ỡ, hình dạng, \nàu sắc… bằng 4 công c ụ chọn m cơ bản: Mar quee, Lasso, Magic Wand và Pe n. \n Marquee và Lasso có ch ứa các công c ụ ẩn ở phía  \nCác vùng ch ọn the o hình dạng cố định:  Trên hộp công cụ, bộ công cụ\ndưới. Có thể chọn công cụ ẩn bằng cách gi ữ nút chuột trên biểu tượng công c ụ \nđang thể hiện của nhóm và ch ọn công cụ mà bạn muốn từ menu vừa xuất hiện. \nĐể tạo một vùng ch ọn, bạn dùng công c ụ chọn, kéo xung quanh vùng mu ốn \nchọn. Hình th ể của vùng ch ọn còn tỳ tuộc vào công c ụ chọn được dùng để tạo \nvùng chọn. \n 126\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 127,
    "text": "Hình 6. 6: Rectangular Marquee Tool \n \n- Sử dụng công c ụ Rectangular Marquee Tool (M) để chọn một vùng ch ữ \nnhật trong ảnh (Giữ Shift trong khi kéo s ẽ tạo được hình vuông).  \n- Sử dụng công cụ Elliptical Marquee Tool để chọn một vùng hì nh el lipse \n(Giữ Shift trong khi kéo s ẽ tạo được hình tròn).  \n- Sử dụng công c ụ Single Row  Marquee Tool ho ặc Single Column \nMarquee Tool để chọn 1 vùng là 1 dòng có chi ều cao là 1 pixe l hoặc \nmột cột có chiều rộng 1 Pixel. \nCác vùng ch ọn có hình d ạng tự do: \n \n \nHình 6. 7: Lasso Tool \n \n- Sử dụng công cụ Lasso Tool kéo trên ảnh để tạo một vùng c họn có hình \nụ Magnetic Las so sẽ tạo ra vùng ch ọn có biên ch ọn được hút vào \nông cụ Lasso có th ể dùng để tạo các vùng ch ọn với biên chọn gồm những \nẽ các đoạn thẳng. Nhấn giữ phím Alt trong \nhím Alt, bạn có thể nhấn phím Delete ho ặc Backspace để \nng chọn dựa theo màu s ắc: \n dạng tự do. \n- Công cụ Polygonal Laso Tool để tạo vùng ch ọn có bi ên là một đa giác \n(biên chọn là các đoạn thẳng nối vào nha u) \n- Công c\nbiên của các chi ti ết trong ảnh. Bạn có thể chủ động định hướng cho \nbiên c họn bằng cách b ấm chuột để xác định điểm định hướng, điểm ép  \nbuộc. \nC\nđoạn ngoằn ngèo nh ư vẽ tay xen k\nkhi vẽ bằng ccông c ụ Lasso, con tr ỏ sẽ tạm thời chuyển thành con tr ỏ của công \ncụ Polygonal Lasso. Chú ý không th ả chuột, bạn bấm ch uột tại điểm  khác. \nTrong khi v ẫn giữ nút chuột, thả phím  Alt, con trỏ sẽ trở lại thành con tr ỏ \nLasso. \nTrong quá trình ch ọn nếu bị lỗi, bạn sẽ dễ dàng bỏ chọn và chọn lại đoạn lỗi \ntrong khi v ẫn giữ p\nhuỷ bỏ các điểm neo này r ồi bấm chọn lại. \n \nCác vù\n \nHình 6. 8: Magic Wand \n \n 127\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 128,
    "text": "Công cụ Magic Wand ch ọn các phần ảnh dựa theo mức độ màu  gần giống nhau \ncủa các pixel n ằm sát nha u. Công cụ này rất có ích khi ph ải chọn vùng ch ọn có \nhình dáng ph ức tạp mà bạn không t hể tạo được bằng công c ụ Lasso. \nThanh tuỳ chọn của công cụ Magic Wand c hứa các tuỳ chọn, bạn có thể thay  \nổi chúng để điều khiển cách làm vi ệc của công cụ. Tuỳ chọn Tolerance s ẽ xác \nợc chọn khi bạn bấm vào 1 điểm ở trên \nnh. Giá tr ị này nằm trong kho ảng từ 0 tới 255. Giá tr ị mặc định là 32, điều này \ncó nghĩa là sẽ có 32 tông m àu sáng hơn và 32 tông m àu tối hơn được chọn. \nChú ý: K hi dùng một tro o, Marquee, cũng có thể \nhấn giữ phím Shift để nối thêm  vào vùng ch ọn hiện hành. Để loại bỏ bớt vùn g \nà kéo vùng bạn muốn loại bớt. \nĐịnh lại vị trí đường biên ch ọn khi đang tạo nó: Nếu hình thể vùng chọn chưa \nphù hợp với hình Oval  và nếu đã thả nút chuột thì bạn phải vẽ lại vùng ch ọn. \ntrong khi v ẫn giữ nút chuột, nhấn giữ phím  Spacebar trên bàn phím  và kéo \nchuột. Biên ch ọn sẽ di chuyển khi bạn kéo. Cẩn thận thả nút Spacebar nh ưng \nkhông thả nút c huột và tiếp tục vẽ, có gắng làm  cho kí ch cỡ và hì nh dá ng của \nbiên chọn phù hợp với hình mu ốn chọn. \n \ni chuyển phần ảnh đư ang được chọn. Chọn \nao chép vùng chọn nếạn kéo nó tới vị trí khác. \n \nhay đổi kích thước vùng ch ột hộp \nn. Khung bao c ó 8 điểm vuông nh ỏ ở các \nong khi côg cụ chọn đang được chọn, di \nấn giữ phím  Ctrl làm  con trỏ chuyển \nỏ của công cụ Move. Trong khi v ẫn giữ Ctrl, kéo vùng ch ọn đến vị \ntrí mới. \nBạn có t hể di chuyển vị trí vùng ch ọn bằng cách s ử dụng các mũi tên trên bàn \nphím . Mỗi lần nhấn phím sẽ làm di chuy ển từng bước 1 hoặc 10 pixels n ếu như \nbạn giữ phím Shift. đ\nđịnh số lượng tông m àu xấp xỉ nhau đư\nả\nng các công cụ chọn như Lass\nn\nchọn, bạn nhấn giữ phím Alt v\n \nĐể bỏ chọn vùng ch ọn đang hiện hành: C họn menu Edit/ Deselect ( Ctl+D) \nhoặc bấm ra vùng khác phía ngoài biên ch ọn trong của sổ ảnh để bỏ chọn. \n \nD ợc chọn: Khi vùng ch ọn vẫn đ\ncông cụ Move từ hộp công cụ, con trỏ sẽ chuyển thành hình m ũi tên và cái kéo, \nthông báo r ằng nếu bạn kéo c huột, bạn sẽ cắt vùng ch ọn và di c huyển nó từ vị \ntrí hiện hành sang v ị trí mới. \n \nDi chuyển và sao ché p cùng một lúc: Dùng công c ụ Move, đặt con trỏ vào bên \ntrong vùng ch ọn và nhấn giữ phím Alt. Con tr ỏ sẽ chuyển thà nh hình hai m ũi \ntên, thông báo s ẽ s u b\nọn: Chọn menu Edit/ Transform/ Scale. M T\nbao sẽ xuất hiện xung quanh vùng ch ọ\ncạnh và góc c ủa khung bao ( Ha ndle) và m ột điểm tâm ở giữa. Nhấn Shift và \nkéo handle ở góc để tăng kích t hước. Chú ý vi ệc giữ Shift sẽ bảo toà n tỷ lệ của \nvùng chọn, làm cho nó không b ị méo . Nhấn Enter để hoàn tất việc tăng kíc h \nthước. \n \nDi chuyển vùng ch ọn bằng phím t ắt: Tr\nhuyển co trỏ vào bên trong vùng ch ọn, nh c\nthành con tr\n \n 128\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 129,
    "text": "Biến đổi vùng ch ọn: Bạn sẽ thực hiện việc quay vùng ch ọn bằng cách ch ọn \nEdit/ Transform/ Rotate (Ctrl + T). M ột khung bao xu ất hiện xung quanh đối \ntượng và c on trỏ sẽ có hình mũi tên cong khi đặt bên ngoài khung qua y. Ké o và \nn các đối tượng được đặt và phối trộn tốt hơn với  \nChọn lại vùng gần đây nhất: Chọn menu Select/ Reselect ( Ctrl+ Shift+D ho ặc \nCommand + Shi\nới công cụ chọn đang được chọn, bạn bấm ch uột phải hoặc Control –click và o \nảo ngược vùng ch ọn: Trong khi ch ọn 1 vùng ảnh, lệnh Select/ Inverse ( Ctrl + \nShift+ I) ho ặc Com mand + S hift+ I dùng để chọn các vùng không được chọn \ntrong ảnh. \n \nXoá ảnh trong vùng ch ọn: Nhấn phím Backspace ho ặc Delete, ảnh trong vuang  \nchọn sẽ bị xoá nhưng đường biên ch ọn vẫn được giữ lại sau khi xoá . Chọn Edit / \nClear kết quả cũng tương tự như trên. \nChọn menu Edit/ Cut ( Ctrl+X) ảnh trong vùng ch ọn sẽ bị xoá và  đưa vào bộ \nnhớ Clipboard. \n \nMở rộng hoặc thu hẹp vùng ch ọn bằng cách ch ỉ rõ số pixel: \nVới vùng ch ọn đang có, bạ hu hẹp nó bằng cách ch ọn \nenu Select/Modif y/ Expa nd để mở rộng hoặc Contract để thu hẹp. quay đối tượng sau đó bấm phím Enter để áp dụng biến đổi. \n \nLàm mềm biên ch ọn bằng tính n ăng A nti-aliased và Feather: Tr ong kỹ thuật \nghép ảnh, chúng ta th ường phải chọn các đối tượng ảnh, sau đó đặt các đối \ntượng này lên trên các n ền khác nhau, tính n ăng A nti-aliased và Fea ther sẽ giúp \ncho biê\n \nft+ D) \nV\nảnh và chọn mục Reselect t ừ content m enu; \n \nĐ\nn có thể mở rộng hoặc t\nm\n \n             \n  \nHình 6. 9: Hộp thoại  Expa nd \n \nở rộng ho Vùng chọn mới được m ặc thu hẹp dựa trên vùng c họn ban đầu. \nạo vùng ch ọn cũ: \nđều biên của vùng c họn cũ.  \nọn là đường viền của biên ch T\nBạn chọn menu Select/ border. Trong h ộp thoại Border Selection, nh ập giá t rị \nchiều rộng đường viền ở hộp nhập With từ 1- 200 pixe l và bấm nút OK. M ột \nùng chọn mới sẽ được tạo có biên cách v\n \n 129\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 130,
    "text": "Hình 6. 10: Hộp thoại Border Selection \n \nM rộng vùng ch ọn tới các màu t ương tự: \nọn Menu Select/ Grow để thêm vào vùng ch ọn các pixel g ần kề, nằm trong \nm vi Tolerance được xác định trên thanh tùy ch ọn của công cụ Magic \nnd. Hoặc chọn Nenu Select /Similar để thêm  vào vùng ch ọn các pixel ở \np nơi trong ảnh( không ch ỉ các pixel n ằm gần kề) nằm trong ph ạm vi \nlerance. ở\nCh\nphạ\nWa\nkhắ\nTo\nLện\nạ\nTra\nDi \ntượ  để chuyển cả hộp bao và đối tượng chọn. Giứ Shift rồi kéo \nphía ngoài hộp bao, con tr ỏ sẽ chuyển thành hì nh m úi tên \nngang hoặc dọc. Kéo các handle ở góc làm bi ến \nlt+ kéo để tạo biến dạng từ tâm ra. \niến dạng phối cảnh: Ctrl+Alt+ Shift+kéo các handle ở góc để làm biến dạng \no phối cảnh. \ni chuyển cạnh này đối  \nh Free Transform: (Ctrl+ T): \n Bn có thể làm một loạt hoặc xen kẽ nhiều phé p biến đổi với lênh Free \nnsform cho đến khi  tạo được kết quả mong muốn. \nchuyển: đưa con trỏ vào bên trong h ộp bao, con tr ỏ sẽ chuyển thành bi ểu \nng Move r ồi kéo\nđể ép buộc di chuyển theo phương thẳng đứng, nga ng hoặc 45o. \nQuay: Đưa cho trỏ ra \n2 đầu và kéo để quay cả hộp bao và đối tượng chọn. Shift và ké o sẽ ép buộc \nquay the o từng góc 15o so v ới tâm  quay. \nThay dổi kích thước và tỷ lệ: Kéo các c ạnh hoặc handle ở cạnh để làm biến \ndạng đối tượng theo chi ều \ndạng đồng thời cả hai chiều. Shift kéo handle ở góc sẽ giữ nguyên t ỷ lệ của đối \ntượng khi biến dạng. A lt kéo hoặc Option kéo s ẽ làm biến dạng đều từ tâm ra. \nXô nghiêng: Ctrl+Shi ft+ kéo các c ạnh để xô nghiêng đối tượng theo chi ều \nngang hoặc đứng. Ctrl+Shift+A\nB\nđối tượng the\nLàm méo: Ctrl+ kéo c ác handle ở góc để di chuyển riêng thanh handle này tùy \ný. Ctrl+ Shift+ kéo ở góc để di chuyển handle này và  ép buộc theo ph ương \nngang hoặc htnẳng đứng. Ctrl + Alt+ kéo m ột cạnh để d\nxứng qua tâm. \nCác lệnh bổ xung: trong khi đang sử dụng lệnh Free Tr ansform , bạn có t hể bấm \nchuột phải để mở content m enu và ch ọn các ệnh bổ xung nh ư quay 90o, \n180o…. \n \n 130\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 131,
    "text": "Hình 6. 11: Hộp thoại Free Transform \n \nHủy bỏ các lệnh biến dạng: \n làm, bạn nhấn phím Ctrl+Z. Để hủy bỏ toàn bộ \nt/ Transform/ Again ( Ctrl+Shift+T) Để hủy bỏ1 phé p biến dạng vừa\nchuõi biến dạng vừa làm, bạn nhấn phím  Esc hoặc bấm nút ca ncel trên tha nh \ntùy chọn. Để kết thúc và áp d ụng chuối biến dạng đã làm, bạn nhấn phím  Enter \nhoặc bấm vào nút Com mit trên thanh t ùy chọn. \n \nÁp dụng lại một chuỗi biến dạng Free Transform đã thực hiện trước đó: \n Sau khi thực hiện mộtloạt các biến đổi bằng lệnh Free Transform, b ạn có thể \ntiếp tục thực hiện lại chuối biến đổi vừa rồi cho m ôth đối tượng khá c đang chọn \nbằng menu Edi\n \nPhương pháp s ử dụng các giá tr ị số: \nSau khi kh ởi động lệnh Free Transform, b ạn cũng có thể thực hiện các phép \nbiến đổi chính xác b ằng cách nh ập giá trị số trên thanh tùy ch ọn. \n \n \nTô m àu cho vùng c họn: bạn có thể tô m àu cho vùng c họn bằng menu Edit/Fill. \n \n \nHình 6. 12: Hộp thoại Fill \n 131\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 132,
    "text": "Chọn các kiêu màu tô Foregrou nd Color ( Alt+Delete) Ho ặc Bac kground Col or \n( Ctrl + Delete). \n \n6.2.1.3 Công c ụ cắt ảnh: \n \nChúng ta s ẽ dùng công c ụ Crop để xén ảnh và qua y cho vừa với kích thước yêu \ncầu. Chọn công cụ Crop tù hộp công cụ. Trên thanh tùy ch ọn nhập kích thước \nvào hộp nhập Wi dth và hộp nhập Height, ho ặc tạo một khung xén xung quanh \nphần ảnh. Không ph ải bận  vừa với ảnh, chúng ta s ẽ \niều chỉnh kích c ỡ xung qua nh khung xé n. Bạn có thể kéo các handle xung \niều chỉnh lại khung xén cho v ừ với ảnh cần xén. Nhấn  tâm khi khung xén không\nđ\nquanh khung xén để đ\nEnter hoặc nhấp đúp chuột để hoàn tất việc cắt ảnh. Nhấn Esc nếu muốn hủy bỏ \nkhung xén.  \n- Sử dụng công cụ Slice (K) \n  \nCông cụ Slice dùng để chia cắt hình ảnh ra thành nhi ều mảnh nhỏ, Trước khi sử \ndụng công c ụ Slice, cần dùng nh ững đường Guide để chia hình ảnh ra thành \nnhững vùng c ần cắt. Sau khi chia hình ảnh thành nh ững vùng nh ỏ như ý, dùng \ncông cụ Slice để chia cắt hình ảnh (tương tự như khi ta dùng dao để cát miếng \nbánh) \n \nCách thực hiện: \nChọn công cụ Slice, đặt công cụ tại 1 góc của vùng cần cắt, giữ chuột và ké o \nchuột đến góc đối diện, thả chuột. \nKhi muốn chỉnh sửa 1 Slice đã được cắt, dùng công c ụ Slice Select Tool để \nchỉnh sửa  \n- Thay đổi độ rộng, hẹp của các Slice đã cắt \n- Loại bỏ Slice \nĐặt tên và gán các thu ộc tính cho Slice \n \n6.2.1.4 Nhóm công c ụ chỉnh sửa ảnh: \n \nChỉnh sửa các vùng ảnh bằng công c ụ Clone Stamp: \nCông cụ Clone Stam p sử dụng các pixel t ừ một vùng của ảnh để thay thế cho \ncác pixel c ủa một vùng khác trên ảnh. Với côn g cụ này, bạn có thể thay thế, sửa \nchữa các vùng b ị lỗi của ảnh gốc. Chọn công cụ Clone Stam p từ hộp công cụ, \nên thanh tùy chọn, mở bộ chọn Brush, c họn một nét bút kích c ỡ phù hợp với \n sửa. Chắc chắn rằng tùy ch ọn Aligned được chọn. Di chuy ển \nsao chép liên tục, không bị lặp lại sau mỗi lần kéo. tr\nvùng định chỉnh\ncon trỏ tới phần ảnh gần nhất so với phần ảnh bị lỗi. Nhấn giữ phím  Alt để \nchuyển con trỏ thành c on trỏ xác định vị trí bắt đầu lấy mẫu nguồn và bấm để \nxác định vị trí này.  Kéo con trỏ của công cụ Clone Stamp để xóa vùng b ị lỗi. \nKéo t ô xóa một phần của góc  bị lỗi rồi thả nút chuột, di chuy ển con trỏ tới vị trí \nkhác của vùng lỗi và tiếp tục tô xóa vùng b ị lỗi. Khi tùy ch ọn Aligned được \nchọn sẽ đảm bảo ảnh được \n \n 132\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 133,
    "text": "Sử dụng công c ụ Pattern Stamp: \nChọn một vùng chọn. Chọn menu Filter/ Pattern Maker. \n  \n \nHình 6. 13: Pattern Maker \n \nTrong hộp thoại Pattern Maker b ấm vào nút  Use Im age \ni hộp \nthoại để xem lại các biến thể của mẫu tô và c họn một mẫu \ntô muốn sử dụng. Bấm nút Save  Preset Pattern, nh ập tên \nvào K để trở về hộp thoại \nPattern Maker. N ếu bạn bấm OK hộp thoại Pattern Maker \nược tạo. \nmẫu tô. Bấm ra phía ngoài để đóng bộ chọn lại. Trong c ủa \n \nSử dụng công c ụ Healing Brus h và Patch \n Size. Bấm nút Ge neral, bạn có thể tiếp tục bấm nút \nGeneral Again để tạo thêm các biến thể khác của mẫu tô. \nSử dụng các nút m ũi tên tam giác d ưới đáy, bên ph ả\n hộp thoại Name và b ẫm nút O\nsẽ tô toàn bộ ảnh bằng mẫu tô vừa đ\nĐể áp dụng mẫu tô, chọn công cụ Pattern Stam p. Trên \nthanh tùy ch ọn, chọn một nét bút  từ bộ chọn Brus h, bấm \nvào mũi tên tam giác c ủa bộ chọn pattern để mở bộ chọn \nsổảnh, bạn kéo con tr ỏ để thay thể bằng mẫu tô mới. \n \n \nHình 6. 14: Heali ng Br ush và Patch \n \nĐây là công c ụ cải tiến mở rộng khả năng của hai công c ụ Clone Stam p và \nPattern Stam p. Các công c ụ này cho phé p thực hiện đồng thời việc sao chép và \nkhả năng phối trộn tốt giữa các pixel t ừ một vùng ảnh này với một vùng ảnh \nkhác. \nChọn công cụ Healing Br ush , trên tha nh tùy chọn bấm vào nút  mũi tên ở bộ \nchọn Brush. Kéo con tr ượt Diameter để điều chỉnh đường kí nh nét bút . B ấm ra \nbên ngoài để đóng bộ chọn lại. Nhấn giữ Alt hoặc Option và bấm vào  vị trí gần \nvới vị trí cần sửa để lấy mẫu\nông cụ Patch được dùng để vá ảnh, c ông cụ này kết hợp cách ch ọn của công \n \nbạn ột vùng làm vùng c ần vá hoặc vùng lấy mẫu vá. Sau đó bạn \ndùng công c ụ patch ké o vùng c họn tới v ong ảnh. Khi th ả nút chuột, \ncông cụ patch sẽ thực h\ntory Bruch để phục hồi lại phần chỉnh sửa \nc đố làm nguồn . Thả phím  Alt và kéo. \nC\ncụLasso và tính năng phối màu của công cụ Healing Br ush. Với công cụ Patch, \n có thể chọn m\nị trí khác tr\niện chức năng vá. \n \nSử dụng công c ụ His\nCông cụ history Brus h dùng dữ liệuảnh từ các trạng thái trướ\nsao chép. Điểm tiến bộ của công cụ này là bạn có thể phục hồi trở lại một vùng \nảnh giới hạn, không ph ải loại bỏ toàn bộ kết quả đã làm theo t ừng bước. Chính  \n 133\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 134,
    "text": "vì điều này, bạn có thể giữ lại các vùng ảnh đã chỉnh sửa hoàn hảo và có t hể \nphục hồi lại các vùng ảnh sau khi ch ỉnh sửa nhưng không đạt yêu cầu. \ng cụ History Brush kh ảo sát các tùy ch ọn khá c nhau của công cụ này \n Dodge trong h ộp công cụ. Trên thanh tùy  chọn, \nộp chọn Brush để mở bộ chọn nét bút định sẵn, chọn phạm vi tông \nàu chịu tác động Ra nge, ở tùy c họn Expos ure, chọn cường độ tăng sáng b ằng \nào ô nhập hoặc dùng thanh tr ượt. Chọn công cụ History t ừ hộp công cụ. Trong bảng history, ké o thanh cu ộn lên \nphía trên s ẽ thấy được Snaps hot Post – graffiti. B ấm vào ô trống bê n trái tê n \nPost – graffiti. động tác này s ẽ chọn Post – graffiti làm ngu ồn sao chép. K éo \ncông cụ history Br ush trên vùng m à trước đây bạn xóa.  Sử dụng thanh tùy ch ọn \ncủa côn\nnhư độ mờ đục, và phương thức phối màu Mode… \n \nĐiều chỉnh độ sáng bằng công cụ Dodge: \nChúng ta s ẽ dùng c ông cụ Dod ge để làm sáng hơn vùng sáng và làm  tăng độ \nchi tiết của ảnh. C họn công cụ\nbấm vào h\nm\ncách nhập trực tiếp giá trị v\n \n \nHình 6. 15: thanh tr ạng thái của công cụ Dodge \n \nKéo con tr ỏ vào phần bạn muốn. chỉnh sửa trên khung hình cho đến khi được \nkết quả mon g muốn. \nNếu muốn tạo hiệu ứng Dodge theo tùng đoạn thẳng, thay vì ph ải kéo con trỏ \ntheo đường thẳng, bạn có thể bấm tại một điểm sau  đó Shift+ b ấm tại 1 điểm \nthứ hai, hiệu ứng dodge sẽ xảy ra trên đoạn thẳng nối giữa hai điểm này. \n \nGiới thiệu về công cụ Burn:  \nNgược lại với công cụ Dodge, t hay vì làm  sáng hơn phạm vi tông m àu được \nchọn, công cụ Burn sẽ làm chúng đậm và tối hơn. Các t ùy chọn và các thao tác \nũng giống như công cụ Dodge \niềc\n \nĐu chỉnh cường độ màu  bằng công c ụ Sponge:\n  \nDùng công c ụ Sponge để tăng cường độ màu . Chọn công cụ Sponge trên thanh \ng cụ. Trên thanh tùy ch ọn công cụ Sponge xác l ập các tùy ch ọn Mode: ki ểu \nđộng, Flcôn\ntác \nnày càng t ăng. ow: cường độ tác động… ké o con trỏ của công cụ Sponge  trên \nvùng định tăng cường độ màu. Càng ké o nhiều lần thì cường độ màu  ở vùng \n 134\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 135,
    "text": "Trong danh sách Mode , kiểu tác động Desaturate s ẽ loại bỏ sự có mặt của màu  \nên ảnhở tr , làm ảnh bị xỉn đi, chỉ con các s ắc đen xám. Saturate và Desaturate là \nloạhai kiểu tác  động trái ng ược nhau. Tuy nhiên b ạn không nên dùng ki ểu này để \ni bỏ kiểu kia. \n \nLàm mềm mại vùng bóng đậm và vùng bóng sáng b ằng công cụ Blur:\n  \nChọn công cụ Blur từ hộp công cụ, trong bảng Brus hes, chọn một nét bút. Trê n \nthanh tùy c họn đặt các giá tr ị. Kéo con tr ỏ của công cụ Blur trên vùng bóng  \nđậm và vùng bóng sáng để làm mềm và tạo sự chuyển màu ở những vùng này. \n \nCông cụ Sharpen làm  nét ảnh: \n  \nNgược lại với công cụ Blur, thay vì làm m ềm , công cụ Shar pen sẽ làm cho ảnh \nnét hơn. Cá c tùy chọn và các thao tác c ũng giống như công cụ Blur \n \n Sử dụng công c ụ SMUDGE (R) \nCông cụ Smudge  có hình bàn ta y đang chỉ  dùng để làm mờ và biến dạng ảnh. \nChọn công cụ Smudge, nh ấp chuột và di c huọtt vào vùng hònh ảnh cần làm  mờ \nvag biến dạng. \n \n6.2.1.5 Công c ụ tạo chữ: \n \n \nHình 6. 16:  công c ụ Text \n \nTạo văn bản: \n \nKhi bạn dùng công c ụ Horizontal (t ạo văn bản hướng nga ng) hoặc Vertical \nType (tạo văn bản có hướng dọc), văn bản sẽ hiện lập tức trên của sổ ảnh. \nNgoài việc thay đổi thuộc tính như văn bản, bạn có t hể biến đổi hình dạng tổng \nquát cho nó, áp d ụng các hi ệu ứng, tha y đổi phương thức trộn phối màu hoặc \nthay đổi độ mờ đục cho nó. \nNhưng bạn không th ể áp dụng các bộ lọc, sử dụng các công c ụ vẽ, không th ể tô \nvăn bản với các mẫu tô chuy ển màu hoặc với các hoa v ăn định sẵn. Để áp dụng \nác hiệu ứng này, b ạn phải chuyể c n văn bản này thành đối tượng thường bằng \n/ Type. Tuy nhiê n khi sử dụng lệnh này thì các thu ộc tính \na. \nọn có dạng văn bản này thành d ạng mặt nạ Layer. \n \nChỉnh sửa văn bản: \nể chỉnh sửa văn bản, chúng ta c ần chọn nó. Bạn có thể chọn một ký tự đơn, \nmột từ hoặc tất cả các ký tự trong cả khối văn bản. Bạn có thể thay đổi kích menu La yer/Rasterize\nvăn bản không còn n ữ\nNếu sử dụng H orizontal Type Mask ho ặc Vertical Type Mas k, bạn có thể \nchuyển đổi các vùng ch\nĐ\n 135\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 136,
    "text": "thước,tỷ lệ văn bản , điều chỉnh khoảng cách gi ữa hai ký t ự, điều chỉnh khoảng \ncách dòng ( Lead ing). Di chuy ển các ký t ự được chọn lên trên ho ặc xuống dưới \nđường baseline. \n \n \nHình 6. 17:  Hộp thoại Text \n \nTừ trái qua ph ải - Từ trên xuống dưới: \nể hiện  1. Chọn font chữ \n2. Chọn Mode c ho chữ \n3. Chọn Siz e cho chữ \n4. Chọn khoảng cách gi ữa các dòng trong 1 đoạn, giá  trị càmg lớn thì khoảng \ncách càng xa \n5. Chọn khoảng cách gi ữa các ký t ự, giá trị càng lớn thì khoảng các h càng xa. \n6. Chọn tỉ lệ giữa chiều cao và c hiều rộng của chữ. \n7. Chọn tỉ lệ giữa chữ hoa và ch ữ thường \n8. Chọn mầu cho chữ  \n9. Chọn ngôn ng ữ th\n10. Chọn chế độ chống hiệu ứng răng cưa. (Anti Alias) \n \nCách sử dụng công cụ Type Mark  \n  \nông cụ Type Mask t ạo ra vùng ch ọn có dạng ký tự. Đ C ối với công cụ Type  \ntạo ra như một hình ảnh, được xác định bằng vùng ch ọn. Vì \nứng làm đẹp cho chữ (Filters. Mask, ký t ự được \nvậy sau khi  đã tạo ký tự bằng công c ụ Type Mask xong không th ể  chỉnh sửa lại \nđược. \nTuy c ông cự Type Mask có khuyết điểm nhưng nó cũng có một ưu điểm lớn, \nđó là ứng dụng được các hiệu ứng làm  đẹp cho c hữ như khắc nổi  tạo bóng . \nCông cụ Type  tuy c ó thể chỉnh sửa được, nhưng vì không được xem là m ột đối \nượng hình ảnh nên không th ể ứng dụng các hiệu t\nPlug-lns) trên P hotoshop được. \n \nChuyển hướng cho văn bản: \nBạn có thể chuyển hướng cho văn bản từ ngang sang d ọc hoặc ngược lại. Bấm \nvào nút Te xt Orientat ion ở bên trái, trên thanh tùy c họn. hoặc trong b ảng \nCharacter, b ấm nú t mở menu và chọn lệnh Cha nge, Te xt Orientati on từ menu \ncủa bảng. Hay ch ọn menu La yer/ Type/ H orizontal ho ặc Vertical.B ạn có t hể \n 136\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 137,
    "text": "quay các ký t ự của văn bản bằng cách ch ọn các ký t ự này và bấm nút mở men u \ncủa bảng Character, và ch ọn lệnh Rotate Character \n \nCác xác lập cho văn bản Paragra ph: \n \nKhi tạo văn bản dạng Paragraph,   Photos hop cũng cung cấp thêm  các tuỳ chọn \nđịnh dạng văn bản, Trong b ảng Paragraph có xác l ập gióng hà ng( Align), dàn \nđều hai bê n( Justify), kho ảng thụt vào ( Indent) và kho ảng cách gi ữa các đoạn \nvăn bản. M enu cho phép tinh c hỉnh các tuỳ chọn này: \n \n \nHình 6. 18:  Hộp thoại Paragraph \n \n6.2.1.6  C ác công cụ bút vẽ: \nSử dụng công c ụ bút chì: \n  \nCông cụ Pen được sử dụng như một cái bút chì. Ch ọn công cụ Pen tool, dùng \ncông cụ để vẽ nét. Trên thanh thuộc tính, bạn có thể chọn kíc h cỡ bút  ở tuỳ \nếu muốn vẽ đoạn thẳng, tha y vì phải kéo con trỏ theo đường thẳng, bạn có thể \nm tại 1 điểm thứ hai, sẽ xuất hiện đoạn thẳng \nSử dụng công c ụ BRUSHchọn Brush . \nN\nbấm tại một điểm sau  đó Shift+ b ấ\nnối giữa hai điểm này. \n \n tool (B)  \ndụng như một cái bút v ẽ. C Công cụ Brush được sử họn công cụ Brush t ool, \nàu. Photos hop sẽ dùng m àu foce Ground để làm dùng công c ụ Brush để tô m\nmàu tô và dùng m àu back gr ound để làm màu xoá (dùng công c ụ Eraser) \nNét vẽ của công cụ Brush được chọn trong bảng Brus h tại thanh thu ộc tính của \ncông cụ  \nMaster Diameter:  \nDùng để chọn độ lớn của đường kính nét vẽ .Các chế độ (Mode) c ủa công cụ \nBrush \n 137\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 138,
    "text": "Hình 6. 18:  Hộp thoại công cụ Brush \n \n \n \n6.2.1.7 - Sử dụng công c ụ Eraser (E) \n  \nCông cụ Eraser có hình c ực tẩy, dùng để tẩy xóa hình ảnh. C húng ta đã quen  \ndùng công c ụ này qua công vi ệc tẩy xóa, nh ưng công c ụ Eraser còn có ch ức \nnăng phục bổi những gì đã bị xóa. Đánh dấu chân Ô Eraser to History trên \nthanh Pr operty bar để mở ch  phầđã bị tẩy xoá ức năng phục hồi những n \n \n6.2.1.8 Công c ụ tô màu cho đối tượng: \n \n \nHình 6. 19:  công c ụ Gradient \n \nTô màu chuyển ( Gra dient) : \nMàu chuy ển Gra dient là sự chuyển dần giữa hai hay nhi ều mà\nnh kiểu chuyển tiếp bằng công c ụ gradient. Bấm chọn công u. Có t hể điều \nchỉ cụ Gradient t ừ \n mũi tên để mở hộp chọn hộpô\nGradient   cng cụ. Trên thanh thu ộc tính bấm vào nút\n \nHình 6.20:  hộp chọn Gradient \n \nChọn m àu rồi bấm ra phía ngoài để đóng bộ chọn lại. Kéo con \ntrỏ để buộc hướng \nchuyển màu theo phương ngang). ột kiểu chuyển m\n với công cụ Gradi ent ( bạn có thể giữ Shift trong khi kéo \n 138\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 139,
    "text": "Bạó\ntrạng thái. C ửa sổ Gradient Editor xu ất hiện. Kéo các m ũi tên để điều chỉnh độ \nchunn c thể thay đổi màu chuy ển bằng cách nh ấp chuột vào ô m ẫu trên thanh \nyể của màu  . \n \nHình 6. 21:  hộp thoại  Gradient \nu cho đối tượng (Paint Buket):  \nĐổ m\nCh\nmàu. P\nFor\nthá\n \n6.2.à\nọn công cụ Paint Buket trên thanh công c ụ. Nhấp chuột vào l ayer cần đổ \naint Buket sẽ tự đổ màu cho đối tượng đươc chọn. Màu m ặc định là màu \nound Color. Bạn cũng có thể c egr họn các mẫu tô Patent trên thanh tr ạng \ni để tô m àu cho đối tượng. \n  Công 1.8 cụ tạo đường dẫn Path:  \n \n \nHình 6. 22:  Công c ụ tạo đường dẫn Path \n \nNh\ngấp kh\nkỳ.ô\nCh\nđiểđ Nếu \nmu\nsợiy\ni đầu a dây điều óm công cụ Pen giúp chúng t a:  Vẽ những nét thẳng, nét cong, nh ững hình \núc, những đường cong khé p kín. Vẽ lại đường viền của một hình ảnh bất \n T màu một hình s au khi đã vẽ lại.  \nọn công cụ Pen Tool trong thanh công c ụ. Bấm ch uột lên khung ảnh lấy \n thẳng. m ầu, bấm tiếp để lấy các điểm tiếp theo nếu muốn vẽ đường\nốn vẽ theo đường cong , bấm điểm đầu, giữ chuột rồi kéo, bạn sẽ được các \n dâ điều chỉnh, thả chuột rồi bấm tại điểm tiếp theo. Gi ữ Ctrl+ nhấp chuột \n dây neo+ ké o, Đường cong s ẽ thay đổi theo cách kéo c ủ tạ\nkhiển. \n \n 139\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 140,
    "text": "Hình 6. 23:  đường dẫn Path và dây điều khiển \n \nĐể ection. Để tô \nmà Để tô nét cho đường Path, ch ọn Str oke Path….  biến đường Path thành vùng ch ọn, chọn menu Path/  Meke Sel\nu cho path ch ọn Fill Path. \n \n \nHình 6. 24:  Menu  Path \n \n6.2.1.10 - Các công c ụ tạo hình:  \n \n \nHình 6.25:  Các công c ụ tạo hình \n \n- \nCô tròn cạnh \nCông cụ tạo nét \n- Công cụ tạo hình đa \ng cụ nào trong nhóm  công cụ này, trên t hanh trạng thái sẽ xuất Công cụ tạo hình chữ nhật \nng cụ tạo hình chữ nhật - \n- Công cụ tạo hình Ellipse \n Công cụ tạo hình đa giác -\n- \nphương. \n \nChọn bất kỳ côn\nhiện các tính n ăng tương ứng \n \n \nHình 6. 26:  thanh tr ạng thái công c ụ tạo hình \n 140\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 141,
    "text": "6.2.1.11 C ông cụ Zoom và Hand:  \n \nZoom : \n  \n \nĐể thu phóng s ự thể hiện của ảnh, bạn sử dụng m enu V iew với một trong các \ncách sau: \n- Dùng menu View / Zoom In để phóng to s ự thể hiện của ảnh. \n- Dùng menu View / Zoom Out để thu nhỏ sự thể hiện của ảnh. \n- Dùng menu View / Fit on Screen: Thể hiện toà n bộ ảnh lớn nhất vừa vặn \na ảnh và kíc h cỡ của cửa sổ chương trình \nhóng to, thu nhỏ của ảnh trên màn hình. Dùng \nmenu View  / Actual Pixels (trong Im ageready là View 1 Actual Size) để thu \nphóng ảnh sao cho độ phân giải của ảnh bằng với độ phân giải của màn hình \n(một pixel của ảnh thể hiện bằng một dọt (điểm) của màn hì nh). \n- Dùng menu View / Print Size (ch ỉ có trong Photoshop) để thu phóng ảnh \nbằng với kích thước khi in ra. \n- Dùng menu View / Resize Window  to Fit (trong Imageready) ho ặc tùy c họn \nResize Window g cụ Zoom  (trong \nPhotos hop): lệnh nà y thay đổi kích cỡ cửa sổ cho phù h ợp với cấp dộ thu \nông cụ Hand để làm cho ảnh vừa vặn với màn \nhìnF\nMỗ\nchỉ thể m thu phóng s ẽ \nược thể hiện trên thanh tiêu đề của cửa sổ file ảnh và ở tận cùng, bên tr ái \nar) \nthu phóng trên thanh trạng thái ho ặc trong bảng N avigator. B ạn \nỏ của công cụ Zoom  tạo một đường bao hình ch ữ nhật để xác \nảnh thì công c ụ Hand sẽ \nô\nkíc\n- C p công cụ, kéo con trỏ trong cửa sổ ảnh để di \nnh khác trong c ửa sổ này .  \nCũng giống nh công c ụ Zoom , bạn có thể chọn công cụ Hand từ bàn phím mà  \nần bỏ chọn công cụ đang chọn.Chọn công cụ bất kỳ (khác công c ụ \nHand).Nh ấn giữ phím Sp ụ Hand từ bàn phím . \nKéo con trỏ để di chuyển tới vùng ảnh m ong m uốn trong cửa sổ ảnh, sau đó \nả phím Spacebar. với màn hình. Kích c ỡ củ\nPhotos hop sẽ xác định độ p\nto Fit trên thanh tùy chọn của côn\nphóng của ảnh. \n Bạn có thể double-click vào c\nh (it on Screen). \ni khi bạn sử dụng lệnh Zoom , ảnh sẽ được phóng t o hoặc thu nhỏ, nhưng nó \n hiện trong ph ạm vi của cửa sổ file ảnh m à thôi. P hần tră\nđ\nthanh trạng thái (status b\nTrong P hotoshop, c ó thể nhập chỉnh xác cấp độ thu phóng ảnh theo ý b ạn ở hộp \nthể hiện cấp độ \ncó thể kéo con tr\nđịnh vùng ảnh m uốn phóng to. \n \nCuộn Ảnh:  \nBạn có thể dùng công c ụ Hand để di chuyển, cuộn ảnh trong c ửa sổ chứa file \nảnh. Nếu ảnh đã thể hiện đầy đủ trong cửa sổ chứa file \nkhng có tác dụng khi bạn kéo c on trỏ trong cửa sổ ảnh. \n- Kéo góc d ưới bên phải của khung c ửa sổ ảnh vào phía trong ảnh để làm giảm \nh thước của cửa sổ này, sao cho c ửa sổ ảnh chỉ thể hiện một phần của ảnh  \nhọn công cụ Hand từ hộ\nchuyển tới các phần ả\n- \nkhông c\nacebar để tạm thời chọn công c\n- \nth\n 141\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 142,
    "text": "- Double-cl ick và o công cụ Zoom  trong hộp công cụ để đưa ảnh về cấp độ view \n00%. \n.2.1.12-  Công c ụ lấy màu1\n \n6  \nây là công c ụ rất hữu hiệu để bạn copy c hính xác m ột màu . Dùng c ông cụ \nEdropper Tool tr ỏ vào 1 m àu bất kỳ nào trên ảnh, ban sẽ coppy m àu nga y chí nh \nchỗ đó.  \n \n6.2.1.13 N hững điều cơ bản về Layer : \nĐ\n \n \nCó thể xem các layer nh ư những tấm phim  có đặt các phần ảnh trên đó.Trong \nmột layer, nh ững phần có ảnh sẽ không trong su ốt, các phần còn lại sẽ trong \nsuốt. Mỗi file Phot oshop c ó một hoặc nhiều layer, các Layer x ếp chồng lên \nnhau thà nh nhiều lớp.  \nNói thêm v ề layer Backgr ound \nLayer Background được đặt ở vị trí cuối cùng (nằm dưới các layer khác) trong  \nbảng Layers. M ột fie ảnh chỉ có thể có một layer Background. B ạn không th ể \nay đổi trật tự sắp xếp, phương thức phối trộn màu (blending m ode) hoặc độ \nyer bình thường . D ouble-click và o layer Backgroun d \nong bảng Layers, ho ặc chọn menu La yer / New / Layer From  Background để \nng tạo một layer mới bằng cách kéo ảnh từ file này sang file khá c \nằng cách ch ọn công cụ Move từ hộp công cụ. Kéo từ cửa sổ file ảnh này sang \nfile ảnh kia. Con tr ỏ sẽ chuyển thành hũi tên với ô vuông và d ấu cộng. \nếu bạn nhấn phím Shift khi dang kéo thì ảnh sao chép s ẽ đặt ngay chính gi ữa \n nhau trong \nùng một cửa sổ. \nắt là các layer bi ẩn đi. Bạn có thể bấm \nào biểu thượng con mắt để làm ẩn hoặc hiện layer. \n th\nmờ đục (opacity) c ủa layer Bac kground . Tuy nhiên, b ạn có thể chuyển layer \nBackground thành m ột la\ntr\nmở hộp thoại New Layer . Đặt tên và xác l ập các tùy ch ọn cho layer m ới, rồi \nclick nút O K.  \n \nĐổi tên và sao chép la yer từ một file khác: \nCũng dễ dà\nb\nình m\nN\ncủa sổ file ảnh đích. Khi th ả chuột, hai lớp ảnh sẽ đặt chồng lên\nc\n \nThể hiện hoặc làm ẩn ảnh chứa trong layer: \nBiểu tượng con m ắt ở ngoài cùng bên trái tên layer cho bi ết layer này đang \nđược thể hiện. Các layer không có con m\nv\n 142\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 143,
    "text": "Hình 6. 27:  Cửa sổ layer \n \nắp xếp lại các Layer: \n tự xếp \np). Thứ tự này sẽ quyết định việc thể hiện nội dung file ảnh. Thay đổi thứ tự \nkhi nhìn thấy một đường màu tr ằng xuất hiện giữa các layer thì \nả nút c huột. \nCó thể sắp xếp lại vị trí layer đang chọ trong bảng Layers b ằng các lệnh từ \nenu La yer / Arrange: \n: đưa layer đang \nhọn xuống dưới một cấp (không xu ống dưới layer Background). \n- Send To Back (phím  tắt Ctrl+shift+[ ho ặc Command+shift +[ (Mac OS)): đưa \nlayer đang chọn xuống dưới 1 cùng (không xu ống dưới 1 layer Bac kground). \nCác lệnh trên không s ử dụng được cho la yer Backgr ound trước khi chuy ển \nlayer này thành layer th ường. \n \nThay đổi độ mờ đục Opacity và ph ương thức phối trộn màu Blendi ng m ode cho \nlayer \nPhần ảnh layer trên đã che khu ất các phần ảnh khác n ằm dưới nó. Bạn có thể \nthay đổi độ mờ đục Opacity để thấy được các phần ảnh phía d ưới xuyên qua \ncánh cửa. Cũng có thể thay đổi phương thức phối trộn màu Ble nding m ode để \nthay đổi hiệu ứng phối trộn màu của các pixe l. \n \nLiên kết layer: \nó một cách rất hiêu quả là liên kết hai hoặc nhiều layer lại với nhau. V ới các \nyer đã được liên kết, bạn có thể di chuyển, biến đổi chúng 1 cách  đồng thời. \n biết \nác layer đã được liên kết. \n S\nThứ tự tổ chức các layer trong fil e ảnh còn gọi là Straking Order ( th ứ\nlớ\nxếp lớp sẽ làm cho một phần ảnh nào đó di chuyển lên phía trên ho ặc ẩn dưới \ncác phần ảnh trong các layer khác. Trong b ảng layer, ké o layer cần thay đổi thứ \ntự lên phía trên, \nth\nn\nm\n- Bring Forward (phí m tắt Ctrl+j ho ặc Command+j (Mac OS)): đưa layer \nđưang chọn lên trên m ột cấp. \n- Bring To Front (phí m tắt ( trl+shift+j ho ặc Command+s hift +] (Mac OS)): \nđưa layer đưang chọn lên trên cùng. \n- Send Backward (phím t ắt Ctrl+[ ho ặc Com mand+[ (Mac OS))\nc\nC\nla\nTrong khi v ẫn duy trì  vị trí tương đối cho các phần ảnh trên các layer đã liên \nkết. Để liên kết các layer l ại với nhau, bạn bấm vào ô vuông nh ỏ nằm giữa biểu \ntượng con m ắt và tên layer. M ột biểu tượng hình m ắt xích sẽ xuất hiện cho\nc\n 143\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 144,
    "text": "Áp dụng hiệu ứng laye r bằng các layer style \nác hiệu ứng đặc biệt khác. C ác layer style \nược áp dụng một cách tự động và có th ể chỉnh sửa được Chúng liên k ết trực \ntiếp với layer mà b ạn chỉ định.Tr ong P hotoshop, bạn sẽ dùng hộp thoại Layer  \nStyle để điều chỉnh các style.  \nVới các hiệu ứng layer  sau khi  đã áp dụng, bạn có thể tạm thời tắt tác dụng của \nnó bằng cách click t ắt biểu tượng con m ắt của hiệu ứng trong b ảng Layers . \nCũng có thể sao chép hi ệu ứng bằng cách ké o nó thả vào một layer khác. \n Bạn có thể tăng cường hiệu quả cho layer b ằng cách áp d ụng hiệu ứng layer \n(còn gọi là layer style) có s ẵn như shadow ( đổ bóng), Grow (t ỏa sáng), be vel \n(vát cạnh), emboss (làm  nổi) và c\nđ\n \nHình 6. 28:  Cửa sổ layer Style \n \nTạo một tập hợp layer  và đưa các  layer vào t ập hợp này:  \nạn có thể tạo một tập hợp, một bộ các layer hay còn g ọi là layer set, gi ống \nnhư một thư mục để chứa các layer có chung m ột mục đích hoặc cùng tính \nchất. Điều này gi úp bạn dễ dàng quản lý các file ảnh phức tạp, có quá nhiều \nlayer: \n- Trong bảng layer, b ấm nút mở menu và chọn mục New layer set. \n B\n 144\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 145,
    "text": "Hình 6. 28:  Menu la yer \n \n- Trong hộp thoại New layer set đặt tên cho t ập hợp layer mới ở hộp nhập \nname rồi OK. \n \nHình 6. 29:  Menu New  layer Set \n \nTạo một layer mới: \nĐể tạo một layer mới, bạn thực hiện một trong các cách sau: \n- Click và o nút New  Layer ở phía  dưi bảng Layers để tạo một layer mới với độ \nmờ đục Opacity là 100% và ph ương thức phối trộn màu Blending m ode là \nNormal. Trong b ảng Layers, layer m ới sẽ được chọn, được đặt tên tự động (như \nLayer 1, Layer 2...) và đặt trên layer đang c họn trước đây. \n- Trong b ảng Layers, click vào nút m ở menu  và chọn mục New Layer t ừ menu \ncủa bảng. Trong h ộp thoại New Layer b ạn cóthể chọn các tùy ch ọn cho layer  \nmới: Đặt tên cho layer ở hộp nhập Nam e. Click ch ọn tùy c họn Group Wi th \nPrevious Layer n ếu bạn muốn layer m ới là một phần của nhóm  cắt clipping \ngroup. \nChọn một màu từ danh sách Col or, màu này sẽ được dùng làm  màu trang trí \ncho la yer mới, giúp dễ phân biệt layer này v ới các layer khác trong b ảng Layers  \n. Nếu muốn, bạn có t hể chọn một phương thức phối trộn màu ở hộp danh sá ch \nMode và độ mờ đục ở hộp nhập Opacity. Click nút OK để đóng hộp thoại, \nlayer mới với các xác l ập trên \nđược tạo \n \n 145\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 146,
    "text": "Di chuyển ảnh trong layer \nĐể di chuyển ảnh trong layer, b ạn chọn laye r muốn di chuy ển từ bảng Layers. \nông cụ hoặc nhấn giữ phím Ctrl hoặc Co mmand  \ny không thực hiện được với layer \nackground, bạn phải chuyển layer Backgr ound thà nh layer th ường. \nhọn nhanh layer \n di chuyển ảnh trên m ột layer, bạn phải chọn layer \n Layers  trước khi sử dụng công c ụ Mov e. Có thể thực hiện điều \nnày nha nh hơn bằng cách ch ọn công cụ Move và chọn tùy chọn Au to Select \nLayer trên t hanh tùy ch c chọn. khi bạn click vào ph ần \nảnh thuộc layer nào t hlayer đó sẽ tự động được chọn trong bảng Layers. Tuy \nnhiên. các pixel t ại vị trí c % trở lên, \nnếu dưới 50 thì ph ần ảnh b \nTương tự như trên, với công\nchọn Auto Select Layer trên n có thể dùng c on trỏ của công \ncụ Move, Ctrl b ấm. \n \nSao ché p layer: \nĐể sao chép layer trên cùng \nthả vào nút New Layer. Lay\nnguồn. \n \nHợp nhất các layer b ằng lệnh\n- Lệnh Merge Down: dùng \n- Lệnh M\n(có biể o layer đang chọn. Các  layer ẩn được giữ \nnguyên. \n- Lệnh Merge Link: dùng để hợp nhấcác layer có liên kết với layer đang \nchọn. \nLệnh Merge layer set: dùng để hợp nhất tất cả các layer trong m ôth tập hợp \nlay\n- Lện ắt ( \n \nKhoá L\nBạó\nngăn n i vô tình. Khi m ột layer bị khoá, một biểu tượng khoá s ẽ \nthểệ\nhoàn t\nBấm vào nút Lock All ở phần Lock, phía trên b ảng layer. M ột layer sẽ bị xoá \nhoà\nChọn m hoá một vài thuộc tính của \nlayer. Chọn công cụ Mov e từ hộp c\n(Mac OS) trong khi m ột công cụ khác đang chọn để tạm thời chuyển sang côn g \ncụ Move. Drag con t rỏ trong cửa sổ ảnh để di chuyển vị trí của toàn bộ ảnh \ntrong layer  đang chọn. Tuy nhiên, cách nà\nB\n \nC\n-Thông th ường, nếu muốn\nnày từ bảng\nọn. Nếu tùy chọn này đượ\nì \nclik phải có giá tr ị mờ đục Opacity t ừ 50\nêndưới sẽ được xét đến. \n cụ Move đang được chọn, thay vì ph ải chọn tuỳ \nthanh tuỳ chọn, bạ\nmột file ảnh, bạn kéo layer  nguồn muốn sao ché p \ner sao có cùng tính chất và được đặt trên layer \n Merge hoặc Flatten: \nđể hựp nhất hai layer n ằm kề nhau. \nerge Visible: Dùng để hợp nhất tất cảc các layer đang được thể hiện \nutượng c on mắt) và\nt \n- \ner \nh Merge Group: dùng để hợp nhất các layer trong m ột nhóm c\nClippi ng G roup). \nayer: \nn c thẻ khoá từng phần hoặc toàn bộ để bảo vên hì nh ảnh chứa trong nó, \ngừa các thay đổ\n hin bên cạnh tên của layer. Bi ểu tượng này sẽ bị tô đặc khi layer b ị khoá \noàn, hoặc biểu tượng rỗng khi bị khoá  1 phần. \nn toà n \nột hoặc nhiều tuỳ chọn khoá ở phần lock sẽ k\n 146\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 147,
    "text": "6.2.1.14   Mặt nạ và kênh:  \nNgi \nđộng c ặt nạ cũng tương tự như  một khuôn m ẫu. ảnh \nthô \ndưới p ẽ được bảo vệ và không b ị thay đổi. Bạn có \nthểo , hoặc lưu mặt nạ lại để sử \ndụnc\n \nLàm v\nCác m à bảo vệ các phần khác nha u trên file ảnh. Khi \nbạn\nkhông\nsau nà\nđổi mà o file ảnh. \nTro \nmặt nạ c độ xám  (grayscale channel - còn g ọi \nlà ah  \ninf\nspot (m  tạo bằng cách ph ối hợp các kênh m àu thà nh \nphầ\nChann Imageready không h ỗ trợ các kênh,  \nngo \nOptim ảng Optimize. \n \nạo mặt nạ tạm thời: oàcách sử dụng các layer, P hotoshop dùng m ặt nạ (mask) để cô lập và tác \nho từng vùng c ủa ảnh. M\nngqua phần bị cắt của mặt nạ có thể chỉnh sửa, thay đổi được Phần ảnh bê n \nhần không b ị cắt của mặt nạ s\n tạ một mặt nạ tạm thời cho một lần sử dụng\ng ho các lần sau. \niệc với mặt nạ (mask) và kênh (cha nnel) \nặt nạ cho phép cô l ập v\n tạo mặt nạ từ một vùng ch ọn, vùng không được chọn sẽ được bảo vệ và \n bị chỉnh sửa. Bạn có thể lưu lại các vùng ch ọn thành m ặt nạ để sứ dụng \ny. Mặt nạ còn được dùng cho các công vi ệc chỉnh sửa phức tạp, như thay \nu hoặc áp dụng các bộ lọc ch\nngPhotoshop,  bạn có thể sử dụng mặt nạ tạm thời (quic k mask) hoặc tạo \n và lưu nó vào m ột kênh với các sắ\nlpa channel). P hotoshop còn có các kê nh để tái tạo màu của file ảnh (C olor\normation channels - các kênh m àu thành ph ần) và c ác kênh riêng c ho màu \nàu riêng biệt, không th ể tái\nn). Không nh ư layer, các  kênh không th ể in ra được. Bạn sử dụng bảng \nels để xem  và làm  việc với các kênh. \nạitrừ kênh alpha dùng cho định dạng PN G trong su ốt và tùy ch ọn Weighted  \nization của b\nT\nB\n )  để chuyển biên vùng c họn thành mặt nạ ấm vào biểu tượng Qickmask( \ntạm thời.  \n \nHình 6. 30:  Quick Mask \nc khi  chuyển sang ch ế độ \nhỉnh sửa mặt nạ tạm thời  \nTrong chế độ Quic k Mask, m àu đỏ thể hiện vùng không được chọn, được bảo \nvệ bời mặt nạ. Bạn chỉ áp dụng được các chuy ển đổi cho vùng không được bảo \nvệ, đó là vùng nhìn th ấy rõ (vùng đã được chọn trướ\nQuick Mask) Và không b ị che bởi lớp màu đỏ (có thể chuyển màu cho phần \nche của mặt nạ, nhưng nên nh ớ nó chỉ là mà u dùng để phân biệt mà thôi, không \nphải màu áp d ụng cho ảnh). \n \nC\n 147\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 148,
    "text": "Điều thuận lợi của việc chỉnh sửa vùng ch ọn thông \ntạqua việc chỉnh sửa mặt nạ \nm thời là bạn có thể dùng gần như tất cả các công c ụ và bộ lọc cho việc chỉnh \nsửa (ngay c ả những công c ụ chọn).Trong ch ế độ Quick Mask, Phot oshop sẽ tự \nđộng chuyển sang c hế độ Grays cale (các c ấp độ xám ). Màu f oreground m ặc \nunmặc định là m àu trắng. Khi dùng công c ụ \ng ế độ Quic k Mas k, bạn cần ghi nhớ các \nà \nle ảnh có thể chứa tới 24 kênh, ba o gồm tất cả các kênh m àu và các kênh \nn mặt nạ và opacity ( độ mờ đục) cho mỗi \ntrong việc thể hiện mặt nạ của kênh alpha, \n alpha bằng \ncách sử dụng các công c ụ vẽ và công cụ chỉnh sửa. Đưa các vùng ch ọn vào  \nkêna\ncác file\nTrong b pha 1 và nh\nEg,  \nmắt) tấ àu và kênh alpha mặt nạ mới, ảnh sẽ trông nh ư đang ở \nchế độ QuickMask (vùng m ặt nạ sẽ thể hiện với màu đỏ). \n \nChỉnh sửa mặt nạ \nBây giờ, bạn sẽ tinh chỉnh lại vùng ch ọn bằng cách ch ỉnh a kênh m ặt nạ. \nNhững sai sót không t hải tinh chỉnh lại. Có \nh sửa trong chế độ Quic k Mask. \n \nh đếđịnh là màu đen và m àu bac kgrod \nvẽ hoặc công cụ chỉnh sửa tronch\nnguyên tắc sau : Tô vẽ bằng màu tr ắng sẽ xóa phần mặt nạ (phần che màu đỏ) \nvà làm  tăng thêm  vùng chọn. Tô vẽ bằng m àu đen sẽ tăng thêm  phần mặt nạ v\nlàm giảm vùng chọn . \n \nKênh alpha có các tính ch ất sau: \nMỗi fi\nalpha. Tất cả các kênh đều là ảnh 7/ 8- bit gra yscale (có th ể chứa tới 256 cấp độ \nxám). Có th ể định tê n, màu, tùy chọ\nkênh alpha. Opacity ch ỉ có tác dụng \nnó không c ó tác dụng với ảnh. Tất cả các kênh alpha đều có cùng kích th ước và \nđộ phân giải như ảnh gốc. Bạn có thể chỉnh sửa mặt nạ trong kê nh\nh lpha để có thể sử dụng lại các vùng ch ọn lâu dài cho file ảnh hoặc cho \n ảnh khác. \nảng C hannels, double-cl ick vào tê n kê nh Al ập tên mới \nretnhấn phím  Ente r để đổi tên. Nếu bạn cho thểhiện (có biểu tượng con \nt cả các kênh m\nsử\nránh khỏi khi tạo vùng ch ọn cần p\nthể chỉ thấy các lỗi khi bạn xem  kênh mặt nạ sau khi đã lưu vùng ch ọn. Có thể \ndùng các công c ụ vé và các công c ụ chỉnh sửa bình t hường để sửa kênh mặt nạ \nnhư khi bạn chỉn\n6.2.1.15 L àm việc với bảng History (chuy ển đổi ản n 1 trạng thái bất kỳ) \nHiển thị bảng History:  Window > Sh ow Hist ory \nTrong chương trình Photoshop, ch ế độ Undo ch ỉ thực hiện được 1 lần, để thay \nhỉ lưu giữ được tối đa là 20 bước được thực hiện trước đó. \nứ 21 thì bước đầu tiên sẽ tự động được xoá đi trong bộ thế cho nhược điểm này , bảng H istory chính là n ơi lưu các bước đã được thực \nhiện. Bảng History c\nNếu thực hiện bước th\nnhớ \n 148\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 149,
    "text": "Hình 6. 30: bảng Histor y \nKhi muốn lấy lại một bước nào đó đã thực hiện trước đó thi kích chu ột làm \nhiển thị hộp sáng ở trong bảng History. \n- Step Forw ard i xu: Lùống một bước mới thực hiện sau thời điểm hiện tại \nDelete: Xoá bước đang hiển thị \nột tệp tài liệu mới.  \n6.2.1.16 Căn ch- Step Back ward: Ti ến lên một bước vừa thực hiện trước thời điểm hiện tại \n- New Snapshot: t ạo ra một bản Copy của hình ảnh \n- \n- Clear History: Xoá t ất cả các bước thực hiện trước bước hiện thời. (Bước \nđang được hiển thị) \n- New Document: T ạo ra m\n \nỉnh màu cho ảnh: \nống kê (Histogram ) Xem \n đồ thị th\n \nHình 6.31: bảng Histogram \n \nÝghĩa của bảng Histogram   n\nông để áp \nn áy quét \ni, khi quan sát Histogram, b ục sử \ni để làm lại  - Khi nhì n Histogram , bạn có thể biết ảnh có đủ thông tin hay kh\ndụg những căn chỉnh có hiệu quả; nếu bạn có 1 ảnh gốc xấu hoặc 1 m\nồ ạn sẽ có cơ sở để quyết định có nê n tiếp t t\ndụng ảnh đó hay bỏ đ\n 149\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 150,
    "text": "- Histogra m cho biết bạn đã sửa chữa nhiều lần trê n 1 ảnh và đã làm mất các \ngiá trị của ảnh điểm  \n- Histogra m cho biết tình trạng của ảnh: \n - Khi các ảnh điểm tập trung ở vùng giữa của Histogra m: Ảnh chủ yếu \ncó tông màu xám   \n- Nếu các ảnh điểm tập trung ở phía bên phải: Ảnh thừa sáng  \n- Nếu các ảnh điểm tập trung ở phía bên trái: Ảnh thừa tối  \nCăn chỉnh tông giữa bằng cách sử dụng bảng Levels \n1. Mở hộp tho\n2.Chọn kênh hoặc những kênh c ần căn chỉnh  \n tc các thay đổi trên nàm hình. \n lệnh Cur ve  \n \nại Levels  \n \n3. Chọn Previ ew đẻ xemrướ\n4. Để điều chỉnh tông gi ữa, dùng con ch ạy màu xám  trên trục đồ thị thống \nkê. Rê con tr ỏ sang phải để làm tối vùng tông gi ữa, rê sang trái để làm \nsáng. bạn cũng xó t hể cho giá tr ị vào hộp tương ứng  \n \nSử dụng\n \nHình 6. 32: bảng Curve \n \nGiống như Levels, C urves cho phé p bạn căn chỉnh vùng tông c ủa 1 ảnh. Tuy \n trịđiểm sáng,  điểm tối và tông gi ữa) để điều \nhỉnh, bạn có thể tác động vào bất kỳ điểm nào trong kho ảnh từ 0 đến 255 nhiên thay vì sử dụng ba giá (\nc\ntrong khi gi ữ nguyên tối đa 15 giá tr ị khác không tha y đổi. \nBạn cũng có thể dùng công c ụ bút chì trong b ảng Curves để gán các giá tr ị áp \nđặt cho ảnh  \n \nử dụng hộp thoại Curves S\n- Trục nga ng thể hiện các giá tr ị gốc của ảnh (input levels) \n- Trục dọc thể hiện các giá tr ị mới điều chỉnh  \nCách sử dụng \nNhấn chuột và di con tr ỏ trên vùng ảnh cần chỉnh bạn sẽ thấy 1 vòng tròn xu ất \nhiên trên đồ thị - tại nơi biểu diễn các Pixel m à con trỏ đang di lên.  \n 150\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 151,
    "text": "Như vậy bạn sẽ xác đinh được vungdf ảnh cần chỉnh trên đồ thị. Nếu có phần \nảnh nà o bạn không mu ốn điều chỉnh hã y nháy chu ột trên đường đồ thị để khoá \nùng đó. \nốn làm  ảnh \nưởng gì đến vùng tối và vùng sáng. b ạn hãy nhá y chuột vào vung ¼ và ¾ c ủa \năn chỉnh cân bằng màu  v\nVD: nếu bạn muốn điều chỉnh vùng gi ữa của ảnh mà không mu\nh\nđồ thị để khoá vùng đó lại. \n- Đưa đường đồ thị lên trên s ẽ làm sáng ảnh, đưa đường đồ thị xuống dưới \nsẽ làm tối ảnh \n- Di các ch ấm mực ra k hỏi anh sẽ lamd mất các chấm đó  \n- nhấn Option và nhá y vào đường kẻ ô để có các ô vuông nh ỉ hơn trong đồ \nthị \n- Có thể dùng bút chì để vẽ 1 đường đồ thị hoàn toàn m ới, sau đó nhá p \nSmoth để nối các đường chấm chấm thành 1 đường liền nét. \n \nC\n \nHình 6. 33: bảng Levels \nỉnh câ n bằng màu d ựa trên nguyê n tắc phân bổ m \nCh àu trên bá nh xe m àu nghĩa \n muốn tăng 1 m àu nào đó ta chỉ cần giảm màu  đối lập của nó đi.Cách ch ỉnh \nnh chứ không ph ải chỉ chỉnh 1 vùng \nàu nào đó. Tuy nhiên b ạn cũng có thể chỉnh m àu cho 1 vùng ảnh nếu như bạn \n \nCách làm: \nst> Color \nđộ \n thì \n. \nu. Các giá tr ị sẽ tăng từ 0 dến +100 nếu về \nphía đỏ, xanh lục và xanh lơ. Từ 0 đến -100 nếu về phía  Mage nta, Cya n, \nvàng.  là\nnày dùng đẻ chỉnh m àu chung cho toàn ả\nm\nđã tạo 1 vùng c họn cho vùng hình ảnh đó. Cách ch ỉnh này rất hữu hiệu khi bạn \ncó 1 ảnh đã quét và o nhưng bị thiên về 1 m àu nào đó. VD: khi  ảnh thiên v ề \nmàu vàng, công v ụ chỉnh m àu sẽ giúp bạ lại bỏ bớt màu vàng  m à không làm\nảnh hưởng đến các màu khác c ủa ảnh. \n1. Chọn ảnh hoặc vùng ảnh cần chỉnh màu. M ở Image>Adju\nbalance \n2. Chọn Shadows, Mi dtone hoặc Highlights, thông t hường bạn nên bắt đầu \nbằng Mi dtones (vùng sáng trung bì nh) nếu bạn chỉnh toàn b ộ ảnh vì \nMidtones đã bao trùm  tới 90% diện tích ảnh  \n3. Đánh dấu vào ô Preserve Lum inoisity để bạn không làm thay đổi \nsáng của ảnh khi bạn tăng m àu. nếu không c ần giữ nguyê n độ sáng\nkhông cần đánh dấu vào ô này\n4. Di con c huột để điều khiển mà\n 151\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 152,
    "text": "5. Chỉnh Sha dow và Highli ght, sau đó lặp lại ác dộng tá c cho tới khi bạn \nđã hài lòng.  \n6. Nhấp OK \nỉnh từng m àu riêng bi ệt  \n xa lơ – xanh lục; bên phải: cam  – vàng – xanh l ục. \nation; Bên ph ải đi từ 0 đến 100 (ch ỉ còn m àu tinh khi ết, không \nđộ bão hoà: \nphải để đạt được màu mong m uốn. Con \nsố trong hộp thể hiện sự thay đổi độ quay xung qua nh bánh xe m àu kể từ \nu ảnh gốc  \n4. Di con tr ượt Saturation sang trái để giảm độ bão hoà  và sang ph ải để \ntăng độ bão hoà   \nDùng lệnh Hue / Saturation \n- Master: Di ều chỉnh toàn bộ màu trong ảnh  \n- Các ô m àu: Điều ch\n- Trục HUE:  Di c huyển màu the o bánh xe m àu , nếu chọn Master- b ạn có \nthể di chuyển theo mọi hướng xuất phát từ màu  đỏ (nằm giữa trục), bên \ntrái Hồng –nh\n- Trục Satur\ncó m àu xám). Bên trái đi từ 0 đến 100% (H oàn toà n không có m àu) \n- Trục Lighness: Đi từ 100 dến 0 (ở giữa) đến + 100 bê n phải \n- Hộp Sam ple: The o mặc định hộp này hiển thị màu Force Ground.  Nhá y \nvào bất cứ màu nào trong ảnh sẽ làm thay đổi màu của ô này \n \nCách điều chỉnh sắc \n1. Mở Image> Adjust > Hue and Saturation \n2. Chọn Master để điều chỉnh tất cả các màu ho ặc nháy và o ô m àu cần điều \nchỉnh  \n3. Di con trượt Hue sang trái h ặc \nmàu đang chọn của mà\n5. Di con trượt Light ness để tăng hoặc giảm độ sáng của ảnh. \n6. Nháy OK. \n \nLàm nét ảnh : \n \nHình 6. 34: bảng UnSharpMask \n \n 152\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 153,
    "text": "Trước khi chuy ển ảnh sang in ha y đưa lên m ang Internet, ng ười ta thường là m \ntăng độ nét bằng cách áp d ụng bộ lọc Sharpen> UnSharpMask. \n- Amount ( Mức độ áp dụng): Dối với những ảnh có đọ phân giải cao từ \n150% đến 200% \n- Radius: bá n kính  \ngưỡng): Đối với những ảnh có phần da người, nên áp d ụng \nThreshol d từ 2 đến 20.  - Threshol d (n\n \nDùng các l ệnh chỉnh m àu và tông m àu đa năng : \n \n \nHình 6. 35: bảng Color Balance \nng Variation \nch rõ ràng nhất để chỉnh màu và tông màu là so sánh gi ữa ảnh đã sửa và ảnh \n . Công cụ dể sửa ảnh trong photoshop la  Variation. Công c ụ này bao gồm \nghtness/ \nDù\nCá\ngốc\nBri Contract (Sửađộ sáng tối và tương phản); Col or Balance (Cân b ằng \nmàu), Hue/ Saturation (S ắc độ/ tương phản), bạn chỉ cần nháy và o 1 ảnh mẫu \nbất kỳ đẻ thay đổi màu hoặc thay đổi các đặc tính của ảnh gốc. \nBạn có thể di chon ch ạy sang trái (Fine) ha y sang ph ải (Coarse), đẻ xác định \nhiệu quả của mỗi lần thay đổi lên ảnh gốc. \nDi chuyển con c hạy sang trái ha y sang ph ải 1 nấc sẽ làm thay đổi gấp 2 lần độ \ntác động lên ảnh gốc . \nNếu chọn chế đọ Fine thì s ự thay đổi không đáng kể, nhưng nếu chọn chế độ \nCoarse thì s ự thay đổi sẽ rất lớn. Chế độ Coarse ch ỉ dùng khi c ần có những hiệu \nứng đặc biệt và bạn muốn chuyển ảnh thành 1 màu. Ch ế độ con chạy nằm ở \ngiữa là chđộ thường dùng nh ất. \n \nùng Brightness and Coế \nntract: D\n \n \nHình 6. 36: bảng Bri ghtness/ Cont ract \n \n 153\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 154,
    "text": "Điều chỉnh đồng thời ba vùng t ối, sáng, trung bì nh của ảnh. Các h chỉnh nà y it \nchính xác nh ưng nhanh và d ễ.  \n- Đánh dấu vào ô Pre view để nhìn tháy nga y lập tức sự thay đổi của ảnh \n- Di chon ch ạy sang trái ho ặc sang ph ải để tăng độ sáng hoặc độ bão hoà.  \nDi con c hạy sang trái để giảm độ sáng hoặc độ bão hoà. \n \n11. Xuất ảnh cho We b: \nhi xuất một hình ảnh cho We K b ta thường dùng nh ững định dạng sa u: Gif ; \nrị Quality \ntrong bảng JPEG property (C hất lượng của ảnh càng cao thi t ương đương \nvới dung lượng càng lớn) JPEG; và PNG \nCó 2 cách để xuất ảnh cho we b: \nFile > Save as - ch ọn định dạng C ompuser ve GIF  \nĐối với những ảnh có nhi ều mầu và yêu c ầu chất lượng hình ảnh và mầu sắc \ncao, khi xu ất ảnh cho Web nên xu ất ở định dạng JPEG \nFile > Save as - ch ọn định dạng JPEG  - Đặt giá trị vào ô giá t - \nFile > Save for Web \n \n \nHình 6. 37: bảng Save for web \n \n \n \n 154\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 155,
    "text": "Bài tập Ph otosh op \n \nThực hành: Chỉnh sửa ảnh và xuất ảnh cho w eb: \n \n1- File/ Open ho ặc (Ctrl+O) để mở một file ảnh cần chỉnh sửa.  \n \n \n \n \nTrong ảnh trên bạn thấy có quá nhi ều thuyền và bạn muốn xoá bớt , chỉ để lại \nmột số thuyền ở gần bờ. \n \n2- Chọn công cụ Clone Stamp (S) trên thanh công c ụ. Chọn kiểu bút mềm cỡ \n24. Di con tr ỏ chuột vào khung hình, con tr ỏ chuột sẽ chuyển thành m ột vòng \ntròn có đường kính tương ứng với cỡ bút m à bạn chọn. Giữ Ctrl+ bấm ch uột tại \niểm gần với diểm mà bạn cần xoá để copy.  Thả Ctrl và b ấm tại điểm mà bạn đ\nmuốn xoá. \n \n \n \nLặp lại nhiều lần động tác trên, ch úng ta sẽ được kết quả như trên. \n \n3 – Trên thanh công c ụ chọn công cụ Text Tool. Nh ập đoạn chữ, thay đổi màu \nchữ, kích thước, kiểu chữ …. Cho đến khi bạn cảm thấy ưng ý. La yer chữ sẽ tự \nộng tạo một lớp mới trong của sổ layer được ký hi đ\ncệu bởi chữ T ở phía bê n trái \nủa tên lớp. \n 155\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 156,
    "text": "Dù \n \n4- Tạo\nLayer,\ndụng hi\n ngcông cụ Move để di chuyển layer ch ữ đến vị trí bạn mong m uốn. \n hiệu ứng cho ch ữ bằng các h bấm vào biểu tượnghình ch ữ F trong c ửa sổ \n chọn các hiệu ứng cần thiết , xác lập các giá tr ị cho nó rồi bấm OK để áp \nệu ứng. \n \n \n - Mở một p dụng các \nông cụ chọn để chọn hình ảnh mà bạn muốn đưa vào. Gi ữ Ctrl và kéo vùng  \nhọn sang cửa sổ đang làm  việc. Tạo hiệu ứng Outer Glow cho hình ảnh mới. \nếu hình ảnh mới có kích th ước không phù h ợp với khuôn hình thì b ạn có thể \n ( Ctrl+T) rồi bấm Enter. 5 hình ảnh bất kỳ mà bạn muốn ghép vào b ức ảnh này. Á\nc\nc\nN\nđiều chỉnh bằng lênh Free Transform  \n \n 156\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 157,
    "text": "màu sắc ưng ý.  \n6 - Bạn có thể điều chỉnh tông m àu của màu  ảnh nền cho phù hợp với ảnh mới \nbằng cách ch ọn layer background. Ch ọn Images/Adjustment/Hue/Statution ( \nCtrl+U). Điều chỉnh các thanh tr ượt màu cho đến khi được\n \n \n \n7 - Tạo một lớp mới, tạo một vùng ch ọn hình c hữ nhật bao quanh khung hình. \nChọn menu Edit/ Stroke để mở cửa sổ Stroke. Ch ọn độ rộng của nét, vị trí \nđường bao,  màu sắc đường bao … \n \n 157\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 158,
    "text": "Kếtu qả cuối cùng rất khác so v ới bức ảnh ba n đầu. \n \n \n \n8 - Để xuất ảnh cho web, b ạn chọn menu File/Save for Web (Ctrl+ Shift+ \nAlt+S). Ch ọn kiểu định dạng là ảnh Jpeg, Quality là 60%. B ạn có thể nhìn được \ndung lượng ảnh ở ph  bấm OK và đặt tên \nho ảnh. ía dưới cửa sổ Optimized. N ếu được thì\nc\n \n 158\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 159,
    "text": "159\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 160,
    "text": "6.2.2- Sử  dụng  c orel draw áp d ụng cho thiết kế logo cho web \n \n6.2.2.1-Cơ sở về Corel Draw  \nCo \nsử dụn iệt Nam. Nó là ph ần mềm đầy uy lực và lại rất dễ sử \ndụnv\n \n6.2.2.2- L àm việc với Corel Draw:relDraw 10.0 là chương trình v ẽ minh hoạ thuộc hàng đầu thế giới và được \ng nhiều nhất ở V\ng à phạm vi ứng dụng không h ạn chế.  \n \n \nBắt đầu với CorelDraw: \nMenu File: \n \nHìn\n \n- Lệnh Open: dùng để mở một file tài li ệu đang c ó. \nấn nút Open. N ếu bạn muốn mở \ncác file từ các trình ứng dụng khác, nhi ều file đã \nđược liệt kê trong m enu xổ xuống File Of Type. \nĐôi khi lệnh O pen về mặt căn bản là một hoạt \n Inport, một số file có th ể không được mở \ndưới dạng tài liệu, máy sẽ thông báo các l ỗi sau. \nạn đang thử mở chỉ có thể được nhập mà thôi, nó sẽ h 6.38: Menu File \n- Lệnh New: dùng để tạo một file mới.  \n- New from Template: dùng để mở các bảng mẫu \ncó sẵn, bạn không th ể viết chồng lên nh ư là các \nfile tài liệu khác.  \nBạn có thể mở nhiều file tài li ệu trong h ộp thoại \nbằng cách nh ấn giữ Shift trong khi b ạn nhấp lên \ncác tên file r ồi nh\nđọng\no Nếu file mà b\nhiển thị thông báo: \n \n \nHình 6. 39: Hộp cảnh báo lỗi file \n \nKhi bạn mở các file c ũ hoặc các file được tạo trên một hệ thống khác, \nbạn sẽ thấy những cảnh bá o về tính tương thích phiên b ản. \n- Lệnh Cl ose: Dùng đóng các file tài li ệu \n đổi của đối tượng đã được \nthực hiện trước đó. Lệnh nà y chỉ được thực hiện khi đối tượng nhái  \nđược chọn. - Lệnh Save: dùng để lưu tài liệu lần đầu tiên. Hộp thoại Save sẽ xuất \nhiện. \n- Lệnh Save As: l ưu các bản sao mới của một tài liệu mà bạn vừa mở và \nvừa chỉnh sửa. \n- Lệnh Revert: Dùng để đảo ngược những tha y\n 160\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 161,
    "text": "- Lệnh Aquire Ima  để bạn sử dụng máy \nScanner để quét hì nh ảnh vào Cor el để xử lý. \nể chuyển tập tin thiết kế đang hiện hành sa ng một \n- \n \n- \nn Pri nt Merge Winzard để thực hiện tác vụ \nnày, ví dụ bạn cần in thiếp mời với cùng một nội dung nh ưng với tên \nngười nhận khác nhau. \nHiện khung m àn hình quan sát đối tượng trước khi \nin. Tr ong khung m àn hình này, b ạn có thể phóng to, thu nh ỏ đối tượng \nệnh Prepare for Serv ice Bureau: Dùng để chuyển bản vẽ thành tập tin. \n- \n- in thiết kế \n- \n \n \nGiới thảng công cụ: ge: Chứa thà nh phần tiện ích\n- Lệnh Import: Dùng để nhập tài liệu đối tượng từ một chương trình, th ư \nmục khác vào trang thi ết kế để xử lý. \n- Lệnh Export: dùng đ\nchương trình khác. \nLệnh Send To: Dùng để chuyển đối tượng hiện hành sang thà nh phần \ntuỳ chọn từ Menu xổ xuống\n- Lệnh Print: Dùng để in các tài li ệu của bạn \nLệnh Print Merge: Dùng để in kết hợp giữa các ký t ự với các hình ảnh. \nBạn có thể dùng thành ph ầ\n- Lệnh Print Preview: \nđể quan sát, thay đổi hướng in đối tượng, nhưng không t hay đổi nội \ndung chi ti ết của đối tượng. \n- Lệnh Print Setup: Hi ện khung tham s ố Print  Setup để chọn thiết bị máy \nin để in tập tin văn bản hiện hành \n- L\n- Lệnh Puplic To The Web dùng để chuyển tập tin thiết kế sang hệ thông \nmạng theo m enu xổ xuống \nPublish t o PDF: Dùng để tối ưu hoá độ phân giải hinhd ảnh và s au đó \ntruyền lên mạng Intra net hoặc Web. \nDocument Info: Dùng li ệt kê những thông tin chi ti ết về tập t\nhiện hành. \nExit: Thoát kh ỏi CorelDraw \niệu b\n \nCông cụ chọn:  ( Pick tool)    \n  \nKhi muốn thay đổi một đối tượng nào đó thi trước tiên cần phải chọn đối tượng \nó. Có hai cách ch ọn: chọn toà n bộ và ch ọn từng phần : \nng \nẽ\nhông được chọn. đ\nChọn từng phần: Dùng công c ụ chọn, kíc h chuột vào đối tượng cần chọn để \nchọn đối tượng. \nChọn toà n bộ: Dùng công c ụ chọn, giữ và kéo chu ột tạo thà nh một đường bao  \nquanh các đối tượng cần chọn. Lúc nà y bạn sẽ thấy xuất hiện các hình vuông \nmàu đen xung quanh hình bao các đối tượng chọn. \nBỏ chọn đối tượng: Nếu đối tượng đã chọn rồi mà bạn muốn bỏ đối tượ\nchọn, bạn chỉ cần giữ Shift và b ấm lên  nó một lần nữa thì đối tượng đó s \nk\n 161\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 162,
    "text": "Công cụ biên soạn các đường vecter: ( Shape tool )  \n \n \n \nCông cụ biên tập đường vector:   \nBạn bấm lên nút c ần chọn. Nếu bạn muốn chọn nhiều nút thì gi ữ Shift trong khi \nbấm và kéo chuột để chọn bằng vùng ch ọn. Để bỏ chọn, bạn giữ Shift và b ấm \nn nút. Bạn có thể dùng phím  Hom e để chọn nút đầu tiên, bấm phím tab để \nuốn di chuy ển nút bạn kéo nút đã chọn tới vị trí mới , nếu muốn di c huyển \n Ctrl. \n- Bạn bấm dấu + bên vùng s ố hay bấm lên nút  lê\nchuyển tới nút khác trong đối tượng. Bấm phím  End để chuyển tới nút cuối \nùng. c\nM\nthẳng thì trong lúc kéo b ạn giữ\nThêm nút: Trong khi t ạo đường cong nhiều khi bạn muốn tăng thêm s ố nút để \nđiều chỉnh đường cong theo đúng ý. Bạn sẽ làm theo các b ước sau: \n- Bạn bấm lên  vị trí muốn thêm nút, lúc này b ạn sẽ thấy dấu chấm trò n \nmàu đen.  \n để tạo nút mới tại vị \ntrí chấm tròn nà y. \n \nHình 6. 40: Biên t ập đường vector  \nút: Bạn chọn một nút, sau đó b Huỷ n ấm lên nút  \n  hoặc bấm phím Del, máy  \nsẽ hỷ\nTách ru bỏ nút này. \nời 1 nút t hành 2 nút c on: bạn bấm lên nút  \n  để tách nó thà nh hai nút \nồng lên  nhau, lúc này đường cong được tách thành hai đường nhưng vẫn \nđối tượng. con c h\nlà một \nNố\nbạn chi hai nút thành m ột: Bạn đánh dấu hai nút  muốn nối ở đầu của đường cong, \nọn \n   để nối. \nCoã gin nút: bạn hãy c họn nút cần co giãn ( ít nh ất là hai nút), b ạn bấm lên nút  \n . u đen ở góc để thực hiện co ha y giãn nút. Kéo nút mà\n 162\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 163,
    "text": "Xoa nyút: Bạn chọn nút cần xoay ( ít nh ất là 2 nút), b ạn bấm lên nút    kéo \nnút màu đen tại các góc để thực hiện xoay góc. \nn dịch chuyển, chọn  \n Tạo chế độ đàn hồi: Đánh dấu nút  cầ   Trên thanh đặc \ntính. thực hiện di chuyển. \nCông cụ dao cắt:  \n  \nDùng công c ụ cắt để cắt bất kỳ đường nà o thành hai đường con mà không cần \nphải cắt tại nút . Thông th ường đường con cắt sẽ tự động khép kí n. Nếu bạn \nkhông mu ốn chúng t ự khép kín thì b ạn chọn Tool – Option – Wor kspace  – \nToolbox – Knife Tool và bỏ chọn tại ô Automatically close object. Còn n ếu \nhọn Lea ve as one object thì hai m iếng cắt sẽ trở thành hai đối tượng riêng l ẻ. \nCông cụ tẩy :  c\n \nDùng để xoá các thành p anh, vết xoá sẽ tự động \nành một đường cong khé p kín để không làm m ất màu của hình. Bạn chọn \nn kích cỡ nét xoá trên thanh đặc tính. Kéo chu ột trên thành \nng. Co giãn tự do hần dư thừa trong một bức tr\nth\ncông cụ tẩy, chọ\nphần mà bạn muốn xoá . \n \nCông cụ biến dạng tự do: \nKhi c ông cụ Free transform đang được chọn, thanh t huộc tính sẽ thể hiện 4 kiểu \nbiến dạng cơ bản: quay tự do, đối xứng tự do theo goác nghiê\nvà xô nghiêng t ự do. \n \n \nHình 6. 41: Tha nh thuộc tính công c ụ biến dạng tự do \n  \nĐể biến dạng 1 tr ong 4 kiểu, bạn chọn 1 kiểu trên thanh thu ộc tính và b ấm- kéo \nđối tượng đang c họn trên trang v ẽ. \n \nông cụ phóng to C thu nhỏ và kéo trượt vật thể: (Zoom  và Pan) \n \n \n \n- Phóng to t hu nhỏ:     \n- Zoom in: phóng to trang v ẽ gấp hai. \n 163\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 164,
    "text": "- Zoom  out: thu nh ỏ trang vẽ bằng một nửa \n- Zoom  to selected: dùng ch ọn đối tượng, máy s ẽ phóng to đối tượng được \nchọn ra toà n màn hình. \n- Zoom to all opjects: Phóng to t ất cả đối tượng trong trang v ẽ ra toàn màn \nhình \n- Zoom  to pa ge widt h: Phóng to bề rộng trang v ẽ ra toàn màn hình \ním mũi tên để \nhuyển tới nơi mình cần, màn hình sẽ cuộn theo hướng mình ch ọn. Hoặc bạn \nhọn công cụ có hình bàn ta y, ké o chuột trên bản vẽ để quay tới phần mà bạn - Zoom  to pa ge height: Phóng t o chiều cao trang v ẽ ra toàn màn hình. \n \n- Kéo trượt vật thể:  \nBạn có thể kéo tha nh cuộn màn hình để xem các đối tượng bị khuất này, nhưng \nlàm như vậy rất chậm. Bạn có thể bấm  Alt và dùng các ph\nc\nc\ncần. \n \n \nCông cụ tạo nét vẽ:  \n \n \n- \nBút vẽ tự do ( Freehand)  \nn cọn công cụ freehand ho ặc bấm phím F5  ( Trước đó bạn phải bấm ch uột \nn vẽ), bạn chuyển con trỏ tới điểm cần vẽ. Kéo chu ột để tạo hình nét v ẽ \nNếu bạn bấm vào 1 điểm, sau  đó bấm vào diểm khác, b ạn sẽ vẽ được \nhẳng giữa hai điểm đó. Giữ Shift trong khi kéo lùi l ại sẽ xoá nét v ẽ bạn Bạh\nvào bả\ntự do. \nđoạn t\nvừa vẽ\n- Vẽ. \n đường Bezier \n  \ncông cụ Bezier, Chọn dịch chuyển chuột tới điểm cần vẽ, kéo chuột để tạo \no một trong hai điểm mú t của đường chuẩn để uốn cong đường chuẩn. Ké\nđường m uốn vẽ sẽ xuất hiện đường chuẩn thứ hai. Ké o một trong hai điểm nú t \nở đầu đường chuẩn thứ hai để uốn cong đương m uốn vẽ. Tương tự làm tiếp nếu \nbạn muốn uốn cong theo nhiều đoạn. \n- Công cụ tạo nét vẽ mỹ thuật   \n \nKhi bạn chọn công cụ này, nó s ẽ cho phép b ạn tô các nét c ọ lên các đường mới \nđặc biệt riêng khi  được chọn. hay hiện có bằng cách s ử dụng các đối tượng bị biến dạng làm  công cụ vẽ. Bạn \nxịt nhiều đối tượng lên trên các đường mới hay hiện có t rong một hiệu ứng kiểu \nlặp lại. Vẽ hoặc áp dụng các kiểu bút vẽ.  \nThanh Property Bar s ẽ cung cấp nhanh tr ạng thái đường vẽ khác nhau để chọn, \nmỗi thanh trạng thái sẽ có các tu ỳ chọn \n- Công cụ vẽ đường ziczac   \n \n 164\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 165,
    "text": "Công \nvẽ, kéo  hình nét vẽ theo đương ziczac. Kéo m ột trong hai điểm nút \nở hai đ\n- cụ này cho phé p bạn vẽ đường ziczac. B ạn chuyển con trỏ tới điểm cần \n chuột để tạo\nầu để được các đường kế tiếp. \nCông cụ ghi kích th ước   \nụ này rất có ích cho các k ỹ sư, kiến trúc sư để vẽ những bản vẽ kỹ thuật  \nCông c\nhoặs\nnày t hc ơ đồ mạch điện tử, thường đòi hỏi độ chính xác cao. Khi ch ọn công cụ \nanh t huộc tính sẽ thể hiện 6 trạng thá i khác nhau. Bạn có t hể xác định \nkiểu, độ chính xác, đơn vị đo và cách th ể hiện nhãn văn bản. Sau khi t ạo xong \nmột bộ đường đo kích thu ớc, bạn có t hể bấm chọn riêng nhãn v ăn bản để thay  \nđổi vị trí, thuộc tính (nh ư font, kích c ỡ) bằng các tu ỳ chọn trên thanh thu ộc \ntính.   \n \nCông cụ vẽ hình chữ nhật: ( Rectangle tool –F6 )  \n  \n \nVẽ hìn\ncon trỏ\ntạon\nvề toạ \nứng vớ\ntự n\ncó thể\ntuỳ ch\nhoặc tr\niữ Ctrl trong l úc kéo sẽ tạo thành hì nh vuông. Gi ữ Shift trong khi  kéo sẽ lấy  \nủa hình chữ nhật ( vẽ từ tâm ra ngoài). B ạn h chữ nhật là một trong nh ững thao tác đơn giản nhất. Bạn chọn công cụ, \n sẽ biến thành hình ch ữ thập, bê n cạnh có hình ch ữ nhật nhỏ. Khi kéo \n hìh chữ nhật, thanh tr ạng thái và thanh thu ộc tính sẽ thể hiện các thông s ố \nđộ, chiều rộng, chiều cao, mô t ả chi tiết về hình t hể của đối tượng tương \ni vị trí con tr ỏ. Mỗi khi một hình chữ nhật mới được tạo, CorelDraw s ẽ \nđộg gán các thuộc tính mặc định về đường biê n và m àu tô. Nếu muốn bạn \n định lại các thuộc tính này trên thanh thu ộc tính hoặc phải sử dụng các \nọn trong cửa sổ Object pr operties ( Window/ Dockers/ Object properties ) \nong hộp thoại Outline Pen (F12). \n \nG\nđiểm ta bắt đầu kéo là m tâm điểm c\ncũng có thể nhấn giữ Ctrl + S hift trong khi vẽ các đối tượng mới để giữ hình  \ndạnh của chúng k ể từ gốc tâm đồng thời có chiều rộng và chiều cao bằng nhau. \nĐộ bo tr òn góc ( t ừ 0 đến 100%) có th ể được xác lập bằng nhiều các h: \n- Chọn hình chữ nhật sau đó điền giá trị Corners Together \n   trên thanh đặc \ntính. \n- Chọn công cụ Biên tập, sau đó kéo bất kỳ điểm nào trong 4 đỉnh của hìn h \ntheo cạnh hình ch ữ nhật để thực hiện mài tròn. \n- Bạn có t hể bấm phải chuột trên đối tượng, c họn Properties r ồi thực hiện mài \ngóc, sau đó chọ u chọn Apply All \nthì việc chọn lựa này sẽ thành mặc định cho nó. n Apll y để việc lưah chọn có hiệu quả. Nế\n \nCông cụ vẽ hình elip: ( Ellipse tool –F7)  \n  \n \nTư h elip cũng rất đơn giản. Nhưng hi nh el ip \nlinh ho  thể thành những hình nêm  tròn hoặc hình \nvònc uộc tính đặc biệt của đối tượng hình elip. ơng tự như hình chữ nhật, vẽ hìn\nạt hơn hình c hữ nhật, chúng có\ng ung mà vấn giữ nguyên các th\n 165\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 166,
    "text": "- sang góc bánh, sau đó bạn bấm vào nút  Bạn chọn hình Elip m uốn chuyển \nPie   trên thanh đặc tính. \n- Nếu bạn muốn chuyển sang ph ần bánh nh ỏ, bạn bấm vào nút  \n    \n- Bạn có thể thay đổi góc bắt đầu, góc kết thúc bằng cách điền giá trị  starting \n- \nro\n- \n \nCô c& Endi ng Angles ho ặc có thể sử dụng công c ụ Shape. \nBạn cũng có thể thưc hiện việc tạo bánh bằng cách b ấm phải chuột, chọn \nperties rồi chọn Pie. P\nTương tụ như vậy khi bạn muốn chuyển hinh elip sang hì nh vòng cung. \nngụ vẽ hình đa giác: ( Polygon) \n \n \n \nVẽ hình đa giác cũng tương tự như vẽ hình chữ nhật hoặc Elip. Nhưng công c ụ \nđặc biệ  đáng ngạc nhiê n. Bạn có thể thay \nđổi o, hoặc ấn định các thông s ố \nnày trư\nCó thể ng cách ch ọn hình đa giác, sau đó \nbấmt này sẽ tạo  ta nhiều hình thể hấp dẫn\n sốlượng đỉnh và cạnh của đa giác bất cứ lúc nà\nớc khi vẽ đa giác. \n chuyển hình đa giác sang hình sao b ă\n vào nút Polygon/s tar \n  trên thanh đặc tính ( nếu muốn chuyển ngược lại \nthì mbấ vào nút  \n  . \nình xoắn ốc:  - H\nông cụ này giúp b ạn nhanh chóng t ạo ra đường xoắn ốc . Chọn vòng xoáy  C\ntrong phần Spiral Revol ution  \n  trên thanh đặc tính, ki ểu xoá y đều \nhọn số logarit trong ph ần  hay xoáy logarit ( K hoảng cách gi ữa các vòng t ăng dần the o số vòng). B ạn có \nthể c\n . \nTạo mẫu giấy tô: \nột , số dòng mu ốn kẻ trong phần hộp thoại trên thanh \nông cụ tạo các hình Shape: - \nChọn công cụ, chọn số c\nthuộc tính. Bạn chuyển chuột đến điểm cần vẽ, kéo chuột để tạo hình mẫu kẻ ô, \nkhi vẽ xong trên thanh đặc tính thể hiện chiều dài và r ộng của hình mẫu giấy kẻ \nô đang tạo và toạ độ điểm đầu của nó. \n \nC\n \n \nNhóm  công cụ Shape bao gồm các công c ụ Báic Shape s ( để tạo các hình th ể \ncơ bản), Arow Shapes( t ạo các hình m ũi tên), Flowchart Shapes ( T ạo các đối \ntượng dùng trong l ưu đồ), Star Shapé ( T ạo hình ngôi  sao) và  Callout Shapes ( \ntạo các hình bao cho l ời thoại). Bạn chọn một công cụ shape b ằng cách \ngiữchuọt tại biểu tượng của công cụ shapes để mở menu flyout và  chọn một \n 166\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 167,
    "text": "công cụ trong nhóm . Khi một công cụ trong nhóm được chọn, bạn có thể chọn \nhình thể muốn tạo trên thanh thu ộc tính trước khi tạo đối tượng trên trang v ẽ. \n \n \nHình 6. 41: Bảng mẫu công cụ perfect shape \n \nạn có thể bấm và ké o tuỳ ý vì đối tượng sẽ có hướng cố định. Đối với loại \nCau\nperfec để điều chỉnh hì nh \ndạng đ\nđường  thay đổi theo cách bình th ường. Bạn cũng có thể \nchỉ\nObject Properties, ch ọn tab Perfect Shape và b ạn có thể kéo các thanh tr ượt để \niều chỉnh hình d ạng của đối tượng. \n \nCó hai aragraph Te xt. \n- V\nđó có \nArtisti i đoạn văn bản trên 1 dòng . V ăn bản dạng này có th ể \nhuyển thành d ạng đường Bezier thông th ường để điều chỉnh lại hình ảnh B\nllot, hướng kéo của bạn sẽ xác định hướng của đối tượng. Một đối tượng \nt shape có thể có một hoặc nhiều điểm điều khiển \nối tượng. Các thu ộc tính cơ bản khác của đối tượng perfect shape nh ư \n biên hay màu tô có thể\nnh sửa bằng cách b ấm nút c huột phải và chọn mục Properties để mở của sổ \nd\n \nCông cụ tạo Text: \n kiểu văn bản: văn bản Artistic Text và v ăn bản P\năn bản Artistic Text: Th ường dùng cho các v ăn bản ngắn trong bản vẽ, sau \nthể áp dụng các bi ến đổi làm biến dạng các văn bản loại này . Văn bản \nc thể hiện mỗ\nc\nthông qua các nút trên đường path. V ăn bản Artistic Text có th ể uốn theo một \npath hoặc đường biên của hình dạng bất kỳ. \n \n \nHình 6. 42: Văn bản Artistic Text \n \n- Văn bản Paragrapt Te xt: Văn bản paragra pt text gần giống văn bản trong \n 167\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 168,
    "text": "các chương trình s oạn thảo, dà n trang nh ư Ms,Wor d…Văn bản được lưu \ngiữ trong fr ame, văn bản sẽ tự động tràn xu ống dòng d ưới  nếu nó lớn hơn \nchiều rộng của frame. Định lại kích thước hoặc xô nghiêng frame s ẽ chỉ làm \nbiến dạng frame, không ảnh hưởng tới văn bản chứa bên trong. Sau khi  làm \nbiến dạng frame, v ăn bản bên trong s ẽ tự sắp xếp the o hình dạng mới của \nframe. \n- \n  \nHình 6. 43: Văn bản Paragraph Te xt \nể tạo văn bản Paragr aph Te xt, bạn kéo con tr ỏ của công cụ Text t rên trang v ẽ \nhứa văn bản. Văn bản được nhập vào sẽ được căn hàng bên trong \nt việc có thể làm sau khi ch ọn các ký t ự bằng công cụ Shape là bạn có thể di \nển các ký t ự đã chọn tới các vị trí khác b ầng cách ch ọn và kéo m ột hoặc \n chóng điều chỉnh khoảng cách gi ữa các ký t ự và giữa các từ \nằng cách dùng công c ụ Shape kéo handle điều chỉnh ở phía dưới bên phải khối \nvăn bản. Kéo sang bên ph ải sẽ làm tăng khoảng cách và ké o sang bên trái s ẽ \nlàm giảm khoảng cách. N ếu kéo bình thường sẽ làm th ay đổi cả khoảng cách \nữa các ký t ự và khoảng cách gi a các từ, nếu Shift- kéo sẽ chỉ làm thay đổi \nêng khoảng cách gi ữa các từ.  \n  \nĐ\nđể tạo frame c\nframe. \n \nĐịnh lại vị trí các ký t ự \nMộ\nchuy\nnhiều node  điều khiển ký tự. Điều này sẽ làm di chuy ển vị trí tương qua n giữa \nchúng và các ký t ự khác trong kh ối văn bản.  \nBạn có thể tăng hoặc giảm kh oảng cách dòng c ủa một khối văn bản Artistic \nText bằng cách kéo handle điều khiển khoảng cách dòng lên ho ặc xuống.  \nBạn có thể nhanh\nb\ngi\nriữ\n \nĐiều Chỉnh thuộc tính m àu tô và đường biên cho v ăn bản \nBạn có thể điều chỉnh thuộc tính màu tô (fill) và thu ộc tính đuờng biên  \n(outline-chi ều dày, kiểu nét và m àu nét) cho v ăn bản như bất cứ đối tượng bình \nthường khác. Để áp dụng cho toàn bộ khối văn bản, bạn chọn nó bằng công cụ \nPick. Để áp dụng cho một vài ký tự, bạn có t hể chọn chúng b ằng công c ụ Text \nhoặc Shape. Tuy nhiê n, việc áp dụng cho riêng t ừng ký tự sẽ phức tạp hơn và \nviệc điều chỉnh vị trí cho các ki ểu tô màu đặc biệt sẽ khó hơn. \n \n \n 168\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 169,
    "text": "Công cụ tạo hiệu ứng “Effect” \n \n \nCông cụ tạo hiệu ứng blend: \n  \niệu ứng blend t ạo ra một lo H\nđạt các đối tượng trung gian có liên k ết động với \nối tượng ban đầu và các thuộc tính của các đối tượng trung gian có tính c hất \nchuyển tiếp dựa theo hai ho ặc nhiều đối tượng ban đầu. Khi hai đối tượng được \náp dụng hiệu ứng ble nd thông th ờng, các đối tượng chuyển tiếp trung gian s ẽ \nay đổi về hình thể, màu tô, nét v ẽ, kích thước và vị trí, được tính toán t ừ hai \n một đối tượng khác, hi ệu ứng blend c ũng có thể được chia thành  \nột số hiệu ứng Blend con ho ặc huỷ bỏ hiệu ứng. \nHu ứng Blend ch ỉ được tạo bằng công c ụ Interractive Blend k ết hợp với các \nỳ chọn trên thanh thu ộc tính. Mặc định, khi hi ệu ứng Blend đầu tiên được tạo ư\nth\nđối tượng ban đầu. Bạn còn c ó thể chỉnh sửa thuộc tính của đối tượng ba n đầu \ntại bất kỳ thời điểm nào, không c ần tạo lại hiệu ứng blend. B ạn cũng có thể \nkiểm so át được số lượng đối tượng trung gia n được tạo ra, xác định được mức \nđộ chuyển tiếp trong quá trình blend. S ự chuyển tiếp có thể được sắp xếp theo \nđường dẫn của\nm\niệ\ntu\nra, một loạt gồm 20 đối tượng trung gian s ẽ xuất hiện giữa 2 đối tượng ban đầu. \nsau đó bạn có thể điều chỉnh các tuỳ chọn the o ý mình.  \nTrong hiệu ứng blend c ũng có một số điểm điều khiển. Mỗi điểm điều khiển \nứng với 1 tuỳ chọn trên thanh thu ộc tính.  \n \n \nHình 6. 44: hiệu ứng bl end \n \nể nhanh chóng và o trạng thái ch ửa hiệu ứng Blend, b ạn nhấp đúp vào đối \nbi i \n xoá bỏ hiệu ứng blend, b ạn bấm chọn phần chuyển tiếp của hiệu ứng và Đ ỉnh s\ntượng trung gian b ất kỳ, ngay lập tức, thành ph ần điều khiển sẽ hiện trên nhóm \nBlend và các tu ỳ chọn trên thanh thu ộc tính sẽ thay đổi tương ứng. Chúng ta s ẽ \nthấy những tuỳ chọn thông d ụng nhất như số bước, góc quay, màu s ắc, gia tốc \nn đổế\nểĐ\nchọn menu Efects/ Clear Blend. B ạn cũng có thể kích vào nút Cl ear Blend trên \n 169\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 170,
    "text": "thanh thu ộc tính. Hiệu ứng sẽ lập tức được xoá bỏ. Các đối tượng vẫn đươc giữ \nnguyên. \n \nHiệu ứng C ontour:\n  \nPhương pháp nhanh nh ất để ấp dụng hiệu ứng Contour là dùng công c ụ \nteractive Contour kết hợp v In ới các tuỳ chọn trên thanh thu ộc tính. Bạn hãy tạo \nà chọn đối tượng muốn áp dụng hiêu ứng cont or, áp dụng m àu tô và đường \ntour bấm vào đối tượng và  \nệu ứng sẽ tạo Contour ở v\nbiên c ho đối tượng. Sử dụng công c ụ Interactive Con\nn trỏ từ trong ra  ngoài đối tượng, hi kéo. Nếu kéo co\nbên ngoài đối tượng và ngược lại. Góc kéo không ảnh hưởng tới kết quả, chỉ có \nhướng tương đối so với tâm của đối tượng là ảnh hưởng. Để huỷ bỏ hiệu ứng \nContour, b ạn chọn Effects/Clear Cont our. \nHiệu ứng Tranfarency:\n  \nHiệu ứng trong s uốt có rất nhiều tuỳ chọn trên  thanh thuộc tính. Bạn hãy thử \nthay đổi các kiểu hiệu ứng trong su ốt khác nhau trong m enu Tra nfarency Type \nvà xem  kết quả của nó. Chú ý v ới các kiểu khác nha u, vùng g ần điểm điều \nkhiển màu trắng vẫn là vùng ít trong su ốt. Thay đổi kiểu trong Tranfarenc y \nype chỉ ảnh hưởng tới hình thức áp d T ụng, còn m àu thực tế của đối tượng vẫn \nkhông t hay đổi. \n \nHiệu ứng Drop Shadow  \n  \nBạn có thể tạo bóng đổ dễ dàng bằng công c ụ Interactive Drop Shadow  k ết \nhợp với các tuỳ chọn trên thanh thu ộc tính. C ó 2 dạng bóng đổ: bóng đổ phẳng \nvà bóng đổ phối cảnh. Bóng đổ phẳng có hình dáng gi ống đối tượng điều khiển \nvà đươc dịch chuyển về phía trê n, phía dưới, sang trái, ph ải. Ngoài độ lệch về \nle, điều chỉnh độ mờ dần của bóng ở vùng \nHiệứvị trí, bóng đổ phối cảnh có thêm nhi ều thuộc tính có th ể điều chỉnh được. bóng \nđổ phối cảnh có thể giả lập được bóng đổ thực tế. bạn có thể tạo góc nghiêng \nbằng tuỳ chọn Drop Shadow  Ang\nnằm xa đối tượng bằng tuỳ chọn Drop S hadow Fa de. Tuỳ chọn Drop Sha dow  \nStretch cho phép điều chỉnh mức độ kéo dài của bóng. B ạn có thể sử dụng các \nhiệu ứng Drop Shadow  định sẵn giống như các hiệu ứng định sẵn dạng tương \ntác khác. \n \n u ng 3 chiều  \nKhi ch ụ Interractive Extrude, thanh thu ộc tính sẽ thể hiện các tuỳ \nchọc ành nhiều vùng, ba o gồm các chức \nnănn ẵn, kiểm so át hình thể, chiều sâu, vị trí điểm tụ, \ngócu à mức độ vát cạnh. \n ọn công c\nn ủa hiệu ứng. Các tu ỳ chọn nhóm  lại th\ng hư lưu hiệu ứng định s\n qay, ánh sáng, m àu sắc v\n \nHình 6. 45: thanh thu ộc tính công c ụ Interractive Extrude \n \n 170\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 171,
    "text": "Để thực hành á p dụng hiệu ứng Extrude, b ạn hãy thực hành theo các b ước sau: \nột đối tượng. \nướng bất \nố thành ph ần điều khiển của hiệu \nà ký hiệu \"X\". Khung xem tr ước cho biết \nxtrude. Ký hiệu \"X'  cho biết vị trí \nùng với tọa độ con trỏ đang kéo. \nạng khứng xem  trước sẽ phụ thuộc vào vị trí điểm tụ. \ni tượng ba n đầu sẽ xuất hiện. Bạn vừa áp dụng xong m ột hiệu ứng - Tạo m\n- Chọn công cụ Interractive Extrude \n-  Kéo con tr ỏ tử tâm đối tượng đang chọn ra phía ngoài, theo h\nkỳ. Chú ý, khi  kéo sẽ xuất hiện một s\nứng, các khung xem tr ước v\nhình dạng và hướng của hiệu ứng E\nđiểm tụ của hình kh ối, nó c ó tọa độ tr\nHình d\n- Kéo điểm tụ, sao cho hình th ể khung xem tr ước đạt được như ý muốn và \nthả nút chuột. Chú ý, nga y khi bạn thả nút chuột, nhóm Extrude liên k ết \nvới đố\nExtrude với các thông s ố tạo khối mặc định của CORE LDRAW. \n \nHình 6. 46: điểm tụ trong hiệu ứng Extrude \nàm biến dạng đối tượng ( Interac tive Envelope Tool):  \n L\nDùng làm biến dạng đối tượng theo các nút ch ỉnh xung qua nh của đối tượng. \n- Dùng bộ mẫu khuôn d ạng: Bạn cọn đối tượng bạn muốn ép theo mẫu. \nChọn Tap Add Preset để mở danh sách mẫu và chọn mẫu mà bạn muốn \nchọn. Chọn Appl y sau khi đã chọn xong. N ếu bạn không mu ốn lấy mẫu \nđã chọn thì bạn chọn nút Reset để huỷ khuôn m ấu vừa chọn. \n-  \n \nHình 6. 47: danh sách b ộ mẫu khuôn d ạng Interactive Envelope Tool \n \nLàm biến dạng đối tượng theo 1 hướng ( Inte ractive distortion Tool ) \n  \nKhi bạn kéo sẽ làm cho các nút điều kiển biến đổi theo hướng mũi tên. Bạn có \nthể chọn các kiểu biến đổi trên thanh thu ộc tính. \n 171\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 172,
    "text": "Hình 6. 48: Sử dụng công c ụ Inter active distortion Tool \n \n \n \nCông cụ lấy màu mẫu và đổ màu : \n  \n \nCông cụ lấy màu mẫu: \n  \nĐây là công c ụ rất hữu hiệu để bạn copy c hính xác m ột màu . Dùng c ông cụ\nEdropper Tool tr ỏ vào 1 m àu bất kỳ nào trên bản vẽ, ban sẽ coppy m àu nga y\nchính chỗ đó. Màu m à bạn copy được s \n \nẽ hiển thị ở phía dưới, góc bên ph ải màn \n \nCông cụ đổ mhình. N hấp đúp vào ô m àu đó sẽ mở ra hộp Unif orm fill. \nỞ đây bạn có thể đọc được các thông s ố chính xác c ủa màu mà b ạn đang sử\ndụng. \n àu: \nBạn có thể ọn được cho đối tượng bất kỳ bằng công c ụ \nhđổ màu vừa ch\n \n Painbucket Tool. Khi con tr ỏ chuột biến đổi thành hì n , bạn có thể đổ \ni trỏ chuột biến thà nh hình: \n  , bạn đổ màu cho nét  màu cho đối tượng. Kh\ncủa đối tượng. \n \n \n \nCông cụ đường biên:  \n \n \nĐường biên có thể là đường pat h đóng hoặc mở, bạn có thể điều chỉnh h\ndạng của nó tới từng chi tiết. Các thu ộc tính của đường biên c ho phép b ạn th\nđổi màu, xá c lập chiều dày đường biên, ki ểu đườn\nTrên thanh thu ộc tính, xác l ập chiều dày nình \nay \ng nét… \nét bằng cá ch nhập giá trị trực tiếp \nline Wi dth và nh ấn phím Enter ho ặc bấm vào nút tam  \np và chọn giá trị định sẵn trong danh sách v ừa xuất hiện. \nt Arrowhead \nđầu mũi tên. \nng \nịnh sẵn và chọn 1 kiểu trong danh trong hộp nhập Out\ngiácbên ph ải hộp nhậ\nĐể áp dụng dạng đầu mũi tên cho pat h mở, bạn bấm vào nút Star\nSelector ho ặc nút  End Arrow head  Selector để mở hộp chọn dạng \nBộ chọn này dùng để gắn một biểu tượng tại điểm đầu hoặc cuối của đườ\npath. Để áp dụng kiểu nét đứt đoạn cho đường path, b ạn bấm vào nút Outline \nStyle Selec tor để mở danh sách các ki ểu nét đ\nsách này. \n 172\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 173,
    "text": "Một cách khác để xác lập thuộc tính đường biên là s ử dụ\ntrong hộp công cụ . Khi bạn kích vào côngng công c ụ Outlin e \n cụ bút mực sẽ mở ra hộp thoại \nOutline Pen ( F12). \n \nHình 6. 49: hộp thoại Outline Pen \niên: \n- Tuỳ chọn Scale With Image: N ếu tuỳ chọn này được chọn, khi bạn tăng \nhay giảm kích cỡ của path hay đối tượng thì chiều dày nét cũng sẽ thay \nđổi theo. \nếu tuỳ chọn \nBehind Fill không được chọn thì chiều dày nét c ủa path vẫn được thể \n chọn thì phần màu tô sẽ lấn \ntới đương path cơ sở và làm chi ều dày nét th ể hiện bị giảm đi một nửa. \n \n tô màu:  \nCác tuỳ chọn khác của đường b\n- Tuỳ chọn Behind Fill: Trong m ột path đọng và có m àu tô, n\nhiện đầy đủ. Nếu tuỳ chọn Behind Fill được\n \n \nCông cụ\n \n \nKhá\ntròn, g có thể sử dụng m àu tô fill cho các path m ở, nhưng \nbạn\nhộp t\nCo ô lại có thuộc tính và t uỳ \nchọn rg\n- T\nmu àn hình. \n- Xá\nlập s\nkhông c ạn thấy \nxuất hiện hộp thoại: \n i niệm tô màu  được dùng để chỉ phần màu tô phía  trong 1 pat h đóng ( hì nh \n chữ nhật….). Bạn cún\n phải chọn Fill Open Curvers trong trang General ( Document/General) c ủa \nhoại Options ( Ctrl+J). \nrelDraw 10 có rất nhiều kiểu tô m àu, mối kiểu t\niên của nó. \nô màu nhanh cho đối tượng: Chọn đối tượng cần tô, kích và o màu \nốn chọn trong da nh sách m àu nằm bên pải m\nc lập kiểu tô mặc định: Kiểu tô mặc định là kiểu tô mà bạn đã thiết \nẵn để khi vẽ một đối tượng, m áy sẽ tự động tô theo kiểu tô này. Bạn \nần phải chọn đối tượng, bạn chọn Fill Color Dialog, b\n 173\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 174,
    "text": "Hình 6. 50: hộp thoại Fill Color Dialog \n \nTrong \nthì bạn u cho chữ nghệ thuật. \nPar ể mặc định m àu cho chữ thường. Chọn OK,  máy  \nxuấđó bạn chỉ chọn phần  Graphic. N ếu muốn mặc định m àu cho c hữ \n đánh dấu phần Artistic để mặc định mà\nagraph Text dùng đ\nt hiện hộp thoại:  \n \nHình 6. 51: hộp thoại Fountain Fill \nnh và chọn OK. \nộc tính. M ặc định các ki ểu tô Fountain \n , bạn có thể điều khiển điểm đầu và điểm cuối của màu  \nạo màu chuyển the o các góc c ủa \nờngò  tô này \nchuyển c lại vị \ntrí 180 \nc sử dụng.  \nChọn màu bạn muốn làm  mặc đị\n- Kiểu tô Fountain Fill: Công c ụ này dùng để tô m àu cho đối tượng theo \nkiểu phun m àu, nó c ho phé p tạo ra các d ải chuyển màu mịn màng giữa \ncác màu. C ó 4 kiểu tô màu Fountain Fill. \nLinear Fill:( Chuy ển màu theo ph ương thẳng) Bạn chọn đối tượng muốn tô, \nrồi chọn công cụ Interactive Fill trong h ộp công cụ. Chọn kiểu Linear Fill t ừ \ndanh sách Fill Type trên thanh thu\nFill sẽ gồm hai màu\ntô, hướng và góc chuy ển màu, con trượt và điểm tâm. \nRadial Fill: T ạo chuyển màu theo các vòng t ròn đồng tâm. B ạn có thể truy \nxuất kiểu tô này b ằng cách chọn mục Radial o ẻ dah sách Fill Type. \nonical Fill: Kiểu Conical Fill cho phép t C\nđư  trn, làm cho đối tượng trông nh ư một hìng chóp. Màu\nượ  từ màu  đầu tiên (0 độ) tới màu cuối cùng ( 180 độ) và ng\nđộ tới 360 độ. \nSquare Fill: Chuy ển màu theo vuông 90 độ. Kiểu tô nà y ít đượ\n 174\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 175,
    "text": "Để thay \nPicker tr\nch à ô màu mặc định, bạn có thể chọn các m àu này hoặc other \nđể chọn \nTrong hộ\nmàu Form – To không ph ải là cặp màu đen - trắng, bạn có thể cọn hướng \nchuyển màu giữa hai m àu trên bánh xe m àu bằng 3 nút bê n trái bánh xe \nmàu. Nút thứ nhất sẽ chuyển màu theo h ướng thẳng trên bánh xe  màu, nút  \ngược chiều kim  đồng hồ, nút thứ 3 sẽ \nchuyển theo chiều kim  đồng hồ. \n đổi màu  đầu hoặc cuối, bạn có t hể sử dụng hai hộp chọn màu Col or \nên thanh thuộc tính. Bấm vào hộp chọn Color Picker để mở bộ \nu với các ọn m\nmàu tuỳ ý trong h ộp thoại Select Color. \np thoại Fountain Fill, khi tu ỳ chọn Two C olor được chọn và cặp tô \nthứ hai sẽ chuyển màu theo h ương n\n \nHình 6. 51: hộp thoại Color blend \n \nBạn có t hể thêm  nhiều màu bằng cách dùng công cụ Interactive Fill kéo  \nàu trực tiếp từ các ô màu c ủa bảng m àu bên phải của sổ Corel Draw th ả \nCm\nvào đường định hướng \n \nông cụ Interactive Mesh Fill:\n  \nông cụ n \nC ày cho phép tạo mầu tô cho đối tượng thông qua m ột lưới do các \nnode kết hợp lại. Thao tác v ới các node trên các đường Bezier thông th ường. \nBạn có thể kéo tha y đổi vị trí các node này, thên ho ặc xoá bằng các công c ụ \ntrên thanh thu ộc tính. \nKiểu tô Mesh Fill có th ể kết hợp các màu s ắc tạo từ các kiểu tô Uniform, \nFountain, Pattern, Texture và Post Script v ới việc chỉnh sử chúng trong l ưới \nVector, điều này sẽ giúp bạn tạo ra các hi ệu quả màu  tô đặc biệt mà không th ể \ntạo bằng các ph ương pháp khác. \nĐể tạo kiểu tô Mesh Fill , b ạn làm theo các b ước sau: \n- Dùng công c ụ Pick c họn một đối tượng m uốn chỉnh sửa \n- Chọn công cụ Interactive Mesh Fill \n- Trên thanh thu ộc tính,  nhập số dòng và s ố cột lưới muốn tạo ở các hộp \nnhập Grid Size. \n- Thử nghiệm điều chỉnh các nút trên l ưới. \n \n 175\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 176,
    "text": "Hình 6. 52: Lưới Mesh Fill \n \nBạn có thể thao tác v ới điểm lưới, đường lưới giống như các đối tượng vector \nthông t hường. Các điểm lưới có thể được thêm, xoá, thay đổi kiểu, có thể kéo \nác điểm lưới và các handle điều khiển để thay đổi hình dạng cho lưới. Chuyển \ntừ \ntha\nBạ\nkhô\nBit\n \n \n \nTh\n \nCá\nKhi đối tượng đang được chọn, bạn dùng con tr ỏ của công cụ Pick giữ nút \nchuột và kéo di chuy ển đối tượng tới vị trí khác r ồi thả nút chuột.Trong khi \nkéo, con tr ỏ sẽ chuyển thành con tr ỏ di chuyển và một đường biên xem  trước \ncho biết vị trí hiện tại của đối tượng để di chuyển đối tượng. Bạn có t hể sao \nchép thay vì di chuy ển đối tượng sang v ị trí khác b ằng cách kéo đối tượng tới \nvị trí mới, nhưng trong khi v ẫn giữ nút chuột trái, bạn nhấn nút c huột phái, rồi \nthả cả hai nút chu ột. Một cách khác, khi đối tượng đang đươc chọn, bạn di \nchuyển con trỏ tới chỗ đối tượng, nhấn nút chu ột phải và kéo d ến vị trí mới. \nKhi t hả nút chuột sẽ làm xuất hiện 1 m enu, bạn chọn mục Move Here ho ặc \nchọn Copy Here để di chuyển hoặc sao chép. Ch ọn Cancel để huỷ bỏ thao tác \nvừa làm. \nBạn cũng có t hể di chuyển đối tượng bằng cách dùng m ũi tên lên, xu ống, trái, \nphải để di chuyển đối tượng từng khoảng cách nh ất định. Với bước di chuy ển \nđã xác lập ở trang Rulers c ủa hộp thoại Options. Để thay đổi tuỳ chọn này, bạn \nmở hộp thoại Options ( Ctrl+j), M ở cây thư mục Document, b ấm chọn Rulers \nđể làm xuất hiện trang Rulers ở bên phải hộp thoại. \n c\nđường cong sang đường thẳng hoặc ngược lại. Các tuỳ chọn này đều có trên \nnh thuộc tính. \nn có thể áp dụng công c ụ Mesh Fill cho ảnh bitmap. Mesh Fill là m ột kiểu tô \nng dễ dự đoán như các kiểu tô truyền thống khác. B ạn nên sao chép ảnh \nmap và nên á p dụng Mesh Fill cho b ản sao. \nao tác cơ bản trên đối tượng: \nch di chuyển đối tượng: \n 176\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 177,
    "text": "Hình 6. 53: hộp thoại Options \n \nBước Nudge m ặc định là 0.1 Inches. B ũng có thể di chuyển đối tượng đi \nn\nN\nper Nudge: di  chuyển đối tượng từng đoạn bằng bước đã xác lập ở \np Nudge nhân v ới số lần ở hộp Super Nudge. B ạn giữ phím Shift \ni nhấn các mũi tên \n-  \nl \n \n \nL  đối tượng:  \n \nC  \ncá\nđ bất kỳ một handle nào (  Ở góc hay c ạnh) để làm đối tượng \no giãn theo tỷ lệ hoặc chỉ theo chiều rộng hặc chiều cao, hoặc không theo t ỷ lệ \nưng vẫn giữ \nso với kích thước ban đầu . N hấn giữ Alt trong khi kéo ở \nđối tượngtheo hướng kéo dọc hay ngang. N hấn giữ Shift trong \nấn giữ Ctrl \n thước ban \nC\nỏ các kết quả biến dạng cho \nrrange/ Clear tranformations để trả lại hình dạng ạn c\nhiều hơn hoặc ít hơn bước Nudge đã xác lập bằng các thông s ố ở hộp Supe r \nudge hoặc Micro Nudge.  \n- Su\nhộp nhậ\ntrong kh\nMicro Nudge: di chuy ển đối tượng từng đoạn bằng bước đã xác lập ở\nhộp nhập Nudge chia cho s ố lần ở hộp Micro N udge, Bạn giữ phím Ctr\ntrong khi nh ấn các mũi tên \nàm biến dạng\nông cụ Pick có th ể dùng để biến dạng đối tượng the o kiểu tương tác bằng\nch điều chỉnh một trong 8 đường vuông đen bao qua nh 1 hay nhi ều đối tượng \nược chọn. Bạn kéo \nc\nnào cả. \no bất kỳ góc nà o để làm biến đổi kích thước đối tượng nh - Ké\nnguyên tỷ lệ. Nhấn giữ Shift trong khi ké o sẽ làm biến đổi hướng từ tâm \nđối tượng ra ngoài. N hấn giữ Ctrl sẽ làm biến đổi tăng từng cấp độ là \n00%, 300%.... 2\nbất kỳ handle ở góc làm  biến đổi kích thước không t heo tỷ lệ. \n- Chỉ biến đổi chiều rộng ha y chiều cao: kéo b ất kỳ handle nà o ở cạnh để \nbiến đổi \nkhi kéo sẽ làm biến đổi hướng từ tâm đối tượng ra ngoài . Nh\nsẽ làm biến đổi tăng từng cấp độ là 200%, 300%....so v ới kích\nđầu.  \norel Draw 10 Ghi nh ớ hình dạng ba n đầu của đối tượng khi nó được tạo ra, \nc biến dạng ba o nhiêu lần. Để b cho dù nó đã đượ\nđối tượng, bạn chọn menu A\n 177\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 178,
    "text": "ban đầu cho nó. \n \nũng có thể quay hay xô nghiêng đối tượng bằng một trạng thái đặc biệt \nc  lần bấm thứ hai trên đối \nọn. Khi  đó các Handle chuy ển thành m ũi tên để quay ho ặc xô \nn\nđ\nhanh chóng l ật một đối tượng theo chi ều thẳng đứng hoặc chiều ngang, \nb\nBBạn c\nủa công cụ Pick. Trạng thái nà y sẽ xuất hiện sau\ntượng đã ch\nghiêng, tâm của đối tượng sẽ trở thành tâm  quay động ( có th ể di chuyển \nược) \nMuốn n\nạn bấm chọn các nút Mirror trên thanh thu ộc tính khi đang dùng công c ụ Pick \nạn cũng có thể làm biến dạng đối tượng bằng công c ụ Free Transform \n   \ntrong nhóm công c ụ Shape. \n \nĐể các biến dạng có độ chính xác cao và ki ểm so át được, bạn nên dùng c ửa sổ \nDocker Trasformation. C ửa sổ này bao gồm 5 trang t ương ứng với các phép \nbiến dạng: dichuy ển ( Position), quay (R otation), co giãn đối xứng ( Scale And \nMirror), kích th ước ( Size), xô nghiêng ( Skew). B ạn chọn Wi ndow/ D ocker/ \nTransform ations ho ặc Arrange/ Tra nsform ations, sau đó chọn \nPosition(Alt+F7), Rotation (Alt+ F8), Sa cle ( Alt+F9) Size ( Alt+F10) ho ặc \nSkew từ menu phụ. \nMuốn thực hiện một phé p biến dạng nà o đó, bạn bấm chọn trang tương ứng \ntrong của sổ docker, nh ập các giá  trị và bấm nút A pply áp dụng biến dạng cho \nđối tượng. \n \nLấy đối xứng đối tượng:  Bạn nhấn phím  Ctrl và rê chu ột đi qua đối tượng, bạn \nse được 1 đối tượng đối xứng với đối tượng ban đầu. \n \n \nSắp xếp thứ tự các đối tượng: \n \nBạn cần biết về thứ tự sắp xếp đối tượng, đó là nguyên t ắc chủ yếu cần biết khi \ntổ chức nhiều đối tượng chồng lên nhau. Điều này sẽ giúp các b ạn kiểm soát tác \nđộng của một đối tượng nằm phía tr ước hoặc sau đối tượng khác. B ạn có thể \nchỉnh sửa thứ tự sau khi đã tạo ra các đối tượng. Mặc định đối tượng mới sẽ \nđược xếp phía trước các đối tượng cũ. Để thay  đổi thứ tự trước sau của các đối \ntượng, và o Arrange/ O rder hoặc các nút trên thanh thu ộc tính. \n \n \nHình 6. 54: biểu tượng Arrange/ O rder  \n \n- To Front: L ệnh này sẽ mang đối tượng đang chọn lên trước tất cả các \nđối tượng khác bên tr ong hoặc ngoài trang v ẽ ( Shift+  Page Up) ho ặc \nArrange/ O rder / To Fr ont. \n- To Back: L ệnh này m ang đối tượng đang chọn ra s au tất cả các đối \ntượng khác bên trong ho ặc ngoà i trang vẽ ( Shift+ Page Down) ho ặc \nArrange/ Order / To Back. \n 178\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 179,
    "text": "- Forward One: L ệnh này m ang đối tượng đang chọn lên phía trước 1\nbước trong th ứ tự \n trước- sau hiện thời (Ctrl + Page Up) ho ặc Arrange/ \nOrder / For ward O ne. \n- Back One: L ệnh này m ang đối tượng đang chọn lên phía sau 1 b ước \n- Behind: khi  dùng lệnh này cho phép b ạn chỉ định đối tượng và đối tượng \nện ngay sau đối tượng vừa chỉ định (Arrange/ Order \nới nhau, thiết lập mối liên hệ giữa chúng. Khi các đối \nng đang ở trạng thái nhóm , chúng ta s ẽ ứng sử như một đối tượng đơn và vị \na các đối tượng trong nhóm được giữ nguyên. B ất kỳ thay đổi \nạng, hoặc những thuộc tính khác đối với nhóm  sẽ được ảnh \nhưởng đồng loạt cho các đối tượng trong nhóm. \nĐể thực hiện việc nhóm các đối tượng, bạn chọn các đối tượng muốn nhóm \nbằng công c ụ Pick, chọn Arrange/Group ( Ctrl+G) ho ặc bấm lệnh Group trên \nthanh thuộc tính. \n trong thứ tự trước- sau hi ện thời (Ctrl + Page Down)ho ặc Arrange/ \nOrder / Back One. \n- In Fr ont Of: khi dùng l ệnh nà y, một con trỏ hình mũi tên m àu đen sẽ \nxuất hiện cho phép b ạn chỉ định đối tượng và đối tượng đang chọn sẽ \nđược đặt ngay trên đối tượng vừa chỉ định theo th ứ tự trước – sau \n(Arrange/ Order / In Front Of) \nđang chọn sẽ xuất hi\n/ Behind) \n- Reverse Or der: Lệnh này sẽ đảo ngược thứ tự sắp xếp trước sau của các \nđối tượng đang c họn ( Arrange/ Order / Reverse Order)  \n \n \nNhóm và tách nhóm các đối tượng:  \nKhi có từ 2 đối tượng trở lên, lệnh Group s ẽ có hiệu lực. Lệnh này nhóm  các \nđối tượng đang chọn lại v\ntượ\ntrí tương đối giữ\nnào về vị trí, hình d\n \nHình 6. 55: biểu tượng Group \nệnh U ngroup: \np, lệnh U ngroup sẽ tách nhóm các đối tượng. Lệnh nà y có \nóm trở về từng đối tượng riêng, các nhóm \n. Việc tách nhóm  nhằm mục đích bỏ đi mối liên hệ \niữa các đối tượng, nhưng không hoà n trả lại sự biến dạng hoặc những thay đổi \nực hiện khi chúng còn n ằm trong nhóm . \nể bỏ nhóm các  đối tượng, bạn phải chọn menu Arrange/ U ngroup ( Ctrl + U)  \nhoặc b up trên thanh thuộc tính. B ạn cũng có thể chọn lệnh \nngroup từ menu hiện ra khi b ấm nút chuột phải trên nhóm được chọn. \ni tượng trong b ản vẽ sẽ tự động tạo \nên “ Nhóm hiệu ứng”, có liên k ết động để kiểm soát các đối tượng liên qua n \này, trước tiên bạn phải tách chung b ằng \nlệnh Arrange/ Break (Effect) Group Apart ( V ới (Effect) t ượng trung c ho tê n  \n \nL\nNgược lại lệnh Grou\ntác dụng đưa các đối tượng trong nh\ntrở thành c ác nhóm  riêng\ng\nthuộc tính khác đã th\nĐ\nấm nút U ngro\nU\nNhiều hiệu ứng mà bạn áp dụng cho các đố\nn\nđến hiệu ứng. Để tách các nhóm lo ại n\n 179\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 180,
    "text": "hiệu ứng như Blend,….), sau đó dùng lệnh Ungroup \nNếu muốn tách nhóm  ( bao gồm cả nhóm  con) t hành từng đối tượng đơn, bạn \nự khác biệt rõ \n là lệnh U ngroup chỉ bỏ nhóm  cho 1 cấp, \nóm con cấp thấp hơn \n và vị trí tương đối giữa chúng \nược cố định. Nhóm các đối tượng cũng là 1 cách để khoá c húng lại với nha u. \nNhưng nếu muốn, bạn có thể khoá đối tượng vào trang v ẽ bằng lệnh Lock. Khi  \nác đối tượng bị khoá, chúng có th ể xuất hiện, in, hay được chọn nhưng không \nể di chuyển, chỉnh sửa hay t hay đổi thuộc tính. Tương tự như lệnh Group, \nể khoá các đối tượng đang chọn, bạn chọn menu Ar range/Loc k Object ho ặc \nchọn lênh \nnLock trên menu vừa xuất hiện. \nbạn không \nu cách \nển qua y hoặc biến dạng \nải sẽ nhân đôi đối tượng \nở trước đối \ntượng ban đầu. \nplicate: \niúp bạn tạo ra bản sao và t ự đọng dịch chuyển bản sao một khoảng \nit/Duplicate ( Ctrl+D). Đối tượng được tạo bằng \nết với đối tượng gốc sau khi t ạo. sẽ cần tới lệnh Ungr oup All để bỏ nhóm cả cho các nhóm  con. S\nrệt giữa lệnh U ngroup và U ngroup All\nnếu nhóm  này có c hứa các nhóm  lồng nhau thì nh ững nh\nvẫn được duy trì. \n \n \n \nKhoá và m ở khoá các đối tượng: \nKhi các đối tượng được nhóm  với nhau thì t ỷ lệ\nđ\nc\nth\nlệnh Loc k gồm 3 lệnh Lock, UnLock và UnLock All. \nĐ\nbấm nút chuột phải trên đối tượng và chọn Lock Object t ừ menu vừa xuất hiện. \nĐối tượng sẽ không được chỉnh sửa cho đến khi mở khoá. \nĐể mở khoá cho đối tượng, bạn bấm chính xác và o đường biên đối tượng và \nchọn Arrange/ UnLock ho ặc bấm nút chuột phải trên đối tượng và \nU\nĐể mở khoá cho t ất cả các đối tượng đang bị khoá trê n 1 bản vẽ, \nphải chọn đối tượng, c hỉ cần chọn menu, Arrange/ Unlock All. \n \n \nSao chép, nhân đôi, nhái lại đối tượng: \n \nLệnh Copy: \nSao c hép là một trong những thao tác th ường dùng nh ất, việc sao chép có th ể \nực hiện bằng nhiề th\n- Phương pháp nh ấn nút chu ột phải: Khi di chuy\nđối tượng bằng công cụ pick, việc nhấn chuột ph\nđang trong quá trình bi ến đổi hành 1 đối tượng bản sao. \n- Phương pháp s ử dụng phím Spacebar: Nh ấn phím  Spacebar K hi di \nchuyển quay ho ặc biến dạng đối tượng bằng công c ụ pick cũng tạo được \nbản sao của đối tượng. Nhấn phím Spacebar s ẽ tạo ra một bản sao đúng \ntại vị trí co n trỏ hiện hành, n ếu nhấn giữ phím  này sẽ tạo nhiều bản sao \ntheo đương drag. \n- Phương pháp nh ấn phím  cộng (+ ): khi một đối tượng được chọn, nhẫn \nphím  + trên bàn phím  sẽ tạo ra bản sao tại cùng một vị trí và \nLệnh Du\nLệnh nà y g\ncách nhất định. Bạn chọn Ed\nó mối liên k cách này s ẽ không c\n 180\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 181,
    "text": "KHoảng cách dịch chuyển the o chiều nga ng và chiều dọc của bản sao khi dùng \nnh Dupli cate được xác định ở hai hộp nhập của tuỳ chọn Dupli cate Distance \nộc tính khi không có đối tượng nào được chọn. \n nghĩa là nhái l ại, giả lặp, là sinh s ản vô tính.  Việc tạo ra đối tượng \nới bằng cách Duplicate và Clone là t ương đối giống nhau nh ưng mỗi phương \nệ quả riêng. Lê nh Clone s ẽ tạo ra bản sao từ đối tượng gốc. Khi \nthuộc tính, làm bi ến dạng đối tượng cho đối tượng điều khiển thì đối \nng clone s ẽ tự động thay đổi theo. \n \ng \n tạo ra bản sao c ùng với khoảng dịch chuyển \nng Cl one mới tới vị trí khác \n đổi các thu ộc tính nhu m àu tô, đường \n đổi theo \ni, một đối \nc tạo. Kéo đối tượng thứ hai này ra xa kh ỏi đối \ni tượng này được thể hiện rõ \nay đổi một hoặc nhiều thuộc tính của \nphức tạp \nó thể nhận diện đối tượng Clone ho ặc đối tượng điều khiển \nọn đối tượng. Tuy nhiên thanh \n khiển nào \nng 1 bản vẽ. Để nhanh chóng xác định đối \nể mở menu. \nClones: nếu đối tượng đang chọn là đối tượng điều khiển, \n đối tượng Cl one của \nđối tượng diều khiển này. \nang chọn là đối tượng Cl one, chọn \n \nh của 1 đối tượng col one đã thay \ni đối tượng điều khiển, bạn bấm nút c huột phải vào đối \ntượng clone và ch ọn Revert To Master t ừ menu vừa xuất hiện để lấy lại \ncác thuộc tính của đối tượng điều khiển và nối lại liên kết cho các thu ộc \ntính nà y. \n \n \nGióng hàng và dàn đều đối tượng: \nKhi cần sắp xếp đối tượng có quan hệ với nhau ho ặc với trang vẽ, bạn sẽ cần \ntới hộp thoại Align and Distribute. L ệnh Al ign giúp b ạn gióng hà ng giữa các \nđối tượng, lệnh Distribute cung c ấp phương phá p dàn đều đối tượng trong m ột \nphạm vi định trước. Sử dụng hai lệnh nà y bằng cách ch ọn menu A range/ Align lệ\ntrên thanh thu\nLệnh Cl one: \nClone có\nm\npháp có 1 h\nthay đổi \ntượ\nĐể tạo một đối tượng Clone c ủa đối tượng đang c họn, bạn chọn Edit /Clone và\nđối tượng gốc sẽ trở thành đối tượng điều khiển để kiểm soát các đối tượn\nclone. \n- Chọn menu Edit/ Clone để\ngiống như lệnh D uplic ate. Di chuy ển đối tượ\ntrên bản vẽ. \n- Chọn đối tượng gốc và thay\nbiên…, bạn sẽ thấy đối tượng clone s ẽ thay\n- Chọn đối tượng điều khiển và c họn Edit/ Clone l ần thứ ha\ntượng clone n ũa sẽ đượ\ntượng gốc sao cho toàn b ộ đố\n- Chọn đối tượng điều khiển và th\nnó, bây gi ờ cả hai đối tượng cùng thay đổi. \nViệc tạo đối tượng clone r ất đơn giản, nhưng tìm ra đối tượng chủ thì \nhơn một chút. Bạn c\nbằng cách quan sát trên thanh tr ạng thái khi ch\ntrạng thái không cho bi ết đối tượng cl one nào đi với đối tượng điều\nkhi có nhi ều đối tượng clone trên cù\ntượng , bạn bấm nút chuột phải trên đối tượng đ\n- Lệnh select \nchọn lệnh Select Clones t ừ menu để chọn tất cả các\n- Lệnh Select Master: n ếu đối tượng đ\nmenu Select Master để chọn dối tượng điều khiển của đối tượng Clone\nnày. \n- Lệnh Revert to Master: N ếu thuộc tín\nđổi khác đi so vớ\n 181\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 182,
    "text": "and Distribute để mở hộp thoại hoặc bấm nút Align and Distribut e trên thanh \nthuộc tính.  \n \n \nHình 6. 56: Hộp thoại Align a nd Distribute \n \nPhím  tắt để gióng hàng: \nNếu cần nhanh c hóng gióng hà ng đối tượng, bạn dùng công cu Pick để chọn \nch đều nha u theo 1 trong hai cách: \nnd Of Selection, lấy hai đối tượng ngoài cùng so v ới tâm  chung của \nđối tượng đang chọn làm  chuẩn \nủa trang hi ện hành \nỳ chọn còn lại giúp bạn xác định điểm tham c hiếu trên c ác đối \n khi chia đều koảng cách. \nbạn dùng phím t ắt với hai điều kiện: có ít \n- Dàn đều dựa theo biên ph ải: Shift +R \na theo biên đáy: Shift +B đối tượng \n- Gióng hàng theo biê n đỉnh: T \n- Gióng hàng theo bê n trái: L \n- Gióng hàng theo bê n phải: R \n- Gióng hàng theo biê n đáy: B \n- Gióng hàng theo tâm  ngang: E \n- Gióng hàng theo tâm  dọc: C \n- Đặt vào giữa trang: P \n \nLệnh distribute s ẽ tự động định khoảng cá\n \n- Exte\ncác \n- Extend Of Page: để dựa vào c hiều rộng và c hiều cao c\nlàm chuẩn. \n- Những tu\ntượng\n \nPhím  tắt cho các l ệnh dàn đều: \nNếu cần dàn đều đối tượng nhanh, \nnhất hai đối tượng được chọn và đang sử dụng công c ụ text. \n- Dàn đều dựa theo biên đỉnh: Shift +T \n- Dàn đều dựa theo biên Trái: Shift +L \n- Dàn đều dự\n- Dàn đều tâm ngang: Shift +E \n- Dàn đều theo kho ảng cách d ọc: Shift +P \n- Dàn đều tâm đứng: Shift +C \n- Dàn đều khoảng cách đứng: Shift +A \n \n \n 182\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 183,
    "text": "Cắt hàn và lấy phần giao giữa các đối tượng: \n \nCác lệnh weld, Trim, Intersection s ẽ dễ dàng giúp b ạn tạo ra các hì nh thể phức \nker Sha ping: \nng \n \n tạp \n \nCửa sổ doc\nCác lệnh dùng để cắt, hàn, lấy phần gia o giữa các đối tượng, có thể hoạt độ\nchính xác nh ờ cửa sổ docker Shaping. C ửa sổ này được mở bằng m enu\nArrange/Shaping ho ặc Window/ Docker/ S haping, sa u đó chọn Trim, Weld\nhoặc Inters ection. \n \n \nHình 6. 57: Cửa sổ do\n \n- Lệnh Trim là l ệnh tạo hình được dùng ph ổ biến nhất, dùng để xoá\nphần mà hai hoặc nhiều đối tượng chồng lê n nha u. cker Sha ping \n bỏ \n- Lệnh Weld t ạo ra 1 hình th ể mới bằng cách hàn g ắn hai hay nhi ều đối \n- Lệnh Intersection t ạo ra 1 đối tượng là phần giao nhau c ủa hai hay nhi ều \ni \n, đối \n \nmất đi sau khi  chịu tác động cắt xén, hà n gắn hoặc lấy phần giao với đối \nc \n \n \nhất hai đối tượng đang chọn, cho dù các đối \nng có chồng nhau hay không.  Các nút l ệnh trên t hanh t huộc tính sẽ không tượng chông lên nhau \nđối tượng \n \nCác tuỳ chọn nằmdưới tiêu đề Leave Originnal s ẽ giúp bạn giữ lại các đố\ntượng gốc sau khi áp d ụng lệnh, các tu ỳ chọn nư sau: \n- Sourse Obj ects: khi  tu ỳ chọn này được chọn, sau khi á p dụng lệnh\ntượng nguồn bạn chọn trước sẽ không bị mất đi \n- Target Objects: khi tu ỳ chọn này được chọn, đối tượng đích không b ị\ntượng nguồn. \n \nCorel Draw 10 còn có các l ệnh Trim, Weld ho ặc Intersection trên thanh thu ộ\ntính giúp b ạn áp dụng nhanh các l ệnh này c ho các hình th ể mà bạn chọn, mà\nkhông cần phải mở cửa sổ docker  Shapi ng. Trên thanh thu ộc tính, các nút l ệnh\nnày sẽ có hiệu lực chỉ khi có ít n\ntượ\ncó các tuỳ chọn để giữ lại hình nguyê n gốc như trong cử sổ docker Sha ping. \n \n 183\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 184,
    "text": "Hình 6. 58: thanh thu ộc tính docke r Shapi ng \n \nChúng ta có th ể sử dụng đường dẫn mở làm đối tượng nguồn để cắt các đố\ntượng đích có đường biên đóng. Kết quả đạt được là những nhát c ắt tách rời \nđường dẫn đóng thành t ừng phần. \n i \n \nHình 6. 59: Tách r ời đối \n \n \nTrong ví d ụ này, một đường cong m ở được sử dụng làm đối tượng nguồn và\nđối tượng văn bản được dùng làm đối tượng đích khi áp d ụng lênh Trim. V ăn \nbản bị cắt và chuy ển đổi thành dạng curve t hông thường. Bằng cách áp d ụng\nlệnh Arange/ Break curve Apart, b ạn có thể tách đối tượng mới thành từngtượng bằng đường dẫn mở \n \n \n đối \nng riêng bi ệt. \nạo ch\nốn sử dụng . Chuy ển văn bản đang chọn thành d ạng curve tượ\n \n \nThực hành Bà i tập Corel:  \n \nTữ nổi: \n- Nhập văn bản mu\nthông \nthường bằng phím t ắt Ctrl+q.  \n \n \n \nB u tô và cho nét m àu đen. Chọn cô ỏ mà ng cụ Interactive Contour t ừ hộp công \ncụ để tạo hiệu ứng Contour cho đối tượng với kiểu Outside, b ước Contour Step \nlà 1 và v ới giá trị Contour Offset thích h ợp (chúng tôi ch ọn Contour \nOffset=o.8mm).  \n \n \n \n 184\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 185,
    "text": "- Có thể không cần tạo hiệu ứng Cont our nếu bạn không c ần tạo nền cho văn \nbản. \nVới nhóm Contour v ẫn đang chọn, bạn chọn men Arr agge / Bre ak Contour \nGroup Apart để tách nhóm Contour. C họn hình văn bản phía trong (n ằm trên ) \nàu bên phải cửa sổ CORELDRAW) để bỏ đờng \n và tô m àu đỏ. Chọn hình văn bản phía ngoài (n ầm dưới) và tô màu đen, đối \ntượng này sẽ đợc dùng làm nền. Chọn cả hai đối tượng và click chu ột phải vào \nÔ Nong (có dấu [X]) ở bảng m\nbiên cho hai đối tượng.  \n \n \nô màu trắng cho đối tượng vừa sao chép. Nh ấn phím  cộng (+) lần \nnữa để a và tô m àu bất kỳ cho nó để dễ phân biệt (chúng tôi ch ọn \nmàu x- Chọn đối tượng màu đỏ, nhấn phím  cộng (+) ở bàn phím  số để sao chép đối \ntượng nà y. T\n tạo bản sao nữ\nám). Drag đối tượng m àu xám  về phía trái, xu ống dưới một chút để tạo \nphần bóng sáng cho v ăn bản. \n \n \n \n- Với đối tượng m àu xám  vẫn đang chọn, bạn Shift-click ch ọn thêm đối tượng \nmàu trắng (có th ể dùng công c ụ Zoom phóng l ớn để dễ chọn đối tượng m àu \ntrắng) và c lick vào nút Quick Tr ẫm trên th anh thuộc tính để dùng đối tượng \nmàu xám cắt đối tượng màu tr ắng bê n dưới. Click ch ọn lại đối tượng m àu xám \nvà xóa\n  nó đi.  \n \n \nNếu v . nếu quá phức tạp thì \ndòng v ếu muốn), bạn có thể \nđổi mà đỏ nhạt cùng tông màu (cùng hue) v ới \nvăn bả  phần bóng sáng b ớt chói. Nếu văn bản lớn hoặc ít chữ, chúng \nđể tạo phần bóng tối cho văn bản. \nchép ăn bản nhỏ hoặc quá  dài. bạn có thể dừng ở đây\năn bản nhỏ sẽ khó nhìn. V ới văn bản nhỏ (l~oặc n\nu cho bóng sáng t hành một màu \nn chí nh để\nta có thể làm thêm các b ước tiếp theo \n \n- Click ch ọn đối tượng màu d ỏ, nhấn phím  cộng (+) ở bàn phím s ố để sao \nđối tượng này. TÔ m àu đỏ đậm (chúng t ôi chọn màu C=O, M=LOO, Y= LOO \nvà K-40) cho đối tượng vừa sao chép. Nh ấn phím  cộng (+) lần nữa để tạo bản \nsao nữa và tô m àu bất kỳ cho nó để dễ phân biệt (chúng tôi ch ọn màu x~n). \nDrag đối tượng màu xám v ề phía trên, bên ph ải một chút (một khoảng tơng tự \nnh khi tạo bóng sáng) để tạo phần bóng tối cho văn bản. \n \n 185\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 186,
    "text": "-Với đối tượng màu xám v ẫn đang chọn, bạn Shift-click ch ọn thêm đối tượng \nmàu đỏ đậm và click vào nút Q uick Trẫm trên thanh thu ộc tính để dùng đối \ntượng m àu xám  cắt dối tượng m àu đỏ đậm bên  dưới. Click ch ọn lại đối tượng \nmàu xám  và xóa nó \n đi.  \n \n \nĐể tăn cho các bóng, bạn dùng công c ụ Shape điều chỉnh lại các \nnode t ng m àu trắng và m àu đỏ đậm tại nơi hai bóng này g ặp \nnhau. g thêm chi tiết \nrên hai đối tượ\n \n \nCách n t phức tạp) và dễ kiểm so át hơn việc \ndùng h\nĐể phá  tô các màu ch uyển cho vùng v ăn bản \ntạp quá dễ sinh ra \ni khi àu. ày tạo ra các đối tượng \"nhẹ\" hơn (í\niệu ứng Extrude \nt triển tiếp bài tập này, bạn có thể\nvà các bóng, ho ặc áp dụng sự trong s uốt chuyển dần cho các bóng b ằng công \ncụ Interactive Transpar ency. Tuy nhiê n các hiệu ứng thêm  vào s ao cho nội \ndung văn bản vẫn được chuyển tải text, dễ đọc và đừng phức \nlỗ  xuất phim  tách m\n \n \n6.2.3 - Giới thiệu các phần mềm xử lý đồ hoạ khác \n6.2.3.1 - Fl ash: \nchuẩn  hoạ hoạt hình trên web. V ới \nhể bổ xung các hi ệu ứng thú vị cho trang web, làm  cho c húng c ó \nấp dẫn hơn. Cá c doạn phi m flash có th ể thực hiện \nb nào khi trình th ể hiện Flash được cài đặt. Việc \noạt hình đã mang lại những tích cực Ngày nay Flash đã trở thành một  cho dồ\nFlash, bạn có t\ntính tương tác cao h ơn và h\ntrên bất kỳ một trình duy ệt We\náp dụng đồ hoạ vecter cho các đoạn phim  h\nmạnh mẽ và rất linh động cho Flash, các đoạn phim  Flash thường nhỏ gọn và \ntải xuống nhanh chóng. Có r ất nhiều chương trình để tao doạn phim  nhưng \nFlash vẫn được xem là công c ụ hưu hiệu nhất, chuyên nghi ệp nhất. Mang lại sự \nsống động, hấp dẫn cho các trang web \n \n6.2.3.2- Adobe Im age Ready:  \nĐi kèm với Photos hop là chương trình ImageRea dy. Nó cung c ấp các tính năng \ntối ưu cho web là t ạo các file GIF ho ạt hình. PhotoS hop và Im ageReady k ết \nhợp với nhau sẽ tạo nên một môi trường hoà n hảo cho việc thiết kế đồ hoạ web. \nPhotoShop và Im ageReady có nhi ều cách thức giống nhau để hoàn thành cùng \nmột công vi ệc. Vùng làm vi ệc của PhotoShop và Im ageReady bao g ồm các \nmenu lệnh ở trên đỉnh của màn hình, m ột vài công c ụ, bảng dùng gi ống nha u. \nPhotoShop và ImageReady đều làm việc với ảnh bi\nnhưng trong ImageReady b ạn có thể di chuyển các thàtmap, ảnh kỹ thuật số, \nnh phần như đoạn hoạt \nhình R ollover một cách trực quan. \n 186\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 187,
    "text": "ImageReady t ạo ảnh động trên c ơ chế chuyển tiếp giữa các Frame liên ti ếp. \nBạn có thể đặt thời gian, tạo thêm frame m ới, chế độ xuất ảnh cho web r ất \nchuyên nghi ệp. Ngoà i ra Im ageReady còn gi ữ nguyên được các hiệu ứng ảnh \nmà bạn đã xử lý trong PhotoShop và ch ỉnh sửa được trong ImageReady  \n \n6 .2.3.4- Xu h ướng về đồ hoạ hiện đại trên Web  \n• Đơn giản \n•  Mang m àu sắc công ngh ệ, hiện đại. \n•  Sử dụng Fl ash nhiều. \nT ương: \nB ểu được một số điểm căn bản vềại ảnh, cách s ử dụng, các tha o \ng cá  \ntrên đây, bạ  trình và nắm vững được \nạnh c  hoạ đó. \nshop:\nờ t mạnh và chuyên nghi ệp \nnh sử . \n gi\ng\n \nhươn ững bức ảnh \nuật h hoạ \nvề kỹ thuật\n+ Corel Dr  để vận dụng kết hợp với các \nrìn\nBài tập chư\nHọc viên tự . \n \n \n • Sử dụng Mutimedia  \nóm tắt ch\nạn đã hi  các lo\ntác tron c chương trình thi ết kế. Để áp dụng được những điều mà bạn đã học\nn phải thật sự chuyên sâu vào t ừng chương\nthế m\nPhotoủa mỗi chương trình x ử lý đồ\n \n+ Môi trưng cho xử lý các tài li ệu ảnh rấ\n+ Chỉ a và tạo ra các hi ệu ứng cho ảnh\n+ Tạo raao diện cho trang W EB \n+ Chuyển iao diện sang m ôi trường WEB \nCorel:\n+ Là c g trình đồ hoạ dựa theo các vector để dễ dàng tạo nh\nnghệ th chuyên nghiệp, từ những hình ảnh Logo đơn giản đến các m in\n. \naw phù hợp cho t hiết kế tạo hình\nchương th tạo hình ảnh động như flass, 3D… \nơng \n thiết kế dem o website c ủa cá nhâ n hay cơ quan, tổ chức của mình\n \n \n \n \n \n \n \n \n 187\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 188,
    "text": "Chươ\nFT ột giao thức chuẩn được định nghĩa trên \nInterne ây client là m ột hệ thống (thường là \nmáy tí đến server ho ặc một hệ thống khác (FTP \nsite) v\n \n7.1 FT g lệnh \nTừ dấu ào : \nTrong đ rver/tên host : là máy chủ hoặc host cung c ấp dịch vụ ftp mà \nđ ở account) t\nFTP bắt đầu kết nối với m nh công ng ười sử dụng được yêu cầu \nào tên login và m ậ ư sau :  \nlogin : \npassw ord : \nc kết nối, bạn c\nản  \nóng kết nối đến ho\nc help)  : hiển thị da\nand (hoặc help co c mô \nvề kết nối \nthiết lập kết xác định (với [host] là tên m áy). \nự kết nối đế\name(password)] : t\nh về thư mơc ng 7. Các ph ương pháp c ập nhật thông tin lên web \n \nFTP là gì? \nP (File Transfer Protocol) là m\nt. Nó là giao thức client/server, ở đ\nnh của bạn) gửi các yêu c ầu \nà nhận được trả lời từ site đó. \nP dưới dạng dòn\n nhắc DOS nh ập v\nftp <ftp server/tên host> \nó : FTP se\năng ký (m bạn đã ại đó. \náy này,  nếu thà\nnhập v t khẩu. Khi đó màn hình nh\nSau thủ tụ ó thể thực hiện 1 số lệnh sa u :  \na) Những lệnh cơ b\nquit : đ\n? (hoặst từ xa, ngừng chương trình ftp.  \nnh sách tất cả các lệnh ftp.  \nmmand) : hiển thị bản ?comm\ntả. g tóm tắt trực tiếp lệnh đượ\nb) Lệnh \nopen [host] : \n đóng s nối đến máy tính \nclose :\nuse [ nn host từ xa, trở lại ftp. \nhiết lập tên User.  \nc) Lện\ncd [directo\ncdup : chury] : chuyển đ\nyển về thư mục\ntên file cụ định trên máy ở xa, nội \nào tập ti\nirectory ] : chuyển đến thư mục được xác định trên host ở xa. \n gốc trên máy ở xa. \nc bộ] : dir [directory ] [\ndung được đưa v liệt kê thư mục xác \nn trên máy cục bộ. \nlcd [d ến thư mục cục bộ. \n 188\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 189,
    "text": "ls [directory ] : liệt kê danh sách f ile trong th ư mục có thể. \nwd : xem th ư mục hiện hành của máy ở xa. \nd) Lệnh ận filep\n truyền nh\nget <tê\nput <tênn file nguồn> <tên bộ. \n file nguồn> <tê ới \nmáy ở xa với : <tên file n  đường dẫn tên tập tin trên host  ở xa bạn \ny về \nle đích> : là đường\noặc truyền đi mộ\nể dùng các k\ndanh sách file ngu\nmget <danh sách file ngu\nP dưới dạng tru\nGiới thiệu một số c\n \nWS_FTP P ro có thể kết nối tới bất kỳ hệ thống nào với điều kiện hệ thống \nFTP server. Nó c ũng cho phé p \nUNIX. \nằng W\n dụng\n site mà c gọi là quá \nite profile\n- Site profile l ưu trữ các thông tin c ủa FTP site nh ư địa chỉ IP, Tên truy \nPassword) mà bạn sử dụng để kết nối. \n• ại Connect to Remote Hos ở tại cửa sổ WS_FT P \nPro, hã y nhấn c\n1. Tại hộp tho ấn chuột vào Create  \nSite. Hộp th file đích> : lấy tập tin từ máy ở xa về máy coc \nn file đích> : chuy ển tập tin từ máy máy coc b ộ t\nguồn> : là\nmuốn lấ\n<tên fi  dẫn và tên file t ại máy cục bộ  \nĐể lấy h\nsách tên có tht nhóm  tập tin dùng l ệnh : m put và m get với danh \ný tự đại diện như *, ?  \nmput < ồn>  \nồn>  \n \n \n7.2 FT\n yền file thông qua các ch ương trình \n7.2.1 hương trình FTP Client \nđó có địa chỉ IP chính xác và đã cài ứng dụng \ntruyền các file gi ữa các hệ điều hành khác nhau bao g ồm cả Windows, O S/2 và  \n \n7.2.2 Tạo kết nối b\nsửS_FTP Pro client \na vào các - Trước khi \nthông tin v ề WS_FTP Pro để truyền file, bạn phải đư\n bạn muốn kết nối tới. Quá trình này đượ\ntrình tạo S . \nnhập (Username) và M ật khẩu (\n- Để tạo Site profile  bạn làm theo các b ước sau: \n Nếu hộp tho t chưa m\nhuột vào C onnect để mở ra. \n \nại Connect to Remote Host, nh\noại tạo Site Profile xu ất hiện \n 189\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 190,
    "text": "2. Vào tên m à bạn muốn gọi cho site m ới của bạn trong ô Name \n3. Trong ô “ Create In ”, nhấn chuột vào nút Browse và ch ọn thư \nmục mà bạn muốn lưu site của bạn vào đó. Nếu bạn muốn lưu nó \nvào thư mục gốc, hã y chọn thư mục Sites. \n203.162.1. 44 hoặc  ftp.Ipswitch4. Nhấn “Next  >“ \n5. Trong ô “ Host Name or IP Address ”,  vào địa chỉ của FTP site \nủa FTP site. hoặc tên c\nVD: .com  \n6. Nhấn “Nex\n7. Trong ô “ U\n(Đây là tên ký khi tạo account ftp c ủa bạn) \n8. Trong ô “ P unt ftp \ntrên \n(Mật khẩu n  \n9. Chọn “Save\n10. Nhấn “Fini\n \nau khi bạn kết t ng \nthư mục(folder) mà b ạn chọn. Quá trình t ạo Site profile đã hoàn tất, bây giờ \n 2 uột vào nút  Connect \n- Hộp thoại Connec  \nPro sẽ tạo một kết nố ẽ \nị tất cả các thư  \nông thì cửa sổ  \ncủa site profile.  \nuyền file \n- Sau khi k ết nối tới FTP site, b ạn đã sẵn sàng để truyền các file gi ữa máy \nh của bạn và F TP  \nđược chia làm 2 lo ại: \n• Upload: tru TP site \n• Downl oad: bạn. \nGiữa hai cửa sổ lớt >” \nser ID”, vào tên truy nh ập (usernam e) \n mà đã được đăng \nassword”, vào mật khẩu (passwor d) của acco\này cũng được đăng ký khi t ạo account ftp c ủa bạn)\n Password” \nsh” \n-     S húc quá trình trên bạn sẽ nhìn t hấy site của bạn tro\nbạn có thể kết nối tới site đó: \n 1.  Chọn site profile c ần kết nối \n.  Nhấn ch\n \nt to Remote Host đóng lại và chương trình WS _FTP\ni FTP. Nếu kết nối thành công, c ửa sổ bên tay ph ải s\nhiển th\nNếu kh mục và file đuợc lưu trữ tại site mà b ạn kết nối tới.\nbên tay phải sẽ để trống, bạn hãy xem lại các thông s ố\n \n7.2.3 Tr\ntín  site mà bạn đang kết nối. Quá trình truy ền file này\n \nyền các file t ừ máy tính của bạn lên F\ntruyền các file t ừ FTP s ite về máy  của \n- n là 2 mũi tên để điều khiển truyền file \n 190\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 191,
    "text": "Chọn file tại cửa sổ bên phải (trên FTP site) và nh ấn chuột vào nút  để \nDownl oad fi ạn (hiển thị tại cửa sổ \nbên trái) le về thư mục hiện hành tr ong m áy của b\n \n  Chọn file tại cửa sổ bên trái (Máy của bạn) và nhấn chuột vào nút để \nupload file l ổ bên \nphải) \n \nvài chức năngên thư mục hiện hành của FTP site (hi ển thị tại cửa s\n \n7.2.4 Một  của WS_FTP \n \nGiao diện Classic và Ex  \nro có 2 plorer. Cả hai \n chức năng \nn hiển thị. \n- Đối với người lần đ P Pro nên sử dụng gia o diện \n trước khi sử dụ\n \nần này sẽ trình \ndiện Classic. Đối với g  tính năng cũng hoàn toàn gi ống \nsic, chúng chỉ khác\n thông tin Site pplorer \n- WS_FT\nđều có cácP P cách thể hiện giao diện, Classic và Ex\nvà hoạt động như nhau, chúng c hỉ khác nhau về giao \nầu tiên sử dụng W S_FTdiệ\nClassic ng giao di ện Expl orer \n-    P h bày các tính năng của WS_FTP Pro t hông qua giao \niao diện Expl orer các\nClas\n  nhau về giao diện hiển thị. \n7.2.4.1 Sửa rofile đã có sẵn \n \na hãy bắt đầu b hộp \nthoại “Connnect to Rem t để \nhiển thị. Chúng t ằng hộp thoại “Connect to Remote Host”. N ếu \note Ho st” chưa được mở, hãy nhấn nút Connec\n 191\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 192,
    "text": "Hộp thoại này để tạo, sửa chữa và sắp xếp lại các site profile c ủa bạn và các \nthư mục mà bạn sử dụng để lưu trữ chúng. Để sửa chữa site profile: \n• Chọn site profile c ần sửa chữa trong danh sách Site \n• Nhấn chuột vào nút Edit ở bên phải danh sách. \n \nTại hộp thoại Site Option v ừa hiện ra,  bạn vào các m ục được hiển thị dọc \nía trên cộ ost info, rt n, Advanc  thay \ng số sử dụng khi kết nối FTP site. \ny đ g để g i ó. \nứcng lder  go diện chương trìnhtheo ph\nđổi các thônủa hp thoại H Staup, Sessio ed để\n \nSau khi thaổi xon, bạn nhấn Ok hi lạcác thay đổi đ\n \n7.2.4.2. C ác ch  nă xử lý file và fo  trênia  \nay chíniữ nh _F Pro, bạn thấy chư  trình \nđược chia làm 2 kh ỏ hơn là Local System (máy tính c ủa bạn) \note System  TP Site). Hai khung c ửổ này cho bạn biết đang \n và Rem ote System , đồng thời cũng cho bi ết \nnhững gì được chứa trong th ư mục hiện thời bạn đang xem  \n- Ng h ga của chương trì\nung cửa sổ nhWSTP ơng\nvà Rem\nở đâu trong Local System(F a s bạn \n 192\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 193,
    "text": "- \n hiện được thì Remote System s ẽ không hi ển thị gì. \n- Một loạt các phím ch ức năng được trình bày d ọc theo bê n tay phải từng \ncửa Local System hi ển thị các file và folder trên máy tính c ủa bạn còn \nRemote System hi ển thị file và folder trên FTP site mà b ạn kết nối. Nếu kết \nnối không t hực\n sổ, được sử dụng điều khiển các file và folder Lo cal System và Remote \nSystem . cụ thể như sau: \n \n \n- ChgDirT tên thư \nmục \n- MkD T\n- View\n - Execute: Th ực hiện file chạy \n- Delete: Xóa file ho ặc folder \nLưu ý:: hay đổi \nir:ạo thư mục \n: Xem nội dung file - Refresh: C ập nhật lại danh sác h các file và \nfolder \n- DirInfo: Thông tin c ủa Remote System \n \ncó chức n ực hiện được, tùy theo quy ền của account ftp m à bạn \nđược cấp\nVí Dụ:Nếu các bạn thực hiện các chức năng này trên Remote System có th ể \năng không th\n. \n N bạn chỉ có quyền Xem  nội dung thì các ch ức \nnăng Ch MkDir , Execute , Delete  trên cửa sổ Rem ote System  không t hực \nhiện đượ\n \n7.2.4.3. C  năng trên Menuếu như acount ftp c ủa \ngDir , \nc. \nác chức  \nỞ phía trên c ủa chương trì nh W S_FTP Pr o, các bạn nhìn t hấy thanh m enu \nnhư sau: \n 193\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 194,
    "text": "Trên  tương tự như chúng tôi đã \ngiới tôi chỉ giới thiệu các m enu m à thường sử \ndụng\nSites menu: thanh Menu c ũng có một vài các ch ức năng\nthiệu ở phía trên. Ở đây chúng \n: \n \n es, Organise Sites t ương tự \nnhư khi chúng ta t ạo Site profiles ở phía trên. Ở dưới của menu là danh sách \ncác sites mà b ạn đã tạo tại hộp thoại “Connect to Remote Host”. Danh sách \nst”. \nHelpTrong menu nà y cũng có chức năng Add Sit\nnày thực ra là cách g ọi nha nh để bạn kết nối đến một site mà không c ần gọi \nđến hộp thoại “Connect to Remote Ho\n menu: \n n kết đến hệ thống trợ giúp trực tuyến của WS _FTP P ro. \nTại đ ụ thể về các chức năng, c ông cụ \ncủa W\n \n7.2.4.4  Bạn có t hể liê\nây có rất nhiều thông tin và h ướng dẫn c\nS_FTP Pro. \n Các thuật ngữ thông dụng trong khi s ử dụng WS_FTP Pro \nAddre\n- Địa : 203.162.4.1) hoặc tên  miền \n(VD: www.ftp.com ) \nối với FTP site \nRead  \nquyền Read ngh ĩa là bạn chỉ có thể copy và xem  files \ntrên site nh  Upload hoặc xóa filé.  \nRemo\nFTP \nng trình FTP Server.  \nSite \nMột ác của  FTP Server ho ặc FTP Site \nSite P\nLà n nối tới một site n ào đó được tạo ra bởi WS_FTP \nPro \nWrite\nAccount ft p của bạn có quyền Write  nghĩa là bạn có thể upload, thay đổi \nhoặcss \n chỉ của FTP site. Có th ể là địa chỉ IP (VD\nClient  \nChương trình ứng dụng để kết nối với FTP site. Ví d ụ: WS_FTP là FTP \nClient.  \nLocal Syst em \nMáy tính ho ặc thiết bị mạng của bạn dùng để kết n\nAccount ft p của bạn có \nưng không th ể\nte System \nsite mà bạn kết nối tới \nServer  \nMáy tính được cài đặt chươ\ncách gọi kh\nrofile \nơi lưu trữ thông tin k ết \n \n xóa files, cũng như dow nload và xem  nội dung của chúng. \n 194\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 195,
    "text": "Chươ ình Web – Ngôn \nngữ l\nriển của mạng \nlà sự p t hướng mới trong lập trình, đó là lập trình mạng. Với sự \nbùng n n cầu, sự ra đời của WW W( worl d wide web), đặt ra \nyêu cầ g tin một cách nha nh chóng, chính xác gi ữa các web \nserver các ngôn ngữ lập trình WEB ra đời. \n ng 8: Giới thiệu một số ngôn ng ữ lập tr\nập trình ASP  \n \nMạng m áy tính ngà y nay đã trở thành một thành ph ần qua n trọng trong ngành \ntruyền thông và cu ộc sống hàng ngày. Song song v ới việc phát t\nhát triển của mộ\nổ thông tin trên toà\nu phải xử lý thôn\nvới client. Do v ậy, \n8.1.Kh\n8.1.1.K\n CGI v của Common Gateway Interface, đó là m ôi trường lập trình chu ẩn \ngiữa Web Server và Các ch ương trình được viết bằng các ngôn ng ữ bất kỳ(Perl, \nC,..). K một trang We b viết bằng CGI, Web Server s ẽ xem \nphần m eb và gọi chương trình thông d ịch Script t ương \nứng(Sc ịch trang Web và tr ả lại kết quả cho người sử dụng. Các \nchươnái niệm về CGI: \nhái niệm: \niết tắt \nhi người sử dụng gọi \nở rộng của trang W\nript Engine) để d\ng trình viết bằng chuẩn CGI thường được đặt trong m ột thư mục ngầm \nđịnh có tên là CGI-BIN. \n \n8.1.2.Cấu trúc: \n \n \n8.1.3.V\nng trình đơn giản CGI viết bằng PERL: \n \n#!/usr/local/bin/perl \nprint  “content-type:text/html\\n\\n”; \nprint  “\n \n \nĐể chạ ng trình Perl CGI trên, c ần: \n \n chương trình v ới tên tệp hello.pl í dụ về một CGI viết bằng Perl \nDưới đây m inh hoạ một chươ\nHello, World!\\n”; \n \nKết quả hiển thị: \nHello, World! \ny chươ\n- Lưu\n 195\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 196,
    "text": "- Cài môi tr ường WEB Server(Có th ể sử dụng IIS, ho ặc Apache…) ở đây sử \ndụng I inh hoạ \n- Cài t rl(Active Perl) vào thư mục: C:\\Perl\\Bin \n- Khai\nÆChọn Scri pts Onl y(Để chạy các file \n.exe và .dll, ch ọn Scripts and Executables) \n+ Gắn  tên tệp với trình thông d ịch tương ứng(ở đây là \nPerl.ex\n duyệt Web để chạy file hello.pl \n IS làm ví dụ m\nrình thông dịch Pe\n báo các tham số sau trong IIS: \n+ Đặt quyền chạy Script b ằng cách Click chuột phải vào \nWebsiteÆProperties ÆHome Directory\n các phần mở rộng\ne) bằng cách Click chu ột phải vào We bsiteÆProperties ÆHome \nDirectoryÆConfiguration ÆAddÆ \n+ Sử dụng trình\n \n \n \n8.2.Giới thiệu một số ngôn ngữ lập trình WEB \n \nHiện nay c ác trang W EB động được lập trình khá đa dạng. Perl, PHP, ASP và \nJSP đều là những ngôn ng ữ lập trình kịch bản phía Server(Scripting Server \nnhập vào trang Web đó, trang W eb sẽ được \nWeS\n Side), tức là mỗi khi c ó một truy \nb erver thông dịch và trả lại kết quả cho người sử dụng(Client). \n8.2\nLà ô\nbởia ác .1. Perl, vi ết tắt của Practical Extraction and Report Langu age \nngn ngữ lập trình tuy ệt vời cho việc xử lý các xâu chu ỗi văn bản được viết \n Lrry Wall, sau được phát triển bởi những người sử dụng Pe rl khác. C\n 196\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 197,
    "text": "thưiệ\nCác ch h viết bằng Perl ch ạy tương đối nhanh do th ừa kế từ C-một \nngôn\nCG\nphiên \n  vn của Perl rất phong phú và có th ể bổ sung vi đó là một ngôn ng ữ mở. \nương trìn\nn gữ cấp thấp phổ dụng. Perl là s ự lựa chọn tuyệt vời cho các ứng dụng \nI và là ngôn ngữ lập trình tốt trên các h ệ Unix cùng v ới C. Hiện nay đã có \nbản PERL 6. \n8.2.2. \n(Chươ\ncũng khá ph  thể nhúng lẫn cùng các \nthẻ ờ tính \nlinhộ\nngười  với những ngôn ng ư khác như Java, CGI,... thì \nphp vư\ntrìntrPHP, viết tắt của PHP Hypertext Preprocessor \nng tr ình xử lý văn bản siêu liên k ết) là ngôn ngữ lập trình m ã nguồn mở \nổ dụng. C ác trang W eb viết bằng PHP có\n HTM L, PHP lúc đầu do một nhóm  người phát triển. Nhưng sa u đó nh\n đng và mã ngu ồn mở, php dần được hân rộng ra và ngày càng được nhiều \ntham gia phát tri ển. So\nơn lên nhờ tính dễ học của nó, không ph ức tạp như những ngôn ng ữ lập \nh ên web khác. Một trang We b viết bằng PH P có dạng sau: \n \n<html> \n    <head> \n        <title>Example</title> \n    </head> \n    <body> \n \n        <?php  \n        echo \"Hi, I'm a P HP script!\";  \n        ?> \n \n    </body> \n</html> \n \nNội dung của ngôn ng ữ lập trình PH P được đặt trong cặp thẻ <?php và ?> giúp \ncho trình thông dịch(Script Engine) s ẽ biết và chỉ dịch các thông tin trong c ặp \nthẻ đó m\nĐể chạ\nương trình trên và o file exam ple.php \n Cài đặt PHP vào t hư mục C:\\PHP(Vào địa chỉ \np.net để xem chi ti ết) \nCopy file php4ts.dll vào C:\\windows\\system32 \nCopy file php.ini-dist vào th ư mục Windows, đổi tên thành php.ini  \nở tệp php.ini, thay đổi: \nxtension_dir = C:\\PHP\\extensions \nssion.save_path = C:\\Windows\\temp \nCài Webserver(IIS, Apache…), ở đây ta dùng IIS minh ho ạ \nClick chuột phải vào Website Æ Properties Æ ISAPI Filters Æ Add \n Filtername: PHP \n Executable: Đường dẫn tới file php4isapi.dll à thôi. \ny chương trình trên c ần: \n- Lưu đoạn ch\n- Download và\nhttp://www.ph\n- \n- \n- M\ne\nse\n- \n- \n+\n+\n 197\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 198,
    "text": "- Click chuột phải vào Website Æ Properties Æ Home Directo ry Æ \nonfiguration Æ Mappings Æ Add \nĐường dẫn tới file php4isapi.dll \n Extension: .PHP \nSử dụng trình duyệt Web để chạy file example.php trên C\n+ Executable: \n+\n- \n \n8.2.3.JSP, viết tắt của Jav a Server Pages  \nà một ngôn ng ữ lập trình Scri pt giúp cho ng ười lập trình có th ể viết các đoạn \nã Java nhúng tr ực tiếp trong trang H TML. JSP là sự lựa chọn thông m inh cho \nứng dụng chạy trên cả Window và Unix. \niến trúc JSP nh ư sau: L\nm\ncác \nK\n \nMô tả: Người sử dụng(Client) g ửi một yêu cầu HTTP Re quest(bằng cách truy \nnhập vào một trang We b) lên We bserver. WebSer ver sẽ kiểm tra p hần mở rộng \ncủa\nối tượng Java(JavaBean)... Để \nịch và chạy được một trang JSP, Webserver c ần được cấu hình hợp lý để nhận \nra t\nCấu tr  JSP có dạng như sau: \n \n<HTM L>  file và nếu là có ph ần mở rộng là .JSP, Webserver chuy ển yêu cầu đến cho \nJSP container để dịch và chạy, sau đó gửi kết quả đến cho người sử dụng. \nTrong quá trình x ử lý, JSP container có th ể phải tương tác với các thành ph ần \nkhác như Cơ sở dữ liệu(thông qua JDBC), các đ\nd\như viện các lớp Java. \n \núc một trang\n<BODY> \nHello!\n</BODY> \n</HTML> \n \nKết qu\nHello!  The time is now <%= new java.util.Date() %> \nả hiển thị: \n The time is now  22/12/2003 \n 198\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 199,
    "text": "Mã chương trình JSP được đặt trong cặp thẻ <% và %> giúp cho trình t hông \ndịch JSP ch ỉ dịch nội dung đó mà không dịch các ph ần bên ngoài. \n \n8.2.4.Javas cript: \nJavascript l à một ngôn ng ữ Script được thiết kế tựa Java. Cần phân biệt rằng \nJavascript l à của Nescape, khác v ới Java của SUN. C ấu trúc Javascript được \nthiết kế sao cho d ễ dàng sử dụng đối với người sử dụng. J avascript được phân \nlàm Javascript cho phía  Serv er và Javascript cho phía Client. Nhì n chung các \nscript dành cho Serv er và Client t ương đối giống nhau, tuy nhiên các  script \ndành cho phía Server ch ủ yếu nặng về tương tác với các ứng dụng trên Server, \ntrong khi đó script dành cho phía Client ch ủ yếu dùng để trình \náy của người sử dụng. Nội dung của các mã Javascr ipt được bày và chạy trên \nđặt trong khai \náo <S age=”Javascript” Sr c=”Tên File.js”> và </Script> \nTrong .js là tên file chứa nội dung mã Javascript. \n m\nb cript langu\nđó Tên File\n8.2.5.A\nMicrosoft Active Server Pages (ASP) không h ẳn là một ngôn ng ữ lập trình , \nicrosoft gọi nó là môi tr ường server-side scripting, môi tr ường này cho phé p \ntạo và \n ASP coder thường sử dụng VBScript \nặc JavaS cript, cả hai loại này đều tự động hỗ trợ ASP.  \nrong các HTML, mỗi tag được bắt đầu và kết thúc bởi cặp \"< />\" , ASP c ũng \ntương \nác đoạn ASP script có th ể xuất hiện ở mọi nơi trong trang HTML, AS P & \nHTML ó thể chen các script th ực \nthi đượ\np tạo ra các tương tác của Web site \nột cách linh ho ạt uyển chuyển , có thể chen các thành ph ần HTML động vào \nang Web tùy vào t ừng trường hợp cụ thể. SP \nM\nchạy các các ứng dụng Web server động , tương tác và có hi ệu quả cao. \nÐể làm việc trong m ôi trường này , các\nho\n \nT\ntự như vậy. Ðể đánh dấu nơi nào A SP script bắt đầu và kết thúc dùng c ặp \nlệnh \"\". \n \nC\n có sự gắn bó chặt chẽ với nhau. Với ASP ta c\nc vào trực tiếp các file HTML . Khi đó việc tạo ra trang H TML và xử lý \nscript trở nên đồng thời, điều này cho phé\nm\ntr\n \nVBScript là ngôn ng ữ mặc định của ASP, nếu muốn sử dụng một ngôn ng ữ \nkhác thì chúng ta c ần phải định nghĩa ngôn ng ữ. Tại đầu trang thêm dòng : \n \n<@script langua ge=”Tên ngôn ng ữ Script”>  \n \nVBScript dễ học và rất tiện lợi nếu chúng ta đã học qua VB. \nCác A ng là .asp . Khi \ncho script ch ạ p://msdn.microsoft.com/default.asp thì mọi quá  \ntrình x efault.asp sẽ diễn ra trên server thay vì ch ạy ở client , Web \nrver của sẽ làm mọi công việc cần thiết để tạo ra một trang kết quả dạng \n(Hypertext Markup Language) , như thế không cần phải bận tâm rằng SP script được viết và đặt trong các file có ph ần mở rộ\ny, ví dụ như : htt\nử lý của file d\nse\nHTML\n 199\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 200,
    "text": "các W ã làm mọi việc. \n \nCác tín điểm của ASP \nác ASP script thông t hường chạy trên các server cài IIS ( Microsoft Internet \nInf ng ASPvẫn có thể làm việc với đa số các Web server \ntrên có thể trên một số hệ điều \nhànk\n \nuy trình thực hiện một của ASP nh ư sau : khi m ột user thông qua trình duy ệt \nwe\nả về cho We b brower là m ột trang HTML. \nhực ra thì quá trình t ạo trang HTML và th ực thi script là hai quá trình riêng \nực thi trước khi chuy ển kết quả cho \nh tốc độ phát \ntriển ứ SP \nhi đư  được ở mọi nơi, không c ần trình biên d ịch ha y \nt được viết dựa trên các ngôn ng ữ hướng đối tượng nê n rất tiện \ni, sẵn có các object đi kèm  như: Request, Response, Application, Server, \nSessio n dụng được các ActiveX components nh ư : Database access ,  \nata Object, Browser capabilities,File Access, \n. Hơn nữa nó compone nts từ các nhà phân ph ối \nhác, cng cấ\n \nNhững tính ch ất trên đem đến cho ta nh ững lợi ích xác th ực, cho phép t ạo ra \ncác ứn\nđã \nghé th a web site của mình, các web builder có th ế dùng asp để tạo ra các \nfile cơở dữ n máy chủ, khi cần có thể tiện tra cứu. \n \n8.3. – gôn \n \n8.3.1 Kến th\n u phải có Mic rosoft \nInterne\n c khi bắt đầu học viết VBScript, b ạn cần phải biết các khái ni ệm cơ \nbản vềWWW, HTML và các kiến thức căn bản để xây dựng một trang we b. \n eb browser có thể xử lý trang We b hay không vì server đ\nh chất và ưu \n \nC\normation Server). Như\n NT (Netscape, Oreilly ) sử dụng ChiliSoft ASP, \nh hác nh Linux, SunSolaris. \nQ\nb gửi yêu cầu tới một file .asp ở server thì script ch ứa trong file đó sẽ được \nchạy trên s erver và trả kết quả về cho browser đó. Khi Web server  nhận được \nyêu cầu tới một file .asp thì nó s ẽ đọc từ đầu tới cuối file .asp đó, thực hiện các  \nlệnh script trong đó và trả kết qu\n \nT\nbiệt, script sẽ được ASP engine d ịch và th\nWeb server, t ới giai đoạn này các m ã HTML và k ết quả sẽ kết hợp để tạo nên \nmột trang Web. Vi ệc nhúng HTML và script ch ỉ để làm đẩy nhan\nng dụng mà thôi. Do môi tr ường hoạt động là mạng nên một script A\nkợc viết ra có thể sử dụng\nkết nối. \n \nCác ASP scrip\nlợ\nn. Tậ\nContent linking, Collaboration D\n..  cũng có thể tận dụng được \nk u p dưới dạng các file .dll \ng dụng Web t hương mại có tương tác chứ không c hỉ đơn thuần là phổ \nbiến các nội dung tĩnh. Ví dụ như để lưu giữ lại thông tin v ề các khá ch hà ng \năm qu\n s liệu khách hà ng lưu trê\nN ngữ ASP \niức cơ bản về VBScript \nVBScript l à một công ngh ệ của Microsoft  yêu cầ\nt Explorer. \nTrướ\n: \nVBScript là gì?  \n 200\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 201,
    "text": "VBScript là m ột ngôn ngữ script. M ột ngôn ng ữ script là một ngôn ng ữ \np trình nh ẹ. VBScript là phiên b ản nhẹ của ngôn ng ữ lập trình Vus ual Basic.  lậ\n VBScript làm  việc như thế nào? \n Khi VBScr ipt được chèn và o trong văn bản HTML, trình duy ệt Internet \nsẽ đọc văn bản HTML đó và dịch các đoạn mã VBS cript. Các đoạn mã này \nđược thực hiện hoặc là nga y lúc đó hoặc trong các s ự kiện sau này. \n \n8.3.1.1- Biến và phạm vi biến \n ủa biến có \nthể đư ột biến \nông qua tên của nó, cũng như có thể thay đổi giá trị của biến đó. Trong \nVBScript, t ất cả các biến đều có kiểu là va riant, và nõ có t hể lưu trữ bất kỳ \ndạng d o. \n Quy ắt đầu bằng một chữ cái, không ch ứa dấu (.) và \nđộ dài\nBạn có t hể khai bá o biến với các từ khoá Dim , Public ho ặc Private.  \no một biến tên nam e và gán cho nó m ột giá trị: \ne = giá trị \n giá trị \n \ni tên biến và có th ể nhận được kết quả không chí nh xác khi  chạy chương \nột tên biến tên “nam e”, sau đó bạn \nOption Explicit \nCách gán giá tr ị cho biến: \nname = “Nguyễn Minh P hượng” Biến là một vùng ch ứa thông tin mà b ạn cần lưu trữ. Giá trị c\nợc thay đổi trong quá trình l ập trình. B ạn có thể làm việc với m\nth\nữ liệu nà\ntắc đặt tên biến: B\ntự.  không quá 255 ký \n \nVí dụ dưới đây khai bá\n Dim name \n nam\nBạn cũng có thể khai  báo biến bằng cách s ử dụng nó trong script c ủa \nbạn. Ví dụ: \nname =\nTuy vậy, cách khai báo này không được tường minh và không t ốt cho \nứng dụng của bạn, vì sau đó trong ứng dụng của mình, b ạn có thể vô tình vi ết\nsa\ntrình. Điều đó xảy ra là vì gi ả sử bạn có m\ngọi tới biến đó bằng một tên “nim e” chẳng hạn, chương trình s ẽ tự động sinh ra \nthêm  1 biến tên “nim e”. Để tránh xảy ra điều nhầm lẫn này,  bạn nên sử dụng \ncâu lệnh Option Explicit. Khi s ử dụng câu lênh này, t ất cả các b iến đều phải \nkhai bá o trước khi sử dụng bởi các câu l ệnh với từ khoá Dim , Public ho ặc \nPrivate. Đặt câu lệnh Option Explicit trên đầu của chương trình c ủa bạn, như ví \ndụ sau: \nDim n ame \nname = giá trị \nBạn có t hể gán giá tr ị cho c ho một biến như sau: \n 201\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 202,
    "text": "i = 200 \n Thời gian s sống của biến \n Khoảng thời gian biến đó tồn tại được gọi là thời gian sống của nó. \n đó chỉ được truy xuất \ni trong ph ạm vi thủ tục đó. Khi thủ tục đó kết thúc, cá c biến đó cũng bị huỷ. \những biến này được gọi là biến cục bộ. Bạn có thể đặt các biến cục bộ trùng \nn nhau trong các thủ tục khác nha u, bởi vì mỗi biến chỉ được nhận biết bởi \nhính thủ tục trong đó chúng được khai bá o. \ni một thủ tục, tất cả các thủ tục nằm \ntừ lúc nó được khai bá o và kết thúc khi trang web được đóng lại. \n t biến, khi đó bạn \nkhai bá o một  dữ liệu. Biến này được gọi là biến array. \nĐể khai bá o y, bạn đặt dấu ngoặc đơn nga y sau tên bi ến. \nVí dụ sau chú ột biến array gồm có 3 giá tr ị: \ndim na\n \nGiá trị ủa biến array bắt đầu bởi 0 cho \nnên bi ị. Đây là một array có độ dài cố định. Bạn gán \niá trị cho t n tử của array bằng cách sau: \n” \nnames(2)=”Hoà ng Khánh H ưng” \nất kỳ phần tử nào tr ong array \nà bạn cần bằng cách sử dụng chỉ số tương ứng của phần tử: \n hể khai bá o nhiều nhất tới 60 chiều cho một array. Các chi ều \nđược khai báo cách nhau b ởi dấu phẩy. Ví dụ sau khai báo m ột array ba o gồm 5 \ndòng và 7 c ột: \n dim  table(4,6\n  \n8.3.1.2- C ác kiểu dữ Khi bạn khai báo m ột biến trong m ột thủ tục, biến\ntớ\nN\ntê\nc\n Nếu bạn khai báo m ột biến bên ngoà\ntrong cùng trang đó đều có t hể truy nhập tới biến đó. Thời gian sống của biến \nnày bắt đầu \n Biến Array: \nCó những khi bạn muốn gán nhiều hơn 1 giá t rị cho mộ\nbiến có thể chứa một dãy\nmột biến là biến arra\nng ta khai báo m\nmes(2) \n số trong dấu n\ngồm 3 giá trgoặc là 2. Ch ỉ số c\nến này sẽ bao \nừng phầ g\nnames(0) = “Nguy ễn Thanh Bì nh\nnames(1)=”Nguy ễn Minh P hượng” \n Tương tự như vậy ta có thể lấy giá trị của b\nm\n eng = nam es(0) \nBạn có t\n)   \n liệu: \n Kiểu dữ liệu \n VBScript chỉột kiểu dữ liệu tên là variant. Ki ểu variant là m ột kiểu \ndữ liệu đặc biệt có th nhau phụ thuộc vào các h sử \ndụng chúng. C ũng vì nó là ki ểu dữ liệu duy nhất trong VB Script c ho nên tất cả \ncác hàm c ủa VBScri ề kiểu dữ liệu này. trong VB Script là gì ? \n có m\nể chứa các loại thông ti n khác \npt đều trả v\n 202\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 203,
    "text": "Nói m ơn giản nhất, một biến variant có t hể chứa thông tin là \nmột số hoặc một xâu. Biến variant này x ử sự như một số khi bạn sử dụng nó \ntrong ngữ cả ư một xâu khi b ạn sử dụng nó trong ng ữ cảnh xâu. \nĐiều đó có nghĩa là  giống kiểu số, \nVBScript s ẽ cho rằn các công việc phù hợp \nnhất với một số. Tư ữ liệu là một xâu, \nVBScript coi t xâu. Tất nhiê n bạn hoà n toà n có thể coi dữ liệu số là \nmột xâ ch đặt số đó trong ngoặc kép (“”). \nKiểu dữ liệu con của Variant – variant subtypes \nơn giản là phân biệt số và xâu, m ột variant có th ể phân biệt \nược thông tin s ố theo cách khác. Ch ảng hạn như bạn có thể có một dữ liệu số \nđại di i một dữ liệu kiểu \nDate/Time kh ợc biểu diễn dưới dạng Date/Time. \nTất nhiên bạn có thể còn có m ột loạt các dữ liệu dạng số với kích thước khác \nnhau từ kiểu u floating – point. C ác dạng thông ti n khác \nnhau đó có th ợc lưu trong bi ến variant g ọi là các ki ểu con (subtype). P hần \nlớn thời gian ủa bạn vào biến variant và bi ến này sẽ \nhoạt động theo cách x ử lý dữ liệu giống như chính dữ liệu mà nó c hứa. \n \n Bảng dới đâ iệu con của variant: \n ột cách đ\nnh số và nh\n nếu bạn làm  việc với một dữ liệu trông\ng đó là một số và thực hiện tất cả \nơng tự như vậy, nếu bạn làm  việc với d\n đó là mộ\nu bằng cá\n \n Ngoài việc đ\nđ\nện cho Date/Time. Khi b ạn sử dụng nó cùng v ớ\nác thì kết quả trả về luôn đư\n Boolean cho t ới kiể\nể đư\n, bạn chỉ cần gán dữ liệu c\nư y mô tả các kiểu dữ l\nSubtype Mô tả \nEmpty Variant chưa được gán giá trị ban đầu. Có giá trị 0 đối với các biến \nối với biến xâu. kiểu số và xâu rỗng (“”) đ\nNull Variant không ch ứa dữ liệu \nBoolean Có gái trị là True ho ặc False \nByte Ch ứa số nguyê n từ 0 tới 255.  \nIntege i 32,767.  r Chứa số nguyê n từ -32,768 t ớ\nCurren ,337,203,685,477.5808 tới 922, 337,203,685,477.5807. cy -922\nLong Cố nguyê n từ -2,147,483,648 t ới  2,147,483,647. hứa s\nSingle C g-point từ  -1.402823E38 t ới \n-1.401298E-45 ừ 1.401298E-45 t ới \n3. . hứa số single-precision, floatin\nđối với giá trị âm, t\n402823E38 đối với giá trị dương\nDouble Cố double- precision, floati ng-point -1.797 69313486232E308 \n.94065645841247E-324 đối với giá trị âm, từ  \n4.94065645841247E-324 t ới 1.79769313486232E308 đối với giá \ntrịhứa s\nto -4\n dương. \nDate \n(Time)C ho ngày tính từ Januar y 1, 100 tới \ner 31, 9999.  Decehứa một giá trị số đại diện c\nmb\n 203\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 204,
    "text": "String ột xâu có độ dài bất kỳ dài nhất khoảng 2 tỷ ký tự Chứa m\nObject Ch ứa một Object \nError Chứa mã số lỗi \nBạn có t hể dùng các hàm chuy ển đổi kiểu dữ liệu để chuyển dữ liệu giữa \ncác kiểu dữ liệu con với nhau. Thê m vào đó, hàm  VarType cho b ạn biết thông \ntin về cách lưu trữ dữ liệu của bạn trong bi ến Variant.  \n8.3.1.3- C ác hàm trong VBScript:  \nDưới đây liệt kê các hàm có s ẵn trong VB Script. Các hà m này được chia \n thành các loại sau: \nCác hà ian (Date/Time Functions) ra\n- Các hàm v ề thời gian \n- Các hàm chuy ển đổi kiểu dữ liệu \n- Các hàm định dạng dữ liệu \n- Các hàm toán h ọc \n- Các hàm v ề dãy \n- Các hàm v ề xâu \n- Các hàm khác \nm về thời g\nTên hàm Mô tả \nCDate Chuyển biểu thức có dạng date and time chuẩn sang \ndạng Date \nDate Trả về ngày giờ hệ thống \nDateAdd Trả về ngày được cộng thêm m ột khoảng thời gian \nDateDiff Trả về giá trị số là khoảng thời gian giữa hai giá tr ị \nngày. \nDatePart Trả về phần xác định của ngày. \nDay Trả về ngày hiện tại. Giá trị từ 1 tới 31. \nForm atDateTime Trả về biểu thức đã được định dạng theo ki ểu date or \ntime \nHour Trả về giá trị là một số chỉ giờ hiện hành trong ngày, \ncó giá trị từ 0 tới 23. \nIsDate Trả về giá trị Boolean cho bi ết biểu thức có thể \nchuyển sang dạng ngày tháng hay không. \nMinute Trả về giá trị số là phút của giờ (có giá tr ị từ 0 tới 59)\nMonth Cho biết tháng hi ện hành ( Có giá trị từ 1 tới 12) \nMonthName Trả về tên tháng \n 204\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 205,
    "text": "Now Cho biết ngày giờ hiện hành của hệ thống \nSecond Trả về số đại diện cho giây (C ó giá trị từ 0 tới 59) \nTime Trả về giờ hệ thống \nTimer Trả về giá trị số giây tính t ừ 12:00 AM \nWeekday Trả về số đại diện cho ngà y trong tu ần (Có giá trị từ 1 \ntới 7) \nWeekdayName Trả về tên ngà y trong tu ần \nYear Trả về năm hiện hành \n \nCác hà  kiểu dữ liệu (Conversion Functions) \n m chuyển\n \nTên hàm  Mô tả \nAsc Chuyển ký tự đầu tiên của xâu sang m ã ANSI . \nCBool Chuyển dữ liệu kiểu variant sang ki ểu subt ype \nBoolean \nCByte Chuyển dữ liệu từ kiểu variant sang ki ểu subtype \nByte \nCCur Chuyển dữ liệu từ kiểu variant sang ki ểu subtype \nCurrenc y \nCDate Chuyển dữ liệu từ biểu thức dạng date/time sang kiểu \nsubtype Da te/Tim e \nCDbl Chuyển biểu thức từ kiểu variant sang ki ểu subtype \nDouble \nChr Chuyển mã ANSI sang ký t ự \nCInt Chuyển dữ liệu kiểu variant sang ki ểu subt ype Integer\nCLng Chuyển dữ liệu kiểu variant sang ki ểu subt ype Long \nCSng Chuyển dữ liệu kiểu variant sang ki ểu subt ype Single\nCStr Chuyển dữ liệu kiểu variant sang kiểu subt ype String\n \n \nCác hàm định dạng dữ liệu (Form at Functions) \n  \nTên hàm  Mô tả \nFormatCurrency Trả về biểu thức được định dạng kiểu như currency  \nForm atDateTim e Trả về biểu thức được định dạng kiểu date or tim e \nFormatNumber Trả về biểu thức được định dạng kiểu số. \nFormatPercent Trả về biểu thức được định dạng kiểu percent age \n \nCác hàm toán h ọc (Math Functions) \n  \n 205\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 206,
    "text": "Tên hàm  Mô tả \nAbs Giá trị tuyệt đối của một số \nAtn Trả về cotan của một số \nCos Giá trị cosine của một số (Góc) \nHex Cho giá trị hexa decim al của một số \nInt Trả về phần nguyê n của một số \nFix Trả về phần nguyê n của một số \nLog Logarit tự nhiê n của một số \nOct Cho giá trị octal của một số \nRnd Cho một số ngẫu nhiên nh ỏ hơn 1 và lớn hơn hoặc \nbằng 0 \nSgn Trả về một số đại diện cho dấu của số \nSin Giá trị Sin của một số (Góc) \nSqr Bình phương của một số \nTan Giá trị Tang của một số (Góc) \n \n \n \n \n \n \nCác hà ray Functions) \n  m về array (Ar\nTên hàm  Mô tả \nArray Trả về một variant ch ứa một array \nIsArray Trả về giá trị Bool ceanho biết biến đó có phải là một \narray hay không. \nJoin Trả về một xâu c hứa số các xâu c on trong dã y \nLBound Trả về cận dưới của chiếu được chỉ định của một \narray \nSplit Trả về một array 1 chi ều chứa một số lượng phần tử \nđược chỉ định. \nUBound Trả về cận trên của chiều được chỉ định của array  \n \nCác hàm v ề xâu (String Functions)  \n  \nTên hàm  Mô tả \nInStr Trả về vị trí đầu tiên m à một xâu xuất hiện trong m ột \nxâu khác. Tìm  kiếm được bắt đầu từ ký tự đầu tiên \ncủa xâu \nInStrRev Trả về vị trí đầu tiên m à một xâu xuất hiện trong m ột \n 206\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 207,
    "text": "xâu khác. Tìm  kiếm được bắt đầu từ ký tự cuối cùng \ncủa xâu \nLCase Chuyển tất cả các ký tự của một xâu thà nh chữ \nthường \nLeft Trả về một xâu c ó độ dài được chỉ định tính từ ký tự \nđầu tiên \nLen Trả về đọ dài của xâu \nLTrim  Xoá các ký tự trắng bê n trái của xâu \nRTrim Xoá các ký t ự trắng bê n phải của xâu \nTrim  Xoá các ký tự trắng ở cả hai phía c ủa xâu \nMid Trả về một xâu c ó độ dài được chỉ định và bắt đầu từ \nmột vị trí được chỉ định của xâu nguồn \nReplace Thay một phần của xâu bởi một xâu khác. S ố các lần \nthay được chỉ định trước. \nRight Trả về một xâu c ó độ dài được chỉ định tính từ ký tự \ncuối cùng \nSpace Trả về một xâu c hỉ gồm toàn dấu cách. Số lượng dấu \ncách được chỉ định \nStrComp So sánh hai  xâu và trả về một giá trị là kết quả của \nphép so sánh \nString Trả về một xâu c ó đọ dài được chỉ định và được tạo \nra bằng các h lặp đi lặp lại một ký tự nào đó \nStrReverse Trả về một xâu bằng cách quay ng ược một xâu có s ẵn\nUCase Chuyển tất cả các ký tự của 1 xâu thành c hữ hoa \n \n \n   \n Các hàm khác (Other Functions) \n \nTên hàm  Mô tả \nCreateObject Tạo một Object có ki ểu được chỉ định \nEval Đánh giá m ột biểu thức và trả về một giá trị là kết \nquả của sự đánh giá đó \nInputBox Hiển thị một hộp thoại cho phé p người sử dụng có \nthể điền thông tin vào \nIsEmpty Trả về một giá trị Bool ean cho bi ết một biến đã được \ngán giá tr ị hay c hưa \nIsNull Kiểm tra x em một biến có là Null (Không ch ứa dữ \nliệu) không. K ết quả là một giá trị Boolean \nIsNumeric Trả về một giá trị Bool ean cho bi ết biểu thức đó có \nthể chuyển thành dạng số không \n 207\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 208,
    "text": "MsgBox Hiển thị một hộp tin nhắn và chờ người sử dụng \nclick vào m ột nút lệnh, và trả về giá trị cho biết \nngười sử dụng đã click nà o nút lệnh nào \nRound Làm tròn một số \nScriptEngi ne Trả về tên của script đang dùng \nTypeNam e Trả về tên kiểu dữ liệu con của biến \nVarType Trả về giá trị của kiểu dữ liệu con của biến \n \n \n8.3.1.4- C ác toán tử và biểu thức \n \ntử \nu thức, từng phần của \n thứ tự ưu tiên. Bạn có \nn và bắt một phần nào đó của \nhác. Các biểu thức bên trong  \n Khi các biểu thức chứa nhiều loại toán tử khác nha u, cá c toán tử số học \nđược x lý trước, sau đến các toán t ử so sánh r ồi cuối cùng là các toán t ử logic. \n tự ưu tiên, tức là chúng s ẽ được xủa lý từ \n VBScript có m ột tập hợp lớn các loại toán tử, chia ra thành ba lo ại là các \ntoán tử số học, các toán t ử so sánh và ghép n ối (concatenation ), và các toán \nlogical. \n Th ứ tự ưu tiên của các toán t ử \n Khi c ó nhiều toá n tử cùng xuất hiện trong m ột biể\neo một trình tự gọi là biểu thức được đánh giá và x ử lý th\nthể dùng dấu ngoặc đơn để thay đổi thứ tự ưu tiê\niểu thức phải được thực hiện trước các phần k b\ndấu ngoặc đơn luôn được xử lý trước những biểu thức bên ngoài.  Tất nhiên, \nnếu biểu thức trong ngo ặc chứa nhiều toán tử thì chúng c ũng phải tuân theo th ứ \ntự ưu tiên chuẩn.  \nử\nCác toán t ử so sánh t ất cả có cùng th ứ\ntrái qua ph ải theo thứ tự xuất hiện. Các toán t ử số học và logic được xử lý theo\nthứ tự sau: \n \nSố học So sánh Logic \nMô tả Ký \nhiệu Mô tả Ký \nhiệu Mô tả Ký hiệu \nMũ hoá ^ So sánh b ằng = Phủ nhận \nlogic Not \nPhép nhân * So sánh khác \nnhau <> Và And \nPhép chia / Nhỏ hơn < Hoặc Or \nCh Lớn hơn > Loại trừ Xor ia lấy \\ \nphần nguyê n \n 208\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 209,
    "text": "Chia lấy số \ndư ỏ hơn hoặc \nbằng <= So sánh b ằng Eqv Mod Nh\nPhép cộng + Lớn hơn hoặc \nbằng >=   \nPhé\nương đương Is       p trừ - So sánh Object \nt\nGhép xâu &             \n hi ph n và chia cùng xuất hiện trong m ột biểu thức, chúng được \nxử lý t\ncộng v\n \ni hay không.   \n \n8.3.1.5- C ác cu trúc điều khiểnK ép nhâ\nừ phải qua trái theo th ứ tự xuất hiện. Tương tự như vậy đối với phép \nà phép trừ. \nPhép ghép xâu không t huộc nhóm toán t ử số học nhưng về thứ tự ưu tiên \nnó đứng sau các toán tử số học và trước các toán t ử so sánh. Toá n tử Is là một \ntoán tử so sánh việc tham chi ếu Object. Nó không dùng để so sánh object ha y \ngiá trị của chúng, nó ch ỉ cho biết xem hai tham chi ếu obj ect (object references) \ncó loa\nấ  \n tuỳ thuộc vào một số điều kiện. Bạn có thể dùng cấu trúc điều kiển để \nực hiện điều này. \n: \n và \nif i = 10 then \n m sgbox “Hello” \nLựa chọn một trong hai t ập hợp lệnh để thực hiện: Nếu bạn muốn  Khi bạn viết chương trình, nhi ều khi bạn cần thực hiện một hành động \nnào đó\nth\n Trong VBScript có 3 d ạng cấu trúc điều khiển\n Câu lệnh if ... then ... else: S ử dụng câ u lệnh nà y khi bạn cần lựa chọn \nmột trong điều kiện để thực hiện một trong hai t ập hợp lệnh. Dùng câu l ệnh nà y \nbạn có thể: \n- Thực hiện một tập hợp lệnh nà o đó nếu điều kiên tho ả mãn . \nif i = 10 then msgbox “Hello” \nNếu bạn muốn thực hiện nhiều hơn một câu lệnh khi điều kiện được \nthoả mãn , bạn cần viết từng câu lệnh trên m ột dòng lệnh khác nhau\nkết thúc bởi từ khoá “End If”  \n i = i + 1 \nEnd if \n- \nthực hiện một tập hợp lệnh nà o đó khi điều kiện được thoả mãn và \n 209\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 210,
    "text": "thực hiện một tập hợp lệnh khác n ếu điều kiện không tho ả mãn , bạn \n m sgbox “Hello” \n m sgbox “Goodbye” \nEn\nu lệnh nà y khi bạn muốn lựa \nọn m\nif payment=\"Cash\" then \n elseif \n   msgbox \"Y o pay with visa.\" \n elseif payment=\"AmEx\" then \n   msgbox \"You are goi ng to pay with Am erican Express.\" \n els\n   m x \"Unknown method of paym ent.\" \nend\n \n Câu Select case: Sử dụng câu lệnh này khi b ạn muốn lựa chọn một \ntrong nhiề  hợp lệnh để thực hiện. \n   msgbox \"You are goi ng to pay cash\" \n case \"Visa\" \n to pay with visa\" \n\"You are going to pay with Am erican Express\" \n of payment\" \nlect \n \nthư\nsán\nlện\n8.3 u trúc lặpdùng như sau: \nif i = 10 then \nelse \nd if \n Câu lệnh if ... then....elseif: S ử dụng câ\nchột trong nhi ều tập hợp lệnh để thực hiện. \n   msgbox \"You are goi ng to pay cash!\" \npayment=\"Visa\" then \nou are going t\ne \nsgbo\n If \nlệnh \nu tập\nselect case payment \n case \"Cash\" \n   msgbox \"You are goi ng\n case \"AmEx\" \n   msgbox \n case Else \n   msgbox \"Unknown m ethod\nend se\nCâu lệnh này làm vi ệc như sau: Đầu tiên chúng ta có m ột biểu thức, \nờng là một biến, cần được đánh giá giá tr ị. Giá trị của biểu thức này được so \nh với từng giá trị trong cấu trúc Case. N ếu chúng b ằng nha u, tập hợp các \nh tương ứng với giá trị Case đó được thực hiện. \n \n.1.6. C ác cấ  \nCấu trúc For...next \n 210\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 211,
    "text": "Câu lệnh For...Next: L ặp lại việc thực hiện một tập hợp các câu l ệnh một \nsố xác\nmỗ\nCác lệnh ở đây \nvòn\nGiá\n For dùng để nhảy ra khỏi vòng lặp. \nđối p, hoặc với mỗi phần tử trong một dãy. Câu \nnh nà y thực hiên không khác nguyên t ắc của vòng For...Next, ch ỉ khác ở chỗ \nbạn\nnames(0)=\"Tove\" \nx in names \nDo ... Loop: \nó thể dùng cấu trúc nà y để thực hiện một tập hợp lệnh khi bạn \nkhông hực hiện khi điều kiện \nWhile le để kiểm tra điều kiện \ntrong c ...Loop.  \n i>10 \nLoop \nh trong cấu trúc này không được thực hiện lần  định lần. Bạn có thể sử dụng một biến đếm tăng dần hoặc giảm dần sau \ni lần thực hiện vòng lặp.  \nCú phá p:  \nFor i = 1 to 10 step 2 \n \nNext \n \nTừ khoá step ch ỉ bước nhảy sau mỗi lần thực hiện các câu l ệnh trong \ng lặp. Nếu bạn dùng vòng l ặp giảm dần thì giá tr ị của step cần đặt là số âm. \n trị ngầm định là 1. \nTừ khoá Exit\nVòng lặp với For Each... Next: Vòng l ặp này thực hiện một tập hợp lệnh \n với mỗi phần tử trong tập hợ\nlệ\n không cần chỉ ra số lượng lần bạn muốn thực hiện vòng lặp. \ndim nam es(2) \nnames(1)=\"Jani\" \nnames(2)=\"Hege\" \n \nFor Each \n  doc ument.write(x & \"<br />\") \nNext \n \nCấu trúc \nTừ khoá W hile \nBạn c\n biết trước số lần cần thực hiện. V òng lặp sẽ t\nvẫn còn được thoã mãn. Bạn dùng từ khoá Whi\nấu trúc Do\nDo While\n  some code \nNếu i = 9 thì các câu l ện\nnào. N hưng nếu bạn thay đổi đoạn mã tr ên như sau: \nDo \n  some code \nLoop While i>10 \n 211\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 212,
    "text": "Thì các câu l ệnh trong Do...Loop được thực hiện ít nhất một lần ngay cả \nkhi giá\n \nTừ khoá Until \nLặp lại việc thực hiện các lệnh cho tới khi điều kiện thoả mãn  bằng việc \nừ khoá Until. \np:  \no Until i=10 \nc thực hiện lần \n \nome code \nột lần trong \noát ra khỏi Do...Loop: B ạn dùng lệnh Exit Do để thoát ra khỏi vòng \n.Loop: \n<10 Then Exit Do \nc câu lệnh trong vòng l ặp được thực hiện khi khác  10, và khi  i lớn \nơn 10. \nôn ngữ ASP \nASP là vi ết tắt của Active Server Pages. \nindows 95/98. \nASP là c ông nghệ của Microsoft. ChiliASP là m ột công ngh ệ cho phép \nchạy A\nành Windows.  trị của i nhỏ hơn 10. \nsử dụng t\nCú phá\nD\n  some code  \nLoop \nNếu i = 10, các câu l ệnh bên trong vòng l ặp không đượ\nnào. \nDo\n  s\nLoop Until i=10 \nCác câu l ệnh bê n trong vòng l ặp được thực hiện ít nhất m\ntrường hợp bạn kiểm tra điều kiện sau. \n \nTừ khoá Exit Do \nTh\nlặp Do..\nDo Until i=10 \ni=i-1   \n  If i\nLoop \nCá\nh\n \n8.3.2 - Ng\n \n ASP là m ột chương trình ứng dụng web động chạy trong môi tr ường IIS \n(Internet Information Services). IIS là m ột thành ph ần miễn phí đi kèm với \nWindows 2000 ho ặc Windows NT 4.0 O ption Back. Ngoài ra ASP c ũng chạy \nrong môi trường PWS (Personal Web Server). PWS là m ột phiê n bản nhỏ hơn t\nnhưng có đầy đủ tính năng của IIS. PW S có thể tìm thấy trong W\n \nSP không trong môi trường Windows. InstantASP c ũng là một công \nnghệ khác cho phé p chạy ASP không c ần hệ điều h\n 212\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 213,
    "text": "Một file ASP c ũng tương tự như một file HTML. File ASP có th ể chứa \nác dòng văn bản, các thẻ HTML, XML  hoặc các Scripts. Các scripts trong file \nc thực hiện trên m áy chủ web. Một file ASP có ph ần mở rộng là .asp. \nột file \nệt yêu cầu \nngine đọc file \nng file đó. Cuối cùng nó tr ả về cho \nệt một file HTML thu ần tuý. \nASP đáp ứng các yêu c ầu: \nạn soạn thảo, chỉnh sửa hay thêm  bớt bất kỳ thành ph ần nào \nng. \nsử dụng hoặc dữ liệu gửi qua các form. \nầu khác nhau c ủa từng người \nu trúc đơn giản, dễ học, dễ sử dụng, dễ phát triển, dễ sửa đổi và tốc độ \nxử lý nhanh. Nếu bạn là một người đã que n với HTML thì b ạn có thể \ny trước đây để lấy thông tin t ừ một form  HTML, b ạn phải thạo một \nngôn ngữ lập trình để xây dựng nên một ứng dụng theo m ột chuẩn gọi là \nCGI (Com mon Interface Gateway). Bây gi ờ, với ASP  bạn có thể lấy \nđược các thông tin đó một cách dễ dàng m à chỉ cần môt vài dòng l ệnh \nđơn giản nhúng tr ực tiếp trong trang HTML.  \n- Rất an toàn vì các dòng l ệnh AS P không nhì n được từ trình duyệt. \n- Vì ASP tr ả về file HTML thu ần tuý cho nên nó c ó thể xem  được bằng \nbất cứ tình duyệt nào. \n- Một chương trình ASP được lập trình tốt sẽ làm giảm tải đường truyền. \n  \n8.3.3- Mô hình ASP ho ạt động như thế nào? \n Khi Client thông qua trình duy ệt của mình để yêu cầu xử lý và gửi lại \nkết quả một trang web (th ường dưới dạng địa chỉ URL trang web) nào đó lên \nWEB SERVER, WEB SERVER s ẽ xét xem  trang đó là một trang tĩnh hay \nđộng. Nếu đó là một trang tĩnh(.html, .htm), WEB SERVER s ẽ gửi lại chính \nđó cho client m à không ph ải xử lý; nếu đó là một trang động (.ASP, .JSP, \nF...), WEB SERVER sẽ gọi một Application Ser ver phù hợp để dịch các \ntrang đó thông qua các b ộ gine). Trong trang A SP, \nạn có thể sử dụng cá c ngôn ng ữ Script tu ỳ ý như: VBScript, JavaScript, Perl \nễn là bạn đã cài các Script Engine t hích hợp trên WEB S ERVER đó. \nSP h\nng .ASP, nó sẽ xử lý các mã ASP và tr ả lại kết quả cho Client và n ếu c\nASP đượ\n ASP khác v ới HTML ở chỗ: Kh i một trình duy ệt yêu cầ\n duyu m\nHTML, máy ch ủ trả về chính file HTML đó. Còn khi m ột trình\nyêu cầu này tới AS P engi ne, ASP e một file A SP, IIS chuy ển \n dòng một và xử lý các scripts tro ASP từng\ntrình duy\n \n- Cho phép b\ncủa trang w eb một cách năng độ\n- Đáp ứng các truy v ấn của người \n- Truy nhập tới bất kỳ cơ sở dữ liệu nào và trả kết quả cho trình duy ệt. \n- Tuỳ chỉnh trang we b đáp ứng những yêu c\nsử dụng. \n- Cấ\nthấ\nfile \n.C\n dịch script file (Script En\nb\nScript...mi\nAỗ trợ cho 2 scripts ph ổ dụng là: V BScript và JavaScript. S au khi Scri pt \nEngine  dịch các script file, nó s ẽ trả lại kết quả tới Client dưới dạng mã HTML. \nASP cũng hoạt động theo m ô hình trên. Sau khi Script  Engi ne của ASP dịch \ntrang tra\n 213\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 214,
    "text": "mở trang kết quả tại Client, ta s ẽ không th ấy còn cấu trúc lệnh của ASP trong \nó.  \nHình 8. 1 Mô hình hoạt động trang ASP \ni \nản (Text) \n- Các thẻ HTML \n- pts. Scripts của trang AS P được chạy trên Server. \nDễ ạo một trang A SP bằng cách thay đổi phần mở rộng của một \ntrang t , .htm) thành trang ASP(.asp) và lưu vào một thư mục trên \nWEB ation Server hoặc là \nPerson à chạy, đảm bảo rằng \nthư mụ e. Chú ý rằng trang \n.html v ng thức khác nhau \nhoàn t ng nên đổi tất cả các trang .html thành các trang .asp. Tuy \nnhiên c ư mục.  đ\nHình dưới đây minh ho ạ quá trình ho ạt động của ASP: \n  \n  \n Web Server \nASP’s Script Engine \nDịch các tra ng .ASP Göi l¹ i Client d−íi d¹ng m∙ HTML  \nTrang \n.ASP      Client \nGửi yêu cầu \nfile \nới Web \n  \nxử lý \nASP t  \nServer \n \n M∙ \n HTM\n \n \n \n \n \n \n Cơ sở dữ liệu \n \n \n \n \n8.3.4- Tạo một trang ASP \n Một trang ASP là m ột file văn bản với phần mở rộng là .ASP và n ộ\ndung của nó chứa các thành ph ần sau:  \n- Văn b\nCác Scri\n dàng để t\nĩnh(.html\nSERVER (thường là Microsoft Internet Inform\nal Web Server). Để trang .Asp có th ể được dịch v\nc chứa các trang đó phải có quyền Script và Exe cut\nà trang .asp được WEB SERVER x ử lý theo 2 ph ươ\noàn nên khô\nó thể đặt các trang .asp và các trang .html trong cùng m ột th\n 214\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 215,
    "text": "Bạể sử dụng bất kỳ trình soạn thảo văn bản nào để tạo các trang .asp.  \nMột tr ó là Microsoft Visual InterDev. \nTuy nh ạn chưa từng là m quen với HTML  thì Front Page s ẽ là công \ncụ thícđể tạo ra các trang nh ư MS Word. \n \nVí  \n \nP page. \n!”%> \n orld! \n8.3.4.1 các lệnh Scriptn có th\nong các trình soạn thảo  hỗ trợ cho ASP đ\niên, nếu b\nh hợp \ndụ một trang .asp vi ết dòng c hữ “Hello World” trên màn hình:\n<HTM L>  \n<TITLE> \n<BODY> \n   This is an AS\n   <%Response.Write “ Hello World\n</BODY> \n</TITLE> \n</HTML> \nKhi chạy, trên m àn hình sẽ hiển thị như sau: \nThis is an ASP page. Hello W\n- Thêm  \n M Script là một tập lệnh được nhúng trong trang HTML để báo cho \ntrình duyệt(phía Client) ho ặc Web Server(phía Server) th ực hiện công vi ệc nào \nđó. Cá ợc thực hiện bởi trình duy ệt gọi là các Client-Side Scripts và \ncác sc hực hiện bởi Web Server g ọi là các Server-Side Scripts. V ới \nác Script, ta có thể hiển thị giá trị Ngày hiện tại, lưu tên người sử dụng và o \nmột bi Trong các trang ASP, ta có thể \nnhúng à %>. Script engine s ẽ dịch các \noạn mãlệnh tr ong cặp thẻ này và g ắn kết quả dịch(dưới dạng HTML) và o \ntrang và g ửi cho Client. \nụ sau sẽ minh hoạ cách trộn c i dung html. \n<HTM L> \nả sẽ là \n 14:15:20 PM \nđầu trang: \n ột \nc script đư\nript được t\nc\nến hoặc trong Database để hiển thị sau…\n các mã lệnh Sc ript trong c ặp thẻ <% v\nđ  \nVí d\n ác Script v ới nộ\n<BODY> \nThis pa ge was last refreshed on <%=N ow%> \n</BODY> \n</HTML> \n \nKết quả hiển thị sẽ là : (giờ ở đây chỉ có tính ch ất ví dụ. Kết qu\niờ hiện hành khi chạy chương trình). g\n  \nThis pa ge was last refres hed on 9/1/2003  \n \nNgôn ngữ Script ng ầm định trong A SP là VB Script. Tuy nhiên b ạn có \nthay đổi ngôn ng ữ ngầm định tr ong một trang AS P hoặc thay bằng một ngôn \ngữ khác bằng chỉ dẫn sau đặt trên n\n \n<%@ LAN GUAGE=Scripting Langua ge%>\n 215\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 216,
    "text": "Trong đó Scripting La ngua ge là ngôn ng ữ ngầm định trong trang .ASP  \n.3.4.2- Sử dụng các Server- Side VBScript và Jav ascriptmà bạn muốn đặt cho trang đó.  \n \n8  \np script được dịch và chạy trên Server, các l ệnh V BScript  hiển \nị giao diện người sử dụng như: InputBox và MsgB ox không có tác d ụng. Các \nàm tạ pt như: CreateObject và GetObject s ẽ được \nng Server.CreateObject c ủa ASP.  \n Script:  \n<SCRI PT LANGUAGE=JScri pt RUN AT=Server>  \n \nUAGE=VBScr ipt RUNAT=Server>  \nCác lệnh Script \n</SCRIPT> \nĐể\nerver-Side VBScript, sử dụng kí tự  ‘ \n- rong Server-Side Jscript, sử dụng kí tự // cho m ột dòng ho ặc {} cho \nChú ý: V BScript không phâ n biệt chữ hoa chữ thường, tức là một biến \n_Var \nlà 2 bi Bởi vì As\nth\nh o đối tượng trong VBScri\nthay thế bằng hàm  tạo đối tượ\nKhai bá o sử dụng Server-Side\n \nCác lệnh Script \n</SCRIPT> \n \nhoặc \n<SCRI PT LANG\n \n \n tạo một chú giải: \n- Trong S\nT\nmột đoạn \n \nnew_var có th ể được hiểu như là New _Var hay new _var. Tuy nhiên JS l ại phâ n \nbiệt chữ hoa chữ thường(Case Sensitive), t ức là 2 biến: new _var và New\nến khác nhau hoàn toàn. \n \n8.3.4.3- K hai báo biến trong ASP  \n Một biến là một vùng nh ớ trong m áy tính được đặt tên dùng để lưu trữ \n biến.  \nừ khoá Dim :   \n<% Dim Tên Bi ến %> \nh khai báo, gá n giá trị và sử dụng giá trị của \nột biến: \n<% \n Dim ho_ten \n Van A” dữ liệu. Dữ liệu được lưu trong vùng nh ớ đó gọi là giá trị\nĐể khai bá o một biến trong V BScript người ta dùng t\n \n Ví dụ sau đây minh ho ạ các\nm\n  \n \n \n  ho_ten = “ Nguyen\n  Response.Write(“Ho va ten cua toi la: ” & ho_te n) \n 216\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 217,
    "text": "%> \nKhai báo m ột dãy (arra y): Một array được dùng để lưu trữ những dữ liệu \ncó liên  về cách khai báo và s ử dụng array: \n<% \n danh_sach(0) = “Thanh Hoa” \n danh_sach(3) = “Khanh Hung” \n danh_sach(4) = “Tua n Anh” \n Next \n \nt:  \n<%var Tên Bi ến%> \n8.3.4.4 \n quan tới nhau. Dưới đây là ví dụ\n Dim danh_sach(5), i \n danh_sach(1) = “Thuy Hien” \n danh_sach(2) = “Thanh Binh” \n For i=1 to 4  \n  Response.Write(danh_sach(i)) \n%>\n \nKhai bá o biến trong JScrip\n \n \n- Phạm vi hoạt động của biến \n Ph ạm vi hoạt động của biến quyết định sự tồn tại của biến. Tr ong AS P \nàn cục và biến cục bộ. Một biến được khai bá o bên \nục; Giá trị của biến này \ncó  ang ASP. \n cục trùng tên nhau.  \n mặc dù có 2 bi ến được đặt tên là Y: \n \nnd Sub \n \n dụng trong nhi ều hơn 1 file asp, b ạn cần \nphải khai báo bi ến đó là biến phiên (session) ho ặc biến ứng dụng (application). có 2 loại biến là: Biến to\ntrong một thủ tục hoặc hàm bằng từ khoá Dim, Var được gọi là biến cục bộ; \nBiến cục bộ được tạo và được huỷ mỗi khi thủ tục hoặc hàm được thi hành. Nó \nkhông thể được truy nh ập từ bên ngoài t hủ tục hoặc hàm đó. Một biến được \nkhabái o bên ngoài m ột thủ tục được gọi là biến toà n c\n trong tr thểtruy xuất và sửa đổi bằng các lệnh Script\n bộ và biến toàn Có thể khai  báo biến cục\nVí dụ sau trả lại giá trị là 1\n<% \nDim Y \nY = 1 \nCall SetLocalVariable \nResponse.write Y \n \nSub SetLoc alVariable \n  Dim Y \n  Y  = 2 \nE\n%> \nTrong ASP, b ạn có thể sử dụng biến mà không cần khai báo tr ước. Tuy\nnhiên, để tránh nhầm lẫn giữa phạm vi các bi ến, nê n khai báo các bi ến trước \nkhi sử dụng.  \nĐể khai báo các bi ến có thể sử\n 217\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 218,
    "text": "n ứng dụng 8.3.4.5- C ác biến phiên và bi ế  \n  có \nt \nn \nó thể đặt thời \ngian tồ\n \n \n \ng bằng 2 đối tượng: Session \n \n<%Session(“Tên bi ến”) = Giá tr ị khởi tạo%>  \nhoặc: \n <%A pplication(“Tê n biến”) = Giá tr ị khởi tạo%> \n \n \n \n8.3.4.6- K hai báo t hủ tục, hàm và cách g ọiBiến phiên( session) dùng để lưu thông tin v ề MỘT người sử dụng, và\ngiá trị trong tất cả các trang web trong su ốt một phiên của người sử dụng. Mộ\nphiên của người sử dụng được tính từ lúc người sử dụng bật Browser cho đế\nkhi tắt Browser. Tuy nhiê n biến phiê n sẽ tự động bị xoá nếu sau một khoảng \nthời gian xác định người sử dụng không Refresh l ại trang. Ta c\nn tại biến phiên này trong trang AS P. Thời gian ngầm định là 20 phút.  \n \nBiến ứng dụng(Application) có giá tr ị đối với tất cả các trang c ủa ứng\ndụng và chỉ bị xoá khi  tắt ứng dụng. Biến ứng dụng là một cách tốt để lưu trữ\nthông ti n của TẤT CẢ các người sử dụng trong một ứng dụng.  \nCó thể tạo ra các bi ến phiê n và biến ứng dụn\nvà A pplication. \n \nCú phá p tạo như sau: \n \n Ta có thể sử dụng 2 ngôn ng ữ Script để viết trong A SP là Java Script và  \nVB Script.  \nTrong VB Script: \n \n<SCRI PT LANGUAGE= VBScript RUNAT=Server>  \nSub Tê n thủ tục(đối số) \n Thâ n thủ tục \nEnd S ub \nFunction Tên hàm (đối số) \nThân hàm  \n Tên hàm  = Giá trị trả lại \nEnd F unction \n</SCRIPT> \n \nCách gọi thủ tục, hàm  VBScript \n \nCall Tên th ủ tục(giá trị truyền cho thủ tục) \nHoặc \n Biến = Tên hàm (giá trị truyền cho hàm ) \n 218\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 219,
    "text": "Ví dụ sau m inh hoạ cách khai bá o một thủ tục/hàm  và cách g ọi chúng: \n \n<html> \n<head> \n<% \nsub vbproc (num 1,num2) \nResponse.Write(num1*num2) \nend sub \n%> \n<script  lan guage=\"javascript\" runat=\"server\"> \nfunction jsproc( num1,num2) \n{ \nResponse.Write(num1*num2) \n} \n</script> \n</head> \n \n<body> \n<p>Result: <%call vbproc(3,4)%> </p>   \n<p>Result: <%vbproc 3,4%> </p> \n<p>Result: <%call js proc(3,4)%> </p> \n</body> \n</html> \n \nTrong Java Script: \n \n<SCRI PT LANGUAGE=JSc ript RUNAT=Server> \nfunction Tê n thủ tục(đối số) \n{ \n Thâ n thủ tục \n} \nfunction Tê n hàm (đối số) \n{ \n Thâ n hàm \n return Giá tr ị trả lại \n} \n \n</SCRIPT> \n \nCách gọi thủ tục, hàm JScript \n \nTên thủ tục(giá trị truyền cho thủ tục) \nHoặc \n Biến = Tên hàm (giá trị truyền cho hàm ) \nVí dụ minh hoạ: \n 219\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 220,
    "text": "<%@ language=\"javascript\" %> \n<html> \n<head> \n<% \nfunction jsproc( num1,num2) \n{ \nResponse.Write(num1*num2) \n} \n%> \n</head> \n<body> \n<p> \nResult: <%jsproc(3,4)%> \n</p> \n</body> \n</html> \n \n Sự khác nhau gi ữa JScript và VBScript:  \nKhi gọi một thủ tục VBScript ho ặc JScript vi ết bằng VB Script t rong \nASP, nếu dùng từ khoá Call tr ước tên thủ tục thì các bi ến gán cho th ủ tục đó \ncần để trong ngo ặc đơn. Nếu không dùng t ừ khoá Call thì có th ể không cần dấu \nngoặc đơn. Nếu  thủ tục không có bi ến thì có th ể có hoặc không có d ấu ngoặc \nđơn. \n Khi gọi một thủ tục VBScript ha y JScript  viết bằng JScript trong ASP, \nluôn luôn dùng d ấu ngoặc đơn sau tên th ủ tục. \n \n8.3.4.7- Liê n kết nhiều tệp trong m ột tệp \n   \nĐể tránh nội dung của một tệp quá dài, khó qu ản lý, hoặc có những nội \ndung được lặp đi lặp lại trong nhi ều trang, t a có thể tạo những hà m, headers, \nfooters, hay các ph ần tử dùng chung trong nhi ều trang đó và đưa vào các t ệp \nnhỏ rồi liên kết chúng trong t ệp chính.  \nChỉ dẫn #include cho phép liên k ết tệp dưới dạng vật lý hay logic.  \n \nCách sử dụng chỉ dẫn #include: \nDưới đây là một file có tên mypage.asp: \n \n<html>  \n<body>  \n <h3>W ords of Wisdom :</h3> \n <p><!--#include file=\"wisdom.inc\"--></p>  \n <h3> The time is:</h3> \n <p><!--#include file=\"time.inc\"--></p> \n </body>  \n 220\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 221,
    "text": "</html> \nCòn đây là file wisdom.inc: \n\"One shoul d never inc rease, beyond what is necessary,the number of \nentities req uired to explain anything.\" \n \n Và đây là nội dung file time.inc \n  \n<% \nResponse.Write(Time) \n%> \n \n Nếu bạn xem  mã nguồn trên trình duy ệt, bạn sẽ thấy chúng c ó dạng như \nsau: \n  \n<html> \n<body> \n<h3>W ords of Wisdom :</h3> \n<p>\"One should neve r increase, beyond what is necessary, \nthe num ber of entities required to explain anything.\"</p>  \n<h3> The time is:</h3> \n<p>11:33:42 AM</p> \n</body> \n</html> \nCú ph áp cho chỉ dẫn #include nh ư sau: \n<!--#include virtual=\"somefilename\"--> \nor \n<!--#include file =\"somefilename\"--> \nTừ khoá  VIRTUAL:  \nSử dụng từ khoá virtual để chỉ đường dẫn bắt đầu bởi một thư mục \nảo.  \n Nếu có một file tên header.inc n ằm trong thư mục ảo có tên /html, thì ta \nsử dụng dòng l ệnh sau để chèn nội dung file header.inc:  \n <!-- #include virtual= ”/html/header.inc” --> \n  \n Từ khoá FI LE \n Sử dụng từ khoá file để chỉ đường dẫn tương đối. Một đường dẫn tương \nđối bắt đầu bởi thư mục chứa file được chèn thêm vào.  \n Nếu bạn có một file nằm trong thư mục htm l, và file chèn thêm  vào là \nheader.inc n\ners\\header.inc” --> ằm trong htm l\\headers thì ta có th ể dùng dòng l ệnh sau để chèn file \nheader.inc: \n <!-- #include file=”head\n 221\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 222,
    "text": "Chú ý rằng file chèn thêm  vào (he aders\\heade r.inc) có quan h ệ tương đối \n lệnh #incl ude không n ằm trong \nư mụ\n file .inc đó thì toàn b ộ nội dung của file \nnày sẽ ng của file được nhì n thấy thì \nbạn nên để file dạng .asp. Mã ngu ồn của file ASP không được hiển thị khi c hưa \ndịch. Một file có th ể được include trong nhi ều file khác nha u, và một file có th ể \ninclude trong nó m ột hay nhiều lần 1 file khác.  \n Nh ững file được include được xử lý và chè n vào trước khi các scripts \nđược thực hiện. \n Script sau s ẽ không là m việc vì ASP th ực hiện chỉ dẫn #include trước \nkhi nó gán giá tr ị cho biến: \n <% \nfname=\"header.inc\" \n%> \n<!--#include file=\"<%=fname%>\"--> \n \nBạn không th ể đặt #inc lude trong l òng script, nó s ẽ không làm vi ệc. \nĐoạn mã  sau sẽ không làm  việc:  \n  \n \n \n<% \nFor i = 1 To n \n  <!--#include file=\"count.inc\"--> \nNext \n%> \n \nNhưng đoạn dưới đây thì có làm vi ệc: \n \n<% For i = 1 to n %> \n <!--#include file=\"count.inc\" --> \n<% Next %> \n \n \n \n8.3..5- Sử dụng các đối tượng Component   \n8.3.5.1- K hái niệm Componentsđối với file cần chèn. N ếu như file chứa dòng\nth c html thì dòng l ệnh nà y không làm  việc. \n Bạn cũng có thể sử dụng cú pháp (..\\) để chèn một file ở thư mục cấp \ntrên. \n  \n Chú ý: Trong các ph ần trên chúng ta dùng file có ph ần mở rộng là .inc. \nNếu người sử dụng muốn mở chính\n được hiển thị. Nếu bạn không m uốn nội du\n \n Các ActiveX Component là chìa khoá để xây dựng nê n các ứng dụng \nWeb mạnh. Một ActiveX Component là m ột tệp chứa mã  để thực hiện  một \ncông việc hoặc một tập công vi ệc hoàn c hỉnh giúp ng ười lập trình không ph ải \nviết lại các module để thực hiện công vi ệc đó(thường dưới dạng file .Dll ho ặc \n 222\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 223,
    "text": ".Exe). Bản thân AS P cũng hỗ trợ một số Compone nt, chẳng hạn: Componen t \ncung cấp các đối tượng truy xu ất CSDL. B ạn cũng có thể kiếm các Component \ntừ  các nhà cung c ấp Thir d-Party ho ặc tự bạn có thể viết ra các Component để \nsử dụng. Bạn có thể sử dụng bất kỳ một ngôn ng ữ lập trình nào h ỗ trợ chuẩn \nCOM( Com ponent Obj ect Model) để tạo ra các Component, ch ẳng hạn: C, C++, \nJava hoặc Visual Basic. Tuy nhi ên nên nhớ một điều, các ActiveX ch ạy trên \nServer không th ực hiện các chức năng về giao diện người sử dụng, ví dụ hàm  \nMsgBox c ủa Visual Basic. \n \nSau khi đã tạo các Com pone nt, bạn cần cài đặt các Com pone nts của bạn \ntrên Web Server. M ột khi đã cài component trên Web Server, b ạn có thể gọi \nchúng trong các file ASP, ho ặc các ứng dụng hỗ trợ ISAPI(Internet Server \nApplication Programmming Interface) ho ặc từ chính các Com ponent khác.  \n \n8.3.5.2- Sử dụng các đối tượng trong Component  \n Một Component có thể chứa một hoặc nhiều đối tượng trong nó và g ắn \nmỗi đối tượng đều có các ph ương thức và thuộc tính riêng.  Để sử dụng một đối \ntượng của Component, b ạn phải tạo ra một Instance c ủa đối tượng và gắn nó \nvới một biến bằng phương thức \n \nServer.CreateObject \n \nCú phá p:  \n \nTrong VBScript: \n  <%Set Tênbi ến = Server.CreateObject(“ProgID.ObjectName”)%>  \n \nTrong Jscri pt: \n <%var Tênbiến = Server.CreateObject(“ProgID.ObjectName”)%>  \n \nTrong đó, ProID  là Tên đăng ký của Com ponent đó trong Web S erver; \nObjectName là tên đối tượng cần tạo Instance. \n \nVí dụ sau sẽ tạo ra một Instance c ủa đối tượng AdRotator trong \nComponent v ới PROGID là “MSWC” \n \n<%Set MyAds = Server.CreateO bject(“MS WC.A dRot ator”)%> \n   \nChú ý là b ạn không th ể sử dụng các hàm c ủa VBScript(CreateObject) \nhoặc Jscript (New) để tạo Instance. B ạn phải sử dụng phương thức tạo Instance \nServer.CreateObject trong ASP.  \nBạn cũng có thể sử dụng thẻ <OB JECT> của HTML để tạo các Instance \ncùng thuộc tính R UNAT=Server. Cú phá p như sau: \n \n<OBJECT RUNAT=Server ID=MyA d PROGID=”M SWC.AdRotator”> \n 223\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 224,
    "text": "</OBJECT> \nhoặc \n<OBJECT RUN AT=Server ID =MyA d CLASSID=”Clsid:1621F7C0-\n60AC”> \n</OBJECT> \n \nKhông giống như các Component được tạo ra bởi Visual Basic có ph ần \nmở rộng là .DLL, m ột ActiveX Component được viết bằng Java th ường là một \nClass(.class).  Sau khi t ạo  được một lớp bằng Java, b ạn cần dùng ch ương trình \nJavareg để đăng ký nó nh ư một Component. Sau đó, bạn có thể sử dụng \nComponent đó như mọi Com ponent bình th ường khác trong V BScript cũng \nnhư trong J script.  \n \n8.3.5.3- C ác phương thức và thuộc tính của đối tượng \n ASP có các đối tượng của chính nó gi úp người lập trình thực hiện các \nchức năng. Bạn không c ần phải khai báo c ũng như tạo Instance cho nó. Truy \nnhập các phương thức và thuộc tính của một đối tượng ASP  gi ống như truy \nxuất các phưong thức và các thu ộc tính của các đối tượng thuộc các Component \nđược đăng ký khác. Tr ước khi làm  quen với các đối tượng của ASP, bạn cần \nlàm quen với một số các khái ni ệm và thao tác sau: \n \nMột đối tượng ba o gồm: T huộc tính và P hương thức. Ta có th ể coi thuộc \ntính là nh ững biến để lưu trạng thái của đối tượng đó; Phương thức là n hững \nhàm thực hiện các công vi ệc liên qua n đến đối tượng chứa nó và có th ể được \ngọi từ bên ngoài thông qua đối tượng chứa nó. Cú phá p chung để gọi một \nphương thức đó là: \n  Đối tượng. Phương thức [Tham s ố truyền] \nvà để đặt giá trị cho một thuộc tính \n  Đối tượng.Tên thu ộc tính = Giá tr ị \n \nVí dụ sau sử dụng phương thức Write c ủa đối tượng Response để viết ra một \ndòng chữ được truyền như là một tham số: \n<% Response.Write “Hello” %>  \n \n \n8.3.5.4- T hiết lập phạm vi đối tượng \n Ph ạm vi của đối tượng sẽ quyết định Script nào có th ể truy xuất đến đối \ntượng đó. Ngầm định khi tạo một Instance c ủa đối tượng, nó sẽ có phạm vi \ntrang, ngh ĩa là các lệnh Script trong trang đó có thể gọi nó và đối tượng đó sẽ \nđược huỷ khi thoát kh ỏi trang đó. Các đối tượng phiên( Session) s ẽ hoạt động \nvới phạm vi lớn hơn, phạm vi phiê n, tức là khi m ột người sử dụng bật và tắt \nBrowser. Các đối tượng phạm vi phiê n có thể được truy xuất từ các Script c ủa \ncác trang. Đối tượng phạm vi ứng dụng(Application) s ẽ hoạt động và bị huỷ khi \ntắt ứng dụng. Để đặt phạm vi cho một đối tượng, sử dụng các cấu trúc khai bá o \nsau: \n 224\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 225,
    "text": "Phạm vi trang: \n \n Set Tên đối tượng = Server.CreateObject(“ProgID”) \n \n Ví dụ: Set con = Ser ver.CreateObject(“AD O.Connection”) \n \nPhạm vi Phiên: \n  \nSet Session(“Tên đối tượng”) = Server.CreateObject(“ProgID”) \n \nHoặc \n \n<OBJECT RUNAT=Server SCOPE=Session ID= Tên đối tượng \nPROGID= ”ProgID”> </OBJECT> \n \nPhạm vi ứng dụng: \n \nSet Application(“Tên đối tượng”) =  Server.CreateObject(“ProgID”) \n \nHoặc \n \n<OBJECT RUNAT=Server SCOPE=Session ID=Tên đối tượng \nPROGID= ”ProgID”> </OBJECT> \n \nNhìn chung, ch ỉ sử dụng các đối tượng có phạm vi phiên và ph ạm vi ứng \ndụng nếu thực sự cần thiết vì chúng s ẽ chiếm tài nguyên của hệ thống trong \nthời gian chúng t ồn tại. Ta có th ể huỷ các đối tượng có phạm vi trang b ằng câu \nlệnh \n \nSet Tên đối tượng = N othing \n \nTuy nhiên các tài nguyên dùng cho đối tượng nà y sẽ chỉ bị huỷ khi kết thúc \ntrang. \n \n8.3.6- Làm vi ệc với tập hợp (Collection) trong ASP \n Hầu hết các đối tượng của ASP đều hỗ trợ Collection. M ột Collection là \nmột vùng nh ớ để lưu trữ các chuỗi, các số hoặc các giá tr ị khác. Nhì n một phía, \nmột Collection có ph ần giống như một mảng ngoại trừ rằng nó có c ơ chế tự bổ \nsung ha y bớt các Items trong nó.  \nKhông nh ư một mảng, vị trí của các phần tử(Item) tự động thay đổi mỗi khi \nCollection đó được cập nhật.  Bạn có thể truy xuất các phần tử của Collection \nbằng tên, bằng chỉ số(như mảng) của phần tử hoặc thậm chí truy xu ất tất cả các \nphần tử cùng một lúc. Trong ASP, hai đối tượng Collection c ủa Session và \nApplication th ường ha y được sử dụng nhất.  \n 225\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 226,
    "text": "8.36.1- Truy xu ất theo tên  \n<%Session. Contents(“Tên ph ần tử”) = Giá tr ị%> \n<%A pplication.C ontents(“Tên ph ần tử”) = Giá tr ị%> \n \nNếu mỗi phần tử có một tên duy nh ất trong Collection, ta có th ể dùng cú \npháp ngắn gọn sau: \n \n<%Session (“Tên ph ần tử”) = Giá tr ị%> \n<%A pplication (“Tê n phần tử”) = Giá tr ị%> \n \n8.3.6.2- Tr uy xuất theo chỉ số \n <%Session. Contents(2)  = Giá trị%> \n \nhoặc \n \n <%Application.Contents(2) = Giá tr ị%> \n \n8.3.6.3- Tr uy xuất đến các phần tử của Collection dùng c ấu trúc lệnh \nFor Each Tên bi ến  In Collection  \n………….. . \nNext \n \nVí dụ sau sẽ duyệt các phần tử trong Collection: \n<% \nDim Item \nFor Each Item in  Session. Content s \n Response.Write Session.Contents(Item) & “<BR>” \nNext \n%> \n8.3.6.4- Sử dụng thuộc tính C ount trong C ollection  \nSử dụng thuộc tính C ount để đếm số phần tử trong C ollection \n \n8.3.7- Các đối tượng của AS P \n Sáu đối tượng được coi là ch ủ chốt trong AS P, đó là: \nApplication: \nCung cấp các phương thức và thuộc tính để chia sẻ thông tin gi ữa các \nUser trong cùng m ột ứng dụng. \nRequest: \nSử dụng đối tượng R equest để lấy các thông tin mà Client đã chuyển \nđến Web Server thông qua m ột HTTP re quest. HTTP  request bao g ồm các \n 226\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 227,
    "text": "tham số được truyền từ một form HTML theo ph ương thức POST  hoặc \nGET, các Cookies…Ngoài ra, đối tượng R equest cũng cho phé p truy xuất \nđến các dữ liệu được gửi lên Server d ưới dạng các file nh ị phân như Upload \nFile. \nResponse: \nSử dụng đối tượng nà y để điều khiển việc gửi thông tin t ới User, gồm: \nGửi thông tin tr ực tiếp tới Browser c ủa User ho ặc dẫn Browser sang m ột địa \nchỉ URL mới, hoặc đặt một giá trị Cookie để nhận dạng User. \nServer: \nĐối tượng này giúp truy nh ập tới các phương thức và thuộc tính trên \nServer. Ph ưong thức được sử dụng thông thường nhất của đối tượng nà y là \ntạo một Instance c ủa một Com ponent ActiveX(Ser ver.CreateObject). Các \nphương thức khác hay được sử dụng như mã hoá xâ u, đặt đường dẫn ảo và \nđặt thời gian tồn tại cho Script. \nSession: \nTa đã làm  quen với đối tượng Session và  Application để tạo ra cá c biến \nvà đối tượng có phạm vi mức phiê n và ứng dụng. Nhìn chung ta s ử dụng \nđối tượng Session để lưu trữ các thông tin cho m ột phiê n làm  việc của \nngười sử dụng(thời gian tính từ lúc User kh ởi tạo brow ser và tắt Browser). \nThông tin trong Session không b ị mất khi chuy ển giữa các trang. B ạn có thể \nđặt thời gian tồn tại cho các đối tượng Session ho ặc huỷ nó. \nObjectContext: \nBạn sử dụng đối tượng nà y để khẳng định hay hu ỷ một giao tác được \nkhởi tạo bởi một ASP script. \n \nCác phương thức, thuộc tính, tập hợp của các đối tượng được liệt kê chi ti ết \nở phụ lục cuối tài liệu. \n \n8.3.7.1- Đối tượng Re quest  \n Đối tượng Request được dùng để lấy thông tin t ừ người sử dụng. \nRequest cung c ấp một số phương thức, thuộc tính và t ập hợp(Collection) \nquan trọng sau: \nQueryString: L ấy giá trị của các biến trên dòng l ệnh.  \n- Khi người sử dụng nhắp chuột vào một đường kết nối (click on a link). Ví \ndụ sau là nội dung của file dem o_sim lequerystring.asp \n<html> \n<body> \n<a href=\"dem o_sim plequer ystring.asp?col or=green\"> Exam ple \n</a> \n<% \nResponse.Write(Request .QueryString(“color”)) \n%> \n</body> \n</html> \n 227\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 228,
    "text": "Khi bạn nhắp chuột trên dòng ch ữ Exam ple, kết quả hiển thị sẽ là: \n \n Example color=green \n \n- Dùng ph ương thức QueryString để lấy dữ liệu khi người sử dụng nhập vào \nmột form. Form này s ử dụng phương thức GET để truyền dữ liệu. Phương thức \nGET cho phép t ất cả mọi người có thể nhìn thấy thông tin truy ền đi trên URL. \nTuy nhiên ph ương thức này có h ạn chế về dung lượng thông tin. \n \nVí dụ: Một Form nh ập liệu có dạng như sau:  \n \n \nHình 8. 2 Form nhập liệu \n \n \n<html> \n \n<head> \n<meta http-equi v=\"Content-Type\" co ntent=\"text/html; charset=utf-8\"> \n<meta name=\"GEN ERATOR\" content=\"Mi crosoft FrontPage 4.0\"> \n<meta name=\"ProgId\" content= \"FrontPage.Editor.D ocum ent\"> \n<title>New Page 1</title> \n</head> \n \n<body> \n<form  method=\"G ET\" action=\"f older.asp\">  \n  <p align=\"center\"><b>Please fi ll in the following form</b></p> \n  <table border=\"0\" cellpadding=\" 0\" cellspacing= \"0\" wi dth=\"308\"> \n    <tr> \n      <td width=\"100\" nowrap>Name:</td> \n      <td width=\"202\"> <input t ype=\"text\" nam e=\"nam e\" size=\"30\"></td> \n 228\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 229,
    "text": "</tr> \n    <tr> \n      <td width=\"100\" nowrap>Em ail:</td> \n      <td width=\"202\"> <input type =\"text\" name=\"emai l\" size=\"30\"></td> \n    </tr> \n  </table> \n  <p><input type=\"submit\" value=\"Submit\"> </p> \n</form> \n \n</body> \n \n</html> \n \n Khi người sử dụng nhấn vào nút Subm it, các giá tr ị của các hộp Text sẽ \nđược gắn vào tr ong một xâu cùng v ới tên của của các hộp Text(được định \nnghĩa cùng với thuộc tính Nam e trong t hẻ Input). Xâu đó được gắn với dòng \nURL trong thu ộc tính Action c ủa thẻ Form sau m ột dấu ? và có dạng như sau: \n \n http://.../folder.asp?name=Ja ckie&email=jack@yahoo.com \n \nĐể lấy giá trị của Form nh ập liệu, trong t ệp folder.asp ta dùng ph ương \nthức QueryString c ủa đối tượng Request nh ư sau: \n \n<html> \n \n<head> \n<meta http-equi v=\"Content-Type\" co ntent=\"text/html; charset=utf-8\"> \n<meta name=\"GEN ERATOR\" content=\"Mi crosoft FrontPage 4.0\"> \n<meta name=\"ProgId\" content= \"FrontPage.Editor.D ocum ent\"> \n<title>New Page 1</title> \n</head> \n<body> \n<% \nDim n ame, email \nname = Request.QueryString(\"name\") \nemail = Request.QueryString(\"email\") \n%> \n<p align= \"center\">< b>The fol lowing information was received from \nuser:</b></p> \n<p align=\"center\">Name = <%=name%></p> \n<p align=\"center\">Em ail&nbsp;  =&nbs p; <%=em ail%></p> \n</body> \n \n</html> \n 229\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 230,
    "text": "Hình 8. 3 Trả lời từ server \n \n \nĐể tránh người sử dụng có thể nhìn thấy giá trị được truyền trên URL, ta \nđổi phương thức GET trong thu ộc tính Action c ủa thẻ Form thành phương thức \nPOST. \n \nPhương thức Form \n \nĐược dùng nh ư đối tượng Quer yString để lấy giá trị của các phần tử \ntrong F orm. Để sử dụng đối tượng Form, thu ộc tính Method c ủa thẻ FORM \nphải là POST. V ới phương thức truyền kiểu POST, d ữ liệu được truyền không \nđược nhìn thấy, và ta có th ể truyền một dung lượng dữ liệu không h ạn chế. \nVí dụ dưới đây chỉ khác ví d ụ trên  ở chố thay đổi một một chút một \nđoạn mã trong tệp folder.asp: \n \n<html> \n \n<head> \n<meta http-equi v=\"Content-Type\" co ntent=\"text/html; charset=windows-\n1252\"> \n<meta name=\"GEN ERATOR\" content=\"Mi crosoft FrontPage 4.0\"> \n<meta name=\"ProgId\" content= \"FrontPage.Editor.D ocum ent\"> \n<title>New Page 1</title> \n</head> \n<body> \n<% \nDim n ame, email \n 230\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 231,
    "text": "name = Request.F orm(\"nam e\") \nemail = Request.Form(\"email\") \n%> \n<p align=\"center\"><b>The followin g information was received from \nuser:</b></p> \n<p align=\"center\">Name = <%=name%></p> \n<p align=\"center\">Em ail&nbsp;  =&nbs p; <%=em ail%></p> \n</body> \n \n</html> \n \n Một ví khá c dưới đây cho thấy tập hợp Form  chứa dữ liệu như thế nào nếu \ncó một vài trường được đặt cùng tên. Nó c ũng cho thấy cách sử dụng từ khoá \nCount để đếm số giá trị của tên biến được đặt trùng. For m này sử dụng phwong \nthức POST . \n \n<html> \n<body> \n \n<form  action=\"dem o_form.asp\" m ethod=\"pos t\"> \nFirst nam e: \n<input type =\"text\" nam e=\"nam e\" value= \"Phuong\"> \n<br> \nLast nam e: \n<input type =\"text\" nam e=\"na me\" value= \"Nguye n Minh\"> \n<br> \n<input type =\"subm it\" value=\"Subm it\"> \n</form> \n<hr> \n \n<p>The information received fro m the form above was:</p> \n<% \nIf Request.Form(\"name\")<>\"\" Then \n      Response.Write(\"<p>\") \n      Response.Write(\"name=\" & Request.Form(\"name\")) \n      Response.Write(\"</p><p>\") \n      Response.Write(\"The name propert y's count is: \") \n      Response.Write(Request.Form(\"name\").Count) \n      Response.Write(\"</p><p>\") \n      Response.Write(\"First name=\"  & Request.Form(\"name\")(1)) \n      Response.Write(\"</p><p>\")  \n      Response.Write(\"Last name=\"  & Request.Form(\"name\")(2)) \n      Response.Write(\"</p>\")  \nEnd if \n%> \n \n 231\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 232,
    "text": "</body> \n</html>  \n \nKết quả khi subm it chương trình s ẽ là: \n \n  \nHình 8. 4 Kết quả \n \n \n8.3.7.2- Đối tượng Res ponse \n Response cung c ấp các phương thức và thuộc tính để gửi lại các giá tr ị \ncho người sử dụng từ phía Server.  \nCác phương thức sau hay dùng nh ất của đối tượng Res ponse là \n \n- Write: Chèn m ột xâu vào trong trang HTML tr ả lại cho người sử dụng. \n \nCú pháp:  Response.Write “Xâu c ần chèn” \n \n- Buffer: Nh ận giá trị là True ha y False. N ếu là True,  hệ thống sẽ dành một \nvùng bộ nhớ đệm cho quá trình x ử lý các trang ASP tr ước khi trả lại kết quả là \ncác trang HTML cho Client.  \n \nCú pháp:  Response.Buffer =  True/ False \n \n- Redirect: D ẫn hướng Client t ới một địa chỉ URL khác . Để sử dụng phương \nthức này, ta phải gọi phương thức Response.Buffer = True ở đầu trang, sau cá c \nchỉ dẫn lệnh (@language..) \n \nCú phá p: \n 232\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 233,
    "text": "Response.Buffer = True \n ……………… \n ……………… \n Response.Redirect “địa chỉ URL mới” \n \n- Cookies: Máy ch ủ nhận biết các máy khác truy xu ất đến mình thông qua  các \nCookie. Để gửi một Cookie t ới một máy khá ch, ta sử dụng cú pháp sau: \n \n Response.Cookies(“Tên  Cookie”) = Giá tr ị \nMột số các phương thức khác nữa được liệt kê ở Phụ lục, phần cuối \ncùng của chương này.  \n \n8.3.7.3- Đối tượng Ser ver \n Th ực hiện các chức năng hệ thống.  \nCó hai ph ương thức phổ dụng của đối tượng Server là CreateObject và \nURLEnc ode. \n \n- CreateObject: S ử dụng để khai báo các đối tượng. Ta xem  chi tiết trong ph ần \nsử dụng đối tượng. \n \n- URLEncode: Khi truy ền giá trị trên URL, để truyền các giá tr ị đặc biệt như \ndấu trống, cách…ta s ử dụng URLEncode để mã hoá xâu tr ước khi truy ền. \nDim str = Server.URLEncode(Xâu c ần mã hoá) \n \n-URLMapPath: T ạo ánh xạ giữa đường dẫn logic và đường dẫn vật lý \nĐể xem  đường dẫn vật lý của thư mục chứa tệp bất kỳ : \n  \n Server.MapPath(“Tên đường dẫn logic/Tê n tệp”) \nĐể xem  đường dẫn vật lý của thư mục hiện hành: \n \n Server.MapPath(“.”)  \n \nĐể xem  đường dẫn vật lý của thư mục gốc của Web Site: \n Server.MapPath(“..”) \n \n8.3.7.4- Đối tượng Application  \n Tạo, huỷ các đối tượng và biến có phạm vi hoạt động mức ứng dụng. \n \nCú phá p: \n \nApplication(“Bi ến”)  =  Giá tr ị \nHoặc \n Set Application(“ Đối tượng”) = G iá trị \n 233\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 234,
    "text": "Khi đó, biến/ đối tượng có phạm vi hoạt động mức ứng dụng sẽ tồn tại \ntừ khi bắt đầu khởi động đến lúc kết thúc ứng dụng. \n \n8.3.7.5- Đối tượng Ses sion \n Tạo, huỷ các đối tượng và biến có phạm vi hoạt động mức phiên \n \nCú phá p: \n  \n Session(“Bi ến”) = Giá tr ị \nHoặc \n Set Session(“ Đối tượng”) = Giá tr ị \nMột khi được khai báo ph ạm vi phiê n, biến/ đối tượng sẽ tồn tại từ khi \nClient mở Browser và g ửi yêu cầu lên Ser ver tới khi tắt Browser. \n8.3.7.6 - Tệp Global.as a \n File Global.asa là m ột file tuỳ chọn dùng để khai báo các đối tượng, các  \nbiến hoặc các phương thức được truy xuất tới bởi tất cả các file trong ứng dụng \nASP. Một file Global.asa có th ể bao gồm: \n- Các sự kiện mức ứng dụng (application events) \n- Các sự kiện mức phiên (session events) \n- Các khai bá o đối tượng \n- TypeLi brary declarations \n- Các chỉ dẫn #include \nChú ý rằng file Globa l.asa phải được đặt ở thư mục gốc của ứng dụng \nASP, và m ỗi một ứng dụng ASP ch ỉ bao gồm 1 file Global.asa duy nh ất. \n \nCác sự kiện trong file Global.asa: \nTrong file Global.asa b ạn có thể cho ứng dụng và các sesssion objects \nbiết cần phải làm  gì ngay khi ứng dụng hoặc session b ắt đầu hoặc kết thúc. Để \nlàm điều đó bạn đặt các đoạn mã tương ứng trong các th ủ tục đáp ứng sự kiện. \nFile Global.asa có th ể chứa bốn loại sự kiện đó như sau: \n \n \nApplication_OnStart -  S ự kiện này xảy ra khi ng ười sử dụng đầu tiên \ngọi trang đầu tiên của ứng dụng. Sự kiện này xảy ra khi Web server được khởi \nđộng lại hoặc khi file Global.asa được soạn thảo. Sự kiện \"Session_OnStart\"  s ẽ \nxảy ra kế tiếp ngay sau s ự kiện này.  \nSession_O nStart - S ự kiện này xảy ra mỗi khi một user mới gọi trang \nđầu tiên tong ứng dụng ASP. \nSession_O nEnd - Sự kiện này xảy ra mỗi khi người sử dụng kết thúc \nphiên làm việc của mìn h. Một người sử dung kết thúc một phiên làm  việc khi \nkhông c ó bất kỳ một trang nào được gọi sau một khoảng thời gian nhất định. \n(Mặc định là 20 phút, có th ể đặt lại bởi người viết chương trình) \n 234\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 235,
    "text": "Application_OnEnd - S ự kiện này xảy ra khi ng ười sử dụng cuối cùng \nkết thúc phi ên làm  việc của mình . Thường thì sự kiện này xảy ra khi  Web \nserver stops. Nó th ường được dùng để  huỷ việc cài đặt sau khi ứng dụng được \nkết thúc,  ví  dụ như xoá các b ản ghi hoặc viết thông tin ra file.  \nMột file Global.asa có th ể có dạng như sau: \n \n<Script langua ge=”V BSCript” R UNAT=”S erver”> \n \nSub A pplication_O nStart \n --------Mã chương trình  thực hiện khi khởi động ứng dụng---------\n- \nEnd S ub \n \nSub A pplication_O nEnd \n ------Mã chương trình được thực hiện khi tắt ứng dụng------- \nEnd S ub \n \nSub Session_OnStart \n ------Mã chương trình được thực hiện khi bắt đầu một phiên-------\n-- \nEnd S ub \n \nSub Session_OnEnd \n ------Mã chương trình được thực hiện khi kết thúc một phiên------\n------- \nEnd S ub \n \n</Script> \n \n Bạn không th ể dùng cặp dấu scrript (<% và % >) trong file Gloabal.a sa. \n Khai báo Object (<object> Declarations ) \nBạn có t hể tạo các obj ects trong ph ạm vi phiê n làm việc hoặc phạm vi \ntoàn ứng dụng trong file Global.asa b ằng việc sử dụng thẻ <object >.  \nChú ý: Th ẻ <object> ph ải đặt bên ngoài th ẻ <script> \nCú phá p:  \n <object runat=\"server\" scope=\"scope \" id=\"i d\" \n{progid= \"progI D\"|classid=\"classI D\"}> \n.... \n</object> \n \n \n 235\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 236,
    "text": "Parameter Description \nscope  Đặt phạm vi của object ( Là m ức Phiên ho ặc Ứng dụng)  \nid  Chỉ định id duy nh ất cho từng object  \nProgID  An id associated with a class id. The format for ProgID is \n[Vendor.]Component[.Version]  \nEither ProgID or ClassID must be specified. \nClassID  Specifies a unique id for a COM class object.  \nEither ProgID or ClassID must be specified. \nVí dụ:  \nVí dụ này tạo một object ở mức phiên có tên là MyA d, sử dụng biến \nProgID: \n<object runat=\"server\" scope=\"session\" i d=\"MyAd\" \nprogid= \"MSWC.AdRotator\"> \n</object> \nCòn ví dụ này tạo một object ở mức ứng dụng có tên là  \n“MyC onne ction\" bằng cách sử dụng biến ClassID: \n<object runat=\"server\" scope=\"ap plication\" id=\" MyConnection\" \nclassid=\"Clsid:8AD3067A-B3F C-11CF-A560-00A0C9081C21\"> \n</object> \nMột  objects được khia  báo trong file Global.asa có th ể sử dụng trong \nbất kỳ srcipt nào thu ộc ứng dụng: \nGLOBAL. ASA: \n<object runat=\"server\" scope=\"session\" i d=\"MyAd\" \nprogid= \"MSWC.AdRotator\"> \n</object> \nYou could reference the object \"MyAd\" from any page in the ASP application: \nSOME .ASP FILE: \n<%=MyAd.GetAdvertisement(\"/banners/adrot.txt\")%>  \n \n 236\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 237,
    "text": "Khai báo t hư viện kiểu dữ liệu (TypeLibrar y Declarations) \nMột TypeLibrary là m ột contai ner chứa nội dung của file DLL  t ương \nứng với một COM object. B ằng cách chèn t hêm Type Library và o file \nGlobal.asa, các h ằng số của COM object có th ể được truy xuất, và các l ỗi được \nthông bá o tường m inh hơn bởi mã ASP. Nếu ứng dụng web của bạn có phụ \nthuộc vào COM objects có các ki ểu dữ liệu được định nghĩa trong th ư  viện \nkiểu dữ liệu, bạn cần phải khai báo t ư viện kiểu dữ liệu đó trong f ile Global.asa. \nCú phá p:   \n<!--METADATA TYPE= \"TypeLib\" \nfile=\"filename\" \nuuid=\"typelibraryuuid\" \nversion= \"versionnum ber\" \nlcid=\"localeid\" \n--> \n \nParameter Description \nfile Chỉ ra đường dẫn tuyệt đối tới type library.  \nHoặc là  biến file hoặc là biến uui d param eter phải được chỉ rõ \nuuid Chỉ định id duy nh ất cho  type library.  \nEither the file parameter or the uuid parameter is required \nversion Tuỳ chọn. Sử dụng để lựa chọn version. N ếu như có yêu cầu về \nversion m à không được tìm thấy, version nào g ần nhất sẽ được \nlựa chọn \nlocaleid Tuỳ chọn. The locale identifier to be  used for the type library \nCác giá tr ị lỗi \nServer có th ể trả về các thông báo l ỗi như sau: \nError Code Description \nASP 0222 Invalid type library specification  \nASP 0223 Type library not found  \nASP 0224 Type library cannot be loaded \nASP 0225 Type library cannot be wrappe d \nChú ý: Các  thẻ META DATA c ó thể xuất hiện ở bất kỳ vị trí nào trong \nfile Global.asa (C ả trong hoặc ngoài th ẻ <script>). Tuy nhiên, t ốt hơn hết là bạn \nnên đặt thẻ các này g ần trên cùng c ủa file Global.asa.  \n 237\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 238,
    "text": "8.3.7.8- Tr uy xuất dữ liệu trong ASP  \n ActiveX Data Objects(ADO)  là một Component chứa các đối tượng \ncung cấp các phương thức và thuộc tính để kết nối và truy xu ất cơ sở dữ liệu \ncho các trang Web.  B ạn có thể sử dụng ADO vi ết các câu l ệnh Script đơn giản \nnối tới cơ sở dữ liệu thông qua chu ẩn OD BC và thông qua các đối tượng dữ \nliệu nhúng và liên k ết(OLE DB).  \n \n \n8.3.8.1- Tạo một ODBC DSN  \n Trước khi tạo các Script truy xu ất cơ sở dữ liệu(CS DL), bạn cần chỉ dẫn \ncho ADO để xác định nguồn dữ liệu cần truy xuất và cách th ức liên kết CSDL. \nPhổ biến và đơn giản nhất đó là sử dụng tên ngu ồn dữ liệu(DSN) để định vị và \ncấu hình ngu ồn dữ liệu tưong thí ch chuẩn ODBC.  Với ODBC b ạn có thể lựa \nchọn các kiểu DN S để tạo, đó là: User, System ho ặc File. Các DNS User và \nSystem  thường trú trong re gistry của hệ điều hành WindowsNT. System DNS \ncho phé p tất cả người sử dụng truy nh ập vào Server đó đều có t hể truy xuất một \nCSDL, trong khi đó User DNS h ạn chế đối với mỗi người sử dụng đăng nhập \nvào Server;   File DSN s ẽ lưu thông tin d ưới dạng file cho phép nhi ều người sử \ndụng truy xu ất CSDL và d ễ dàng chuy ển từ Server này sang  Server khác ch ỉ \nbằng việc copy các t ệp DSN. \n \nBạn có t hể tạo a DSN b ằng cách: \n- Vào trong Start\\Control Panel, click chu ột vào biểu tượng OD BC, chọn \nmột dạng DSN  \n- Click Add, ch ọn một trình điều khiển dữ liệu(.MDB, SQL) \n- Theo các ch ỉ dẫn trên m àn hình để cấu hình DSN c ho CS DL của bạn \n \n8.3.8.2- Cấu hình File DSN cho M S Access  \n- Trong h ộp thoại Create New Data Source, l ựa chọn Micrsoft A ccess \nDriver, click Next \n- Nhập tên cho tệp DSN , sau đó click Next \n- Click Fini sh để tạo DSN \n- Trong h ộp thoại ODBC Micros oft Access Setup, ch ọn Select, sau đó \nvào đường dẫn tới tệp Access. \n- Click OK \n \n8.3.8.3- Cấu hình File DSN cho SQL Server  \n ASP không ch ỉ hỗ trợ cho việc truy xuất vào các CSDL d ạng chia sẻ tệp \nnhư MS Access,  MS Foxpro, nó còn h ỗ trợ các CSDL d ạng Client-Server nh ư \nOracle, SQL Server. CSDL d ạng chia s ẻ tệp chỉ thích hợp với các ứng dụng \nnhỏ có số lượng người truy nhập đồng thời không quá 10 ng ười. Đối với các \nứng dụng Web l ớn có số lượng người truy xuất lớn thì CSDL d ạng Client-\nServer là gi ải pháp hữu hiệu nhất. \nĐể cấu hình a File DS N cho SQ L Server: \n 238\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 239,
    "text": "- Trong h ộp thoại Create New Data Source, ch ọn SQL Ser ver, click \nNext \n- Vào tên c ủa DSN, ch ọn local và click Next \n- Click Fini sh để tạo DSN \n- Trong h ộp thoại Create a New Data Source to SQL Server, ch ọn \nphương thức SQL Server authentication và nh ập Logi nID và Passwor d, sau đó \nclick Next \n- Trong h ộp thoại OD BC Micros oft S QL Se rver Setup, click Test Data \nSource để kiểm tra lại DSN vừa tạo \n8.3.8.4- Cấu hình File DSN cho O racle \n Đảm bảo rằng chương trình Oracle Client đã được cài đặt trên máy tính \nđịnh tạo DSN.  \n- Trong h ộp thoại Create New Data  Source, l ựa chọn Micros oft for \nOracle, click Next \n- Nhập tên DS N \n- Click Fini sh để tạo DSN \n- Vào User Name, Pasword và Server ch ứa dữ liệu, sau đó click O K \n \nChú ý: File DSN là các t ệp có phần mở rộng .dsn và được lưu trong th ư \nmục: \\Programs\\Common Files\\ODBC\\Data Sources \n8.3.8.5- Liê n kết và truy xu ất CSDL bằng đối tượng Connection  \n Bước đầu tiên để truy xuất CSDL là thi ết lập một liên kết đến nguồn \nCSDL( DSN). ADO cung c ấp đối tượng C onnection gi úp bạn có thể dễ dàng \nthiết lập liên kết đến CSDL c ủa bạn qua  DSN m à bạn đã tạo. N goài r a \nConnection còn cung c ấp các phương thức, thuộc tính và t ạo các truy v ấn đến \nCSDL. \n \nTạo một Instance c ủa đối tượng Connection nh ư sau: \n \n<% ‘Tạo một connection \n Set con = S erver.CreateObject(“A DO.C onnection”) \n ‘G ắn connection v ừa tạo với một DSN \n con.Open “FILEDSN= Tên File DSN” \nhoặc \n con.Open “Tên Syste m DSN” \n%>  \n \nChú ý: Tên File DSN ph ải viết liền sau dấu = \n \nSử dụng phương thức Execute c ủa đối tượng Connection, b ạn có thể tạo \nra các câu l ệnh tr uy vấn truy xu ất CSDL và tr ả lại kết quả. Các câu l ệnh truy \nvấn được sử dụng là các câu l ệnh S QL(giả định là bạn đã biết các câu l ệnh \nSQL). \n \n 239\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 240,
    "text": "Ví dụ sau sẽ sử dụng câu lệnh INSERT để thêm một bản ghi  vào b ảng \nCUSTOM ERS tr ong CS DL sử dụng tệp DSN: MyDatabase.dsn \n<% \nstr = “FILEDSN=MyDatabase.dsn” \nSet Con = Server.CreateObject(“ADODB.Connection”) \nCon.Open s tr \n‘Chạy một câu lệnh truy vấn \nSql = “INS ERT IN TO CUS TOMERS(FirstN ame, LastNam e) \nValues(‘Jose’,’Lugo’)” \nCon.Execute(str) \n%> \n \nVí dụ sau sẽ sử dụng lệnh UPDATE  để thay  đổi giá trị cột FirstName \ntrong bảng CUSTOMERS cho các b ản ghi có LastName=’Jean’ \n<% \nSet Con = Server.CreateObject(“ADODB.Connection”) \nCon.Open “FILEDSN=MyDatabase.dsn” \nCon.Execute “UPD ATE CU STOMERS SE T Firs tName = ‘Jeff’ \nWHERE LastNam e = ‘Jean’” \n%> \n \nVí dụ sau sẽ sử dụng câ u lệnh DELETE để xoá một bản ghi có \nLastNam e = ‘Lugo’ \n \n<% \nSet Con = Server.CreateObject(“ADODB.Connection”) \nCon.Open “FILEDSN=MyDatabase.dsn” \nCon.Execut e “DELETE F ROM CU STOM ERS W HERE \nLastName=’Smith’” \n%> \n \n8.3.8.6- Sử dụng đối tượng RecordSet  \n Sử dụng đối tượng Connection để truy xuất và thực hiện các câu l ệnh \ncập nhật dữ liệu thật đơn giản. Tuy nhiên, để  lấy hay hiển thị dữ liệu, bạn phải \ndùng đối tưọng RecordSet. Có thể coi RecordSet nh ư là một tập dữ liệu có \nnhiều hàng và nhi ều cột. Bạn sử dụng con trỏ của RecordSet để trỏ đến một bản \nghi xác định nà o đó trong Rec ordSet. Ví  dụ sau sẽ minh hoạ cách sử dụng \nRecordSet để hiển thị thông tin c ủa 2 cột FirstName và LastName trong \nCUSTOM ERS. \n \n<% \n‘Trước tiên, thiết lập một liên kết tới DSN \nstrDSN = “FILEDSN=MyDatabase.dsn” \nSet Con = Server.CreateObject(“ADODB.Connection”) \nCon.Open s trDSN \n 240\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 241,
    "text": "‘Khởi tạo một đối tượng Recor d Set \nSet rs = Server.CreateObject(“ADODB.RecordSet”) \n \n‘Mở đối tượng RecordSet v ừa khởi tạo \nstrSQL = “SELECT FirstName, LastName FROM CUSTOM ERS” \nrs.Open strSQL, Con \n \n‘Hiển thị các dữ liệu trong Rec ordSet \nrs.MoveFirst \nDo Until  rs.EOF \n FirstName = rs.Fields(“FirstName”).Value \n LastName = rs.Fields(“LastName”).Value \n Response.Write FirstName + “-“ + LastName \n rs.MoveNe xt \nLoop  \n%> \n  \nMỗi đối tượng Recordset có m ột đối tượng tập hợp(Collection )là Fields  \nđại diện cho các tr ường trong RecordSet. Ta có th ể truy xuất đến từng trường \ntrong đối tượng Fields: \n \n<% \n.. .. \n FirstName = rs.Fields(“FirstName”).Value \n LastName = rs.Fields(“LastName”).Value \n.. .. \n%> \n \nĐối tượng tập hợp các trường F ields bao g ồm nh iều đối tượng Field \ntương ứng với các trường đơn lẻ. Trong ví d ụ trên, đối tượng Field là:  \n  \nFields(“FirstName”) \n Fields(“LastName”) \n \nBảng dưới sẽ mô tả thuộc tính của đối tượng Fields và F ield \n \n \n \n \n \n8.3.8.7- C ác thao t ác dữ liệu với RecordSet  \n Thêm  mới bản ghi: \n \n 241\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 242,
    "text": "<% \n‘Khởi tạo một đối tượng Recor d Set \nSet rs = Server.CreateObject(“ADODB.RecordSet”) \n \n‘Mở đối tượng RecordSet v ừa khởi tạo \nstrSQL = “SELECT Tr ường1, Trường2 F ROM Bảng” \nrs.Open strSQL, Con \nrs.AddNew \n rs.Fields(“Tr ường1”).Value = Giá tr ị 1 \n rs.Fields(“Tr ường2”).Value = Giá tr ị 2 \n rs.Update \n%> \n \nSửa bản ghi tồn tại \n \n<% \n‘Khởi tạo một đối tượng Recor d Set \nSet rs = Server.CreateObject(“ADODB.RecordSet”) \n‘Mở đối tượng RecordSet v ừa khởi tạo \nstrSQL = “SELECT Tr ường1, Trường2 F ROM Bảng” \nrs.Open strSQL, Con \n rs.Fields(“Tr ường1”).Value = Giá tr ị 1 \n rs.Fields(“Tr ường2”).Value = Giá tr ị 2 \n rs.Update \n%> \n \nXoá bản ghi tồn tại \n \n<% \n‘Khởi tạo một đối tượng Recor d Set \nSet rs = Server.CreateObject(“ADODB.RecordSet”) \n‘Mở đối tượng RecordSet v ừa khởi tạo \nstrSQL = “SELECT Các b ản ghi cần xoá” \nrs.Open strSQL, Con \n rs.Delete \n%> \n \n \n \n \n \n \n8.3.9- Thao tác v ới tệp và thư mục \n ASP cung cấp  đối tượng FileSystemObject để hỗ trợ cho người lập trình \nthao tác v ới tệp, thư mục và ổ đĩa.  Đối tượng FileSystemObject là m ột trong 3 \n 242\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 243,
    "text": "đối tượng của com ponent Scripting, được chứa trong tệp thư viện liên kết động \nSCRRUN. DLL.  Đoạn mã sau sẽ hướng dẫn cách khai báo và s ử dụng đối \ntượng: \n \n<% \nTrong VBScript: \n \nSet objFSO = CreateObject(“Scripting.FileSystemObject”) \n \nHoặc trong Jscript: \n \nVar obj FSO \nObjFSO = CreateObject(“Scr ipting.FileSystemObject”) \n%> \n \n8.3.9.1- Đối tượng Dri ve \n Đối tượng FileSystemObject ch ứa một thuộc tính, đó là Drives. Thu ộc \ntính này tr ả lại một tập hợp các đối tượng Drive trên máy ch ủ. Ví dụ sau sẽ \nminh hoạ việc sử dụng đối tượng Drive để lấy các thông tin v ề các ổ đĩa, kiểu \nđĩa và tên đĩa: \n \n<% \nDim fs,d,dc,s,n \nSet fs = CreateObject(“Scripting.FileSystemObject”) \nSet dc = fs.Drives \nResponse.Write “<TAB LE>” \nFor each d in dc \n Response.Write “<TR><TD>” + d.DriveLetter + “</TD><TD> ” \n If d.DriveType = 3 t hen \n  S = “Remote” \n  N = d.ShareName \n Else \n  S = “Local” \n  N = d.VolumeName \n End if \n Response.Write s + “</td><td>” + n + “</td><td>” \nNext \nResponse.Write “</TABLE>”  \n%> \n \nKết quả có dạng: \n \nA Local  Wizard1 \nC Local  Setup1 \nG Remote  \\\\Dec3\\User \n 243\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 244,
    "text": "8.3.9.2- Đối tượng Fol der \n Thu ộc tính RootFolder c ủa đối tượng Drive tr ả lại giá trị là đối tượng \nFolder, giúp truy xu ất hệ thống tệp và thư mục trong m ột ổ đĩa xác định. Với \ncác thuộc tính và đối tượng của Folder được nêu dưới đây sẽ chỉ rõ ý nghĩa các \nthuộc tính và ph ương thức của đối tượng Folder \n8.3.9.3- Đối tượng Fil e \n Chú ý rằng đối tượng FileSystemObject cung c ấp một tập các phương \nthức mà có các ch ức năng tương tự chức năng của các phương thức của các đối \ntượng riêng l ẻ. Ví dụ CopyFolder tương ứng với Folder.Copy, DeleteFolder \ntương ứng Folder.Delete. Đối tượng FileSystemObject cung c ấp các phương \nthức để làm việc với các ổ đĩa và thư mục nói chung, còn các đối tượng riêng l ẻ \nnhư Folder, Drive cung c ấp các phương thức để làm việc với các thư mục và ổ \nđĩa xác định. Hai ph ương thức giúp tha o tác với các tệp Text th ường được \ndùng, đó là: CreateTextFile và OpenTe xtFile. Cú phá p đầy đủ cho chúng là: \n \nCreateTextFile:  \n \nSet ObjFSO =  Server.CreateObject (“Scripting. FileSyst emObject”) \nSet objNewFile = \nobjFSO.Cr eateTextFile(filenam e[,overwrite[,unic ode]]) \n \nTrong đó: \nFilename: Đường dẫn Vật lý đầy đủ và tên tệp cần tạo \nOverwrite: True n ếu ghi đè và False nếu không ghi đè, ngầm định là ghi  \nđè \nUnic ode: True n ếu tệp được tạo sử dụng m ã Unic ode, hoặc Fals e nếu \ndùng mã ASCII, ng ầm định là mã ASCII. \n \nOpenTextFile: \n \nSet ObjFSO =  Server.CreateObject (“Scripting. FileSyst emObject”) \nSet objNewFile = objFSO.OpenTextFile (filename[,iomode[,create[,format]]]) \n \nTrong đó: \nFilename: Đường dẫn Vật lý đầy đủ và tên tệp cần tạo hoặc ghi. \nIomode: Lựa chọn For Reading hay F orAppendi ng. Ngầm định l à \nForReading \nCreate: N ếu mang giá  trị True, hệ thống sẽ tự  tạo tệp mới nếu chưa tồn \ntại. Nếu mang giá trị False, hệ thống sẽ báo lỗi nếu tệp cần mở chưa tồn tại. \nFormat: Định dạng m ã hoá tệp. –1: Unicode; -2: Ng ầm định hệ thống; 0: \nDạng mã ASCII \nNgầm định giá trị 0. \n \n 244\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 245,
    "text": "Hai phương thức trên trả lại đối tượng kiểu TextStream . TextStream  là \nđối tượng dùng để thao tác v ới các tệp văn bản. Các thu ộc tính và ph ương thức \ncủa đối tượng Text Stream  được miêu tả chi tiết ở phần phụ lục cuối tài liệu. \n \nĐể đăt/ lấy các thu ộc tính của một tệp, ta có th ể dùng đối tượng File. \nCách tạo một đối tượng File nh ư sau: \n \nSet ObjFSO =  Server.CreateObject (“Scripting.FileSystemObject”) \nSet obj F = obj FSO.GetFile(filename) \n \nTrong đó, filename là t ệp cần lấy các thuộc tính.  \n \n \nBài tập chương \n \n1. Bài tập về các cấu trúc điều khiển và vòng l ặp. \n1.1. Viết đoạn mã chương trình AS P dùng cấu trúc Select...Case để hiển thị ra \nmàn hình ngày hi ện hành tr ong tuần bằng tiếng Việt. \n1.2. Viết đoạn mã chương trình ASP dùng vòng l ặp Do...Loop để viết ra màn \nhình 10 dòng c hữ “Hello world” có kích th ước tăng dần. \n2. Bài tập về các đối tượng. \n2.1. Viết ra m àn hình c âu “Hello worl d” \n2.2. Viết một form lấy ý kiến của người sử dụng về trang web c ủa bạn, rồi hiển \nthị các thông tin ng ười sử dụng điền vào ra m àn hình. \n3. Các bài t ập tổng hợp \n20 câ u hỏi dưới đây thử kỹ năng làm việc của bạn với ngôn ng ữ ASP. \n  \n1. W hat does ASP stand f or? \n \n All Standar d Pages \n Active Server Pages \n Active Standard Pages \n A Server Page \n \n \n2. ASP server scripts are su rrounded by delim iters, which? \n \n <&>...</&> \n 245\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 246,
    "text": "<%>...</%> \n <script>...</script> \n <%...%> \n \n3. How do you write \"Hello W orld\" i n ASP \n \n Response.Write(\"Hello World\") \n \"Hello World\" \n Document.Write(\"Hello World\")\n \n  \n4. \"<%= \" is the same as: \n \n <%Docum ent.Write \n <%Equal \n <%Response.Write \n <%Write \n \n  \n5. W hat is the default scripting langua ge in A SP? \n \n VBScript \n EcmaScript \n PERL \n JavaScript \n \n  \n6. How can you script your A SP code in Ja vaScript? \n \n End the document with: <% language=\"ja vascript\" %> \n JavaScript is the default scripting language \n Start the docum ent with: <%@ la ngua ge=\"javascript\" % >\n Start the docum ent with: <% language=\"ja vascript\" %> \n \n  \n7. How do you get information from a fo rm that is submitted using the \"get\" \nmethod? \n \n 246\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 247,
    "text": "Request.Form \n Request.QueryString \n \n  \n8. How do you get information from a form  that is submitted using the \"post\" \nmethod? \n \n Request.Form \n Request.QueryString \n \n  \n9. Page 1 has this link: \n<a href=\"page2.asp?c olor=gree n\">G o</a> \nHow can page2.asp get th e \"color \" param eter? \n \n Response.Param eter(\"color\") \n Request.QueryString(\"color\") \n Get(\"col or\") \n Response.QuerySt ring(\"color\")\n \n \n10. Whic h AS P property is used to identif y a user? \n \n An ASP Cookie \n The Application object \n The Server object \n \n  \n11. All users of the sam e application share O NE Session object. \n \n True \n False \n \n12. All users of the sam e applicat ion share O NE Application object. \n \n False \n True \n \n 247\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 248,
    "text": "13. If a user has Cooki es enabled, a sessi on variable is available to all pages in \none a pplication. \n \n True \n False \n \n \n  \n14. Include files m ust have the file extension \".inc\" \n \n False \n True \n \n15. What is the correct way to include the file \"time.inc\" ? \n \n <% #incl ude file=\"time.inc\" %>\n <!--#include file=\"time.inc\"--> \n <% include file=\"time.inc\" %> \n <include file=\"time.inc\"> \n \n  \n16. Whic h one of these events is  a standard Global.asa event? \n \n Session_id \n Global.asa does n't have any standard events\n Application_OnStart \n Session_St art \n \n  \n17. Global.asa is required for all Web sites \n \n Only for ASP Web sites \n False \n True \n \n18. Whic h of these obj ects is NOT an A SP component? \n \n AdRotator \n File Access \n 248\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 249,
    "text": "LinkC ounter\n Counter \n \n19. AS P com es with a standard com pone nt that displays a different \nadvertisement each time a user enters or refreshes a page, what is the name of \nthis component? \n \n AdRotator \n RotateAds \n Advertisement \n Advertise \n \n20. How do you create a FileSystemObject? \n \n Create(\"FileSystemObject\") \n Server.CreateObject(\"Scri pting.FileSystemObject\")\n Create Object:\"Scripti ng.FileSystemObject\" \n Server.CreateObject(\"FileSystemObject\") \n \n \n \n \n 249\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 250,
    "text": "Bảng các thuộc tính và ph ương thức của một số đối tượng ASP  thường dùng  \n \n1.Đối tượng Re quest  \n \nCollections  \nMiêu tả \nClientCertificate \nCookies \nForm  \nQueryString \nServerVariables Cung cấp các giá tr ị để phân biệt Client khác nha u. \nGiá trị các Cookies được gửi từ Browser của Client \n \nThuộc tính Miêu tả \nTotalBytes S ố Byte Cli ent gửi trong Request \nPhương thức Miêu tả \nBinaryRead Tr ả lại thông tin d ạng nhị phân mà Client đã gửi lên \nServer \n \n \n2.Đối tượng Response \n \nCollections  Miêu tả \nCookies Tr ả lại các thông tin để phân biệt các Client g ửi y/c tới \nServer \nThuộc tính Miêu tả \nBuffer \nCacheControl \nCharset \nContentType \nExpires \n \nExpiresAbs olute \nIsClientConnected \nStatus Tạo vùng đệm cho xử lý trang hay không \nCó tạo Cache trên máy đại diện(Proxy) ha y không \nGắn thông t in mã hoá Char set và o trong header c ủa \ntrang  \nĐặt kiểu nội dung trang \nTrang hết hiệu lực sau kho ảng thời gian (phút ) được \nđặt = Expires \nNgày và thời gian trang h ết hiệu lực \nKiểm tra Client còn n ối với Server không \nGiá trị trạng thái Server g ửi lại cho Client \nPhương thức Miêu tả \nAddHea der \nAppendToLog \nBinaryWrite \nClear \nEnd \nFlush \nRedirect \nWrite Thêm  hoặc thay đổi giá trị trong he ader của trang \nHTML \nTự động thêm v ăn bản vào tệp Log của Web Server \nGửi dữ liệu tới Browse r mà không m ã hoá \nXoá các b ộ đệm trong quá trình x ử lý trang \nDừng xử lý trang và tr ả lại kết quả ngay lập tức cho \nClient \nGửi kết quả được xử lý trong bộ đệm ngay lập tức \nDẫn hướng tới một trang bất kỳ \nChèn một xâu và o trang H TML \n 250\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 251,
    "text": "3.Đối tượng Server \n \nThuộc tính Miêu tả \nScriptTim eOut Th ời gian một Script có th ể chạy trước khi xảy ra lỗi \nPhương thức Miêu tả \nCreateObject \nHTMLEncode \nMapPat h \nURLEnc ode Khai bá o sử dụng một đói tượng \nMã hoá tra ng HTML \nChuyển đổi đường dẫn logic thành đường dẫn vật lý \nMã hoá các tham s ố truyền trên U RL \n \n \n4.Đối tượng Session \n \nCollections  Miêu tả \nContents \nStaticObjects Chứa các biến/ đối tượng phạm vi phiên \nChứa các đối tượng được khai báo v ới thẻ <Object> \ntrong thủ tục đáp ứng sự kiện mức phiên \nThuộc tính Miêu tả \nCodePa ge \nLCID \nTimeOut Đặt chế độ mã hoá trang \nĐặt các thông s ố hệ thống theo địa điểm mỗi vùng \nKhoảng thời gian tồn tại của một biến phiên \nPhương thức Miêu tả \nAbandon Hu ỷ bỏ giá trị các biến phiê n \nSự kiện Miêu tả \nOnStart \nOnEnd Xảy ra khi Server t ạo ra một phiên m ới \nXảy ra khi m ột phiên kết thúc \n \n \n5.Đối tượng A pplication \n \nCollections  Miêu tả \nContents \nStaticObjects Chứa các biến/ đối tượng phạm vi ứng dụng \nChứa các đối tượng được khai báo v ới thẻ <Object> \ntrong thủ tục đáp ứng sự kiện mức ứng dụng \nPhương thức Miêu tả \nLock \n \nUnLock Cấm các Client khác thay đổi các thuộc tính mức ứng \ndụng \nCho phé p các Client khác thay đổi các thuộc tính mức \nứng dụng \nSự kiện Miêu tả \nOnStart \nOnEnd Xảy ra khi kh ởi động ứng dụng \nXảy ra khi ứng dụng kết thúc \n \n 251\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 252,
    "text": "6.Đối tượng FileSystemObject \n \nPhương thức Miêu tả \nCreateTextFile \n \nOpenTextFile \n \n Tạo một tệp và trả lại một đối tượng Text Stream  để \ntruy nhập tệp \nMở một tệp và trả lại một đối tượng Text Stream  để \ntruy nhập tệp \n \n \n7.Đối tượng TextStream \nPhương thức Miêu tả \nClose \nRead \nReadAll \nReadLine \nSkip \nSkipLine \nWrite \nWriteLine \nWriteBlankLines Đóng một tệp \nĐọc các ký t ự trong một tệp \nĐưa tất cả các ký tự vào một xâu \nĐọc một dòng ký t ự và đưa vào một xâu \nBỏ qua hoặc huỷ một ký tự khi đọc tệp \nBỏ qua hoặc huỷ cả một dòng khi đọc tệp \nViết một xâu tới một tệp \nViết một xâu và ký t ự xuống dòng t ới một tệp \nViết ký tự xuống dòng t ới một tệp \nThuộc tính Miêu tả \nAtEndOfLi ne \nAtEndOfStream \nColumn \nLine True nếu con trỏ tệp ở cuối dòng trong t ệp \nTrue nếu con trỏ tệp ở cuối tệp \nTrả lại số thứ tự cột của ký tự hiện tại trong một tệp \nTrả lại số thứ tự dòng của ký tự hiện tại trong một tệp \n \n \n \n \n \n \n \n \n \n \n 252\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 253,
    "text": "Chương 9: Qu ản trị máy chủ Web Server trên Windows \n \n9.1. Giới thiệu WEB Server \nLà phần mềm cài trên máy ch ủ cung cấp các thông ti n thông qua cá c trang \nweb cho các các máy tr ạm bằng việc sử dụng giao th ức HTTP. C ấu trúc \nhoạt động của Web Server d ựa trên mô hình client/server và s ử dụng giao \nthức HTTP trong việc truyền dữ liệu. Các we b server thông t hường là một \nphần trong bộ các phần mềm ứng dụng để phục vụ cung cấp dịch vụ email, \nftp … và xây d ựng, xuất bản các  trang we b trong m ạng Internet hay \nIntranet.  \nCó khá nhi ều sản phẩm web server khác nha u, việc lựa chọn một web \nserver phù h ợp sẽ dựa trên các tiêu chí đánh giá: Khả năng làm  việc với hệ điều \nhành và các  ứng dụng khác, kh ả năng thiết lập các chương trình ứng dụng phía  \nserver, kh ả năng bảo mật dữ liệu, khả năng xuất bản trang we b, các công c ụ hỗ \ntrợ khi xây d ựng các trang web.  \n \n9.2. Giới thiệu một số phần mềm Web  Server \nSunO ne W eb Server \nSunO ne cho phép phát tri ển rất nhiều lĩnh vực khác nhau trên các d ịch vụ ứng \ndụng và các d ịch vụ web , dựa trên nền J2EE với hiệu năng và sự thực thi rất \ncao. Đây là một phần mềm được phát triển theo các m odul dựa trên các chu ẩn \nvề HTTP server, Java Message Servic e (JMS), Enterprise Edition (J2EE). \n \nApac he We b Server \nApac he We b Server được xem  như một sự nỗ lực rất lớn trong vi ệc phát \ntriển và duy trì m ột Web Server m ã nguồn mở cho các h ệ điều hành, bao \ngồm Unix, Linux và Windows NT. Đây là một Web Server h ội tụ tất cả các \n 253\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 254,
    "text": "tính năng: bảo mật, hiệu suất, mở rộng và phát tri ển cung cấp các dịch vụ \nWeb được đồng bộ trong các chu ẩn We b hiện hành. \nCác đặc điểm nổi bật của Apache: \n- Ngày nay Apac he có thể chạy kết hợp (hybrid) giữa chế độ đa sử lý \nvà chế độ đa chỉ lệnh. \n- Hỗ trợ nhiều giao thức: Apache được phát triển để có thể phục vụ \ntrên nhiều giao thức khác nhau. \n- Ngày càng h ỗ trợ tốt hơn cho các hệ điều hành khác nh ư BeOS, \nOS/2 và Wi ndows. \n- Ngày càng phát tri ển và hoà n thiện các API (Application Program \nInterface). \n- Hỗ trợ IPv6. \n- Hỗ trợ nhiều modul dùng để lọc (Filtering) các dòng d ữ liệu đến \nhoặc đi từ server. \n- Hỗ trợ nhiều ngôn ng ữ hiển thị các thông báo l ỗi. \n- Ngày càng đơn giản và dễ dàng thiết lập các tham s ố cho Web \nServer qua các file c ấu hình. \n \nInternet Information Services  (IIS) \nIIS là dịch vụ thông tin Internet do Microsoft phát tri ển, sản phẩm này \nđược tích hợp cùng với hệ điều hành Wi ndow s. Phiên b ản mới nhất hiện nay là \nIIS 6. 0 được chạy trên hệ điều hành Wi ndows 2003.  Trong IIS  bao gồm nh iều \ndịch vụ dịch vụ như: dịch vụ Web Server, d ịch vụ FTP Server … Trong ph ần \nnày ta chỉ đề cập đến dịch vụ Web Server. IIS Web Server (g ọi tắt là IIS) đáp \nứng mọi yêu cầu chủ yếu của một Web Server nh ư: độ tin cậy, hiệu năng, khả \nnăng the o dõi giám  sát (quản trị), tính bảo mật và tính kh ả thi trong vi ệc phát  \ntriển các dịch vụ ứng dụng. Tất cả các cải tiến này là kết quả là sự kết hợp chặt \nchẽ cùng với các tính n ăng mới được cung cấp trong hệ điều hành Windows.  \nĐộ tin cậy và hiệu năng: Với một số các tính n ăng mới ngày càng làm cho \nIIS trở nên tinh c ậy hơn và hiệu suất hơn. Cá c tính năng này gi úp khởi động \nlại IIS một cách nhanh chóng và d ễ dàng. N gười quản trị có thể khởi động \ncác dịch vụ Web mà không c ần khởi động lại máy chủ. Để tăng cường độ \ntin cậy, tính năng Application P rotect cung c ấp các khả năng để chạy các \nứng dụng chung (pool) ho ặc riêng bi ệt (separate) trong các d ịch vụ Web \n(Web services). Thêm vào đó các tính n ăng mới như: CPU Throttlinh và \nSocket Pooling cũng tăng cường rất nhiều về độ tin cậy. Đối với các người \nphát triển ứng dụng, hiệu suất của các web site được cải thiện qua các tính \nnăng mới chẳng lạn như scriptless Microsoft Active Server Pages (ASP) \nprocessing,  ASP self-tuni ng, và pe rformance-enhanced ASP objects. \nQuản trị: IIS rất dễ dàng trong vi ệc cài đặt và duy trì. M ột số tính năng mới \nhỗ trợ thêm cho người quản trị trong việc duy trì bao g ồm đơn giản hoá quá  \ntrình cài đặt, nhiều các thao tác b ảo mật theo các thu ật có sẵn giúp ng ười \n 254\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 255,
    "text": "quản trị thực hiện một cách dễ dàng, có kh ả năng theo dõi th ời gian sử lý, \ncũng như rất linh hoạt trong việc quản trị từ xa, và cho phép kh ởi tạo các \nthông bá o lỗi theo ý tưởng của người quản trị. \nBảo mật: IIS bổ sung thêm các chu ẩn hỗ trợ các giao th ức bảo mật trên các \nchuẩn công nghi ệp quan tr ọng bao g ồm:  Digest Authentication, Server \nGated Cr yptogra phy, Kerberos v5 aut hentic ation pr otocol, Trans port Layer \nSecurity, and Fort ezza. Thêm vào đó có các thuật thao tác m ới có sẵn, giúp \ndễ dàng hơn cho người quản trị thiết lập và cấu hình bảo mật cho website. \nMôi trường ứng dụng: Các ng ười phát triển ứng dụng có thể dễ dàng phát \ntriển các ứng dụng của mình dựa trên các công ngh ệ mới được phát triển và \ntích hợp cùng v ới hệ thống như dịch vụ Active Directory ho ặc COM+... \nThêm  vào đó các cải tiến trong IIS AS P đã cải thiện rất nhiều trong việc \nđiều khiển các luồng dữ liệu cũng như bắt lỗi giúp ng ười phát triển phát \ntriển các ứng dụng của mình một cách rất hiệu quả và linh ho ạt. \n \n9.3. Quản trị máy chủ WebServer trên  Window s - Phần mềm IIS \nWeb Serv er \n9.3.1. Các khái niệm cơ bản \nMạng m áy tính là gì ? Ta có th ể hiểu một cách đơn giản: Mạng máy tính \nlà một tập hợp các máy tính độc lập được kết nối với nhau thông qua các đường \ntruyền vật lý và tuân theo các q uy ước truyền thông ( giao thức) nà o đó. Có rất \nnhiều mô hình kết nối khác nha u, mỗi mô hình đều tuân theo m ột chuẩn riêng. \n \nMô hình O SI (Ope n System  Interconnection)  \nMô hì nh O SI được tổ chức quốc tế về tiêu chuẩn hoá ISO (International \nOrga nizaiton for Sta ndardization) đưa ra nhằm cung cấp một mô hình chu ẩn \ncho các nhà s ản xuất và cung c ấp sản phẩm viễn thông áp d ụng để phát triển \ncác sản phẩm viễn thông. Ý  tưởng m ô hình hoá được tao ra còn nh ằm hỗ trợ \ncho việc kết nối giữa các hệ thống và modun hoá các thành ph ần phục vụ mạng \nviễn thông. Mô hì nh OSI được phân thành 7 l ớp (mức) (ch i tiết xin tham kh ảo \nở các tài liệu khác) và có m ô hình như sau: \n \nAplication ( Ứng dụng)  \nPresentation (Trình di ễn)  (Upper Layer) \nSession (Phiên)  \n Transport Layer (Gia o vận) \n Networ k Layer (M ạng) \n Data Link (Liên k ết) \n Physical (Vật lý)  \n(Lower Layer) \n \n 255\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 256,
    "text": "TCP/IP  \nTCP/IP viết tắt của cụm từ Transmission Control Protocol/Internet \nProtoc ol là một giao thức truyền thôn g cơ bản trong m ạng Internet. Xin \ntham khảo thêm ở các tài liệu khác. \n \nLAN – Loc al Area Networ k \nLocal Area Network là m ột nhóm  các m áy tính và các thi ết bị được kết \nhợp để chia sẻ chung một đường truyền thông, và thông th ường để chia sẻ \nchung các ngu ồn tài nguyên c ủa một máy chủ trong một phạm vi hẹp. Thông \nthường một mạng LA N ba o gồm 2 hoặc nhiều các má tính cá nhân, các máy in, \ncác thiết bị có khả năng lưu trữ (file servers)… Nó c ho phé p mỗi máy tính cá \nnhân trong m ạng truy cập và sử dụng các ngu ồn tài nguyên c hung này, c ũng \nnhư dùng chung các ch ương trình ph ần mềm khác...  M ạng LA N thông th ường \nđược kết nối với nha u trong m ột khu vực địa lý nhỏ như một tầng của toà nhà, \nhoặc trong m ột toà nhà … M ột số mạng LAN  có thể kết  nối lại với nha u trong \nmột khu làm  việc. Tuy nhiên nhi ều khi khái ni ệm phạm vi hẹp ở đây cũng chỉ \ncó ý nghĩa tương đối. \n \nWAN – Wi de Area Ne twork \nWide Area Networ k là một mạng m áy tính được mở rộng trên các kho ảng \ncách vị trí địa lý rất xa. Thông th ường người ta kết nối các mạng LAN v ới nhau \nđể tạo thành W AN. \n \nMạng Internet \nInternet là m ạng của các mạng, trong đó các m áy tính được kết nối với \nnhau và tra o đổi dữ liệu thông qua  giao thức truyền thông TCP/IP. Hay nói m ột \ncách khác Internet là m ột tập hợp số lượng khổng lồ các mạng m áy tính m à mỗi \nmạng nà y kết nối tới hàng trăm triệu máy tính, con ng ười, cũng như các \nchương trình ph ần mềm, các cơ sở dữ liệu, và các file. \n \nDịch vụ WWW \nWWW là m ột mạng toàn cầu của tất cả các mạng và có th ể hiểu WWW là \nmột tên gọi khác của Internet.  Có th ể nói nôm na, thông qua WWW ng ười ta \ncó thể tích hợp tất cả các dịch vụ khác cuả Internet lên nó. B ạn có thể lấy tài \nliệu trên mạng, xem  ảnh, vi deo, nghe nh ạc, nói chuy ện và chạy các chương \ntrình ứng dụng trên m ạng thông qua d ịch vụ WWW. Để có thể sử dụng được \n 256\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 257,
    "text": "dịch vụ WWW, b ạn phải có phần mềm trên  máy  trạm thường được gọi là trình \nduyệt (Browser) và các máy cung c ấp dữ liệu sử dụng phần mềm Web server. \nHiện nay, có mấy loại trình duy ệt cơ bản sau: Netscape, Internet Explorer ho ặc \nOpera. Đối với phần mềm Web server thì đa dạng hơn, việc đa dạng này dựa \ntrên hệ điều hành m áy chủ sử dụng và các ứng dụng cung c ấp trên m áy chủ đó \ntuy nhiê n một số sản phẩm sa u đây được sử dụng nhiều hơn cả: Internet \nInformation Service (IIS) c ủa Microsoft, Iplanet Web server c ủa SUN được \nphát triển trên nền của Netscape và Apache Web server.  \nKhi truy nh ập Internet, b ạn sử dụng các trình duy ệt để xem các tài li ệu trên đó. \nCác tài li ệu này gọi là các trang web, hi ện nay việc tạo các trang web trên \nInternet s ử dụng một ngôn ng ữ HTML. Trong các trang web còn có các thành \nphần siêu liên k ết (Hypertext), cá thành ph ần này cho ng ười sử dụng có thể đọc \ncác phần dữ liệu khác  trong trang web ho ặc ở trang web khác thông qua m ột \nthao tác click chu ột.  \nNguyên tắc hoạt động của siêu liên k ết có thể hình dung m ột cách đơn giản như \nsau: Mỗi mộtrang web v ăn bản, một file dữ liệu hoặc file âm thanh ho ặc bất cứ \ncài gì bạn tìm thấy trên mạng đều có địa chỉ nguồn (URL – U niform  Resource \nLoacator). D ựa vào URL có th ể xác định được nơi cung cấp dữ liệu bạn cần sử \ndụng (địa chỉ của máy cung c ấp dịch vụ WWW trên Inter net hay một phần \ntrong trang web).  \nIP Address \nLà thông tin nh ằm xác định đich chỉ của một máy tình khi tham gia k ết \nnối mạng Internet. Thông th ường chuẩn IP address hi ện nay là IPV 4 có nghĩa \nsử dụng 4 bytes bi ểu diễn 1 chuỗi số thành IP  Address, trong t ương lai chu ẩn \nnày sẽ là IPV6. \n \nTCP Port Nu mber \nNhư chúng ta đã biết các m áy tính sử dụng giao th ức truyền thông là \nTCP/IP và có r ất nhiều dịch vụ khác nhau tr ong mạng Internet. Để phân biệt \ngiữa các dịch vụ khác nha u trên một máy chủ cung cấp dịch vụ TCP đưa ra \nkhái niệm cổng (port) có ngh ĩa mỗi dịch vụ sẽ sử dụng  1 số cổng nhất định ví \ndụ ngầm định m ail sử dụng 110, 25 hay Telnet s ử dụng port 23 còn WWW hay \nHTTP sử dụng port 80. Giá tr ị của các port t ừ 0 – 65535,  người quản trị có thể \nthay đổi lại giá trị port ứng với từng dịch vụ khác với giái trị ngầm định. \n \n 257\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 258,
    "text": "HTTP – H ypertext Tr ansfer Prot ocol \nHTTP là m ộ giao thức mức ứng dụng được Web Client và Web Server dùng \nđể trao đổi thông tin v ới nhau. HTTP là giao th ức yêu cầu/đáp ứng, và có thể \nhiểu một cách nô m na  là một tập hợp các nguyên t ắc trao đổi file dữ liệu \n(Text, Graphic images, sound, video và  các file multimedia khác) trên WWW. \n \n9.3.2. Cài đặt Internet Information Services IIS \n9.3.2.1. C huẩn bị cài đặt \nChuẩn bị về máy móc thi ết bị phần cứng \n- Yêu cầu 01 m áy chủ với cấu hình tối thiểu như sau: \n+ CPU Pentium /133M Hz. \n+ 64M B RAM (khuyến nghị 128MB ho ặc lớn hơn). \n+ 950M B đến 1 G B ổ đĩa cứng. \n- Yêu cầu tối thiểu 01m áy trạm (client) v ới cấu hình nh ư sau: \n+ CPU Pentium ho ặc Celeron 366 MHz. \n+ 32M B RAM (khuyến nghị 64 MB ho ặc lớn hơn). \n+ 640 MB đến 1 G B ổ đĩa cứng. \n- Hệ thống mạng kết nối giữa máy chủ và các máy tr ạm (theo số lượng \nmáy trạm) \nChuẩn bị về phần mềm \n- 01 hệ điều hành Wi ndows A dvanced Server:  Dùng để cài đặt máy \nchủ và Web Server. \n- 01 hệ điều hành Wi ndows (Wi ndows 9x, Wi ndows XP ho ặc \nWindows 2000 Professional). \n- Trình duy ệt Web.  \n \n9.3.2.2. C ài đặt Internet Information Services  \nIIS thường được cài đặt mặc định cùng với hệ điều hành Windows (NT \nServer ho ặc Windows  2000 Server), tuy nhiên ng ười quản trị có thể thể lựa \nchọn để bổ sung hoặc loại bỏ các modul không c ần thiết. Tuy nhiên ng ười quản \ntrị cần phải hoạch định các các yêu c ầu cũng như khả năng phát tri ển và mở \nrộng của web server tr ước khi thao tác. \nLưu ý: Trong ph ần này ta thực hiện việc cài đặt và quản trị IIS 5.0 trên h ệ \nđiều hành Windows 2000  Advanced Server. \n \nViệc cài IIS có th ể thao tác theo các thao tác sau: \n+ Start/Settings/Control Panel. \n+ Nhấn đúp chuột trái vào m ục Add/Rem ove Program s.  \n+ Nhấn vào biểu tượng A dd/Rem ove Wind ows Components. M ột cửa \nsổ hiện ra cho phép b ạn lựa chọn cài đặt thêm ho ặc loại bỏ các \nmodul c ùng với hệ điều hành. \n+ Chọn mục Internet Information Serv ices IIS (Xem hình 8.1) \n 258\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 259,
    "text": "Chú ý: IIS bao g ồm các m odul thà nh phần: \n+ Co mmo n Files: Đây là các file yêu c ầu cho IIS, và các file này được \ndùng cho nhi ều modul thành ph ần khác nh ưng thông thường không \ncài đặt là một modul độc lập. \n+ Documentation: Là các tài li ệu và ví dụ để người quản trị tham khảo. \n+ File Tra nsfer Protoc ol (F TP) Server: Modul thà nh phần này thiết lập \nmột FTP Site (FTP Server), dùng để upload và download các file. \n+ FrontPage 2000 Server Extensi on: c ho phép qu ản trị các web s ite \nthông qua Microsoft FrontP age và Visual InterDev. \n+ Internet Informati on Ser vices Sna p-In: Một gia o diện quản trị IIS, \nđược dùng trong MM C (Microsoft Ma nage ment Console). Qua giao \ndiện này người quản trị có thể dễ dàng t hiết lập, tha y đổi và cấu hình \ncác tham s ố cho we b site. \n+ Internet Services Manager (HTML): M ột giao diện quản trị IIS qua \ngiao diện Web. \n+ NNTP Se rvice. \n+ SMTP Se rvice. \n+ Visual InterDev RAD Remote Deloym ent Support: Cho phé p triển \nkhai từ xa các ứng dụng trên Web Server. \n+ World W ide Web Server:  h ỗ trợ việc truy cập các web site. \n \n \n \nHình 9. 1: Lựa chọn để cài đặt IIS \n \nCài đặt mặc định (Typical Install) \nIIS mặc định cài đặt các modul: Common Fil es, Documentation, Int ernet \nInformation Services Snap-In , World Wide Web Server. Để cài đặt mặc định \n 259\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 260,
    "text": "trong cửa sổ cài đặt (Windows Components Wizard) l ựa chọn Internet \nInformation Services (IIS), r ồi nhấn vào nút Next để tiếp tục. Toàn bộ modul \nđã ngầm định sẽ được cài đặt. \nCài đặt tuỳ chỉnh (Custom Install) \nĐể cài đặt tuỳ chỉnh tr ong cửa sổ cài đặt nhấn vào nút Detail. Các modul \nsẽ được liệt kê c ho phé p bạn lựa chọn chi tiết các modul để cài đặt. Sau khi l ựa \nchọn xong, nh ấn vào nút Ne xt để tiếp tục, toàn bộ các m odule m à bạn lựa chọn \nsẽ được cài đặt. Vì trong giáo trình này ta đề cập tới Web Ser ver nên bạn phải \nchọn modul World Wi de Web Server. \n \n \nHình 9. 2: Chi tiết các m odul trong IIS \n \n \nLưu ý: Một số điều trước khi cài đặt: \n- Nên câ n nhắc các modul để cài đặt, không nên cài đặt các modul \nkhông cần thiết.  \n- Nên cài IIS trên m ột máy chủ riêng (Standalone Server). \n- Nên cài đặt IIS trên m ột máy chủ mà máy  chủ không ph ải hỗ trợ bất \nkỳ dịch vụ nào khác. \n- Nên loại bỏ các giao th ức không c ần thiết. \n \n \nTrong quá  trình cài đặt Windows s ẽ tự động cài đặt và cấu hình các  \nmodule. \n 260\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 261,
    "text": "Hình 9. 3: Cài đặt IIS \n \n9.3.3. Quản trị Intern et Information Services (IIS) \n9.3.3.1. Cấu hình Internet Inform ation Services  \n \n9.3.3.1.1 Thi ết lập một Web Site mới \nĐể thiết lập một web site m ới yêu cầu đầu tiên mà cũng là tối thiểu một \nngười quản trị cần biết thông tin v ề về web site bao g ồm:  \n- Miêu tả web site: đây là thông tin giúp ng ười quản trị nhận biết và phâ n \nloại các web site trên máy ch ủ mình quản trị. \n- Tiêu đề của web site (host heade r): Thông t hường có thể có nhiều tiêu \nđề hoặc nhiều tên m iền cùng ánh x ạ vào một web site. \n- Địa chỉ IP: Là địa chỉ IP của card mạng dùng để phục vụ web site. \n- Cổng truy c ập (Port Number): Giá tr ị mặc định là 80, v ới một số web \nsite vì các m ục đích bảo mật người quản trị có thể thay đổi giá trị này. \n- Thư mục gốc: Mỗi Web site có m ột thư mục gọi là thư mục gốc (hom e \ndirectory), th ư mục này là duy nh ất. Trong th ư mục gốc này bao gồm \ntoàn bộ các file và các th ư mục hoặc thư mục ảo liên quan đến we b site \nnày.  \nBạn có t hể tạo một Web site m ới theo nhi ều cách, qua các câu l ệnh \n(com mand) hoặc qua giải thuật (wizard) v ới giao diện đồ hoạ mà chỉ cần vài \nlần nhấn chuột.  \n+ Start/Programs/Administrative To ols/Internet Service Manager \n+ Bấm ch uột phải tên máy ch ủ Web Server. Ch ọn New/ Web Site \n 261\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 262,
    "text": "+ Tại cửa sổ Web Site Creation W izard, nhấn vào nút Next để tiếp tục. \n \nHình 9. 4: Lựa chọn Web Site Creation Wizard để tạo web site m ới \n \n \n \nHình 9. 5: Web Site C reation Wizard \n \n+ Điền tên m iêu tả của web site c ần khởi tạo: Ví du: m ycompany.com .vn \n \n 262\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 263,
    "text": "Hình 9. 6: Dùng Web Site Creation Wizard để tạo we b site mới \n+ Ấn nút N ext để tiếp tục. Tiếp theo xin điền địa chỉ IP, số hiệu cổng, cũng như \ntiêu đề của web site (host header). \n \n \nHình 9. 7:  Dùng Web Site Creation Wizard để tạo we b site mới \n+ Tiếp theo chọn thư mục gốc của web site \n 263\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 264,
    "text": "Hình 9. 8: Dùng Web Site Creation Wizard để tạo we b site mới \n+ Lựa chọn các quy ền đối với thư mục chủ (hom e directory) \n \n \nHình 9. 9: Dùng Web Site Creation Wizard để tạo we b site mới \n+ Nhấn Ne xt để hoàn thành việc khởi tạo web site m ới. \n 264\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 265,
    "text": "Hình 9. 10: Web Site C reation Wi zard thông báo hoàn thành vi ệc khởi tạo \n \n9.3.3.1.2. Tạo thư mục ảo \nVề bản chất việc tạo thư mục ảo là là ánh x ạ một thư mục vật lý trong \nmáy thành m ột thư mục con tương đối của thư mục hiện tại. Với cách ánh x ạ \nnày giúp ng ười quản trị có thể linh hoạt hơn trong vi ệc tổ chức các thư mục \ntrên máy ch ủ. Người quản trị có thể thiết lập các thư mục ảo là t hư mục con của \nbất kỳ thư mục nào: t hư mục chủ (home document), th ư mục con hoặc thư mục \nảo bất kỳ. \nĐể tạo một thư mục ảo, trong c ửa sổ IIS Snap-In, nh ấn chuột phải vào t hư mục \ncần thêm  thư mục ảo, chon Ne w/Virtual Directory. T ại menu cửa sổ Virtual \nDirectory Creation W izard nhấn nút Next để tiếp tục. \n \n \n \nHình 9. 11:  Dùng Virtual Directory Creation Wizard để tạo thư mục ảo \n 265\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 266,
    "text": "Hình 9.12: Dùng Virtual Directory Creation Wizard để tạo thư mục ảo \n \n+ Điền tên bí danh (Al ias nam e): Tên này được Web Server “hi ểu” như tên của \nthư mục con của thư mục hiện tại. \n \nHình 9.13: Dùng Virtual Directory Creation Wizard để tạo thư mục ảo \n \n+ Chọn thư mục trên ổ đĩa muốn ánh xạ theo tên ảo này \n \n 266\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 267,
    "text": "Hình 9.15: Dùng Virtual Directory Creation Wizard để tạo thư mục ảo \n \n+ Đặt quyền truy cập cho t hư mục ảo này \n \n \n \nHình 9.16: Dùng Virtual Directory Creation Wizard để tạo thư mục ảo \n \n+ Nhấn vào nút ne xt để hoàn thà nh việc khởi tạo một thư mục ảo \n \n 267\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 268,
    "text": "Hình 9. 17: Virtual Directory Crea tion Wizar d thông báo hoà n thà nh việc khởi \ntạo \n \n9.3.3.1.3. Thiết lập các tham s ố cho we b site \n1. Đối với một Web site, IIS có chép ng ười quản trị lựa chọn rất \nnhiều các thông tham s ố khác nhau nh ư: cơ chế lưu nhật ký, lựa chọn các tham \nsố về performance, ánh x ạ ứng dụng, lựa chọn các tham s ố bảo mật, tuỳ chỉnh \ncác thông báo l ỗi … Để thiết lập các tham s ố này, trong c ửa sổ IIS Snap-In \nchọn tên m iêu tả của web site, nhấn chuột  phải và chọn mục properties. \n2.  \n3. \n  \n4. Hình 9. 18: Lựa chọn và cấu hình các tham  số cho we b site \nMột cửa sổ hiện lên với rất nhiều các menu con cho phép b ạn lựa chọn cấu hình \ncác tham s ố cho we b site. \n 268\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 269,
    "text": "Hình 9. 19: Menu l ựa chọn và cấu hình các tham s ố cho web site \n \n9.3.3.1.3.1. Cấu hình web site: xác m inh web site, k ết nối, cơ chế lưu nhật ký \nXác minh web site (Identification web site) \nVới mỗi yêu cầu từ phía client, web server xác định tiêu đề và số hiệu \ncổng, để thực hiện yêu cầu, sau đó trả lại kết quả của yêu cầu đó cho client. V ới \nmỗi web site bao g ồm tên  miêu  tả, số hiệu cổng, và các tiêu đề (host header). \nNgười quản trị có thể ánh xạ nhiều tên m iền vào c ùng một tiêu đề.  \nConnections \nCho phép ng ười quản trị hạn chế số lượng truy cập đồng thời tới web site \nvà thiết lập thời gian t imeout của kết nối. Theo khuy ến nghị nên hạn chế thời \ngian kết nối này để ngăn ngừa các kiểu tấn công từ chối dịch vụ (DoS). X em \nhình 8. 19 \nThiết lập cơ chế lưu nhật ký \nViệc lựa chọn và cấu hình file l ưu nhật ký có ý ngh ĩa rất qua n trọng đối \nvới người quản trị. Thông qua các file nh ật ký này giúp ng ười quản trị phân \ntích, đánh giá, c ũng như có các thông tin v ề web site này (nh ư số lượng truy \ncập, …). Có th ể lưu nhật ký t heo 3 cách khác  nhau:  \n+ Theo định dạng NC SA C ommon Log File \n+ Theo định dạng W3C Extension Log File \n+ Theo ODBC Loggi ng \nKhi đánh dấu vào hộp chọn Ena ble Loggi ng thì nhật ký t hực hiện của một \nweb site được lưu. Khi đó mỗi yêu cầu (request) t ừ phía client sau khi được \nWeb server th ực hiê n (response) đều được lưu lại bao gồm các thông tin c ơ bản \nvề yêu cầu đó. Chẳng hạn đối với định dạng NC SA C ommon Log File bao \n 269\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 270,
    "text": "gồm: Địa chỉ IP của client, Tên c ủa client, Ngày truy c ập, Thời gian truy c ập, \nLoại yêu cầu, Mã trạng thái HTTP, và S ố lượng byte được Web server g ửi về. \nChú ý: Khi s ố lượng truy cập web site r ất lớn, người quản trị cần cân nhắc việc \nlưu trữ file nhật ký, cũng như định dạng của nhật ký, thời gian lưu file nhật ký \n… trên cơ sở xem  xét các thông s ố của máy chủ như dung lượng ổ đia, hiệu \nsuất máy chủ … \n \nNgười quản trị cũng có thể lựa chọn các tham s ố khác cho vi ệc lưu nhật ký, \nnhư thời gian lưu nhật ký (theo gi ờ, theo ngày, theo tháng, …) C ũng như việc \nlựa chọn đường dẫn để lưu trữ các file nh ật ký. \n \n \nHình 9. 20: Lựa chọn các tham s ố cho file l ưu nhật ký \n9.3.3.1.3.2. Lựa chọn các quy ền đối với thư mục \nNgười quản trị có thể thiết lập các quy ền cho các t hư mục trong web site , \nbao gồm qu yền đọc (read), quy ền ghi (write), li ệt kê  (browsing) … Tuy nhi ên \ncác quyền này cần phải thích hợp với các quyền NTFS. Bên cạnh đó trong mục \nnày c òn cho phép ng ười quản trị thiết lập các tham s ố ứng dụng bao gồm tên \nứng dụng, quyền khả thi, và cơ chế bảo vệ ứng dụng. \nScript source access – Cho phép ng ười duyệt web có th ể truy cập tới các file tài \nnguyên, n ếu người truy cập có quyền đọc thì họ có thể đọc các tài nguyên này, \nnếu có quyền ghi thì h ọ có thể ghi đè lên các ngu ồn tài nguyê n này. \nRead perm ission – cho phé p đọc nội dung và g ửi nội dung này tr ả lại trình \nduyệt. \n 270\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 271,
    "text": "Write permission – cho phép upl oad các file lên web server ho ặc thay đổi nội \ndung của các file này. \nDirectory browsing– Cho phép ng ười duyệt web liệt kê các file, c ũng như các \nthư mục trong hệ thống.  \nLog visits – Đản bảo tất cả các truy xuất của người duyệt web qua các th ư mục \nđều được lưu lại trong file nh ật ký. \n \n \nHình 9. 21: Thiết lập các quy ền đối với thư mục web \nBên cạnh đó người quản trị có thể thiết lập các quy ền thực thi (Execute \nPermission): \nScripts only - ch ỉ giới hạn đối với các script, điều này có ý nghĩa rất qua n \ntrọng nếu dùng các ch ương trình vi ết bằng ASP ho ặc CGI. \nScripts and Executables – Ngoà i các script, nó còn cho phép th ực thi đối \nvới các chương trình d ạng EX E, DLL. \nBảo vệ ứng dụng (Application protection) – C ho phép ng ười quản trị cô lập \nmột ứng dụng trên nền web với các ứng dụng khác ho ặc với các ứng dụng riêng \nbiệt khác của phần mềm web server. \n \nChú ý: Bạn nên cân nhắc các quy ền thiết lập với các yêu c ầu về bảo mật của \nweb site. Theo khuy ến cáo không nê n lựa chọn thuộc tính cho phé p liệt kê \n(Browsing), cho phép ghi (write), c ũng như việc lựa chọn quyền thực thi là \nScripts and Exec utable s. \n \nCấu hình ứng dụng (A pplication Configuration) \n 271\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 272,
    "text": "IIS được cấu hình để hỗ trợ rất nhiều các dạng file khá c nhau, điều đó cho \nphép các trang web được phục vụ bởi việc dùng m ột số lượng rất lớn ứng dụng \nkhác nha u, điều này cà ng làm  tăng thêm tính linh động của IIS.Thông qua giao \ndiện này người quản trị có thể dễ dàng cấu hình chi ti ết các ứng dụng. \nEnable session state and Session ti meout \nCho phé p AS P khởi tạo một phi ên làm  việc cho mỗi người duyệt web tron g \nmột ứng dụng AS P. \nEnable par ent paths \nCho phé p AS P Script  dùng đường dẫn tương đối tới thư mục cha của thư mục \nhiện tại (“..”). \n \nHình 9. 22: Danh sách các ứng dụng được ánh xạ cùng với phần mở rộng \n \n \nHình 9. 23: Thêm  một ánh xạ ứng dụng cùng v ới phần mở rộng của tên file \n 272\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 273,
    "text": "9.3.3.1.3.3. Performance Turning \nHạn chế số lượng kết nối cùng một lúc tới web site là m ột phương \nthức tiếp cận khác để  tiết kiệm tài nguyên h ệ thống cho các d ịch vụ \nkhác cùng s ử dụng chung m ột kết nối hoặc các ứng dụng khác cùng s ử \ndụng chung m ột máy chủ. Khi thực hiện việc hạn chế kết nối tới từng \nWeb site riêng l ẻ cần chu ý rằng hầu hết các browser thông th ường tạo \nra tới 4 liên kết một lúc để dow nload text và hình ảnh từ trang Web. T ất \ncả các kết nối lớn hơn giới hạn kết nối đều bị loại bỏ. \nBằng cách h ạn chế thông lượng kết nối được sử dụng bởi IIS, bạn \ncó thể sử dụng phần thông lượng còn lại cho các ứng dụng khác ví d ụ \nnhư  e-m ail hay ne ws servers. N ếu bạn cài đặt nhiều Web site trên cùng \nmột IIS bạn có thể tăng hoặc giảm thông lượng cho từng site m ột cách \nđộc lập. Việc hạn chế thông lượng cho từng site  đảm bảo thông lượng \nđược chia một cách hợp lí cho m ọi Web site đang cùng chia s ẻ một card  \nmạng. \nHạn chế thời gian sử dụng CPU là m ột phương thức dùng để tiết \nkiệm tài nguyê n hệ thống, đồng thời cũng đảm bảo một việc không b ị \nCPU “quá t ải” làm ảnh hưởng tới các dịch vụ khác trên m áy chủ, cũng \nnhư ảnh hưởng tới khả năng phục vụ đối với các web site khác. \n \nHình 8. 24: Thiết lập các tham s ố cho Performace c ủa web site \n9.3.3.1.3.4. Bảo mật thư mục (Directory Sercurity) \nCác thuộc tính về bảo mật có thể thiết lập cho we b site, thư mục, thư mục \nảo hoặc cho các file. Đối với mỗi web site ph ương thức xác thực được dùng có \ný nghĩa rất qua n trọng trong vi ệc nhận biết người dùng và điều kiển các truy \nxuất tới các file, th ư mục và các script c ũng như các file kh ả chạy khác.  \n 273\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 274,
    "text": "Hình 8. 25: Lựa chọn các phương thức xác thực \nTrong menu này ng ười quản trị có thể lựa chọn người dùng nặc dan h \n(Anonym ous user) cho we b site này. Theo c ơ chế này,  hiện tại IIS cung c ấp 3 \nphương thức khác nhau để xác thực đó là: phương thức Basic authentication, \nphương thức Di gest authe ntication, và ph ương thức integrated windows  \nauthentication. \n \nHình 9. 26: Chọn người dùng nặc danh cho w eb site \nBên cạnh đó người quản trị có thể thiết lập các hạn chế các kết nối tới web \nsite theo địa chỉ IP đối với những người duyệt web. Thông th ường mục đích \ncủa việc này nhằm tăng cường tính bảo mật cho các file, th ư mục hoặc web site \nđược dùng cho m ục đích riêng m à không m uốn xuất bản rộng rãi trên m ạng. \n 274\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 275,
    "text": "9.3.3.2 Stop/St art/Restart IIS  \nCó rất nhiều cách khác nhau để thực hiện các câu l ệnh St art, Stop ho ặc Restart \nIIS (IIS - Web Serve r). Thông qua dòng l ệnh hoặc thông qua MM C. Để thực \nhiện theo dòng l ệnh bạn vào cửa sổ Windows  Command (Start/Run/cmd). \nTrong chế độ dòng lệnh nà y bạn có thể thực hiện nhiều thao tác khá c nhau như, \nstop hoặc start IIS (Web Server) … v ới các file th ực thi Net.exe ho ặc \nIISReset.exe  B ạn có thể dùng câu l ệnh N ET /? hoặc IISreset/? để xem chi ti ết \ncác câu lệnh nà y. \nTuy nhiên để dễ dàng sử dụng người quản trị có thể dùng giao di ện MMC để \nthực hiện các thao tác này, v ới giao diện này rất đơn giản và thuận tiện. \n(Start/Program/Administr ator Tool s/Services). Hình 9. 27: Hạn chế truy cập với web site theo địa chỉ IP \n 275\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 276,
    "text": "Hình 9. 28: Stop/Start  IIS (Web Server) \n \n9.3.3.3  C ài đặt các công c ụ hỗ trợ bảo mật \n \n9.3.3.3.1. Cài Lo ckdown tool, cài đặt URLScan \nIIS Lockdown Wizar d cho phép lo ại bỏ các tính n ăng, các dịch vụ không \ncần thiết trên máy ch ủ, để giảm thiểu các cuộc tấn công với nhiều mức bảo vệ \nkhác nha u. Với URLScan gi úp ngăn chặn các truy vấn (HTTP Request) tác h ại \ntới hệ thống. Có th ể xem chi ti ết tại web  s ite: \nhttp://www.microsoft.com/technet/security \n+ Download Internet Information Services (IIS) Lockdown Tool t ại địa \nchỉ \nhttp://download.microsoft.com/do wnload/iis50/Utility /2.1/NT45XP/E\nN-US/iislockd.exe \n+ Chạy file iislockd.exe, t ại cửa sổ IIS Lockdown Wizard nh ấn nút  Next  \nđể tiếp tục IIS Lockdown Wizard (hình 9.29). \n+  Đọc kỹ các quy định về bản quyền, rồi chọn nút “I agree” để tiếp tục, \nsau đó ấn nút Next để thực hiện tiếp (hình 9.30). \n+ Chọn khuôn m ẫu để tiếp tục. Ở đây ta chọn mục Other (Server that \ndoes not m atch any of  listed roles), r ồi ấn nút Next để tiếp tục (hình \n9.31). \n+ Tiếp theo chọn các Services được cài cùng v ới IIS (hình 9.32). \n+ Chọn các script map để loại bỏ (hình 9.33). \n 276\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 277,
    "text": "+ Lựa chọn các mức bảo mật khác như ngăn chặn quyền thực thi với các \nfile hệ thống như: cmd.exe … (hình 9.34). \n+ Lựa chọn việc cài đặt URLScan. Có th ể cài đặt UR LSca n nga y trong \nquá trì nh thực thi này, hoặc có thể cài URLScan m ột cách độc lập. \nChọn nút “Install URLScan filter on the server” n ếu muốn cài đặt \nURLSca n (hình 9. 35). \n+ Tiếp theo IIS Lockdown Wizard sẽ liệt kê các thao thác th ực hiện, ấn \nnút Next để tiếp tục (hình 9.36) \n+ IIS Lockdown Wizard th ực thi các l ựa chọn của người quản trị đã \nchọn (hình 9.37). \n+ IIS Lockdown Wizard hoàn t ất việc thực hiện (hình 9.38). \nChú ý: Nếu chỉ cài đặt URLScan: \n+ Giải nén file iislockd.exe vào th ư mục c:\\Lockdown_files theo l ệnh \niislockd.exe /q /c /t:c:\\Lockdown_files. \n+ Chạy file urlscan.exe, khi đó UrlScan sẽ được cài đặt và tự động cấu \nhình trong I IS. \nHình 9. 29 Hình 9. 30 \n \n 277\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 278,
    "text": "Hình 9. 31 Hình 9. 32 \nHình 9. 34 Hình 9. 33 \n \nHình 9. 35 Hình 9. 36 \nHình 9. 37 \n \nHình 9. 38 \n \n 278\nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 279,
    "text": "2799.3.3.3.2. C ấu hình URLScan \nTheo mặc đinh URLScan được cài đặt trong thư mục \n\\WINNT\\system32\\inetsrv\\urlscan. Vi ệc cài cấu hình thực hiện thông qua file \ncấu hình urlscan.ini. Trong file này có r ất nhiều tham số khác nhau, cho cho \nphép cấu hình các truy v ấn tới Web server, b ạn có thể thêm, loại bỏ hoặc thay \nđổi các tham s ố này. Sau đây là các tham s ố trong file c ấu hình urlscan.ini \n \n[options] L ựa chọn các tham s ố cấu hình \nUseAllowVerbs=1 Tham s ố này bằng 1 thì tham chi ếu tới các tham \nsố trong đoạn [AllowVerbs] n ếu không s ẽ là \n[DenyVerbs]  \nUseAllowExtensions=0 Tham s ố này bằng 1 thi tham chi ếu tới các tham \nsố trong đoạn [AllowExtensions]  n ếu không s ẽ \nlà [DenyExtensions]  \nNormalizeUrlBeforeScan=1 Chu ẩn hoá trước khi scan \nVerifyNormalization=1          \nAllowHighBitCharacters=0  \nAllowDotInPath=0 Cho phép dùng d ấu . trong th ư mục \nRemoveServerHeader=0  \nEnableLogging=1 N ếu tham số này bằng 1 URLScan s ẽ lưu nhật ký\nPerProcessLogging=0  \nAllowLateScanning=0  \nPerDayLogging=1  \nRejectResponseUrl=  \nUseFastPathReject=0              \nAlternateServerName=  \n[AllowVerbs] \nGET HEAD POST Đây là các d ạng yêu cầu mà URLScan ch ấp nhận \n(Nếu UseAllowVerbs=1) \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 280,
    "text": "280[DenyVerbs] \nPROPFIND PROPPATCH MKCOL \nDELETE \nPUT COPY Đây là các d ạng yêu cầu mà URLScan ch ấp nhận \n(Nếu UseAllowVerbs=0) \n[DenyHeaders] Translate: \nIf: \nLock-Token:  \n[AllowExtensions] .htm \n.html \n.txt .jpg .jpeg .gif  Đây là các ph ần mở rộng được URLScan ch ấp \nnhận (nếu UseAllowExtensions=1) \n[DenyExtensions] .exe .bat .cmd .com  Đây là các ph ần mở rộng được URLScan ch ấp \nnhận (nếu UseAllowExtensions=0) \n[DenyUrlSequences]  Các ký tự sẽ bị từ chối nếu URL ch ứa chúng, \nchẳng hạn như dấu &, dấu % … \n \nTóm tắt chương  \nTrong chương này ta đã tìm hiểu về IIS –Web Server, đây là một sản phẩm \nđược tích hợp cùng với hệ điều hành Microsoft Windows, v ới rất nhiều tính \nnăng: nhanh, ổn định, tin cậy, bảo mật tốt, rất dễ dàng cho vi ệc quản trị và \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 281,
    "text": "281khai thác. IIS – Web Server có m ột cơ chế tuỳ chọn và cấu hình rất đa dạng, \nyêu cầu người quản trị phải cân nhắc trong vi ệc lựa chọn và cấu hình để \nnâng cao độ ổn định, hiệu quả cũng như tính bảo mật cho web site. \n \nBài tập chương: Tạo một web site m ới với các yêu c ầu: \na. Chỉ cho phép truy nhâp t ừ một địa chỉ IP duy nh ất. \nb. Chỉ cho phép truy c ập tới các web site v ới các file có ph ần mở rộng là \n.asp, .gif, .html \n \n \n \n \n      \n \n      \n \n     \n \n  \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 282,
    "text": "282Chương 10 Gi ới thiệu về WebPortal và ph ương pháp thi ết kế \nweb  \n \n10.1 Webportal là gì? \nChúng ta th ường sử dụng khá nhi ều các trang web v ề nhiều vấn đề lớn để tra \ncứu, tìm ki ếm thông tin điển hình nh ư http://www.google.com trong m ỗi \nwebsite nh ư vậy chứa đựng một lượng thông tin kh ổng lồ nhưng không ph ải \nhoàn toàn các thông tin đó nều nằm trên server c ủa họ mà thực tế các thông tin \nnày nằm ở rất nhiều website khác nhau nh ưng họ đã có một cơ chế liên kết tất \ncả các thông tin này. Nh ững website nh ư vậy coi là m ột cổng thông tin v ề một \nhay nhiều lĩnh vực nào đó hay nói cách khác đó là những Webportal. \nWebportal là m ột website trong đó đề cập đến một hay nhiều lĩnh vực mà các \nthông tin c ủa nó phần lớn được liên kết với các website khác theo m ột cơ chế \nnào đó. \n \nHình 10.1 Ví d ụ Webportal \n10.2 Các l ưu ý khi xây d ựng Webportal  \nMỗi webportal hay website được sinh ra để thực hiện một mục đích nào đó, để \nphục vụ, phát triển một hay nhiều lĩnh vực nào đó. Để xây dựng được một \nwebportal có t ầm cỡ không ph ải đơn giản mà phải thực hiện bởi một hay nhiều \nnhóm làm vi ệc có tổ chức chặt chẽ chính vì v ậy mỗi người trong các nhóm c ần \nphải nắm bắt được mọi thông tin c ơ bản về phần công việc mà ta đang thực \nhiện. \nTrước khi bắt tay vào vi ệc thực hiện mọi thành viên ph ải nắm được các vấn đề \ntrọng yếu sau: \n- Mục đích, định hướng, đối tượng phục vụ của webportal \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 283,
    "text": "283- Chiến lược thiết kế, triển khai xây d ựng và phát tri ển: Có thể chia theo \nnhiều giai đoạn khác nhau. \n- Xác định phạm vi của công việc của các nhóm, thành viên và các quy \nước thực hiện: \n+ Phát triển các nhóm làm vi ệc \n+ Các kế hoạch về mặt nghiệp vụ \n+ Các văn bản pháp quy liên quan \n+ Chiến lược phát triển các mối quan hệ với các thành viên  \n+ Phân chia trách nhi ệm đối với các thành viên theo t ừng người điều \nphối: \n . Qu ản lý dự án  \n . Điều phối dự án \n . Điều phối về nội dung \n . Điều phối về công ngh ệ \n . Điều phối về phát triển nghiệp vụ \n . T ư vấn dự án \n .... \n- Quản lý và phân ph ối tài chính \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 284,
    "text": "284 \n10.3  Phương pháp thi ết kế web \n \n \nHình 10.2 V ị trí của bộ phận thiết kế \n \nViệc thiết kế website đối với các hệ thống càng ph ức tạp thì tác d ụng của nó \ncàng lớn. còn với những hệ thống quá nh ỏ, không ph ức tạp thì không có ý \nnghĩa nhiều lắm. \nThông thường đối với việc thiết kế một hệ thống web có th ể chia làm 5 b ước: \n- Khảo sát, thu th ập, phân tích thông tin \n- Thiết kế kiến trúc hệ thống \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 285,
    "text": "285- Thiết kế logic web \n- Thiết kế cơ sở dữ liệu \n- Lập kế hoạch xây dựng, tích hợp hệ thống. \n \nĐối với hệ thống web tĩnh không ph ải xử lý các thông tin tr ực tuyến thì toàn b ộ \nkhâu thiết kế có thể bỏ qua bước thiết kế cơ sở dữ liệu, các bước xây dựng còn \nlại cũng giản đơn rất nhiều. \n \n10.3.1 Xác định mục đích, yêu c ầu, đối tượng, nhu c ầu điều kiện thiết kế \nWeb \nTrước khi ta mu ốn thực hiện một việc gì đó, ta phải biết chắc chắn ta làm \nvới mục đích gì, cho ai, nó có h ữu ích thực sự hay không? \nNếu ta không bi ết hay không rõ l ắm về công việc ta đang làm thì ta không \nthể đạt được một điều gì đó theo đúng ý mu ốn được hoặc nó sẽ làm ta tốn \nrất nhiều thời gian và công s ức mà chưa chắc đã làm ta hài lòng. \nThiết kế website c ũng vậy.  \n \nHình 10.3 V ị trí nhóm nh ận, phân tích, qu ản lý yêu c ầu trong bộ phận thiết \nkế \nBước đầu tiên trong công đoạn thiết kế một Web site là chúng ta đã có \nnhững quyết định chắc chắn về việc chúng ta s ẽ \"xuất bản\" cái gì v ới Web \nsite của mình. Không có ch ủ định và mục tiêu rõ ràng thì c ả web site đó sẽ \ntrở nên lan man, sa l ầy và cuối cùng đi đến một điểm khó có th ể quay trở \nlại. Thiết kế cẩn thận và định hướng rõ là nh ững chìa khoá d ẫn đến thành \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 286,
    "text": "286công trong vi ệc xây dựng một Web site.  \nTrong bước này chúng ta c ần thực hiện các công vi ệc: \n• Xác địch mục đích Web site m ột cách cụ thể, rõ ràng. \nTrước tiên cần có một tuyên bố khái quát ng ắn và rõ ràng cho các \nmục tiêu của web site, điều sẽ giúp đỡ rất nhiều cho công vi ệc thiết \nkế. Nó là điểm xuất phát để chúng ta m ở rộng đến các mục tiêu \nchính, và c ũng là một cái đánh giá sự thành công c ủa một web site. \nXây dựng một web site là c ả một quá trình liên t ục, nó không đơn \nthuần chỉ là một dự án duy nh ất, một lần với các thông tin t ĩnh. Việc \nbiên tập, quản lý và duy trì k ỹ thuật dài hạn nhất định phải bao trùm \nlên kế hoạch xây dựng web site. \n• Xác định đối tượng sử dụng của web site. \nĐể chúng ta có th ể thiết kế cấu trúc phù h ợp với nhu cầu, mong \nmuốn của họ. Sự hiểu biết, trình độ, sở thích cũng như yêu cầu của \nngười sử dụng thay đổi từ một người hoàn toàn không có kinh \nnghiệm, người sẽ cần đến một sự dẫn dắt cẩn thận, đến người đọc \nthành thục, người sẽ nổi giận với bất cứ cái gì mang v ẻ chiếu cố tới \nhọ, hoặc làm chậm trễ việc truy nhập thông tin c ủa họ. Một hệ thống \nđược thiết kế tốt sẽ thích hợp cho một dải rộng trình độ, nhu cầu của \nmọi đối tượng. Ta cũng có thể sử dụng nhiều cách trình bày khác \nnhau cho t ừng loại đối tượng. \n• Các điều kiện phụ thuộc. \nBản quyền: \nBản quyền được tạo bởi một người hay một tập thể được công nh ận \nbởi một tổ chức điều hành. Khi ch úng ta có ý định thiết kế web cần \nphải lưu ý về: \n- Bản quyền về các biểu trưng, quyền về sở hữu website: Chúng \nta nên đăng ký một biểu trưng riêng c ủa  tổ chức sở hữu của \nwebsite n ếu chưa có để tránh việc trùng lặp biểu trưng, ăn cắp \nbản quyền. \n- Bản quyền về nội dung: Các thông tin ta cung c ấp trên website \ncũng phải lưu ý về nguồn tin. Nếu ta tự lọc lấy thông tin c ủa mình \nthì không v ấn đề gì nhưng nếu ta sao chép thì ph ải được sự cho \nphép của cá nhân hay t ổ chức sở hữu nó để tránh các r ắc rối \nkhông cần thiết. \n \n Thời gian: \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 287,
    "text": "287Thật khó có th ể dự đoán ta cần bao nhiêu th ời gian để thiết kế, xây \ndựng một website, ngay c ả đối  với người có kinh nghi ệm. Chỉ khi \nnào ta lường trước được tất cả các sự việc, vấn đề xẩy ra khi thi ết kế, \nxây dựng website ta m ới có thể dự đoán được khoảng thời gian cần \nthiết. Chính vì th ế tại bước này ta c ũng không xác định được vì ta \nchưa xác định được nội dung của website, website s ử dụng công \nnghệ gì, mô hình ra sao,....  \nNgân sách: \nSản phẩm website c ũng phụ thuộc khá nhiều vào việc chi phí. Để có \nthể hoàn thành trang web theo ý c ủa ta thì chi phí cho nó có th ể sẽ rất \nlớn. Thực tế ta thường cần nhắc xây dựng website c ủa ta trong ph ạm \nvi bao nhiêu ti ền trước dựa vào mục đích của website, r ồi mới xem \nđến việc có làm nó hay không và nh ư thế cần chi phí các kho ản mục \nra sao. Ví d ụ nếu ta xây d ựng một website v ới mô hình b ảo mật dữ \nliệu cao, đòi hỏi các thiết bị là tốt và phải mua một số phần mềm hay \nta phải thuê hay h ợp tác với các tổ chức cung cấp nội dung thông \ntin,... Chi phí s ẽ rất lớn và ta đã đạt mục đích chưa? nếu rút bớt chi \nphí thì ảnh hưởng của nó đến đâu?  Lý do này c ũng sẽ làm nảy sinh \nnhiều phương án thiết kế để cuối cùng làm sao đạt được mục đích \ncủa mình. \nCác dự toán, phương án phải được cân nhắc sau khi ta l ập kế hoạch \nxây dựng website là b ước cuối cùng của tài liệu thiết kế. \n \n10.3.2 Kỹ thuật khảo sát, thu th ập thông tin \nĐây là cách th ức khai thác các thông tin s ử dụng một số công cụ thu \nthập thông tin để tìm kiếm những vấn đề sau: \n- Liệt kê các mong mu ốn của mình, và các nhu c ầu của độc giả \n- Thành ph ần của website \n- Chức năng cần có để website ho ạt động \n- Phương thức cập nhật thông tin \n- Các yêu c ầu về hệ thống web \n- Yêu cầu bảo mật thông tin \n Các bước thu thập thông tin: \n- Xác định nguồn thông tin s ẽ thu thập \n- Tìm những chủ đề thông tin định thu thập từ nguồn \n- Lựa chọn kỹ thuật sẽ sử dụng để thu thập thông tin \n- \nChọn lọc các yêu c ầu về nghiệp vụ và những mong mu ốn từ phía \nngười sử dụng \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 288,
    "text": "288- Tài liệu hoá toàn b ộ thông tin thu th ập được. \n \nMột số kỹ thuật thu thập thông tin: \n- Kết hợp theo dõi và ph ỏng vấn trực tiếp hoạt động của người dùng \n(shadowing):   \nĐây là những thông tin b ạn thu thập được trong các tình hu ống, ngữ \ncảnh cụ thể. Qua kỹ thuật này ta ph ải trả lời được các câu h ỏi: \n+ Khảo sát các hành động của các đối tượng như thế nào? \n Đối với nhóm qu ản trị nôi dung web \n Đối với các độc giả duyệt web \n+ Cái gì khi ến họ làm như thế? \n+ Những gì thường xuyên khi ến người dùng ph ải lặp đi lặp lại nhiều \nlần các thao tác khi th ực hiện công việc. \n+ Có thể giảm bớt các động tác dư thừa không \n+ Số lượng đối tượng thường thực hiện các động tác đó. \n \n- Phỏng vấn (Interviewing):  \nShadowing ch ỉ hiệu quả trong việc khám phá các thông tin theo tình \nhuống cụ thể, ta mong mu ốn thông tin thu th ập được một cách đầy \nđủ hơn về quản lý, các m ức hoạt động có tính lâu dài, ho ặc những \ntiến trình rất ít người hoặc chẳng có người nào tham gia mà h ệ thống \ntự động giải quyết.  \nPhỏng vấn cho ta c ơ hội để giải quyết một lượng lớn câu hỏi về \nnhiều vấn đề mà có thể ta không thu th ập được bằng cách quan sát và \ncũng tốn ít thời gian hơn nhiều. \n - Nhóm thảo luận (Focus Group)  \nThảo luận các chủ đề sẽ đem lại cái nhìn t ổng thể, chính xác v ấn đề. \nĐối tượng tham d ự nhóm thảo luận là những người thiết kế, xây \ndựng , sử dụng và các đối tượng liên quan khác. \nPhương thức này thường được sử dụng khi có quá nhi ều người liên \nquan đến hệ thống mà ta khó có th ể khả\no sát riêng được. \n- Khảo sát, điều tra (Surveys) \nTập hợp một lượng câu hỏi đã chuẩn bị trước để thu thập thông tin. \nPhương thức này có th ể đem lại được nhiều thông tin chi ti ết, và có \nthể tìm được những thông tin mà các k ỹ thuật khác khó làm được \n(Cấu trúc tổ chức, chính sách, các quan h ệ giữa thành ph ần trong hệ \nthống,...) nhưng mất rất nhiều thời gian và công s ức. \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 289,
    "text": "289- Chỉ dẫn của người dùng (User Instruction) \nNgười sử dụng trực tiếp hướng dẫn về các công vi ệc, hành động và \ncác bước thao tác trong công vi ệc. Kỹ thuật này nếu được người \ndùng giúp đỡ thì mọi việc sẽ dễ dàng, nhưng một số người không \nthoải mái thậm chí gây khó d ễ cho việc tìm kiếm thông tin, h ơn nữa \nthông tin thu th ập được cũng mang tính cá nhân vì v ậy với kỹ thuật \nnày phải áp dụng với nhiều người và phải có khả năng tổng hợp cao. \n10.3.3 Phân tích, l ựa chọn các thành ph ần chính c ủa Website, th ứ tự ưu tiên \nTrước hết cần xác định rõ lại một lần nữa sản phẩm mà  ta s ẽ đạt được và sản \nphẩm mà ta mong mu ốn: \nĐứng ở góc độ người thiết kế ta không nên ch ấp nhận ngay yêu c ầu của vấn đề \nđặt ra mà nên tìm hi ểu thêm hỏi “tại sao?” để tìm yêu c ầu thực sự của nó và \nnhững vấn đề đằng sau yêu c ầu đó. \nVới mục tiêu chính c ủa website có nh ững vấn đề nào liên quan đến. Cần xác \nđịnh vấn đề nào là mấu chốt cần ưu tiên và t ập chung phát tri ển theo vấn đề đó. \nMột cách để tìm kiếm vấn đề mấu chốt đó là theo công th ức Pareto ho ặc luật \n“80-20”  \n01020304050Banking at night\nMore Baking location\nBanking at Airport\nTellers too Costly\nPrivate White Banking\nOther Reasons\n \nHình 10.4  Bi ểu đồ Pareto \n80 % của vấn đề được quyết định bởi 20% còn l ại. \nTa cần xác định giới hạn phục vụ của sản phẩm web để xác định mức độ phức \ntạp, các yếu tố mà hệ thống web đòi hỏi cũng để cân đối với yêu cầu hiện tại, \nmức độ sử dụng nên có m ột hệ thống hợp lý nhất để tiết kiệm được cả về thời \ngian lẫn tiền bạc, nhưng ta cũng phải lưu tâm đến việc phát triển của website \nsau này. \nTại bước này ta tìm ki ếm các vấn đề về nội dung mà website đề cập. \nSử dụng các kỹ thuật thu thập thông tin để làm rõ hơn từng vấn đề đó nếu cần. \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 290,
    "text": "290Mỗi vấn đề nội dung hãy cân nh ắc nó đạt được những lợi ích gì cho m ục đích \ncủa web site. Ti ếp theo với vấn đề đó ta phải thực hiện những gì về mặt nghiệp \nvụ, mô tả chi tiết về các vấn đề nghiệp vụ đó. \nVới các yêu c ầu nghiệp vụ hãy phát tri ển thành các yêu c ầu của hệ thống. \nTổng hợp lại toàn bộ các vấn đề đã phân tích, hãy s ắp xếp các vấn đề theo thứ \ntự ưu tiên. \nTiếp theo hãy cân nh ắc lại một lần nữa toàn bộ các vấn đề về nội dung so v ới \ncác điều kiện mà ta có và so sánh v ới mục đích của website. \nTài liệu hoá toàn b ộ các các yêu c ầu, các vấn đề nội dung và các yêu c ầu hệ \nthống. \n \n10.3.4 Ph ương án kỹ thuật, mô hình b ảo mật, vận hành website  \n(Kiến trúc hệ thống)  \nViệc thiết kế hệ thống là khâu c ực kỳ quan trọng quyết định phương thức thiết \nkế, thực hiện các phần tử của website. Để có thể thiết kế tốt thì nó cũng đòi hỏi \nmột lượng kiến thức khổng lồ và bao quát v ề hệ thống mạng, về bảo mật cũng \nnhư các kiến trúc về ứng dụng phần mềm,....  \nTrong phạm vi tài li ệu này chúng tôi ch ỉ giới thiệu về các bước thực hiện thiết \nkế hệ thống. \nViệc xác định sản phẩm web quy mô đến đâu quyết định cho kiến trúc của hệ \nthống xây dựng phức tạp cỡ nào. \n \nHình 10.5 V ị trí nhóm thi ết kế hệ thống trong b ộ phận thiết kế \n \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 291,
    "text": "291Đối với hệ thống Web động có xử lý dữ liệu trực tuyến thì luôn có ki ến trúc \nnhiều lớp. Có thể chia như sau: \n \n \n \nHình 10.6 Mô hình ki ến trúc ứng dụng nhiều lớp \n \nLớp trình diễn: Lớp này chứa toàn bộ các giao di ện người sử dụng tương tác \ntrực tiếp với hệ thống. Bao g ồm: \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 292,
    "text": "292- Các phần tử giao diện như form, các trình bày, hi ển thị dữ liệu,... \n- Chứa các phương thức liên kết với lớp ứng dụng \n- Cung cấp các phản hồi về kết qủa của yêu cầu người sử dụng khi \ntương tác với hệ thống. \n- Cho biết tình trạng sử dụng của người sử dụng với hệ thống để có thể \ncó những biện pháp tối  ưu cho phù h ợp, dễ dàng cho ng ười sử dụng. \nLớp ứng dụng: Xử lý các tương tác mà ng ười sử dụng yêu cầu hệ thống. lớp \nnày bao g ồm: \n- Các phần tử xử lý nghiệp vụ (component, script,...)  và các ti ến trình \nxử lý nghiệp vụ. \n- Liên kết với hệ điều hành \nLớp kết nối dữ liệu: Các ph ương thức kết nối đến CSDL \nLớp dữ liệu: Lưu trữ và xử lý dữ liệu.  \n- Các luật tương tác, quan h ệ giữa các dữ liệu \n- Kiểm tra tính h ợp lệ của dữ liệu. Cung c ấp các giá tr ị mặc định cho \ntừng loại dữ liệu nếu cần và xác định loại dữ liệu trong CSDL. \n- Các tiến trình xử lý logic, qu ản lý dữ liệu \n \nĐi từ mô hình ki ến trúc logic c ủa hệ thống kết hợp với các yêu c ầu để tìm ra \ncác phần tử thiết kế vật lý. Thiết kế hệ thống phải dựa vào một số các tiêu chí \nsau: \n- Tính an toàn b ảo mật \n- Tính ổn định của hệ thống:  \n- Hiệu năng làm vi ệc \n- Độ tin cậy \n \nHệ thống bao gồm phân m ạng Client và phân m ạng server \n- Hệ thống phân m ạng client: \nPhụ thuộc phần lớn vào cách t ổ chức công việc của người sử dụng: có thể là \nmột mạng WAN hay LAN, c ũng có thể không cần phải xây dựng gì mà k ết nối \nbằng những máy đơn lẻ. Đối với mạng LAN,WAN thì có th ể có các ph ương \nthức bảo mật ra sao, x ử lý dữ liệu nội bộ thế nào. \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 293,
    "text": "293\n \nHình 10.7 Client - Server \n \n- Phân mạng server \nBao gồm Webserver, FTP server, Database  server, Application server, Các \nthiết bị kết nối mạng như router, modem,... Các thi ết bị bảo mật như firewall \nserver, Access server,... Tuỳ theo yêu c ầu của hệ thống phức tạp đến đâu mà sử dụng các ph ần tử và mô \nhình kết nối. Các phần mềm server có th ể đặt trên một hay nhiều máy khác \nnhau. Từ tài liệu yêu cầu ta tìm ra các ph ần tử cần thiết: \n- Đòi hỏi mức độ\n bảo mật cao: Firewall, d ữ liệu được mã hoá, quy ền truy nhập \ntheo nhiều mức kiểm soát bằng CA,... \n- Hệ thống chạy trên hệ điều hành nào s ẽ quyết định việc sử dụng thiết bị loại \ngì và hệ thống các ph ần mềm trên đó. \n- Hệ thống cho phép các d ịch vụ gì trên đó (Web, FTP, Mail,....), có s ử dụng cơ \nsở dữ liệu không và s ử dụng loại gì? \n- Yêu cầu mức độ ổn định của hệ thống thế nào? có c ần phải sử dụng các công \nnghệ như cluster không?... \nTừ đó đưa ra các ph ương án, mô hình k ết nối giữa chúng. \nCuối cùng đánh giá, cân đối mức độ cần thiết sử dụng mô hình nào là thích h ợp \nvới mục đích đề ra. \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 294,
    "text": "29410.3.5 Cấu trúc logic Web \n \n \nHình 10.8 V ị trí của nhóm thi ết kế logic trong b ộ phận thiết kế \n \nTừ tài liệu phân tích các v ấn đề về nội dung và th ứ tự ưu tiên của chúng c ộng \nvới tài liệu yêu cầu về hệ thống, ta phải đưa ra mô hình logic web, mô hình \nlogic về các phần tử xử lý của mỗi vấn đề về nội dung và d ạng dữ liệu liên \nquan. Một mô hình logic t ổng quan bi ểu thị các khối thông tin đặc thù của t\nừng vấn \nđề nội dung và m ối quan hệ giữa các khối thông tin đó. Mỗi khối thông tin ta \nnên chi tiết hoá thành các kh ối thông tin con Cách th ức sắp xếp các khối thông \ntin trong mô hình nên đặt theo các m ức khác nhau. \nMô hình logic t ựa như hình cây nh ưng có thể có các liên k ết chéo (là nh ững \nkhối thông tin v ề mặt vật lý thì ch ỉ là 1 nhưng về logic thì nó t ồn tại trên nhiều \nnhánh khác nhau). Các đường liên kết chéo quy ước là những đường \n  \nchiều mũi tên biểu thị liên kết đến khối thông tin nào. \nMỗi khối thông tin l ớn cần phát triển các yêu c ầu chi tiết về cách thức xử lý dữ \nliệu của nó. Đồng thời xác định luôn d ữ liệu của nó cần có những thuộc tính gì. \nNên xác định từ những khối thông tin nh ỏ nhất vì tại đó mới có những thuộc \ntính và trách nhi ệm cụ thể nhất. Khối thông tin ở mức cha sẽ bao gồm luôn các \nthuộc tính của mức con và có th ể có thêm nh ững thuộc tính và trách nhi ệm \nkhác nữa. \n   \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 295,
    "text": "295 \n \n \nHình 10.9 Ví d ụ về mô hình logic web \n Từ tất cả các trách nhi ệm chung trong cùng m ột khối thông tin l ớn ta sẽ lọc ra \ncác trách nhi ệm nào chung để khi xây d ựng chương trình s ẽ không có nh ững \nđoạn mã lặp lại. Còn tất cả các thuộc tính của khối thông tin s ẽ được sử dụng \nđể thiết kế cơ sở dữ liệu. \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 296,
    "text": "296\n \nHình 10.10 Phân tích thu ộc tính và trách nhi ệm của khối thông tin \n \n10.3.6 Cấu trúc cơ sở dữ liệu Web \n \n \nHình 10.11 V ị trí nhóm thi ết kế CSDL trong b ộ phận thiết kế \n \nTừ tất cả các thuộc tính của các khối thông tin ta tìm được từ trên \n- Phân tích ti ếp các thuộc tính của mỗi khối thông tin đó, đồng thời \ntìm các thu ộc tính khác dùng để quản lý dữ liệu. \n- Tìm các thu ộc tính mà có các giá tr ị mặc định mà hệ quản trị cơ sở \ndữ liệu ta chọn có thể hỗ trợ. \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 297,
    "text": "297- Tổng hợp lại toàn bộ các thuộc tính của mỗi khối thông tin \n- Tìm và tách các thu ộc tính nào m ức độ truy cập thường xuyên và \nkhông thương xuyên \n- Tách các thu ộc tính trong kh ối thông tin đó chia vào các b ảng và tìm \nquan hệ giữa các bảng đó. \n- Nếu tồn tại các quan h ệ nhiều - nhiều giữa các bảng có ngh ĩa là cách \nchia bảng của ta chưa tốt. Nếu thế cần phải tách nhỏ hơn nữa.  \n- Thiết lập các khoá chính (Primary key) và khoá ph ụ (Foreign key) \ncho mỗi bảng và đặt các quan h ệ giữa chúng. \nLưu ý : Trong m ột số trường hợp không nên phân tách quá nhi ều bảng vì lý do \nđảm bảo tốc độ truy cập thông tin khi tìm ki ếm hay lọc thông tin, nhung khi đó \nmột số trường sẽ tồn tại dữ liệu thừa. \n \n \nHình 10.12 T ừ các khối thông tin đến bảng dữ liệu \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 298,
    "text": "298 \n10.3.7 Ph ương án triển khai xây d ựng Web \n \nHình 10.13 V ị trí của nhóm thi ết kế kế hoạch triển khai trong b ộ phận thiết kế \n \nTa đã có các tài li ệu về yêu cầu, mô hình c ơ sở dữ liệu, các trách nhi ệm đối với \ntừng khối thông tin m ột cách chi ti ết. Tại bước này ta ch ọn ra các ph ần tử thiết \nkế vật lý, các modul ch ương trình và ph ương thức tích hợp hệ thống. \nTừ tài liệu về kiến trúc hệ thống ta đã chọn hệ thống của ta chạy trên máy nào, \nhệ điều hành nào, các ph ương thức xử lý được viết bằng ngôn ng ữ gì, kết nối \ngiữa các lớp từ giao diện người sử dụng đến lớp dữ liệu. \nBây giờ ta tổng hợp toàn bộ các tài liệu trên và làm m ịn hoá chúng m ột lần nữa. \nvà cần xem lại có cân thêm b ớt phần tử nào không. Ví d ụ nếu ta sử dụng một \ncomponent nào đó có sẵn liên kết vào chương trình c ủa ta chẳng hạn.... \nĐể tiếp tục triển khai việc thực hiện xây dựng ta phải lập ra một kế hoạch thực \nhiện xây dựng hệ thống. Phân công cho t ừng người hoặc nhóm ng ười thực \nhiện. Như thế ta phải nắm được mọi hoạt động của các khâu xây d ựng. Với mỗi \nkhâu cần xác định chi tiết các công vi ệc phải làm và định ra kho ảng thời gian \ncho công vi ệc đó. Qua đó có thể kết hợp làm việc song song để rút ngắn thời \ngian thực hiện. \n  \n    \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 299,
    "text": "299 \n \nHình 10.14 Các ho ạt động của các nhóm khác trong quá trình s ản xuất web \n \nTóm tắt chương \nChương này cung c ấp cho các b ạn về cách ngh ĩ, cách thức thiết kế một sản \nphẩm web nh ưng không đi sâu vào t ừng việc thiết kế cụ thể, vì mỗi vấn để đó \nlà một vấn đề lớn cần đi sâu nghiên c ứu. \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  },
  {
    "file": "quantriweb.pdf",
    "page": 300,
    "text": "300Bài tập chương \nThiết kế một website v ề một doanh nghi ệp với các yêu c ầu kèm theo. \n \n \nGiáo trình đào tạo                                                              Xây dựng và quản trị Website, Portal\nTrung tâm Điện toán Truyền số liệu KV1"
  }
]